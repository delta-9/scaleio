{"version":3,"sources":["lib_stack.js","IgeBase.js","IgeClass.js","IgeEventingClass.js","IgePoint2d.js","IgePoint3d.js","IgePoly2d.js","IgeRect.js","IgeMatrix2d.js","IgeTimeComponent.js","IgeAnimationComponent.js","IgeVelocityComponent.js","IgeTweenComponent.js","IgePathComponent.js","IgeInputComponent.js","IgeGamePadComponent.js","IgeMousePanComponent.js","IgeMouseZoomComponent.js","IgeTiledComponent.js","IgeUiManagerComponent.js","IgeEntityManager.js","IgeEntityManagerComponent.js","IgeEditorComponent.js","lib_box2d.js","lib_cannon.js","IgeCannonComponent.js","IgeTimeSyncExtension.js","IgeStreamComponent.js","socket.io.min.js","IgeSocketIoClient.js","IgeSocketIoComponent.js","index.js","IgeNetIoClient.js","IgeNetIoComponent.js","IgeChatClient.js","IgeChatComponent.js","IgeCocoonJsComponent.js","IgeUiPositionExtension.js","IgeUiStyleExtension.js","IgeFSM.js","IgeSceneGraph.js","IgeBaseScene.js","IgeDummyCanvas.js","IgeDummyContext.js","IgePathNode.js","IgePathFinder.js","IgeTween.js","IgeTexture.js","IgeCellSheet.js","IgeSpriteSheet.js","IgeFontSheet.js","IgeFontSmartTexture.js","IgeObject.js","IgeEntity.js","IgeUiEntity.js","IgeUiElement.js","IgeFontEntity.js","IgeParticleEmitter.js","IgeParticle.js","IgeMap2d.js","IgeTileMap2d.js","IgeTextureMap.js","IgeTileMap2dSmartTexture.js","IgeCollisionMap2d.js","IgeCamera.js","IgeViewport.js","IgeScene2d.js","IgeQuest.js","IgeInterval.js","IgeTimeout.js","IgeCuboidSmartTexture.js","IgeCuboid.js","IgeArray.js","IgeAudioComponent.js","IgeAudio.js","IgeBox2dComponent.js","IgeBox2dMultiWorldComponent.js","IgeBox2dWorld.js","IgeBox2dDebugPainter.js","IgeEntityBox2d.js","IgeEntityCannon.js","IgeUiDropDown.js","IgeUiButton.js","IgeUiRadioButton.js","IgeUiProgressBar.js","IgeUiTextBox.js","IgeUiLabel.js","IgeUiTooltip.js","IgeUiMenu.js","IgeUiTimeStream.js","IgeFilters.js","convolute.js","greyScale.js","brighten.js","threshold.js","sharpen.js","blur.js","emboss.js","edgeDetect.js","edgeEnhance.js","outlineDetect.js","colorOverlay.js","sobel.js","invert.js","glowMask.js","three.min.js","IgeThree.js","IgeEngine.js"],"names":["printStackTrace","options","guess","ex","e","p","implementation","result","run","res","guessAnonymousFunctions","k","shift","prototype","this","createException","mode","other","arguments","callee","undef","stack","_mode","message","window","opera","stacktrace","instrumentFunction","context","functionName","callback","original","call","slice","_instrumented","apply","deinstrumentFunction","constructor","Function","chrome","replace","split","pop","firefox","opera10","i","j","len","lines","lineRE","length","test","location","RegExp","$6","$1","$2","fnName","$3","splice","ANON","curr","fn","args","fnRE","toString","Array","stringifyArguments","caller","arg","undefined","Object","String","join","sourceCache","ajax","url","req","createXMLHTTPObject","open","send","responseText","xmlhttp","XMLHttpFactories","XMLHttpRequest","ActiveXObject","isSameDomain","indexOf","hostname","getSource","reStack","frame","m","exec","file","lineno","charno","guessAnonymousFunction","lineNo","charNo","ret","findFunctionName","source","line","reFunctionDeclaration","reFunctionExpression","reFunctionEvaluation","code","ige","igeVersion","igeClassStore","igeConfig","debug","_enabled","_node","module","_level","_stacks","_throwErrors","_timing","enabled","val","showStats","_util","require","defineProperty","enumerable","writable","configurable","tween","props","durationMs","newTween","IgeTween","targetObj","properties","duration","beforeTween","afterTween","easing","startTime","theSameAs","obj","JSON","stringify","clone","newArray","hasOwnProperty","pull","item","index","pushUnique","push","each","eachReverse","arrCount","destroyAll","destroy","eachIsolated","arr","Math","PI180","PI","PI180R","toIso","x","y","z","radians","degrees","distance","x1","y1","x2","y2","sqrt","CanvasRenderingContext2D","circle","radius","arc","strokeCircle","save","beginPath","stroke","restore","fillCircle","fill","ImageData","pixelAt","data","pixelStart","width","r","g","b","a","isTransparent","makeTransparent","disableContextMenu","oncontextmenu","l","requestAnimFrame","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","element","setTimeout","Date","getTime","console","info","log","warn","error","IgeClass","initializing","xyz","text","type","thisId","_id","trace","Error","_classId","stop","classId","addComponent","component","newComponent","componentId","_components","removeComponent","implement","classObj","overwrite","key","value","_data","extend","init","name","extensionItem","extensionOverwrite","extensionIndex","propertyIndex","propertyObject","prop","extensionArray","extension","__igeEditor","editorOptions","vanilla","exports","IgeEventingClass","on","eventName","oneShot","sendEventName","newListener","addListener","existingIndex","elArr","multiEvent","eventIndex","eventData","eventObj","multiEventName","self","_eventListeners","firedEventName","off","evtListener","_processing","_removeQueue","evtListIndex","emit","finalArgs","cancelFlag","tempEvt","retVal","eventCount","eventCount2","_processRemovals","eventList","remArr","IgePoint2d","floor","_floor","compare","point","copy","thisToIso","to2d","thisTo2d","addPoint","thisAddPoint","minusPoint","thisMinusPoint","multiply","multiplyPoint","thisMultiply","divide","dividePoint","newX","newY","thisDivide","interpolate","endPoint","currentTime","endTime","totalX","totalY","totalTime","deltaTime","timeRatio","rotate","s","sin","c","cos","thisRotate","precision","toFixed","IgePoint3d","z2","newZ","totalZ","IgePoly2d","_poly","_scale","scale","factor","pointIndex","polyPoints","pointCount","pointInPoly","oldPointIndex","Boolean","xyInside","aabb","minX","minY","maxX","maxY","arrIndex","xArr","yArr","min","max","IgeRect","newPoly","clockWiseTriangle","p1","p2","p3","makeClockWiseTriangle","triangulate","point1","point2","point3","poly","triangles","indices","triangulationIndices","nv","count","u","w","t","n","v","V","_area","_snip","reverse","pval","qval","q","P","A","B","C","_insideTriangle","ax","ay","bx","by","cx","cy","apx","apy","bpx","bpy","cpx","cpy","cCROSSap","bCROSScp","aCROSSbp","render","ctx","scaleX","scaleY","moveTo","lineTo","height","combineRect","rect","thisRectMaxX","thisRectMaxY","thatRectMaxX","thatRectMaxY","thisCombineRect","pointInside","rectIntersect","intersects","sX1","sY1","sW","sH","dX1","dY1","dW","dH","sX2","sY2","dX2","dY2","IgeMatrix2d","matrix","_rotateOrigin","_scaleOrigin","transformCoord","tm","isNaN","transformCoordInverse","transform","points","_newRotate","angle","rotateTo","rotateBy","translateBy","rotationRadians","asin","rotationDegrees","acos","_newScale","scaleBy","scaleTo","_newTranslate","translateTo","tmatrix","thisMatrix","thatMatrix","identity","mm","tm0","tm1","tm2","tm3","tm4","tm5","tm6","tm7","tm8","mm0","mm1","mm2","mm3","mm4","mm5","mm6","mm7","mm8","premultiply","m00","m01","m02","m10","m11","m12","m20","m21","m22","getInverse","newMatrix","determinant","multiplyScalar","scalar","transformRenderingContextSet","setTransform","transformRenderingContext","IgeTimeComponent","entity","_entity","_timers","_additions","_removals","addBehaviour","_update","addTimer","timer","_updating","removeTimer","time","delta","_tickDelta","addTime","update","_processAdditions","IgeAnimationComponent","_anims","define","id","frames","fps","loop","convertIdsToIndex","_texture","cellIdToIndex","frameTime","frameCount","currentDelta","currentLoop","addFrame","frameId","anim","removeFrame","frameIndex","remove","defined","setFps","setAllFps","playing","_playing","start","animId","_currentTime","_anim","_animId","_completeCallback","onComplete","_loopCallback","onLoop","_stoppedCallback","onStopped","select","tickDelta","animation","multiple","cell","abs","cellById","IgeVelocityComponent","_velocity","_friction","_behaviour","velocity","tick","byAngleAndPower","power","relative","vel","vector3","vector","friction","finalFriction","linearForce","_linearForce","linearForceXYZ","linearForceVector3","force","_applyLinearForce","_applyFriction","fric","IgeTweenComponent","_transform","_tweens","_startTime","_currentStep","_setupStep","enable","newTime","propertyNameAndValue","_targetObj","step","_steps","targetData","_durationMs","_selectedEasing","_easing","_endTime","propName","deltaVal","isDelta","oldDelta","_targetData","_destTime","disable","stopAll","_tweening","thisTween","destTime","targetProp","targetPropVal","targets","targetIndex","stepIndex","stopped","_tickStart","tweens","tweenCount","_started","_beforeTween","_stepDirection","_beforeStep","roundingPrecision","pow","round","_afterStep","_repeatMode","_repeatCount","_repeatedCount","_stepsComplete","_afterTween","_afterChange","none","d","inQuad","outQuad","inOutQuad","inCubic","outCubic","inOutCubic","outInCubic","inQuart","outQuart","inOutQuart","outInQuart","inQuint","outQuint","inOutQuint","outInQuint","inSine","outSine","inOutSine","outInSine","inExpo","outExpo","inOutExpo","outInExpo","inCirc","outCirc","inOutCirc","outInCirc","inElastic","outElastic","inOutElastic","outInElastic","inBack","outBack","inOutBack","outInBack","inBounce","outBounce","inOutBounce","outInBounce","IgePathComponent","_points","_speed","_previousPointFrom","_currentPointFrom","_previousPointTo","_currentPointTo","_updateBehaviour","tileMap","_tileMap","finder","_finder","dynamic","_dynamic","tileChecker","_tileChecker","lookAheadSteps","_lookAheadSteps","allowSquare","_allowSquare","allowDiagonal","_allowDiagonal","set","fromX","fromY","fromZ","toX","toY","toZ","findNearest","clear","path","generate","addPoints","add","getEndPoint","_parent","pointToTile","_translate","concat","_calculatePathData","getFromPoint","getToPoint","getDirection","_finished","dir","direction","warnTime","ms","_warnTime","autoStop","_autoStop","speed","_active","pause","_paused","_pauseTime","drawPath","_drawPath","_tickBehaviour","removeBehaviour","drawPathGlow","_drawPathGlow","drawPathText","_drawPathText","_tileWidth","_tileHeight","transformPoint","unTransformPoint","progressTime","_totalDistance","_totalTime","pointFrom","pointTo","newPoint","dynamicResult","distanceTravelled","totalDistance","pointArr","_distanceToNext","_processDynamic","_positionAlongVector","_deltaTimeToNext","_absoluteTimeToNext","translateToPoint","destinationPoint","tileMapData","tileCheckData","newPathPoints","map","_mapData","replacePoints","startPoint","fromIndex","replaceLength","newPoints","isClient","oldTracePathPoint","tracePathPoint","pathPointIndex","tempPathText","currentPath","strokeStyle","fillStyle","_mountMode","globalAlpha","lineWidth","fillRect","shadowOffsetX","shadowOffsetY","shadowBlur","shadowColor","fillText","measureText","closePath","getPreviousPoint","getNextPoint","p1X","p1Y","p2X","p2Y","deltaX","deltaY","magnitude","normalisedX","normalisedY","IgeInputComponent","_eventQueue","_eventControl","_cancelled","stopPropagation","mouse","dblClick","down","up","move","wheel","wheelUp","wheelDown","button1","button2","button3","pad1","button4","button5","button6","button7","button8","button9","button10","button11","button12","button13","button14","button15","button16","button17","button18","button19","button20","stick1","stick2","stick1Up","stick1Down","stick1Left","stick1Right","stick2Up","stick2Down","stick2Left","stick2Right","pad2","ctrl","alt","backspace","tab","enter","escape","space","pageUp","pageDown","end","home","left","right","insert","del","0","1","2","3","4","5","6","7","8","9","f","h","o","_controlMap","_state","_debug","setupListeners","canvas","_canvas","_evRef","mousedown","event","igeType","_rationalise","_mouseDown","mouseup","_mouseUp","mousemove","_mouseMove","mousewheel","_mouseWheel","touchmove","touchstart","touchend","contextmenu","preventDefault","_contextMenu","keydown","_keyDown","keyup","_keyUp","addEventListener","destroyListeners","removeEventListener","fireManualEvent","touch","keyCode","srcElement","target","tagName","toLowerCase","button","changedTouches","igePageX","pageX","igePageY","pageY","igeX","_canvasPosition","igeY","top","_updateMouseData","mx","_bounds2d","my","mouseDown","queueEvent","mouseUp","contextMenu","_mouseOverVp","mouseMove","wheelDelta","mouseWheel","vp","vpUpdated","_children","_mousePos","camera","igeViewport","mapAction","actionName","eventCode","actionVal","actionState","inputId","state","ev","evc","IgeGamePadComponent","_options","gamepadAvailable","TYPICAL_BUTTON_COUNT","TYPICAL_AXIS_COUNT","ticking","gamepads","prevRawGamepadTypes","prevTimestamps","navigator","webkitGetGamepads","webkitGamepads","userAgent","onGamepadConnect","onGamepadDisconnect","startPolling","gamepad","stopPolling","gamePad","pollStatus","pollGamepads","timestamp","rawGamepads","getGamepads","gamepadsChanged","IgeMousePanComponent","_startThreshold","startThreshold","limit","_limit","_panPreStart","_panStarted","_panStartMouse","_panStartCamera","curMousePos","panCords","distX","distY","panFinalX","panFinalY","IgeMouseZoomComponent","_zoomStartMouse","_zoomStartCamera","zoomCords","IgeTiledComponent","loadJson","scriptElem","document","createElement","src","onload","_processData","tiled","getElementsByTagName","appendChild","layer","layerType","layerData","layerDataCount","tileSetItem","currentTexture","currentCell","onLoadFunc","image","allTexturesLoadedFunc","mapClass","isServer","IgeTileMap2d","IgeTextureMap","mapWidth","mapHeight","layerArray","layers","layerCount","maps","layersById","tileSetArray","tilesets","tileSetCount","tileSetsTotal","tileSetsLoaded","textureCellLookup","textures","tileWidth","tilewidth","tileHeight","depth","orientation","isometricMounts","addTexture","_tiledStartingId","paintTile","_textureList","occupyTile","cc","IgeCellSheet","tileheight","cellCount","firstgid","Image","IgeUiManagerComponent","_focus","_caret","_register","_styles","_elementsByStyle","input","style","registerElement","elem","unRegisterElement","registerElementStyle","_styleClass","unRegisterElementStyle","canFocus","_allowFocus","focus","previousFocus","_focused","blur","_updateStyle","IgeEntityManager","_mountQueue","_unMountQueue","_maxMountsPerOp","_maxUnMountsPerOp","_orphans","_currentViewport","viewArea","entityManager","_updateOrphans","_updateChildren","_processMountQueue","_processUnMountQueue","itemAabb","vpIndex","inVisibleArea","viewportArr","vpCount","_managed","bounds3dPolygon","_inView","mount","unMount","IgeEntityManagerComponent","_maps","_overwatchMode","_removeMode","_createArr","_removeArr","addMap","active","maxCreatePerTick","_maxCreatePerTick","maxRemovePerTick","_maxRemovePerTick","overwatchMode","createCheck","_createCheck","createEntityFromMapData","_createEntityFromMapData","removeCheck","_removeCheck","trackTranslate","_trackTranslateTarget","unTrackTranslate","areaCenter","offset","ent","_areaCenter","areaRect","_areaRect","areaRectAutoSize","_areaRectAutoSize","_areaRectAutoSizeOptions","currentArea","isometric","entTranslate","removeMode","currentAreaTiles","mapIndex","mapData","currentTile","renderX","renderY","renderWidth","renderHeight","tileData","renderSize","ratio","_resized","_resizeEvent","_lastArea","ceil","_drawBounds","strokeRect","_highlightTileRect","_occupiedRect","processQueues","createArr","createCount","createLimit","createEntityFunc","removeArr","removeCount","removeLimit","geom","additionX","additionY","bufferMultiple","bufferPixels","_caching","_resizeCacheCanvas","IgeEditorComponent","_showStats","_templateCache","_cacheTemplates","ui","_interceptMouse","_activateKeyHandle","keyIdentifier","toggle","toggleStats","_mouseUpHandle","_mouseDownHandle","_mouseMoveHandle","_contextMenuHandle","requireScript","igeRoot","$","loadHtml","html","append","requireStylesheet","objectId","_objectSelected","sync","setInterval","_fps","_dps","_dpf","_updateTime","_renderTime","_tickTime","autoback","ready","tabs","editor","_show","objectDefault","drawGrid","interceptMouse","hasClass","hide","show","removeClass","addClass","hideStats","success","dataType","template","async","complete","xhr","status","jsviews","templates","renderTemplate","err","parseHTML","selectObject","_selectedObject","panels","showPanelByInstance","_selectedObjectClassList","getClassDerivedList","classArr","destroySelected","createObject","newObj","newClassInstance","scenegraph","updateSceneGraph","toolbox","_statsTick","_statsPauseUpdate","addToSgTree","timingString","elems","getElementsByClassName","className","_sgTreeSelected","drawBounds","drawBoundsLimitId","innerHTML","_timeSpentInTick","getElementById","parentId","items","toggleShowEditor","_showSgTree","elem2","canvasBoundingRect","elem1","parseInt","overflow","body","consoleHolderElem","consoleElem","classChainElem","dociFrame","sgTreeUpdate","position","editorRoot","editorModeTranslate","editorModeRotate","editorModeScale","editorStatus","editorRotate","editorTranslate","IgeEditorTranslateComponent","IgeEditorRotateComponent","_sgTreeUpdateInterval","clearInterval","child","parentNode","removeChild","getSceneGraphData","Box2D","a2j","emptyFn","__defineGetter__","__defineSetter__","cfg","get","inherit","cls","base","tmpCtr","generateCallback","cb","NVector","tmp","is","o1","o2","__implements","parseUInt","Vector","Vector_a2j_Number","Collision","Shapes","Common","Dynamics","Contacts","Controllers","Joints","b2AABB","b2Bound","b2BoundValues","b2Collision","b2ContactID","b2ContactPoint","b2Distance","b2DistanceInput","b2DistanceOutput","b2DistanceProxy","b2DynamicTree","b2DynamicTreeBroadPhase","b2DynamicTreeNode","b2DynamicTreePair","b2Manifold","b2ManifoldPoint","b2Point","b2RayCastInput","b2RayCastOutput","b2Segment","b2SeparationFunction","b2Simplex","b2SimplexCache","b2SimplexVertex","b2TimeOfImpact","b2TOIInput","b2WorldManifold","ClipVertex","Features","b2CircleShape","b2EdgeChainDef","b2EdgeShape","b2MassData","b2PolygonShape","b2Shape","b2Color","b2Settings","b2Mat22","b2Mat33","b2Math","b2Sweep","b2Transform","b2Vec2","b2Vec3","b2Body","b2BodyDef","b2ContactFilter","b2ContactImpulse","b2ContactListener","b2ContactManager","b2DebugDraw","b2DestructionListener","b2FilterData","b2Fixture","b2FixtureDef","b2Island","b2TimeStep","b2World","b2CircleContact","b2Contact","b2ContactConstraint","b2ContactConstraintPoint","b2ContactEdge","b2ContactFactory","b2ContactRegister","b2ContactResult","b2ContactSolver","b2EdgeAndCircleContact","b2NullContact","b2PolyAndCircleContact","b2PolyAndEdgeContact","b2PolygonContact","b2PositionSolverManifold","b2BuoyancyController","b2ConstantAccelController","b2ConstantForceController","b2Controller","b2ControllerEdge","b2GravityController","b2TensorDampingController","b2DistanceJoint","b2DistanceJointDef","b2FrictionJoint","b2FrictionJointDef","b2GearJoint","b2GearJointDef","b2Jacobian","b2Joint","b2JointDef","b2JointEdge","b2LineJoint","b2LineJointDef","b2MouseJoint","b2MouseJointDef","b2PrismaticJoint","b2PrismaticJointDef","b2PulleyJoint","b2PulleyJointDef","b2RevoluteJoint","b2RevoluteJointDef","b2WeldJoint","b2WeldJointDef","IBroadPhase","b2internal","postDefs","lowerBound","upperBound","IsValid","dX","dY","valid","GetCenter","GetExtents","Contains","RayCast","output","tmin","Number","MAX_VALUE","tmax","pX","pY","absDX","absDY","normal","inv_d","t1","t2","t3","MIN_VALUE","fraction","TestOverlap","d1X","d1Y","d2X","d2Y","Combine","aabb1","aabb2","IsLower","IsUpper","Swap","tempValue","tempProxy","proxy","tempStabbingCount","stabbingCount","lowerValues","upperValues","ClipSegmentToLine","vOut","vIn","cv","numOut","vIn0","vIn1","distance0","distance1","Set","interp","tVec","cv2","EdgeSeparation","poly1","xf1","edge1","poly2","xf2","tMat","vertices1","m_vertexCount","m_vertices","normals1","m_normals","count2","vertices2","R","normal1WorldX","col1","col2","normal1WorldY","normal1X","normal1Y","minDot","dot","v1X","v1Y","v2X","v2Y","FindMaxSeparation","edgeIndex","count1","m_centroid","dLocal1X","dLocal1Y","edge","maxDot","prevEdge","sPrev","nextEdge","sNext","bestEdge","bestSeparation","increment","FindIncidentEdge","normals2","tX","tClip","i1","i2","features","referenceEdge","incidentEdge","incidentVertex","MakeClipPointVector","CollidePolygons","manifold","polyA","xfA","polyB","xfB","m_pointCount","totalRadius","m_radius","edgeA","s_edgeAO","separationA","edgeB","s_edgeBO","separationB","flip","m_type","e_faceB","e_faceA","s_incidentEdge","local_v12","local_v11","localTangent","s_localTangent","Normalize","localNormal","s_localNormal","planePoint","s_planePoint","tangent","s_tangent","tangent2","s_tangent2","s_normal","v11","s_v11","v12","s_v12","frontOffset","sideOffset1","sideOffset2","clipPoints1","s_clipPoints1","clipPoints2","s_clipPoints2","m_localPlaneNormal","SetV","m_localPoint","b2_maxManifoldPoints","cp","m_points","tY","m_id","CollideCircles","circle1","circle2","m_p","distSqr","e_circles","SetZero","CollidePolygonAndCircle","polygon","cX","cY","cLocalX","cLocalY","normalIndex","separation","vertexCount","vertices","normals","vertIndex1","vertIndex2","v1","v2","u1","u2","faceCenterX","faceCenterY","b2CollidePolyTempVec","b2_nullFeature","_m_id","_key","Copy","_referenceEdge","_incidentEdge","_incidentVertex","_flip","Distance","cache","b2_gjkCalls","proxyA","proxyB","transformA","transformB","simplex","s_simplex","ReadCache","saveA","s_saveA","saveB","s_saveB","saveCount","closestPoint","GetClosestPoint","distanceSqr1","LengthSquared","distanceSqr2","iter","m_count","indexA","indexB","Solve2","Solve3","b2Assert","GetSearchDirection","vertex","GetSupport","MulTMV","GetNegative","wA","MulX","GetVertex","wB","SubtractVV","b2_gjkIters","duplicate","b2_gjkMaxIters","Max","GetWitnessPoints","pointA","pointB","Length","iterations","WriteCache","useRadii","rA","rB","shape","GetType","e_circleShape","e_polygonShape","bestIndex","bestValue","GetSupportVertex","GetVertexCount","m_root","m_freeList","m_path","m_insertionCount","CreateProxy","userData","node","AllocateNode","extendX","b2_aabbExtension","extendY","InsertLeaf","DestroyProxy","RemoveLeaf","FreeNode","MoveProxy","displacement","IsLeaf","b2_aabbMultiplier","Rebalance","bit","child2","child1","GetFatAABB","GetUserData","Query","proceed","CrossFV","abs_v","AbsV","maxFraction","segmentAABB","subInput","parent","leaf","center","sibling","norm1","norm2","node1","node2","oldAABB","m_tree","m_moveBuffer","m_pairBuffer","m_pairCount","m_proxyCount","BufferMove","UnBufferMove","aabbA","aabbB","GetProxyCount","UpdatePairs","QueryCallback","queryProxy","__this","pair","fatAABB","primaryPair","userDataA","userDataB","Validate","ComparePairs","pair1","pair2","Reset","m_normalImpulse","m_tangentImpulse","Support","xf","vX","vY","GetFirstVertex","TestSegment","lambda","segment","maxLambda","rX","rY","nX","nY","k_slop","denom","bX","bY","mu2","nLen","Extend","ExtendForward","ExtendBackward","POSITIVE_INFINITY","m_axis","Initialize","m_proxyA","m_proxyB","localPointA","localPointA1","localPointA2","localPointB","localPointB1","localPointB2","pointAX","pointAY","pointBX","pointBY","normalX","normalY","e_points","CrossVF","NegativeSelf","dA","MulMV","dB","Clamp","Evaluate","axisA","axisB","m_v1","m_v2","m_v3","wALocal","wBLocal","metric1","metric","metric2","GetMetric","e12","CrossVV","pA","pB","w1","w2","d12_2","d12_1","inv_d12","w3","w1e12","Dot","w2e12","e13","w1e13","w3e13","d13_1","d13_2","e23","w2e23","w3e23","d23_1","d23_2","n123","d123_1","d123_2","d123_3","inv_d13","inv_d23","inv_d123","TimeOfImpact","b2_toiCalls","sweepA","sweepB","t0","tolerance","alpha","s_cache","s_distanceInput","GetTransform","s_xfA","s_xfB","s_distanceOutput","s_fcn","newAlpha","f1","f2","rootIterCount","Abs","b2_toiRootIters","b2_toiMaxRootIters","b2_toiIters","b2_toiMaxIters","m_normal","radiusA","radiusB","planePointX","planePointY","clipPointX","clipPointY","d2","cAX","cAY","cBX","cBY","__super","other2","TestPoint","positionX","positionY","sX","sY","rr","sigma","ComputeAABB","ComputeMass","massData","density","mass","b2_pi","I","ComputeSubmergedArea","r2","l2","area","com","GetLocalPosition","SetLocalPosition","GetRadius","SetRadius","isALoop","s_supportVec","m_coreV1","m_coreV2","m_direction","m_cornerDir1","m_cornerDir2","v0","d1","GetLength","m_length","GetVertex1","GetVertex2","GetCoreVertex1","GetCoreVertex2","GetNormalVector","GetDirectionVector","GetCorner1Vector","GetCorner2Vector","Corner1IsConvex","m_cornerConvex1","Corner2IsConvex","m_cornerConvex2","GetNextEdge","m_nextEdge","GetPrevEdge","m_prevEdge","e_edgeShape","b2_toiSlop","SetPrevEdge","core","cornerDir","convex","SetNextEdge","Reserve","SetAsArray","SetAsVector","AsArray","polygonShape","ComputeCentroid","AsVector","SetAsBox","hx","hy","AsBox","SetAsOrientedBox","AsOrientedBox","SetAsEdge","AsEdge","pLocalX","pLocalY","lower","upper","numerator","denominator","lowerX","lowerY","upperX","upperY","centerX","centerY","e1X","e1Y","e2X","e2Y","D","triangleArea","ex1","ey1","ex2","ey2","normalL","offsetL","depths","diveCount","intoIndex","outoIndex","lastSubmerged","isSubmerged","md","intoIndex2","outoIndex2","intoLamdda","outoLamdda","intoVec","outoVec","Multiply","GetVertices","GetNormals","vs","ComputeOBB","obb","minArea","root","uxX","uxY","uyX","uyY","extents","s_mat","shape1","transform1","shape2","transform2","simplexCache","e_unknownShape","b2_linearSlop","e_shapeTypeCount","e_hitCollide","e_missCollide","e_startsInsideCollide","_r","_g","_b","gg","bb","b2MixFriction","friction1","friction2","b2MixRestitution","restitution1","restitution2","VERSION","USHRT_MAX","b2_polygonRadius","b2_angularSlop","b2_maxTOIContactsPerIsland","b2_maxTOIJointsPerIsland","b2_velocityThreshold","b2_maxLinearCorrection","b2_maxAngularCorrection","b2_maxTranslation","b2_maxTranslationSquared","b2_maxRotation","b2_maxRotationSquared","b2_contactBaumgarte","b2_timeToSleep","b2_linearSleepTolerance","b2_angularSleepTolerance","SetIdentity","FromAngle","mat","FromVV","c1","c2","SetVV","SetM","AddM","GetAngle","atan2","GetInverse","out","det","Solve","a11","a12","a21","a22","col3","c3","SetVVV","Solve22","Solve33","bZ","a31","a32","a13","a23","a33","isFinite","T","MulXT","AddVV","DistanceSquared","MulFV","AddMM","MulMM","MulTMM","AbsM","Min","MinV","MaxV","low","high","ClampV","Random","random","RandomRange","lo","hi","NextPowerOfTwo","IsPowerOfTwo","b2Vec2_zero","b2Mat22_identity","b2Transform_identity","localCenter","c0","a0","Advance","pos","x_","y_","Make","Add","Subtract","MulM","MulTM","invLength","m_xf","m_sweep","m_linearVelocity","m_force","connectEdges","s1","s2","angle1","angle2","coreOffset","tan","CreateFixture","def","m_world","IsLocked","fixture","Create","m_flags","e_activeFlag","broadPhase","m_contactManager","m_broadPhase","m_next","m_fixtureList","m_fixtureCount","m_body","m_density","ResetMassData","e_newFixture","CreateFixture2","DestroyFixture","ppF","m_contactList","contact","next","fixtureA","GetFixtureA","fixtureB","GetFixtureB","Destroy","SetPositionAndAngle","Synchronize","FindNewContacts","SetTransform","GetPosition","SetPosition","SetAngle","GetWorldCenter","GetLocalCenter","SetLinearVelocity","b2_staticBody","GetLinearVelocity","SetAngularVelocity","omega","m_angularVelocity","GetAngularVelocity","GetDefinition","bd","allowSleep","e_allowSleepFlag","angularDamping","m_angularDamping","angularVelocity","fixedRotation","e_fixedRotationFlag","bullet","e_bulletFlag","awake","e_awakeFlag","linearDamping","m_linearDamping","linearVelocity","ApplyForce","b2_dynamicBody","IsAwake","SetAwake","m_torque","ApplyTorque","torque","ApplyImpulse","impulse","m_invMass","m_invI","Split","prev","body1","body2","CreateBody","center1","center2","velocity1","velocity2","SynchronizeFixtures","Merge","GetMass","m_mass","GetInertia","m_I","GetMassData","SetMassData","oldCenter","b2_kinematicBody","m_inertiaScale","GetWorldPoint","localPoint","GetWorldVector","localVector","GetLocalPoint","worldPoint","GetLocalVector","worldVector","GetLinearVelocityFromWorldPoint","GetLinearVelocityFromLocalPoint","GetLinearDamping","SetLinearDamping","GetAngularDamping","SetAngularDamping","SetType","ce","FlagForFiltering","SetBullet","flag","IsBullet","SetSleepingAllowed","m_sleepTime","SetFixedRotation","fixed","IsFixedRotation","SetActive","IsActive","ce0","IsSleepingAllowed","GetFixtureList","GetJointList","m_jointList","GetControllerList","m_controllerList","GetContactList","GetNext","m_userData","SetUserData","GetWorld","world","m_controllerCount","m_prev","inertiaScale","s_xf1","SynchronizeTransform","ShouldCollide","jn","joint","m_collideConnected","e_islandFlag","filter1","GetFilterData","filter2","groupIndex","maskBits","categoryBits","RayCollide","b2_defaultFilter","normalImpulses","tangentImpulses","BeginContact","EndContact","PreSolve","oldManifold","PostSolve","b2_defaultListener","m_contactCount","m_contactFilter","m_contactListener","m_contactFactory","m_allocator","AddPair","proxyUserDataA","proxyUserDataB","bodyA","GetBody","bodyB","fA","fB","m_nodeA","m_nodeB","IsTouching","Collide","e_filterFlag","cNuke","m_proxy","Update","s_evalCP","SetFlags","flags","GetFlags","AppendFlags","ClearFlags","SetSprite","sprite","GetSprite","SetDrawScale","drawScale","GetDrawScale","SetLineThickness","lineThickness","GetLineThickness","SetAlpha","GetAlpha","SetFillAlpha","GetFillAlpha","SetXFormScale","xformScale","GetXFormScale","DrawPolygon","color","DrawSolidPolygon","DrawCircle","DrawSolidCircle","axis","DrawSegment","DrawTransform","e_shapeBit","e_jointBit","e_aabbBit","e_pairBit","e_centerOfMassBit","e_controllerBit","SayGoodbyeJoint","SayGoodbyeFixture","m_filter","m_shape","GetShape","SetSensor","sensor","m_isSensor","IsSensor","SetFilterData","filter","SetDensity","GetDensity","GetFriction","m_friction","SetFriction","GetRestitution","m_restitution","SetRestitution","restitution","GetAABB","m_aabb","isSensor","m_bodies","m_contacts","m_joints","bodyCapacity","contactCapacity","jointCapacity","allocator","listener","contactSolver","m_bodyCapacity","m_contactCapacity","m_jointCapacity","m_bodyCount","m_jointCount","m_listener","m_contactSolver","Clear","gravity","gravityX","gravityY","m_nonGravitic","dt","InitVelocityConstraints","velocityIterations","SolveVelocityConstraints","FinalizeVelocityConstraints","translationX","translationY","inv_dt","rotation","positionIterations","contactsOkay","SolvePositionConstraints","jointsOkay","jointOkay","Report","m_constraints","minSleepTime","linTolSqr","angTolSqr","SolveTOI","subStep","constraints","s_impulse","normalImpulse","tangentImpulse","AddBody","m_islandIndex","AddContact","AddJoint","warmStarting","s_stack","m_island","doSleep","m_destructionListener","m_debugDraw","m_bodyList","m_warmStarting","m_continuousPhysics","m_allowSleep","m_gravity","m_inv_dt0","m_groundBody","SetDestructionListener","SetContactFilter","SetContactListener","SetDebugDraw","debugDraw","SetBroadPhase","oldBroadPhase","DestroyBody","jn0","DestroyJoint","coe","coe0","nextController","controller","RemoveBody","f0","CreateJoint","m_edgeA","m_bodyB","m_bodyA","m_edgeB","collideConnected","AddController","RemoveController","CreateController","DestroyController","SetWarmStarting","SetContinuousPhysics","GetBodyCount","GetJointCount","GetContactCount","SetGravity","GetGravity","GetGroundBody","Step","e_locked","s_timestep2","dtRatio","ClearForces","DrawDebugData","m_sprite","graphics","bp","_box2dNoDebug","DrawShape","DrawJoint","Draw","cA","cB","s_xf","QueryAABB","WorldQueryWrapper","QueryShape","QueryPoint","RayCastWrapper","RayCastOne","RayCastOneWrapper","RayCastAll","RayCastAllWrapper","GetBodyList","island","m_islandFlag","seed","stackCount","IsEnabled","bA","bB","cEdge","queue","s_queue","e_toiFlag","minContact","minTOI","IsContinuous","toi","m_toi","m_fixtureA","m_fixtureB","ComputeTOI","s_backupA","s_backupB","queueStart","queueSize","jEdge","s_timestep","b1","GetBodyA","b2","GetBodyB","GetAnchorA","GetAnchorB","s_jointColor","e_distanceJoint","e_pulleyJoint","pulley","GetGroundAnchorA","GetGroundAnchorB","e_mouseJoint","localVertices","m_manifold","m_oldManifold","GetManifold","GetWorldManifold","worldManifold","shapeA","shapeB","e_touchingFlag","e_continuousFlag","e_sensorFlag","SetEnabled","e_enabledFlag","tManifold","touching","wasTouching","aabbOverlap","mp2","id2","mp1","s_input","localPlaneNormal","normalMass","K","InitializeRegisters","AddType","createFcn","destroyFcn","type1","type2","m_registers","primary","reg","pool","poolCount","m_step","contacts","contactCount","m_constraintCount","vAX","vAY","vBX","vBY","s_worldManifold","ccp","rAX","rAY","rBX","rBY","rnA","rnB","kNormal","kEqualized","equalizedMass","tangentX","tangentY","rtA","rtB","kTangent","tangentMass","velocityBias","vRel","ccp1","ccp2","invMassA","invIA","invMassB","invIB","rn1A","rn1B","rn2A","rn2B","k11","k22","k12","tCount","PX","PY","dvX","dvY","vn","vt","maxFriction","newImpulse","P1X","P1Y","P2X","P2Y","vA","vB","cp1","cp2","aX","aY","dv1X","dv1Y","dv2X","dv2Y","vn1","vn2","xX","xY","baumgarte","minSeparation","s_psm","m_separations","b2CollideEdgeAndCircle","b2CollidePolyAndEdge","circlePointA","circlePointB","linearDrag","angularDrag","useDensity","useWorldGravity","nextBody","areac","massc","sc","sarea","shapeDensity","buoyancyForce","dragForce","smallA","F","prevBody","prevController","G","invSqr","mass1","dx","dy","maxTimestep","SetAxisAligned","xDamping","yDamping","timestep","damping","m_localAnchor1","m_localAnchor2","m_u","GetReactionForce","m_impulse","GetReactionTorque","SetLength","GetFrequency","m_frequencyHz","SetFrequency","hz","GetDampingRatio","m_dampingRatio","SetDampingRatio","localAnchorA","localAnchorB","frequencyHz","dampingRatio","m_gamma","m_bias","r1X","r1Y","r2X","r2Y","cr1u","cr2u","invMass","Cdot","anchorA","anchorB","m_localAnchorA","m_localAnchorB","m_linearMass","m_linearImpulse","m_angularImpulse","SetMaxForce","m_maxForce","GetMaxForce","SetMaxTorque","m_maxTorque","GetMaxTorque","m_angularMass","maxForce","maxTorque","mA","mB","iA","iB","maxImpulse","oldImpulse","CdotX","CdotY","impulseV","oldImpulseV","e_frictionJoint","anchor","m_groundAnchor1","m_groundAnchor2","m_J","linearB","angularB","GetRatio","m_ratio","SetRatio","joint1","joint2","m_revolute1","m_prismatic1","m_revolute2","m_prismatic2","coordinate1","coordinate2","m_ground1","e_revoluteJoint","GetJointAngle","GetJointTranslation","m_ground2","m_constant","g1","g2","ugX","ugY","crug","angularA","m_localXAxis1","linearA","Compute","e_gearJoint","a1","a2","m_localCenterA","m_localCenterB","e_prismaticJoint","e_lineJoint","e_weldJoint","e_unknownJoint","e_inactiveLimit","e_atLowerLimit","e_atUpperLimit","e_equalLimits","m_localYAxis1","m_perp","m_K","m_motorImpulse","GetJointSpeed","IsLimitEnabled","m_enableLimit","EnableLimit","GetLowerLimit","m_lowerTranslation","GetUpperLimit","m_upperTranslation","SetLimits","IsMotorEnabled","m_enableMotor","EnableMotor","SetMotorSpeed","m_motorSpeed","GetMotorSpeed","SetMaxMotorForce","m_maxMotorForce","GetMaxMotorForce","GetMotorForce","localAxisA","m_motorMass","lowerTranslation","upperTranslation","maxMotorForce","motorSpeed","enableLimit","enableMotor","m_limitState","m_invMassA","m_invMassB","m_invIA","m_invIB","m_a1","m_a2","m_s1","m_s2","m1","m2","jointTransition","L1","L2","Cdot1","Cdot2","df","f2r","df2","linearError","angularError","C2","R1","R2","translation","C1","impulse1","K1","K2","m_localAnchor","m_target","m_C","GetTarget","SetTarget","m_beta","invI","impulseX","impulseY","oldImpulseX","oldImpulseY","m_refAngle","referenceAngle","Cdot1X","Cdot1Y","C1X","C1Y","m_u1","m_u2","m_ground","GetLength1","GetLength2","groundAnchorA","groundAnchorB","lengthA","lengthB","m_maxLength1","maxLengthA","b2_minPulleyLength","m_maxLength2","maxLengthB","m_limitImpulse1","m_limitImpulse2","s1X","s1Y","s2X","s2Y","length1","length2","m_state","m_limitState1","m_limitState2","cr1u1","cr2u2","m_limitMass1","m_limitMass2","m_pulleyMass","gaA","gaB","K3","impulse3","impulse2","reduced","m_referenceAngle","m_lowerAngle","m_upperAngle","SetMaxMotorTorque","m_maxMotorTorque","GetMotorTorque","lowerAngle","upperAngle","maxMotorTorque","jointAngle","positionError","limitImpulse","CX","CY","CLengthSquared","CLength","invMass1","invMass2","invI1","invI2","k_allowedStretch","tImpulse","m_drawScale","m_lineThickness","m_alpha","m_fillAlpha","m_xformScale","setTranslation","m_ctx","translate","_color","m_drawFlags","strokeWidth","CANNON","Int32Array","Float32Array","Broadphase","BroadPhase","collisionPairs","NaiveBroadphase","temp","Vec3","quat","Quaternion","pairs1","pairs2","numObjects","bodies","types","Shape","BOX_SPHERE_COMPOUND_CONVEX","SPHERE","BOX","COMPOUND","CONVEXPOLYHEDRON","PLANE","STATIC_OR_KINEMATIC","Body","STATIC","KINEMATIC","bi","bj","ti","tj","motionstate","isSleeping","vsub","boundingRadiusSum","boundingSphereRadius","pi","oi","quaternion","vmult","Ray","origin","distanceFromIntersection","mult","intersect","vadd","distanceTo","pointInTriangle","dot00","dot01","dot02","dot11","dot12","invDenom","setPrecision","intersectPoint","intersectBody","ConvexPolyhedron","intersectShape","Box","convexPolyhedronRepresentation","faces","faceNormals","fi","face","faceNormal","intersectBodies","sort","Mat3","elements","vec","targetvec","smult","mmult","sum","solve","eqns","nr","np","els","nc","multiplier","Infinity","cross","crossmat","normalize","unit","ninv","norm","isZero","negate","tangents","rand","lerp","almostEquals","almostZero","setFromAxisAngle","toAxisAngle","targetAxis","setFromVectors","va","vb","vaxvb","inverse","conjugate","inorm2","normalizeFast","qx","qy","qz","qw","ix","iy","iz","iw","toEuler","order","heading","attitude","bank","sqx","sqy","sqz","aabbmin","aabbmax","volume","calculateLocalInertia","calculateTransformedInertia","localInertia","worldInertia","EventTarget","preStep","postStep","DYNAMIC","Particle","material","that","initPosition","initVelocity","sleepState","isAwake","isSleepy","sleepSpeedLimit","sleepTimeLimit","timeLastSleepy","wakeUp","dispatchEvent","sleep","sleepTick","RigidBody","tau","initQuaternion","initAngularVelocity","inertia","invInertia","Sphere","halfExtents","updateConvexPolyhedronRepresentation","sx","sy","sz","getCorners","corners","getSideNormals","includeNegative","sides","Plane","Compound","childShapes","childOffsets","childOrientations","addChild","mr2","candidate","project","hull","maxmin","worldVertex","planeConstant","face_i","uniqueEdges","numVertices","NbTris","found","face1","ed","m_face0","edges","testSepAxis","hullB","posA","quatA","posB","quatB","maxminA","maxminB","maxA","minA","maxB","minB","d0","findSeparatingAxis","dmin","hullA","curPlaneTests","numFacesA","faceANormalWS","WorldNormal","numFacesB","curEdgeEdge","WorldEdge0","WorldEdge1","Cross","e0","e1","dist","deltaC","clipAgainstHull","separatingNormal","minDist","maxDist","closestFaceB","dmax","worldVertsB1","worldb","clipFaceAgainstHull","worldVertsB2","pVtxIn","pVtxOut","closestFaceA","connectedFaces","numVerticesA","edge0","worldPlaneAnormal1","planeNormalWS1","worldA1","planeNormalWS","planeEqWS","otherFace","localPlaneEq","clipFaceAgainstPlane","inVertices","outVertices","planeNormal","n_dot_first","n_dot_last","numVerts","firstVertex","lastVertex","vi","newv","computeAABB","max2","Solver","eps","setSpookParams","reset","numbodies","MinvTrace","Fext","qdot","hasupper","haslower","vxlambda","vylambda","vzlambda","wxlambda","wylambda","wzlambda","addConstraint","body_i","body_j","addConstraint2","equations","G1","G2","G3","G4","iM1","iM2","iM3","iM4","g3","g4","W1","W2","W3","W4","f3","f4","lambdamin","lambdamax","addNonPenetrationConstraint","xi","xj","ni","ri","rj","iMi","iMj","iIi","iIj","vj","wi","wj","fj","taui","tauj","rxn","qvec","dlambda","precomp","l12","G_Minv_Gt","Gq","GW","GMinvf","addi","Gulambda","listeners","ObjectPool","objects","release","constructObject","Vec3Pool","Material","ContactMaterial","materials","World","stepnumber","default_dt","last_dt","nextId","broadphase","solver","contactgen","ContactGenerator","contactmaterials","mats2cmat","gvec","rixn","rjxn","step_q","step_w","step_wq","getContactMaterial","_addImpulse","mu","ri_star","rj_star","ii","inertiax","Iinv_i","Iinv_j","im","invm","v_f","J","imi","imj","vx","vy","vz","cr","clearCollisionState","idx","collision_matrix","Int16Array","Constraint","addMaterial","newcm","addContactMaterial","cmat","_id2index","collisionMatrixGet","current","N","collisionMatrixSet","pairs","currentState","oldcontacts","getContacts","cm","with","v_contact_i","v_contact_j","u_rel","w_rel","uw","iIxi","iIyi","iIzi","iIxj","iIyj","iIzj","un_rel","gn","rixt","rjxt","ut_rel","ld","ad","wq","DYNAMIC_OR_KINEMATIC","ContactPoint","nearPhase","si","sj","qi","qj","makeResult","contactPointPool","recurseCompound","swapped","point_on_plane_to_sphere","plane_to_sphere_ortho","box_to_sphere","ns","ns1","ns2","h1","h2","dot1","dot2","v3pool","sphere_to_corner","edgeTangent","edgeCenter","orthogonal","orthonorm","tdist","ndist","numcontacts","worldCorner","point_on_plane_to_corner","plane_to_corner","verts","planehull","sepAxis","contactReduction","reduceContacts","ContactConstraint","slipForce","unused_equations","to","eq","setDefaultMassProps","DistanceConstraint","Equation","setDefaultForce","setMaxForce","PointToPointConstraint","pivotA","pivotB","pivot_i","pivot_j","IgeCannonComponent","_sleep","_scaleRatio","_solverIterations","_gravity","_broadphase","_removeWhenReady","_normalMaterial","_slipperyMaterial","_slipperyNormalCm","scaleRatio","_world","solverIterations","createWorld","createFloor","normalZ","groundShape","groundBody","createBody","param","fixtureDef","tempShape","tempBod","fixtures","sizeX","sizeY","sizeZ","_bounds3d","_igeEntity","enableDebug","canvasId","_cannonDebug","_debugCanvas","_debugCtx","getContext","cannon","bodiesArr","bodyCount","_igeUpdating","_updateCallback","IgeTimeSyncExtension","timeSyncInterval","_timeSyncInterval","timeSyncStart","_timeSyncStarted","_sendTimeSync","_timeSyncTimer","timeSyncStop","clientId","timeToServerTime","_latency","_onTimeSync","sendTime","localTime","_timeSyncLog","IgeStreamComponent","_sectionDesignator","_queuedData","_streamClientData","_streamClientCreated","_onStreamCreate","_onStreamDestroy","_onStreamData","_onStreamTime","_renderLatency","_streamInterval","renderLatency","latency","sendInterval","_timeScale","_streamTimer","_sendQueue","_stopTimeSync","ct","st","network","clientSentTimeData","_streamDataTime","classConstructor","entityId","transformData","createData","streamSectionData","_streamJustCreated","_streamEmitCreated","destroyDelta","stream","lifeSpan","sectionArr","sectionIndex","justCreated","sectionDataArr","sectionDataCount","_streamSections","io","version","protocol","transports","sockets","connect","util","parseUri","host","domain","port","uniqueUri","secure","query","merge","Socket","of","chunkQuery","load","readyState","attachEvent","request","XDomainRequest","ua","hasCORS","defer","webkit","importScripts","mixin","isArray","toArray","withCredentials","iDevice","EventEmitter","$events","once","removeListener","removeAllListeners","nativeJSON","date","valueOf","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","quote","escapable","lastIndex","meta","charCodeAt","str","gap","rep","indent","parse","\b","\t","\n","\f","\r","\"","\\","","reviver","walk","eval","SyntaxError","parser","packets","reasons","advice","encodePacket","endpoint","ack","reason","qs","ackId","encodePayload","decodePacket","match","decodePayload","charAt","substr","socket","sessid","Transport","heartbeats","onData","clearCloseTimeout","connected","connecting","reconnecting","setCloseTimeout","onPacket","setHeartbeatTimeout","onHeartbeat","onConnect","isOpen","closeTimeout","onDisconnect","close","clearTimeouts","clearTimeout","reopenTimeout","packet","onOpen","onClose","prepareUrl","scheme","resource","connect timeout","try multiple transports","reconnect","reconnection delay","reconnection limit","reopen delay","max reconnection attempts","sync disconnect on unload","auto connect","flash policy port","manualFlush","namespaces","buffer","doBuffer","isXDomain","disconnectSync","SocketNamespace","publish","$emit","handshake","onError","insertBefore","onreadystatechange","getTransport","check","xdomainCheck","sessionid","transport","connectTimeoutTimer","heartbeatTimeout","origTransports","heartbeatTimeoutTimer","setBuffer","flushBuffer","payload","disconnect","reconnectionAttempts","reconnectionTimer","reconnectionDelay","redoTransports","json","ackPackets","acks","namespace","websocket","MozWebSocket","WebSocket","onopen","onmessage","onclose","onerror","flashsocket","__addTask","__tasks","loaded","WEB_SOCKET_SWF_LOCATION","loadFlashPolicyFile","__initialize","swfobject","getFlashPlayerVersion","major","WEB_SOCKET_DISABLE_AUTO_INITIALIZATION","Q","E","setAttribute","GetVariable","pv","callbackFn","S","swfVersion","wk","expressInstall","H","getAttribute","styleclass","align","U","ref","SetVariable","nodeName","win","mac","title","ie","flashvars","display","L","replaceChild","childNodes","nodeType","cloneNode","movie","outerHTML","M","O","styleSheets","addRule","createTextNode","visibility","encodeURIComponent","platform","parseFloat","plugins","description","mimeTypes","enabledPlugin","detachEvent","documentElement","doScroll","registerObject","getObjectById","embedSWF","switchOffAutoHideShow","minor","hasFlashPlayerVersion","createSWF","showExpressInstall","removeSWF","createCSS","addDomLoadEvent","addLoadEvent","getQueryParamValue","search","hash","substring","expressInstallCallback","__id","__nextId","__instances","CONNECTING","bufferedAmount","__events","__flash","create","CLOSED","CLOSING","__handleEvent","__createSimpleEvent","decodeURIComponent","__createMessageEvent","createEvent","Event","initEvent","bubbles","cancelable","MessageEvent","initMessageEvent","OPEN","loadManualPolicyFile","__swfLocation","__isFlashLite","hasPriority","swliveconnect","allowScriptAccess","__onFlashInitialized","setCallerUrl","href","setDebug","WEB_SOCKET_DEBUG","__onFlashEvent","receiveEvents","webSocketId","__log","__error","filename","sendBuffer","XHR","post","posting","sendXHR","setRequestHeader","contentType","htmlfile","doc","write","parentWindow","iframe","_","CollectGarbage","retryCounter","abort","form","iframeId","method","action","submit","script","amd","IgeSocketIoClient","_initDone","_idCounter","_requests","_io","ioNoDom","_startCallback","_port","_onConnectToServer","commandCount","cmd","_networkCommandsLookup","ncmds","_networkCommandsIndex","_onRequest","_onResponse","_onMessageFromServer","_onDisconnectFromServer","commandName","_networkCommands","commandIndex","newIdHex","response","requestId","_debugCounter","IgeSocketIoComponent","_debugMax","_clientRooms","IgeSocketIoServer","_socketio","modulePath","_acceptConnections","debugMax","NetIo","_trace","setup","Class","EventingClass","Client","_socket","_connectionAttempts","connectionRetry","connectionRetryMax","_onOpen","_onData","_onClose","_onError","_encode","_decode","_netioCmd","_disconnectReason","wasClean","IgeNetIoClient","_url","timeScale","ts","ciEncoded","fromCharCode","ciDecoded","IgeNetIoComponent","IgeNetIoServer","_netio","Server","IgeChatClient","joinRoom","roomId","sendToRoom","msg","chat","from","_onJoinedRoom","joined","_onLeftRoom","_onServerSentRoomList","_onServerSentRoomUserList","_onRoomCreated","_onRoomRemoved","IgeChatComponent","_rooms","IgeChatServer","_onMessageFromClient","_onJoinRoomRequestFromClient","_onLeaveRoomRequestFromClient","_onClientWantsRoomList","_onClientWantsRoomUserList","IgeCocoonJsComponent","detected","ext","showInputDialog","initialValue","cancelText","okText","IDTK_APP","makeCall","showWebView","hideWebView","IgeUiPositionExtension","px","noUpdate","_uiLeft","_uiLeftPercent","_uiCenter","_uiCenterPercent","parentWidth","newVal","_updateUiPosition","_uiRight","_uiRightPercent","_uiTop","_uiTopPercent","_uiMiddle","_uiMiddlePercent","parentHeight","bottom","_uiBottom","_uiBottomPercent","middle","lockAspect","modifier","_uiWidth","_widthModifier","_uiHeight","_heightModifier","autoScaleX","_autoScaleX","_autoScaleLockAspect","autoScaleY","_autoScaleY","updateUiChildren","arrItem","percent","parentGeom","geomScaled","cacheDirty","IgeUiStyleExtension","backgroundImage","texture","repeatType","_patternRepeat","_patternTexture","_backgroundSize","resize","_patternWidth","_patternHeight","_cell","cellData","_cells","drawImage","_patternFill","_ctx","createPattern","restoreOriginal","backgroundSize","backgroundColor","_backgroundColor","backgroundPosition","_backgroundPosition","borderColor","_borderColor","_borderLeftColor","_borderTopColor","_borderRightColor","_borderBottomColor","borderLeftColor","borderTopColor","borderRightColor","borderBottomColor","borderWidth","_borderWidth","_borderLeftWidth","_borderTopWidth","_borderRightWidth","_borderBottomWidth","borderLeftWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderRadius","_borderRadius","_borderTopLeftRadius","_borderTopRightRadius","_borderBottomRightRadius","_borderBottomLeftRadius","padding","_paddingLeft","_paddingTop","_paddingRight","_paddingBottom","paddingLeft","paddingTop","paddingRight","paddingBottom","IgeFSM","_states","_transitions","_initialStateName","_currentStateName","_previousStateName","initialStateName","previousStateName","currentStateName","defineState","definition","defineTransition","fromState","toState","transitionCheck","initialState","stateName","newStateObj","getState","enterErr","enterData","enterState","newStateName","_transitionStates","exitState","oldStateName","currentStateObj","exit","exitStateErr","exitStateData","enterStateErr","enterStateData","IgeSceneGraph","interfaceImplements","addGraph","removeGraph","IgeBaseScene","destroyGraph","baseScene","IgeScene2d","IgeViewport","autoSize","scene","nullMethod","IgeDummyCanvas","dummy","IgeDummyContext","clearRect","clip","IgePathNode","moveCost","link","listType","IgePathFinder","_neighbourLimit","_squareCost","_diagonalCost","squareCost","diagonalCost","neighbourLimit","aStar","comparisonCallback","allowInvalidDestination","startNode","lowestFScoringIndex","openCount","currentNode","pathPoint","finalPath","neighbourList","neighbourCount","neighbourNode","endPointCheckTile","existingNode","lowestHNode","openList","closedList","listHash","_heuristic","_getNeighbours","newNode","list","currentNodeData","as","fromNode","toNode","_as","propertyObj","stepTo","repeatMode","repeatCount","stepBy","beforeStep","afterStep","afterChange","targetObject","methodName","timeMs","_tweenArr","startAll","tweenItem","IgeTexture","urlOrObject","_loaded","_smoothing","_globalSmoothing","_applyFilters","_applyFiltersData","_preFilters","_preFiltersData","assignSmartTextureImage","unRegister","register","newIdFromString","_loadScript","_loadImage","imageUrl","textureLoadStart","_textureImageStore","_originalImage","_igeTextures","_sizeX","_sizeY","_textureLoaded","textureLoadEnd","scriptUrl","rs_sandboxContext","scriptObj","_setImage","imageElement","textureFromCell","indexOrId","tex","_textureFromCell","imageSmoothingEnabled","mozImageSmoothingEnabled","dontDraw","_textureCtx","_textureCanvas","resizeByPercent","removeFilters","smoothing","_renderPos","forEach","_drawCount","removeFilter","clean","_rerenderFilters","preFilter","applyFilter","pixelData","getImageData","_stringify","_textureStore","_destroyed","IgeSpriteSheet","horizontalCells","verticalCells","_sheetImage","_applyCells","_cellColumns","_cellRows","imgWidth","imgHeight","rows","columns","cellWidth","cellHeight","cellIndex","xPos","yPos","_cellWidth","_cellHeight","cells","_spriteCells","detectCells","_checkModulus","img","pixels","newRect","spriteRects","_pixelInRects","_determineRect","rects","rectIndex","rectCount","currentPixel","pixArr","IgeFontSheet","_noDimensions","_fontData","decodeHeader","_charCodeMap","characters","charCodes","_charPosMap","charPosition","_measuredWidthMap","measuredWidth","_pixelWidthMap","pixelWidth","header","font","fontName","fontSize","fontSizeUnit","fontColor","imageData","jsonString","lineHeightModifier","_lineHeightModifier","measureTextWidth","characterIndex","charIndex","lineIndex","charCodeMap","measuredWidthMap","lineArr","maxWidth","_renderText","lineText","charPosMap","pixelWidthMap","renderStartY","lineHeight","singleLineWidth","totalWidth","_textAlignY","_textLineSpacing","_textAlignX","_colorOverlay","globalCompositeOperation","IgeFontSmartTexture","_nativeFont","textBaseline","_nativeStroke","_nativeStrokeColor","textAlign","strokeText","IgeObject","_newBorn","_alive","_layer","_depth","_depthSortMode","_timeStream","_specialProp","alive","managed","category","_category","categoryUnRegister","categoryRegister","group","addGroup","groupName","groupItemCount","_groups","groupRegister","inGroup","matchAllGroups","inAllGroups","inAnyGroup","groups","groupCount","removeGroup","groupNameCount","groupUnRegister","removeAllGroups","behaviour","duringTick","_tickBehaviours","_updateBehaviours","hasBehaviour","drawBoundsData","_drawBoundsData","drawMouse","_drawMouse","drawMouseData","_drawMouseData","$$","categoryName","objArr","finalArr","children","_ignoreCamera","_streamRoomId","_childMounted","updateTransform","_compositeCache","_compositeParent","_mounted","childArr","oldParent","_childUnMounted","_unMounted","hasParent","fresh","bool","_hasParent","newObject","indestructible","_indestructible","destroyChildren","destroyBehaviours","destroyComponents","depthSortMode","depthSortChildren","sortObj","adj","order_ind","_projectionOverlap","isBehind","_depthSortVisit","layerIndex","viewChecking","_viewChecking","viewCheckChildren","vpViewArea","_alwaysInView","td","_headless","_timeSpentLastTick","_processUpdateBehaviours","_processTickBehaviours","objSave","igeClass","_objSaveReassign","objLoad","_objLoadReassign","saveSpecialProp","childIndex","loadSpecialProp","loadGraph","newId","classInstance","copyObj","refIndex","specProp","specPropKey","specialKeys","newProps","IgeEntity","_anchor","_computedOpacity","_opacity","_deathTime","_bornTime","_oldTranslate","_rotate","_origin","_oldBounds2d","_oldBounds3d","_highlight","_mouseEventsActive","_localMatrix","_worldMatrix","_oldWorldMatrix","_hidden","streamFloatPrecision","streamSections","isVisible","isHidden","_cache","_cacheCanvas","_cacheCtx","_cacheDirty","_cacheSmoothing","compositeCache","cacheSmoothing","mousePos","viewport","mp","_transformPoint","mousePosAbsolute","mousePosWorld","localToWorldPoint","rotateToPoint","worldPos","worldPosition","backgroundPattern","repeat","trackCamera","isoTile","_backgroundPattern","_backgroundPatternRepeat","_backgroundPatternTrackCamera","_backgroundPatternIsoTile","_backgroundPatternFill","widthByTile","tileSize","heightByTile","trPoint","tilePoint","unOccupyTile","overTiles","tile","tileArr","bounds2d","bounds3d","size3d","milliseconds","deathCallback","deathTime","_deathCallBack","opacity","noAabb","_noAabb","dimensionsFromTexture","localAabb","dimensionsFromCell","highlight","worldRotationZ","localToWorld","_adjustmentMatrix","screenPosition","_currentCamera","localIsoBoundsPoly","localBounds3dPolygon","recalculate","_bounds3dPolygonDirty","_localBounds3dPolygon","bf2","bf3","bf4","tf1","tf2","tf4","isoBoundsPoly","_bounds3dPolygon","mouseInIsoBounds","mouseInBounds3d","_aabbDirty","_aabb","box","geomX2","geomY2","anc","ancX","ancY","_localAabb","compositeAabb","compositeStream","_compositeStream","streamMode","streamControl","_swapVars","_internalsOverlap","x0","y0","tempSwap","otherObject","thisG3d","thisMin","thisMax","otherG3d","otherMin","otherMax","thisTranslate","otherTranslate","thisX","thisY","otherX","otherY","mouseEventsActive","ignoreCameraComposite","newFrame","_frameAlternator","_frameAlternatorCurrent","_transformContext","mouseAlwaysInside","_mouseAlwaysInside","_deathCallback","_streamDataCache","_processInterpolate","_birthMount","spawnQueue","dontTransform","_processTriggerHitTests","_mouseInTrigger","_handleMouseOut","_dontRender","_refreshCache","_renderCache","_renderEntity","_streamMode","streamSync","mouseTriggerPoly","_triggerPolygon","aabbC","_compositeAabbCache","_highlightToGlobalCompositeOperation","_drawCompositeBounds","tempMat","_transformPoints","streamDestroy","mouseOver","_mouseOver","mouseOut","_mouseOut","mouseMoveOff","mouseOverOff","mouseOutOff","mouseUpOff","mouseDownOff","mouseWheelOff","triggerPolygon","mouseEventTrigger","_handleMouseIn","_mouseStateOver","_mouseStateDown","_handleMouseWheel","_handleMouseUp","_handleMouseDown","debugTransforms","traceSet","velocityTo","velocityBy","translateToTile","finalZ","_translateAccessorX","_translateAccessorY","_translateAccessorZ","_rotateAccessorX","_rotateAccessorY","_rotateAccessorZ","_scaleAccessorX","_scaleAccessorY","_scaleAccessorZ","originBy","originTo","_originAccessorX","_originAccessorY","_originAccessorZ","_rotatePoint","cosAngle","sinAngle","isoPoint","_translateIso","_transformChanged","disableInterpolation","_disableInterpolation","sectionArray","streamSectionsPush","sectionName","streamSectionsPull","streamProperty","propVal","_streamProperty","sectionId","bypassTimeStream","_streamFloatPrecision","dataArr","newParent","newData","_streamControl","streamSyncInterval","_streamSyncSectionInterval","_streamSyncSectionDelta","_streamSyncInterval","_streamSyncDelta","floatRemove","_floatRemoveRegExp","recipientArr","clientArr","clients","_streamSync","streamCreateData","streamEmitCreated","streamRoomId","filteredArr","createResult","streamCreate","_streamData","streamForceUpdate","sectionData","streamData","sectionDataString","sectionCount","interpolateValue","startValue","endValue","totalValue","dataDelta","offsetDelta","renderTime","maxLerp","previousData","nextData","previousTransform","nextTransform","timeStream","currentTransform","_timeStreamPreviousData","_timeStreamNextData","_timeStreamDataDelta","_timeStreamOffsetDelta","_timeStreamCurrentInterpolateTime","_lastUpdate","IgeUiEntity","disabled","_disabled","_overflow","_renderBackground","arcTo","_renderBorder","rad","startNewStroke","IgeUiElement","_allowHover","_allowActive","updateStyleFunc","allowHover","allowFocus","allowActive","styleClass","_processStyle","styleName","styleData","applyStyle","focused","_value","IgeFontEntity","_text","_nativeMode","clearCache","_autoWrap","_applyAutoWrap","wasDifferent","bindData","preText","postText","_bindDataObject","_bindDataProperty","_bindDataPreText","_bindDataPostText","textAlignX","textAlignY","textLineSpacing","colorOverlay","_cacheText","nativeFont","nativeStroke","nativeStrokeColor","autoWrap","words","wordIndex","oneLineText","textArray","currentTextLine","IgeParticleEmitter","_currentDelta","_particles","applyDepthToParticles","applyLayerToParticles","quantityTimespan","quantityBase","quantityVariance","translateBaseX","translateBaseY","translateBaseZ","translateVarianceX","translateVarianceY","translateVarianceZ","rotateBase","rotateVariance","deathRotateBase","deathRotateVariance","scaleBaseX","scaleBaseY","scaleBaseZ","scaleVarianceX","scaleVarianceY","scaleVarianceZ","scaleLockAspect","deathScaleBaseX","deathScaleBaseY","deathScaleBaseZ","deathScaleVarianceX","deathScaleVarianceY","deathScaleVarianceZ","deathScaleLockAspect","opacityBase","opacityVariance","deathOpacityBase","deathOpacityVariance","lifeBase","lifeVariance","particle","_particle","particleMountTarget","_particleMountTarget","_applyDepthToParticles","_applyLayerToParticles","_quantityTimespan","_quantityBase","_quantityVariance","quantityMax","_quantityMax","_quantityProduced","_translateBaseX","_translateBaseY","_translateBaseZ","_translateVarianceX","_translateVarianceY","_translateVarianceZ","_rotateBase","_rotateVariance","_deathRotateBase","_deathRotateVariance","_scaleBaseX","_scaleBaseY","_scaleBaseZ","_scaleVarianceX","_scaleVarianceY","_scaleVarianceZ","_scaleLockAspect","_deathScaleBaseX","_deathScaleBaseY","_deathScaleBaseZ","_deathScaleVarianceX","_deathScaleVarianceY","_deathScaleVarianceZ","_deathScaleLockAspect","_opacityBase","_opacityVariance","_deathOpacityBase","_deathOpacityVariance","_lifeBase","_lifeVariance","velocityVector","baseVector","minVector","maxVector","_velocityVector","linearForceVector","_linearForceVector","_maxParticles","baseAndVarianceValue","_particlesPerTimeVector","updateSettings","stopAndKill","variance","floorIt","variant","vectorFromBaseMinMax","vectorData","newVector","particleCount","translateX","translateY","translateZ","newVecX","newVecY","rotX","rotY","cosRot","sinRot","scaleZ","life","deathScaleX","deathScaleY","deathScaleZ","deathRotate","deathOpacity","tempParticle","scaleProps","particles","IgeParticle","emitter","_emitter","IgeMap2d","clearData","collision","yi","collisionWith","collisionWithOnly","withData","startX","startY","sortedMapDataAsArray","finalData","_sortKeys","mapDataString","insertMapData","rotateData","translateDataBy","transX","transY","newArr","IgeTileMap2dSmartTexture","gridSize","_drawGrid","_gridColor","highlightOccupied","_highlightOccupied","highlightTileRect","_gridSize","_updateAdjustmentMatrix","gridColor","isTileOccupied","tileOccupiedBy","tilePos","mouseTilePoint","mouseToTile","tileToPoint","scanRects","rectArray","_scanRects","nx","ny","inGrid","hoverColor","_hoverColor","loadMap","saveMap","dataX","dataY","dataXY","tileMapHitPolygon","mousePoint","mouseTile","_renderCenter","autoSection","_autoSection","drawSectionBounds","_drawSectionBounds","cacheForceFrame","entityMapData","thisMapData","_allTexturesLoaded","allTexturesLoaded","textureIndex","clearTile","clearMap","tileTextureIndex","tileTextureCell","convertHorizontalData","tx","ty","xInt","yInt","finalX","finalY","sectionX","sectionY","tempSectionX","tempSectionY","regions","region","tileEntity","_newTileEntity","_sections","_sectionCtx","_ensureSectionExists","_renderTile","_sectionTileRegion","_drawSectionsToCtx","sectionCtx","sectionRenderX","sectionRenderY","sectionAbsX","sectionAbsY","sectionWidth","sectionHeight","xm1","xp1","ym1","yp1","regObj","xAdjust","gStart","gEnd","gridMaxX","gridMaxY","textMeasurement","IgeCollisionMap2d","IgeCamera","_trackRotateTarget","_trackRotateSmoothing","_trackTranslateSmoothing","panTo","panBy","rounding","_trackTranslateRounding","trackTranslateSmoothing","trackTranslateRounding","trackRotate","trackRotateSmoothing","unTrackRotate","lookAt","sourceX","sourceY","destinationX","destinationY","targetEntity","targetMatrix","targetX","targetY","sourceZ","distZ","targetParentRZ","targetZ","_clipping","scaleToWidth","scaleToHeight","_lockDimension","minimumVisibleArea","_autoSize","_scene","camTrans","camScale","_drawGuides","paintGuides","paintAabbs","_drawViewArea","drawViewArea","_drawBoundsLimitId","drawBoundsLimitCategory","_drawBoundsLimitCategory","drawCompositeBounds","drawGuides","rootObject","bounds3dPoly","ga","r3d","xl1","xl2","xl3","xl4","xl5","xl6","tf3","_shouldRender","tmpX","tmpY","ignoreCamera","shouldRender","cam","IgeQuest","questDefinition","completeCallback","_linear","_items","_itemCount","_eventCount","_itemCompleteCount","_eventCompleteCount","_isComplete","isComplete","linear","itemCount","eventCompleteCount","itemCompleteCount","percentComplete","_setupItemListener","_complete","_listener","eventEvaluate","_eventComplete","eventCallback","_itemComplete","itemIndex","itemCallback","IgeInterval","interval","_method","_interval","_time","cancel","IgeTimeout","timeout","IgeCuboidSmartTexture","IgeCuboid","IgeArray","IgeAudioComponent","ctxProto","AudioContext","webkitAudioContext","audio","IgeAudio","decode","decodeAudioData","play","responseType","_buffer","bufferSource","createBufferSource","destination","IgeBox2dComponent","igeEntityA","_box2dOurContactFixture","_box2dTheirContactFixture","igeEntityB","igeEitherId","id1","igeEitherCategory","category1","category2","igeBothCategories","igeEntityByCategory","igeEntityById","igeEntityByFixtureId","igeId","igeOtherEntity","useWorker","_useWorker","createFixture","params","tempDef","tempFixture","finalFixture","tempFilterData","finalWidth","finalHeight","gravitic","box2d","categoryIndex","staticsFromMap","mapLayer","posX","posY","IgeEntityBox2d","box2dBody","contactListener","beginContactCallback","endContactCallback","preSolve","postSolve","networkDebugMode","_networkDebugMode","mountScene","_box2dDebug","IgeBox2dDebugPainter","destroyBody","updateCallback","_intervalTimer","entityBox2dBody","removeWhenReady","_box2dBody","updating","asleep","IgeBox2dMultiWorldComponent","_worlds","IgeBox2dWorld","_b2dRef","_box2dWorld","_translateToProto","_translateByProto","_rotateToProto","_rotateByProto","_updateProto","_translateTo","_translateBy","_rotateTo","_rotateBy","box2dActive","_box2dBodyDef","evName","_collisionStartListeners","_contactListener","_setupContactListeners","_collisionEndListeners","_checkContact","otherEntity","entBox2d","box2dNoDebug","IgeEntityCannon","cannonBody","_cannonBodyDef","_cannonBody","entCannon","IgeUiDropDown","_toggleState","_label","IgeUiLabel","ops","selected","selectIndex","addOption","op","removeAllOptions","optionContainer","mainTop","mainHeight","IgeUiButton","_autoCell","autoCell","click","uiData","baseline","IgeUiRadioButton","radioGroup","_uiRadioGroup","_uiOnSelect","_uiSelected","_uiOnDeSelect","deSelect","IgeUiProgressBar","_min","_max","_progress","_barColor","_barText","pre","barBackColor","_barBackColor","barColor","barBorderColor","_barBorderColor","barText","progress","barWidth","IgeUiTextBox","_caretStart","_caretEnd","_fontEntity","blurFunc","_domElement","focusFunc","entScreenPos","zIndex","selectionStart","selectionEnd","_placeHolder","_placeHolderColor","_mask","placeHolder","placeHolderColor","mask","fontSheet","_fontSheet","IgeUiTooltip","mountEntity","content","titleBox","textBox","fontEntityTitle","fontEntityText","setContent","_mountEntity","_tooltip","_mousemove","_mouseout","tt","mountPos","IgeUiMenu","menuData","_menuData","_buildMenu","menuMode","_menuMode","addItem","IgeUiMenuItem","_labelEntity","_childMenu","IgeUiTimeStream","monitor","client","custom2","custom3","custom4","IgeFilters","tmpCanvas","tmpCtx","createImageData","_convolute","weights","opaque","side","halfSide","sw","sh","dst","alphaFac","dstOff","scy","scx","srcOff","wt","greyScale","originalImage","putImageData","_greyScale","brighten","_brighten","adjustment","threshold","_threshold","sharpen","strength","emboss","edgeDetect","_filterImageDrawn","cumulative","edgeEnhance","outlineDetect","sobel","_invert","canvasData","invert","glowMask","tempCanvas","tempCtx","blurPasses","glowPasses","THREE","REVISION","startsWith","endsWith","lastIndexOf","trim","cancelAnimationFrame","now","FrontSide","BackSide","DoubleSide","NoShading","FlatShading","SmoothShading","NoColors","FaceColors","VertexColors","NoBlending","NormalBlending","AdditiveBlending","SubtractiveBlending","MultiplyBlending","CustomBlending","AddEquation","SubtractEquation","ReverseSubtractEquation","ZeroFactor","OneFactor","SrcColorFactor","OneMinusSrcColorFactor","SrcAlphaFactor","OneMinusSrcAlphaFactor","DstAlphaFactor","OneMinusDstAlphaFactor","DstColorFactor","OneMinusDstColorFactor","SrcAlphaSaturateFactor","MultiplyOperation","MixOperation","UVMapping","CubeReflectionMapping","CubeRefractionMapping","SphericalReflectionMapping","SphericalRefractionMapping","RepeatWrapping","ClampToEdgeWrapping","MirroredRepeatWrapping","NearestFilter","NearestMipMapNearestFilter","NearestMipMapLinearFilter","LinearFilter","LinearMipMapNearestFilter","LinearMipMapLinearFilter","UnsignedByteType","ByteType","ShortType","UnsignedShortType","IntType","UnsignedIntType","FloatType","UnsignedShort4444Type","UnsignedShort5551Type","UnsignedShort565Type","AlphaFormat","RGBFormat","RGBAFormat","LuminanceFormat","LuminanceAlphaFormat","RGB_S3TC_DXT1_Format","RGBA_S3TC_DXT1_Format","RGBA_S3TC_DXT3_Format","RGBA_S3TC_DXT5_Format","Clock","autoStart","elapsedTime","oldTime","running","getElapsedTime","getDelta","Color","setHex","copyGammaToLinear","copyLinearToGamma","convertGammaToLinear","convertLinearToGamma","setRGB","setHSV","lerpSelf","getHex","getContextStyle","Vector2","addSelf","sub","subSelf","divideScalar","lengthSq","distanceToSquared","setLength","equals","Vector3","setX","setY","setZ","addScalar","multiplySelf","divideSelf","lengthManhattan","crossSelf","angleTo","getPositionFromMatrix","setEulerFromRotationMatrix","setEulerFromQuaternion","getScaleFromMatrix","Vector4","setAxisAngleFromQuaternion","setAxisAngleFromRotationMatrix","Matrix3","transpose","transposeIntoArray","Matrix4","__v1","__v2","__v3","multiplyToArray","multiplyVector3","multiplyVector4","multiplyVector3Array","rotateAxis","crossVector","flattenToArray","flattenToArrayOffset","getPosition","setPosition","getColumnX","getColumnY","getColumnZ","setRotationFromEuler","setRotationFromQuaternion","compose","__m1","__m2","makeScale","decompose","setFromRotationMatrix","extractPosition","extractRotation","rotateX","rotateY","rotateZ","rotateByAxis","getMaxScaleOnAxis","makeTranslation","makeRotationX","makeRotationY","makeRotationZ","makeRotationAxis","makeFrustum","makePerspective","makeOrthographic","Frustum","planes","setFromMatrix","contains","matrixWorld","geometry","boundingSphere","near","far","object","Mesh","MeshFaceMaterial","matrixRotationWorld","materialIndex","centroid","Face3","faceIndex","Face4","getDescendants","intersectObject","intersectObjects","Rectangle","getX","getY","getWidth","getHeight","getLeft","getTop","getRight","getBottom","add3Points","addRectangle","inflate","minSelf","empty","isEmpty","clamp","clampBottom","mapLinear","random16","randInt","randFloat","randFloatSpread","sign","Object3D","Object3DLibrary","Object3DIdCount","eulerOrder","defaultEulerOrder","renderDepth","rotationAutoUpdate","matrixWorldNeedsUpdate","matrixAutoUpdate","useQuaternion","boundRadius","boundRadiusScale","visible","receiveShadow","castShadow","frustumCulled","_vector","applyMatrix","worldToLocal","Scene","__addObject","__removeObject","traverse","getChildByName","updateMatrix","updateMatrixWorld","deallocate","Projector","RenderableObject","RenderableVertex","sprites","lights","projectVector","matrixWorldInverse","projectionMatrix","unprojectVector","projectionMatrixInverse","pickingRay","projectScene","la","fa","W","ia","Z","ca","Ga","Pa","Ia","Ua","na","Va","ib","Ra","ea","qa","eb","Light","Line","Sprite","faceVertexUvs","positionWorld","positionScreen","RenderableFace3","v3","pb","RenderableFace4","v4","normalWorld","centroidWorld","centroidScreen","vertexNormals","vertexNormalsWorld","vertexNormalsLength","uvs","LinePieces","RenderableLine","RenderableParticle","setFromEuler","calculateW","slerpSelf","slerp","Vertex","vertexColors","vertexTangents","UV","Geometry","GeometryLibrary","GeometryIdCount","colors","faceUvs","morphTargets","morphColors","morphNormals","skinWeights","skinIndices","boundingBox","hasTangents","colorsNeedUpdate","tangentsNeedUpdate","normalsNeedUpdate","uvsNeedUpdate","elementsNeedUpdate","verticesNeedUpdate","computeCentroids","computeFaceNormals","computeVertexNormals","__tmpVertices","computeMorphNormals","__originalFaceNormal","__originalVertexNormals","computeTangents","computeBoundingBox","computeBoundingSphere","mergeVertices","BufferGeometry","GeometryCount","attributes","array","itemSize","numItems","offsets","Y","uv","Spline","initFromArray","getPoint","getControlPointsArray","getLength","chunks","total","reparametrizeByArcLength","Camera","OrthographicCamera","updateProjectionMatrix","PerspectiveCamera","fov","aspect","setLens","atan","setViewOffset","fullWidth","fullHeight","AmbientLight","DirectionalLight","intensity","onlyShadow","shadowCameraNear","shadowCameraFar","shadowCameraLeft","shadowCameraTop","shadowCameraRight","shadowCameraBottom","shadowCameraVisible","shadowBias","shadowDarkness","shadowMapHeight","shadowMapWidth","shadowCascade","shadowCascadeOffset","shadowCascadeCount","shadowCascadeBias","shadowCascadeWidth","shadowCascadeHeight","shadowCascadeNearZ","shadowCascadeFarZ","shadowCascadeArray","shadowMatrix","shadowCamera","shadowMapSize","shadowMap","HemisphereLight","groundColor","PointLight","SpotLight","exponent","shadowCameraFov","Loader","statusDomElement","showStatus","addStatusElement","onLoadStart","onLoadProgress","onLoadComplete","crossOrigin","background","updateProgress","extractUrlBase","initMaterials","createMaterial","hasNormals","ShaderMaterial","LN2","ImageUtils","loadCompressedTexture","Texture","sourceFile","wrapS","wrapT","mirror","anisotropy","needsUpdate","lightMap","normalMap","bumpMap","wireframe","shading","blending","transparent","depthTest","depthWrite","flipSided","doubleSided","colorDiffuse","DbgColor","colorSpecular","specular","colorAmbient","ambient","transparency","specularCoef","shininess","mapDiffuse","mapDiffuseRepeat","mapDiffuseOffset","mapDiffuseWrap","mapDiffuseAnisotropy","mapLight","mapLightRepeat","mapLightOffset","mapLightWrap","mapLightAnisotropy","mapBump","mapBumpRepeat","mapBumpOffset","mapBumpWrap","mapBumpAnisotropy","mapNormal","mapNormalRepeat","mapNormalOffset","mapNormalWrap","mapNormalAnisotropy","mapSpecular","mapSpecularRepeat","mapSpecularOffset","mapSpecularWrap","mapSpecularAnisotropy","mapBumpScale","bumpScale","ShaderUtils","lib","UniformsUtils","uniforms","tNormal","mapNormalFactor","uNormalScale","tDiffuse","enableDiffuse","specularMap","tSpecular","enableSpecular","tAO","enableAO","uDiffuseColor","uSpecularColor","uAmbientColor","uShininess","uOpacity","fragmentShader","vertexShader","fog","DbgName","BinaryLoader","showProgress","loadAjaxJSON","loadAjaxBuffers","buffers","Uint8Array","responseBody","createBinModel","getResponseHeader","Uint32Array","Uint16Array","BYTES_PER_ELEMENT","Int8Array","ImageLoader","JSONLoader","DONE","createModel","LOADING","HEADERS_RECEIVED","bones","LoadingMonitor","GeometryLoader","SceneLoader","callbackSync","callbackProgress","geometryHandlerMap","addGeometryHandler","loaderClass","geometries","morph","MorphAnimMesh","mirroredLoop","empties","totalModels","totalTextures","loadedModels","loadedTextures","loaderObject","cameras","fogs","Fog","FogExp2","defaults","currentCamera","bgcolor","bgColor","bgColorAlpha","bgalpha","CubeGeometry","segmentsWidth","segmentsHeight","segmentsDepth","flipped","PlaneGeometry","SphereGeometry","CylinderGeometry","topRad","botRad","radSegs","heightSegs","TorusGeometry","tube","segmentsR","segmentsT","IcosahedronGeometry","subdivisions","urlBaseType","embeds","metadata","ascii","mapping","loadCompressedTextureCube","loadTextureCube","loadTexture","minFilter","magFilter","wrap","parameters","normalScale","envMap","tCube","enableReflection","uReflectivity","reflectivity","displacementMap","tDisplacement","enableDisplacement","uDisplacementBias","displacementBias","uDisplacementScale","displacementScale","TextureLoader","MaterialLibrary","MaterialIdCount","blendSrc","blendDst","blendEquation","polygonOffset","alphaTest","polygonOffsetUnits","polygonOffsetFactor","overdraw","setValues","LineBasicMaterial","linewidth","linejoin","linecap","MeshBasicMaterial","combine","refractionRatio","wireframeLinewidth","wireframeLinejoin","wireframeLinecap","skinning","MeshLambertMaterial","emissive","wrapAround","wrapRGB","MeshPhongMaterial","perPixel","metal","MeshDepthMaterial","MeshNormalMaterial","ParticleBasicMaterial","size","sizeAttenuation","ParticleCanvasMaterial","program","ParticleDOMMaterial","defines","TextureLibrary","TextureIdCount","format","generateMipmaps","premultiplyAlpha","flipY","onUpdate","CompressedTexture","mipmaps","DataTexture","ParticleSystem","sortParticles","LineStrip","morphTargetBase","morphTargetForcedOrder","morphTargetInfluences","morphTargetDictionary","getMorphTargetIndexByName","Bone","skin","skinMatrix","SkinnedMesh","useVertexTexture","identityMatrix","boneMatrices","rotq","scl","addBone","boneTextureHeight","boneTextureWidth","boneTexture","pose","boneInverses","offsetMatrix","currentKeyframe","lastKeyframe","directionBackwards","setFrameRange","startKeyframe","endKeyframe","setDirectionForward","setDirectionBackward","parseAnimations","animations","firstAnimation","setAnimationLabel","playAnimation","updateAnimation","Ribbon","LOD","LODs","addLevel","visibleAtDistance","object3D","useScreenCoordinates","mergeWith3D","affectedByDistance","scaleByViewport","alignment","SpriteAlignment","rotation3d","uvOffset","uvScale","topLeft","topCenter","topRight","centerLeft","centerRight","bottomLeft","bottomCenter","bottomRight","overrideMaterial","__objects","__lights","__objectsAdded","__objectsRemoved","CanvasRenderer","Pb","db","gb","Za","Wa","Ea","xb","$a","Ja","wa","wb","Da","qb","fb","ra","domElement","sortElements","sortObjects","autoClear","setSize","setClearColor","setClearColorHex","getMaxAnisotropy","Dc","gc","Ba","tb","jc","lineCap","lineJoin","Wb","Fc","ja","aa","Xa","rb","sb","jb","kb","kc","Uc","ShaderChunk","fog_pars_fragment","fog_fragment","envmap_pars_fragment","envmap_fragment","envmap_pars_vertex","worldpos_vertex","envmap_vertex","map_particle_pars_fragment","map_particle_fragment","map_pars_vertex","map_pars_fragment","map_vertex","map_fragment","lightmap_pars_fragment","lightmap_pars_vertex","lightmap_fragment","lightmap_vertex","bumpmap_pars_fragment","normalmap_pars_fragment","specularmap_pars_fragment","specularmap_fragment","lights_lambert_pars_vertex","lights_lambert_vertex","lights_phong_pars_vertex","lights_phong_vertex","lights_phong_pars_fragment","lights_phong_fragment","color_pars_fragment","color_fragment","color_pars_vertex","color_vertex","skinning_pars_vertex","skinbase_vertex","skinning_vertex","morphtarget_pars_vertex","morphtarget_vertex","default_vertex","morphnormal_vertex","skinnormal_vertex","defaultnormal_vertex","shadowmap_pars_fragment","shadowmap_fragment","shadowmap_pars_vertex","shadowmap_vertex","alphatest_fragment","linear_to_gamma_fragment","UniformsLib","common","diffuse","offsetRepeat","flipEnvMap","useRefract","bump","normalmap","fogDensity","fogNear","fogFar","fogColor","ambientLightColor","directionalLightDirection","directionalLightColor","hemisphereLightPosition","hemisphereLightSkyColor","hemisphereLightGroundColor","pointLightColor","pointLightPosition","pointLightDistance","spotLightColor","spotLightPosition","spotLightDirection","spotLightDistance","spotLightAngle","spotLightExponent","psColor","shadowmap","ShaderLib","mNear","mFar","basic","lambert","phong","particle_basic","depthRGBA","WebGLRenderer","__webglCustomAttributesList","__webglInitialized","createUniqueBuffers","createBuffer","belongsToAttribute","ELEMENT_ARRAY_BUFFER","ARRAY_BUFFER","bindBuffer","bufferData","STATIC_DRAW","__vertexArray","__colorArray","__sortArray","boundTo","__webglVertexBuffer","__webglColorBuffer","setBlending","setDepthTest","setDepthWrite","setMaterialFaces","renderBufferDirect","renderBuffer","renderImmediateObject","deallocateMaterial","initMaterial","__webglMorphTargetInfluences","maxMorphTargets","useProgram","uniformMatrix4fv","_projectionMatrixArray","ic","uniform1i","setTexture","boneGlobalMatrices","directional","positions","distances","spot","directions","angles","exponents","hemi","skyColors","groundColors","gammaInput","WebGLRenderTargetCube","_shadowPass","uniformsList","uniform1f","uniform2f","uniform3f","uniform4f","uniform1iv","uniform3iv","uniform1fv","uniform3fv","_array","uniform2fv","uniform4fv","__webglTextureCube","createTexture","activeTexture","TEXTURE0","bindTexture","TEXTURE_CUBE_MAP","pixelStorei","UNPACK_FLIP_Y_WEBGL","autoScaleCubemaps","Tc","compressedTexImage2D","TEXTURE_CUBE_MAP_POSITIVE_X","texImage2D","generateMipmap","__webglTexture","cameraPosition","viewMatrix","_viewMatrixArray","modelViewMatrix","_modelViewMatrix","normalMatrix","uniformMatrix3fv","_normalMatrix","modelMatrix","rc","POLYGON_OFFSET_FILL","createShader","FRAGMENT_SHADER","VERTEX_SHADER","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","texParameteri","TEXTURE_WRAP_S","TEXTURE_WRAP_T","TEXTURE_MAG_FILTER","TEXTURE_MIN_FILTER","CLAMP_TO_EDGE","Qb","__oldAnisotropy","texParameterf","TEXTURE_MAX_ANISOTROPY_EXT","Ec","bindRenderbuffer","RENDERBUFFER","depthBuffer","stencilBuffer","renderbufferStorage","DEPTH_COMPONENT16","framebufferRenderbuffer","FRAMEBUFFER","DEPTH_ATTACHMENT","DEPTH_STENCIL","DEPTH_STENCIL_ATTACHMENT","RGBA4","NEAREST","LINEAR","REPEAT","MIRRORED_REPEAT","NEAREST_MIPMAP_NEAREST","NEAREST_MIPMAP_LINEAR","LINEAR_MIPMAP_NEAREST","LINEAR_MIPMAP_LINEAR","UNSIGNED_BYTE","UNSIGNED_SHORT_4_4_4_4","UNSIGNED_SHORT_5_5_5_1","UNSIGNED_SHORT_5_6_5","BYTE","SHORT","UNSIGNED_SHORT","INT","UNSIGNED_INT","FLOAT","ALPHA","RGB","RGBA","LUMINANCE","LUMINANCE_ALPHA","FUNC_ADD","FUNC_SUBTRACT","FUNC_REVERSE_SUBTRACT","ZERO","ONE","SRC_COLOR","ONE_MINUS_SRC_COLOR","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","DST_ALPHA","ONE_MINUS_DST_ALPHA","DST_COLOR","ONE_MINUS_DST_COLOR","SRC_ALPHA_SATURATE","yb","COMPRESSED_RGB_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT3_EXT","COMPRESSED_RGBA_S3TC_DXT5_EXT","premultipliedAlpha","antialias","stencil","preserveDrawingBuffer","clearColor","clearAlpha","maxLights","autoUpdateScene","autoUpdateObjects","autoClearStencil","autoClearDepth","autoClearColor","shadowMapEnabled","physicallyBasedShading","gammaOutput","shadowMapCullFrontFaces","shadowMapSoft","shadowMapAutoUpdate","shadowMapCascade","shadowMapDebug","maxMorphNormals","renderPluginsPre","renderPluginsPost","memory","programs","calls","Sc","getExtension","clearDepth","clearStencil","DEPTH_TEST","depthFunc","LEQUAL","frontFace","CCW","cullFace","BACK","CULL_FACE","BLEND","blendFunc","getParameter","MAX_TEXTURE_IMAGE_UNITS","MAX_VERTEX_TEXTURE_IMAGE_UNITS","MAX_TEXTURE_SIZE","MAX_CUBE_MAP_TEXTURE_SIZE","MAX_TEXTURE_MAX_ANISOTROPY_EXT","hc","COMPRESSED_TEXTURE_FORMATS","supportsVertexTextures","setViewport","setScissor","scissor","enableScissorTest","SCISSOR_TEST","getClearColor","getClearAlpha","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","STENCIL_BUFFER_BIT","clearTarget","setRenderTarget","addPostPlugin","addPrePlugin","deallocateObject","__webglInit","_normalMatrixArray","_modelViewMatrixArray","_modelMatrixArray","geometryGroups","deleteBuffer","__webglNormalBuffer","__webglTangentBuffer","__webglUVBuffer","__webglUV2Buffer","__webglSkinIndicesBuffer","__webglSkinWeightsBuffer","__webglFaceBuffer","__webglLineBuffer","numMorphTargets","__webglMorphTargetsBuffers","numMorphNormals","__webglMorphNormalsBuffers","deallocateTexture","deleteTexture","deallocateRenderTarget","deleteFramebuffer","__webglFramebuffer","deleteRenderbuffer","__webglRenderbuffer","usedTimes","deleteProgram","updateShadowMap","shadowMapPlugin","renderBufferImmediate","hasPositions","hasUvs","__webglUvBuffer","hasColors","positionArray","DYNAMIC_DRAW","enableVertexAttribArray","vertexAttribPointer","normalArray","uvArray","colorArray","drawArrays","TRIANGLES","disableVertexAttribArray","drawElements","POINTS","numSupportedMorphTargets","numSupportedMorphNormals","uv2","skinIndex","skinWeight","LINES","__webglLineCount","__webglFaceCount","LINE_STRIP","__webglParticleCount","TRIANGLE_STRIP","__webglVertexCount","initWebGLObjects","__webglObjects","__webglObjectsImmediate","TEXTURE_2D","immediateRenderCallback","__webglSprites","__webglFlares","counter","faces3","faces4","geometryGroupsList","__normalArray","__tangentArray","__uvArray","__uv2Array","__skinIndexArray","__skinWeightArray","__faceArray","__lineArray","__morphTargetsArrays","__morphNormalsArrays","__original","__inittedArrays","morphTargetsNeedUpdate","__webglActive","ImmediateRenderObject","LensFlare","lb","ub","ab","ma","mb","Gc","X","Xb","lc","Yb","Hc","Rb","mc","ka","zb","Ab","Bb","Cb","Db","Eb","tc","Fb","Gb","Hb","uc","Ib","Jb","Kb","vc","Lb","Mb","Nb","wc","sa","Zb","oc","pc","Ma","Ka","La","$b","Sb","Ca","Ha","Tb","Ub","nb","Sa","Ya","Fa","da","ha","ta","Na","xc","yc","ob","xa","Oa","ya","za","Vc","Wc","Xc","Ob","hb","jd","ec","oa","pa","Ta","Yc","Zc","fc","ac","bc","Ic","ba","cd","zc","Ac","Jc","dc","Kc","dd","kd","Lc","Mc","Vb","$c","Bc","Cc","Nc","Aa","Oc","fd","gd","nd","od","Pc","Qc","pd","Rc","hd","Qa","qc","MAX_VERTEX_UNIFORM_VECTORS","useFog","maxBones","maxDirLights","maxPointLights","maxSpotLights","maxHemiLights","maxShadows","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","VALIDATE_STATUS","getError","deleteShader","getUniformLocation","getAttribLocation","setFaceCulling","CW","FRONT","FRONT_AND_BACK","depthMask","blendEquationSeparate","blendFuncSeparate","UNPACK_PREMULTIPLY_ALPHA_WEBGL","createFramebuffer","createRenderbuffer","bindFramebuffer","framebufferTexture2D","COLOR_ATTACHMENT0","activeCubeFace","ShadowMapPlugin","SpritePlugin","LensFlarePlugin","WebGLRenderTarget","ColorUtils","adjustHSV","__hsv","rgbToHsv","GeometryUtils","randomPointInTriangle","randomPointInFace","_area1","_area2","randomPointsInGeometry","normalizeUVs","triangulateQuads","explode","tessellate","parseDDS","loadCount","mipmapCount","getNormalMap","generateDataTexture","SceneUtils","createMultiMaterialObject","detach","attach","fresnel","mRefractionRatio","mFresnelBias","mFresnelPower","mFresnelScale","uRefractionRatio","uOffset","uRepeat","cube","tFlip","FontUtils","weight","divisions","getFace","loadFace","familyName","cssFontWeight","cssFontStyle","drawText","resolution","Path","extractGlyphPoints","paths","glyphs","_cachedOutline","quadraticCurveTo","Utils","bezierCurveTo","b3","generateShapes","curveSegments","toShapes","Triangulate","_typeface_js","Curve","getPointAt","getUtoTmapping","getPoints","getSpacedPoints","getLengths","__arcLengthDivisions","cacheArcLengths","updateArcLengths","getNormalVector","getTangent","getTangentAt","LineCurve","QuadraticBezierCurve","tangentQuadraticBezier","CubicBezierCurve","tangentCubicBezier","SplineCurve","EllipseCurve","xRadius","yRadius","aStartAngle","aEndAngle","aClockwise","ArcCurve","tangentSpline","LineCurve3","QuadraticBezierCurve3","CubicBezierCurve3","SplineCurve3","ClosedSplineCurve3","CurvePath","curves","bends","autoClose","checkConnection","getCurveLengths","cacheLengths","getBoundingBox","NEGATIVE_INFINITY","maxZ","minZ","createPointsGeometry","createGeometry","createSpacedPointsGeometry","addWrapPath","getTransformedPoints","getWrapPoints","getTransformedSpacedPoints","Gyroscope","translationWorld","rotationWorld","scaleWorld","translationObject","rotationObject","scaleObject","actions","fromPoints","PathActions","MOVE_TO","LINE_TO","QUADRATIC_CURVE_TO","BEZIER_CURVE_TO","CSPLINE_THRU","ARC","ELLIPSE","splineThru","absarc","absellipse","ellipse","useSpacedPoints","isClockWise","holes","extrude","ExtrudeGeometry","makeGeometry","ShapeGeometry","getPointsHoles","getSpacedPointsHoles","extractAllPoints","extractPoints","extractAllSpacedPoints","removeHoles","isolatedPts","allpoints","triangulateShape","b2p0","b2p1","b2p2","b3p0","b3p1","b3p2","b3p3","AnimationHandler","addToUpdate","removeFromUpdate","initialized","hierarchy","keys","rot","usedMorphTargets","morphTargetsInfluences","JIT","CATMULLROM","CATMULLROM_FORWARD","Animation","isPlaying","isPaused","interpolationType","animationCache","prevKey","nextKey","originalMatrix","getNextKeyWith","getPrevKeyWith","interpolateCatmullRom","KeyFrameAnimation","JITCompile","sids","startTimeMs","hasTarget","CubeCamera","renderTarget","updateCubeMap","CombinedCamera","cameraO","cameraP","zoom","toPerspective","inPerspectiveMode","inOrthographicMode","toOrthographic","setFov","setZoom","toFrontView","toBackView","toLeftView","toRightView","toTopView","toBottomView","CircleGeometry","py","pz","nz","shapebb","addShapeList","addShape","__v4","__v5","__v6","generateSideWallUV","generateBottomUV","generateTopUV","amount","bevelThickness","bevelSize","bevelSegments","bevelEnabled","steps","extrudePath","extrudeMaterial","UVGenerator","WorldUVGenerator","TubeGeometry","FrenetFrames","binormals","LatheGeometry","TextGeometry","radialSegments","tubularSegments","TorusKnotGeometry","heightScale","grid","segments","radiusSegments","closed","ArrowHelper","PolyhedronGeometry","OctahedronGeometry","TetrahedronGeometry","ParametricGeometry","ConvexGeometry","AxisHelper","cone","setDirection","setColor","CameraHelper","pointMap","__v","__projector","__c","SubdivisionModifier","useOldVertexColors","supportUVs","modify","smooth","orderedKey","computeEdgeFaces","assert","lensFlares","customUpdateCallback","updateLensFlares","wantedRotation","MorphBlendMesh","animationsMap","animationsList","createAnimation","setAnimationWeight","startFrame","endFrame","lastFrame","currentFrame","autoCreateAnimations","setAnimationDirectionForward","setAnimationDirectionBackward","setAnimationFPS","setAnimationDuration","setAnimationTime","getAnimationTime","getAnimationDuration","stopAnimation","ShaderFlares","lensFlare","lensFlareVertexTexture","renderType","occlusionMap","TEXTURE1","copyTexImage2D","isVirtual","pointsWorld","pointsFrustum","originalCamera","cameraHelper","customDepthMaterial","ShaderSprite","DepthPassPlugin","IgeThree","_loader","_geometryLoader","IgeEngine","_frontBufferSetup","IgeEngine_frontBufferSetup","IgeEntity_transformContext","IgeEntity_renderEntity","IgeEntity_material","model","IgeEntity_model","mesh","IgeEntity_mesh","_$mount","IgeEntity_mount","_$unMount","IgeEntity_unMount","_$init","IgeScene2d_init","IgeCamera_init","IgeCamera_tick","IgeViewport_tick","_threeObj","innerWidth","innerHeight","_threeRenderer","light","dontScale","three","_material","basePath","_renderModes","_requireScriptTotal","_requireScriptLoading","_loadingPreText","_enableUpdates","_enableRenders","_debugEvents","_renderContext","_renderMode","_fpsRate","_texturesLoading","_texturesTotal","_dependencyQueue","_frames","_clientNetDiff","_viewportDepth","_categoryRegister","_groupRegister","_postTick","_timeSpentInUpdate","_timeSpentLastUpdate","_globalScale","_graphInstances","_spawnQueue","dependencyTimeout","texturesLoaded","_secondTimer","_secondTick","$$$","_registered","_categoryRegistered","_groupRegistered","attrArr","_syncArr","_syncIndex","_processSync","syncEntry","_requireScriptLoaded","css","rel","media","getClass","enableUpdates","enableRenders","debugEnabled","debugTiming","debugEventOn","debugEventOff","triggerDebugEventFrame","hideAllExcept","showAll","fpsRate","defineClass","classDefined","dependencyCheck","viewportDepth","_dependencyCheckTimeout","textElem","offsetWidth","currentWidth","textureObj","textureFromUrl","_loggedATL","globalSmoothing","canvasReady","engineStep","curTime","_dependencyCheckStart","pixelRatioScaling","_pixelRatioScaling","renderContext","contextId","createFrontBuffer","_createdFrontBuffer","_devicePixelRatio","devicePixelRatio","_backingStoreRatio","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","backingStorePixelRatio","_deviceFinalDrawRatio","clearCanvas","removeCanvas","openUrl","cocoonJs","overlay","border","layerCall","js","mouseOverList","entArr","first","newWidth","newHeight","sgTreeElem","getBoundingClientRect","offsetTop","offsetLeft","toggleFullScreen","requestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","watchStart","evalStringOrObject","_watch","watchStop","sampleCount","callbackEvaluator","___igeTraceCurrentVal","___igeTraceMax","___igeTraceCount","traceSetOff","findBaseClass","__proto__","incrementTime","lastVal","_pause","useManualTicks","_useManualTicks","manualTick","_manualFrameAlternator","useManualRender","_useManualRender","manualRender","_manualRender","timeStamp","et","updateStart","renderStart","ptIndex","unbornQueue","unbornCount","unbornIndex","unbornEntity","ptArr","ptCount","_timeScaleLastTimestamp","lastTick","renderSceneGraph","us","ud","dpf","dps","analyseTiming","saveSceneGraph","sceneGraph","currentDepth","lastDepth","di","depthSpace","noRef","tempItem","tempItem2","tempCam"],"mappings":"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","file":"engine.min.js","sourcesContent":["// Domain Public by Eric Wendelin http://eriwen.com/ (2008)\r\n//                  Luke Smith http://lucassmith.name/ (2008)\r\n//                  Loic Dachary <loic@dachary.org> (2008)\r\n//                  Johan Euphrosine <proppy@aminche.com> (2008)\r\n//                  Oyvind Sean Kinsey http://kinsey.no/blog (2010)\r\n//                  Victor Homyakov <victor-homyakov@users.sourceforge.net> (2010)\r\n\r\n/**\r\n * Main function giving a function stack trace with a forced or passed in Error\r\n *\r\n * @cfg {Error} e The error to create a stacktrace from (optional)\r\n * @cfg {Boolean} guess If we should try to resolve the names of anonymous functions\r\n * @return {Array} of Strings with functions, lines, files, and arguments where possible\r\n */\r\nfunction printStackTrace(options) {\r\n    options = options || {guess: true};\r\n    var ex = options.e || null, guess = !!options.guess;\r\n    var p = new printStackTrace.implementation(), result = p.run(ex);\r\n    var res = (guess) ? p.guessAnonymousFunctions(result) : result;\r\n\tfor (var k = 0; k < 4; k++) {\r\n\t\tres.shift();\r\n\t}\r\n\treturn res;\r\n}\r\n\r\nprintStackTrace.implementation = function() {\r\n};\r\n\r\nprintStackTrace.implementation.prototype = {\r\n    run: function(ex) {\r\n        ex = ex || this.createException();\r\n        // Do not use the stored mode: different exceptions in Chrome\r\n        // may or may not have arguments or stack\r\n        var mode = this.mode(ex);\r\n        // Use either the stored mode, or resolve it\r\n        //var mode = this._mode || this.mode(ex);\r\n        if (mode === 'other') {\r\n            return this.other(arguments.callee);\r\n        } else {\r\n            return this[mode](ex);\r\n        }\r\n    },\r\n\r\n    createException: function() {\r\n        try {\r\n            this.undef();\r\n            return null;\r\n        } catch (e) {\r\n            return e;\r\n        }\r\n    },\r\n\r\n    /**\r\n     * @return {String} mode of operation for the environment in question.\r\n     */\r\n    mode: function(e) {\r\n        if (e['arguments'] && e.stack) {\r\n            return (this._mode = 'chrome');\r\n        } else if (e.message && typeof window !== 'undefined' && window.opera) {\r\n            return (this._mode = e.stacktrace ? 'opera10' : 'opera');\r\n        } else if (e.stack) {\r\n            return (this._mode = 'firefox');\r\n        }\r\n        return (this._mode = 'other');\r\n    },\r\n\r\n    /**\r\n     * Given a context, function name, and callback function, overwrite it so that it calls\r\n     * printStackTrace() first with a callback and then runs the rest of the body.\r\n     *\r\n     * @param {Object} context of execution (e.g. window)\r\n     * @param {String} functionName to instrument\r\n     * @param {Function} function to call with a stack trace on invocation\r\n     */\r\n    instrumentFunction: function(context, functionName, callback) {\r\n        context = context || window;\r\n        var original = context[functionName];\r\n        context[functionName] = function instrumented() {\r\n            callback.call(this, printStackTrace().slice(4));\r\n            return context[functionName]._instrumented.apply(this, arguments);\r\n        };\r\n        context[functionName]._instrumented = original;\r\n    },\r\n\r\n    /**\r\n     * Given a context and function name of a function that has been\r\n     * instrumented, revert the function to it's original (non-instrumented)\r\n     * state.\r\n     *\r\n     * @param {Object} context of execution (e.g. window)\r\n     * @param {String} functionName to de-instrument\r\n     */\r\n    deinstrumentFunction: function(context, functionName) {\r\n        if (context[functionName].constructor === Function &&\r\n                context[functionName]._instrumented &&\r\n                context[functionName]._instrumented.constructor === Function) {\r\n            context[functionName] = context[functionName]._instrumented;\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Given an Error object, return a formatted Array based on Chrome's stack string.\r\n     *\r\n     * @param e - Error object to inspect\r\n     * @return Array<String> of function calls, files and line numbers\r\n     */\r\n    chrome: function(e) {\r\n        var stack = (e.stack + '\\n').replace(/^\\S[^\\(]+?[\\n$]/gm, '').\r\n          replace(/^\\s+at\\s+/gm, '').\r\n          replace(/^([^\\(]+?)([\\n$])/gm, '{anonymous}()@$1$2').\r\n          replace(/^Object.<anonymous>\\s*\\(([^\\)]+)\\)/gm, '{anonymous}()@$1').split('\\n');\r\n        stack.pop();\r\n        return stack;\r\n    },\r\n\r\n    /**\r\n     * Given an Error object, return a formatted Array based on Firefox's stack string.\r\n     *\r\n     * @param e - Error object to inspect\r\n     * @return Array<String> of function calls, files and line numbers\r\n     */\r\n    firefox: function(e) {\r\n        return e.stack.replace(/(?:\\n@:0)?\\s+$/m, '').replace(/^\\(/gm, '{anonymous}(').split('\\n');\r\n    },\r\n\r\n    /**\r\n     * Given an Error object, return a formatted Array based on Opera 10's stacktrace string.\r\n     *\r\n     * @param e - Error object to inspect\r\n     * @return Array<String> of function calls, files and line numbers\r\n     */\r\n    opera10: function(e) {\r\n        var stack = e.stacktrace;\r\n        var lines = stack.split('\\n'), ANON = '{anonymous}', lineRE = /.*line (\\d+), column (\\d+) in ((<anonymous function\\:?\\s*(\\S+))|([^\\(]+)\\([^\\)]*\\))(?: in )?(.*)\\s*$/i, i, j, len;\r\n        for (i = 2, j = 0, len = lines.length; i < len - 2; i++) {\r\n            if (lineRE.test(lines[i])) {\r\n                var location = RegExp.$6 + ':' + RegExp.$1 + ':' + RegExp.$2;\r\n                var fnName = RegExp.$3;\r\n                fnName = fnName.replace(/<anonymous function\\:?\\s?(\\S+)?>/g, ANON);\r\n                lines[j++] = fnName + '@' + location;\r\n            }\r\n        }\r\n\r\n        lines.splice(j, lines.length - j);\r\n        return lines;\r\n    },\r\n\r\n    // Opera 7.x-9.x only!\r\n    opera: function(e) {\r\n        var lines = e.message.split('\\n'), ANON = '{anonymous}', lineRE = /Line\\s+(\\d+).*script\\s+(http\\S+)(?:.*in\\s+function\\s+(\\S+))?/i, i, j, len;\r\n\r\n        for (i = 4, j = 0, len = lines.length; i < len; i += 2) {\r\n            //TODO: RegExp.exec() would probably be cleaner here\r\n            if (lineRE.test(lines[i])) {\r\n                lines[j++] = (RegExp.$3 ? RegExp.$3 + '()@' + RegExp.$2 + RegExp.$1 : ANON + '()@' + RegExp.$2 + ':' + RegExp.$1) + ' -- ' + lines[i + 1].replace(/^\\s+/, '');\r\n            }\r\n        }\r\n\r\n        lines.splice(j, lines.length - j);\r\n        return lines;\r\n    },\r\n\r\n    // Safari, IE, and others\r\n    other: function(curr) {\r\n        var ANON = '{anonymous}', fnRE = /function\\s*([\\w\\-$]+)?\\s*\\(/i, stack = [], fn, args, maxStackSize = 10;\r\n        while (curr && stack.length < maxStackSize) {\r\n            fn = fnRE.test(curr.toString()) ? RegExp.$1 || ANON : ANON;\r\n            args = Array.prototype.slice.call(curr['arguments'] || []);\r\n            stack[stack.length] = fn + '(' + this.stringifyArguments(args) + ')';\r\n            curr = curr.caller;\r\n        }\r\n        return stack;\r\n    },\r\n\r\n    /**\r\n     * Given arguments array as a String, subsituting type names for non-string types.\r\n     *\r\n     * @param {Arguments} object\r\n     * @return {Array} of Strings with stringified arguments\r\n     */\r\n    stringifyArguments: function(args) {\r\n        var slice = Array.prototype.slice;\r\n        for (var i = 0; i < args.length; ++i) {\r\n            var arg = args[i];\r\n            if (arg === undefined) {\r\n                args[i] = 'undefined';\r\n            } else if (arg === null) {\r\n                args[i] = 'null';\r\n            } else if (arg.constructor) {\r\n                if (arg.constructor === Array) {\r\n                    if (arg.length < 3) {\r\n                        args[i] = '[' + this.stringifyArguments(arg) + ']';\r\n                    } else {\r\n                        args[i] = '[' + this.stringifyArguments(slice.call(arg, 0, 1)) + '...' + this.stringifyArguments(slice.call(arg, -1)) + ']';\r\n                    }\r\n                } else if (arg.constructor === Object) {\r\n                    args[i] = '#object';\r\n                } else if (arg.constructor === Function) {\r\n                    args[i] = '#function';\r\n                } else if (arg.constructor === String) {\r\n                    args[i] = '\"' + arg + '\"';\r\n                }\r\n            }\r\n        }\r\n        return args.join(',');\r\n    },\r\n\r\n    sourceCache: {},\r\n\r\n    /**\r\n     * @return {*} the text from a given URL.\r\n     */\r\n    ajax: function(url) {\r\n        var req = this.createXMLHTTPObject();\r\n        if (!req) {\r\n            return;\r\n        }\r\n        req.open('GET', url, false);\r\n        //req.setRequestHeader('User-Agent', 'XMLHTTP/1.0');\r\n        req.send('');\r\n        return req.responseText;\r\n    },\r\n\r\n    /**\r\n     * Try XHR methods in order and store XHR factory.\r\n     *\r\n     * @return <Function> XHR function or equivalent\r\n     */\r\n    createXMLHTTPObject: function() {\r\n        var xmlhttp, XMLHttpFactories = [\r\n            function() {\r\n                return new XMLHttpRequest();\r\n            }, function() {\r\n                return new ActiveXObject('Msxml2.XMLHTTP');\r\n            }, function() {\r\n                return new ActiveXObject('Msxml3.XMLHTTP');\r\n            }, function() {\r\n                return new ActiveXObject('Microsoft.XMLHTTP');\r\n            }\r\n        ];\r\n        for (var i = 0; i < XMLHttpFactories.length; i++) {\r\n            try {\r\n                xmlhttp = XMLHttpFactories[i]();\r\n                // Use memoization to cache the factory\r\n                this.createXMLHTTPObject = XMLHttpFactories[i];\r\n                return xmlhttp;\r\n            } catch (e) {\r\n            }\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Given a URL, check if it is in the same domain (so we can get the source\r\n     * via Ajax).\r\n     *\r\n     * @param url <String> source url\r\n     * @return False if we need a cross-domain request\r\n     */\r\n    isSameDomain: function(url) {\r\n        return url.indexOf(location.hostname) !== -1;\r\n    },\r\n\r\n    /**\r\n     * Get source code from given URL if in the same domain.\r\n     *\r\n     * @param url <String> JS source URL\r\n     * @return <Array> Array of source code lines\r\n     */\r\n    getSource: function(url) {\r\n        if (!(url in this.sourceCache)) {\r\n            this.sourceCache[url] = this.ajax(url).split('\\n');\r\n        }\r\n        return this.sourceCache[url];\r\n    },\r\n\r\n    guessAnonymousFunctions: function(stack) {\r\n        for (var i = 0; i < stack.length; ++i) {\r\n            var reStack = /\\{anonymous\\}\\(.*\\)@(\\w+:\\/\\/([\\-\\w\\.]+)+(:\\d+)?[^:]+):(\\d+):?(\\d+)?/;\r\n            var frame = stack[i], m = reStack.exec(frame);\r\n            if (m) {\r\n                var file = m[1], lineno = m[4], charno = m[7] || 0; //m[7] is character position in Chrome\r\n                if (file && this.isSameDomain(file) && lineno) {\r\n                    var functionName = this.guessAnonymousFunction(file, lineno, charno);\r\n                    stack[i] = frame.replace('{anonymous}', functionName);\r\n                }\r\n            }\r\n        }\r\n        return stack;\r\n    },\r\n\r\n    guessAnonymousFunction: function(url, lineNo, charNo) {\r\n        var ret;\r\n        try {\r\n            ret = this.findFunctionName(this.getSource(url), lineNo);\r\n        } catch (e) {\r\n            ret = 'getSource failed with url: ' + url + ', exception: ' + e.toString();\r\n        }\r\n        return ret;\r\n    },\r\n\r\n    findFunctionName: function(source, lineNo) {\r\n        // FIXME findFunctionName fails for compressed source\r\n        // (more than one function on the same line)\r\n        // TODO use captured args\r\n        // function {name}({args}) m[1]=name m[2]=args\r\n        var reFunctionDeclaration = /function\\s+([^(]*?)\\s*\\(([^)]*)\\)/;\r\n        // {name} = function ({args}) TODO args capture\r\n        // /['\"]?([0-9A-Za-z_]+)['\"]?\\s*[:=]\\s*function(?:[^(]*)/\r\n        var reFunctionExpression = /['\"]?([0-9A-Za-z_]+)['\"]?\\s*[:=]\\s*function\\b/;\r\n        // {name} = eval()\r\n        var reFunctionEvaluation = /['\"]?([0-9A-Za-z_]+)['\"]?\\s*[:=]\\s*(?:eval|new Function)\\b/;\r\n        // Walk backwards in the source lines until we find\r\n        // the line which matches one of the patterns above\r\n        var code = \"\", line, maxLines = 10, m;\r\n        for (var i = 0; i < maxLines; ++i) {\r\n            // FIXME lineNo is 1-based, source[] is 0-based\r\n            line = source[lineNo - i];\r\n            if (line) {\r\n                code = line + code;\r\n\r\n                m = reFunctionExpression.exec(code);\r\n                if (m && m[1]) {\r\n                    return m[1];\r\n                }\r\n                m = reFunctionDeclaration.exec(code);\r\n                if (m && m[1]) {\r\n                    //return m[1] + \"(\" + (m[2] || \"\") + \")\";\r\n                    return m[1];\r\n                }\r\n                m = reFunctionEvaluation.exec(code);\r\n                if (m && m[1]) {\r\n                    return m[1];\r\n                }\r\n            }\r\n        }\r\n        return '(?)';\r\n    }\r\n};","/************************/\r\n/* Isogenic Game Engine */\r\n/************************/\r\nige = null;\r\n\r\n// When setting a new version please use this format:\r\n// v{MAJOR}.{MINOR}.{SUB}@{YYYY-MM-DD}.{REVISION}\r\n//\r\n// For example, to tag version 1.1.2 on 25th April 2013\r\n// as the third revision of the day:\r\n// v1.1.2@2013-04-25.003\r\nigeVersion = 'v1.6.0@2015-04-29.001';\r\n\r\n// Define the global storage object for classes\r\nigeClassStore = {};\r\n\r\nigeConfig = {\r\n\tdebug: {\r\n\t\t_enabled: true,\r\n\t\t_node: typeof(module) !== 'undefined' && typeof(module.exports) !== 'undefined',\r\n\t\t_level: ['log', 'warning', 'error'],\r\n\t\t_stacks: true,\r\n\t\t_throwErrors: true,\r\n\t\t_timing: true,\r\n\t\tenabled: function (val) {\r\n\t\t\tif (val !== undefined) {\r\n\t\t\t\tthis._enabled = val;\r\n\t\r\n\t\t\t\tif (!val) {\r\n\t\t\t\t\tthis._timing = false;\r\n\t\r\n\t\t\t\t\t// Check if the engine exists\r\n\t\t\t\t\tif (ige) {\r\n\t\t\t\t\t\t// Turn off stats display in the engine\r\n\t\t\t\t\t\tige.showStats(0);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn this;\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this._enabled;\r\n\t\t}\r\n\t}\r\n};\r\n\r\nif (igeConfig.debug._node) {\r\n\tigeConfig.debug._util = require('util');\r\n}\r\n\r\n/**\r\n * Make property non-enumerable.\r\n */\r\nObject.defineProperty(Object.prototype, 'tween', {\r\n\tenumerable:false,\r\n\twritable:true,\r\n\tconfigurable:true\r\n});\r\n\r\n/**\r\n * Augments all objects with the tween() method. Creates a new IgeTween\r\n * with the passed parameters that will act upon the object's properties.\r\n * The returned tween will not start tweening until a call to start() is\r\n * made.\r\n * @param {Object} props\r\n * @param {Number} durationMs\r\n * @param {Object=} options\r\n * @return {IgeTween}\r\n */\r\nObject.prototype.tween = function (props, durationMs, options) {\r\n\tvar newTween = new IgeTween()\r\n\t\t.targetObj(this)\r\n\t\t.properties(props)\r\n\t\t.duration(durationMs);\r\n\r\n\tif (options) {\r\n\t\tif (options.beforeTween) { newTween.beforeTween(options.beforeTween); }\r\n\t\tif (options.afterTween) { newTween.afterTween(options.afterTween); }\r\n\t\tif (options.easing) { newTween.easing(options.easing); }\r\n\t\tif (options.startTime) { newTween.startTime(options.startTime); }\r\n\t}\r\n\r\n\treturn newTween;\r\n};\r\n\r\n/**\r\n * Make property non-enumerable.\r\n */\r\nObject.defineProperty(Object.prototype, 'theSameAs', {\r\n\tenumerable:false,\r\n\twritable:true,\r\n\tconfigurable:true\r\n});\r\n\r\n/**\r\n * Augments all objects with the theSameAs() method. Checks if the\r\n * property values of this object are equal to the property values\r\n * of the passed object. If they are the same then this method will\r\n * return true. Objects must not contain circular references!\r\n * @param {Object} obj The object to compare this one to.\r\n * @return {Boolean}\r\n */\r\nObject.prototype.theSameAs = function (obj) {\r\n\treturn JSON.stringify(this) === JSON.stringify(obj);\r\n};\r\n\r\n/**\r\n * Make property non-enumerable.\r\n */\r\nObject.defineProperty(Array.prototype, 'clone', {\r\n\tenumerable:false,\r\n\twritable:true,\r\n\tconfigurable:true\r\n});\r\n\r\n/**\r\n * Clones the array and returns a new non-referenced\r\n * array.\r\n * @return {*}\r\n */\r\nArray.prototype.clone = function () {\r\n\tvar i, newArray = [];\r\n\tfor (i in this) {\r\n\t\tif (this.hasOwnProperty(i)) {\r\n\t\t\tif (this[i] instanceof Array) {\r\n\t\t\t\tnewArray[i] = this[i].clone();\r\n\t\t\t} else {\r\n\t\t\t\tnewArray[i] = this[i];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn newArray;\r\n};\r\n\r\n/**\r\n * Make property non-enumerable.\r\n */\r\nObject.defineProperty(Array.prototype, 'pull', {\r\n\tenumerable:false,\r\n\twritable:true,\r\n\tconfigurable:true\r\n});\r\n\r\n/**\r\n * Removes the passed item from an array, the opposite of push().\r\n * @param item\r\n * @return {*}\r\n */\r\nArray.prototype.pull = function (item) {\r\n\tvar index = this.indexOf(item);\r\n\tif (index > -1) {\r\n\t\tthis.splice(index, 1);\r\n\t\treturn index;\r\n\t} else {\r\n\t\treturn -1;\r\n\t}\r\n};\r\n\r\n/**\r\n * Make property non-enumerable.\r\n */\r\nObject.defineProperty(Array.prototype, 'pushUnique', {\r\n\tenumerable:false,\r\n\twritable:true,\r\n\tconfigurable:true\r\n});\r\n\r\n/**\r\n * Adds an item to an array, only if it does not already exist in the array.\r\n * @param item\r\n * @return {Boolean} True if the item was added, false if it already exists.\r\n */\r\nArray.prototype.pushUnique = function (item) {\r\n\tvar index = this.indexOf(item);\r\n\tif (index === -1) {\r\n\t\tthis.push(item);\r\n\t\treturn true;\r\n\t}\r\n\t\r\n\treturn false;\r\n};\r\n\r\n/**\r\n * Make property non-enumerable.\r\n */\r\nObject.defineProperty(Array.prototype, 'each', {\r\n\tenumerable:false,\r\n\twritable:true,\r\n\tconfigurable:true\r\n});\r\n\r\n/**\r\n * Iterates through an array's items and calls the callback method\r\n * passing each item one by one.\r\n * @param {Function} callback\r\n */\r\nArray.prototype.each = function (callback) {\r\n\tvar len = this.length,\r\n\t\ti;\r\n\r\n\tfor (i = 0; i < len; i++) {\r\n\t\tcallback(this[i]);\r\n\t}\r\n};\r\n\r\n/**\r\n * Make property non-enumerable.\r\n */\r\nObject.defineProperty(Array.prototype, 'eachReverse', {\r\n\tenumerable:false,\r\n\twritable:true,\r\n\tconfigurable:true\r\n});\r\n\r\n/**\r\n * Iterates through an array's items and calls the callback method\r\n * passing each item one by one in reverse order.\r\n * @param {Function} callback\r\n */\r\nArray.prototype.eachReverse = function (callback) {\r\n\tvar arrCount = this.length,\r\n\t\ti;\r\n\r\n\tfor (i = arrCount - 1; i >= 0; i--) {\r\n\t\tcallback(this[i]);\r\n\t}\r\n};\r\n\r\n/**\r\n * Make property non-enumerable.\r\n */\r\nObject.defineProperty(Array.prototype, 'destroyAll', {\r\n\tenumerable:false,\r\n\twritable:true,\r\n\tconfigurable:true\r\n});\r\n\r\n/**\r\n * Iterates through an array's items and calls each item's\r\n * destroy() method if it exists. Useful for destroying an\r\n * array of IgeEntity instances.\r\n */\r\nArray.prototype.destroyAll = function () {\r\n\tvar arrCount = this.length,\r\n\t\ti;\r\n\r\n\tfor (i = arrCount - 1; i >= 0; i--) {\r\n\t\tif (typeof(this[i].destroy) === 'function') {\r\n\t\t\tthis[i].destroy();\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * Make property non-enumerable.\r\n */\r\nObject.defineProperty(Array.prototype, 'eachIsolated', {\r\n\tenumerable:false,\r\n\twritable:true,\r\n\tconfigurable:true\r\n});\r\n\r\n/**\r\n * Iterates through an array's items and calls the callback method\r\n * passing each item one by one. Altering the array's structure\r\n * during the callback method will not affect the iteration of the\r\n * items.\r\n *\r\n * @param {Function} callback\r\n */\r\nArray.prototype.eachIsolated = function (callback) {\r\n\tvar arr = [],\r\n\t\tarrCount = arr.length,\r\n\t\ti;\r\n\r\n\t// Create a copy of the array\r\n\tfor (i = 0; i < arrCount; i++) {\r\n\t\tarr[i] = this[i];\r\n\t}\r\n\r\n\t// Now iterate the array, passing the copied\r\n\t// array value at the index(i). Any changes to\r\n\t// \"this\" will not affect the index(i) values.\r\n\tfor (i = 0; i < arrCount; i++) {\r\n\t\tcallback(arr[i]);\r\n\t}\r\n};\r\n\r\n/**\r\n * Make property non-enumerable.\r\n */\r\nObject.defineProperty(Math, 'PI180', {\r\n\tenumerable:false,\r\n\twritable:true,\r\n\tconfigurable:true\r\n});\r\n\r\n/**\r\n * Stores a pre-calculated PI / 180 value.\r\n * @type {Number}\r\n */\r\nMath.PI180 = Math.PI / 180;\r\n\r\n/**\r\n * Make property non-enumerable.\r\n */\r\nObject.defineProperty(Math, 'PI180R', {\r\n\tenumerable:false,\r\n\twritable:true,\r\n\tconfigurable:true\r\n});\r\n\r\n/**\r\n * Stores a pre-calculated 180 / PI value.\r\n * @type {Number}\r\n */\r\nMath.PI180R = 180 / Math.PI;\r\n\r\n/**\r\n * Make property non-enumerable.\r\n */\r\nObject.defineProperty(Math, 'toIso', {\r\n\tenumerable:false,\r\n\twritable:true,\r\n\tconfigurable:true\r\n});\r\n\r\nMath.toIso = function (x, y, z) {\r\n\tvar sx = x - y,\r\n\t\tsy = (-z) * 1.2247 + (x + y) * 0.5;\r\n\r\n\treturn {x: sx, y: sy};\r\n};\r\n\r\n/**\r\n * Make property non-enumerable.\r\n */\r\nObject.defineProperty(Math, 'radians', {\r\n\tenumerable:false,\r\n\twritable:true,\r\n\tconfigurable:true\r\n});\r\n\r\n/**\r\n * Converts degrees to radians.\r\n * @param {Number} degrees\r\n * @return {Number} radians\r\n */\r\nMath.radians = function (degrees) {\r\n\treturn degrees * Math.PI180;\r\n};\r\n\r\n/**\r\n * Make property non-enumerable.\r\n */\r\nObject.defineProperty(Math, 'degrees', {\r\n\tenumerable:false,\r\n\twritable:true,\r\n\tconfigurable:true\r\n});\r\n\r\n/**\r\n * Converts radians to degrees.\r\n * @param {Number} radians\r\n * @return {Number} degrees\r\n */\r\nMath.degrees = function (radians) {\r\n\treturn radians * Math.PI180R;\r\n};\r\n\r\n/**\r\n * Make property non-enumerable.\r\n */\r\nObject.defineProperty(Math, 'distance', {\r\n\tenumerable:false,\r\n\twritable:true,\r\n\tconfigurable:true\r\n});\r\n\r\n/**\r\n * Calculates the distance from the first point to the second point.\r\n * @param x1\r\n * @param y1\r\n * @param x2\r\n * @param y2\r\n * @return {Number}\r\n */\r\nMath.distance = function (x1, y1, x2, y2) {\r\n\treturn Math.sqrt(((x1 - x2) * (x1 - x2)) + ((y1 - y2) * (y1 - y2)));\r\n};\r\n\r\nif (typeof(CanvasRenderingContext2D) !== 'undefined') {\r\n\t// Extend the canvas context to add some helper methods\r\n\t/**\r\n\t * Make property non-enumerable.\r\n\t */\r\n\tObject.defineProperty(CanvasRenderingContext2D.prototype, 'circle', {\r\n\t\tenumerable:false,\r\n\t\twritable:true,\r\n\t\tconfigurable:true\r\n\t});\r\n\r\n\tObject.defineProperty(CanvasRenderingContext2D.prototype, 'strokeCircle', {\r\n\t\tenumerable:false,\r\n\t\twritable:true,\r\n\t\tconfigurable:true\r\n\t});\r\n\r\n\tObject.defineProperty(CanvasRenderingContext2D.prototype, 'fillCircle', {\r\n\t\tenumerable:false,\r\n\t\twritable:true,\r\n\t\tconfigurable:true\r\n\t});\r\n\r\n\tCanvasRenderingContext2D.prototype.circle = function (x, y, radius) {\r\n\t\tthis.arc(x, y, radius, 0, 2 * Math.PI, false);\r\n\t};\r\n\r\n\tCanvasRenderingContext2D.prototype.strokeCircle = function (x, y, radius) {\r\n\t\tthis.save();\r\n\t\tthis.beginPath();\r\n\t\tthis.arc(x, y, radius, 0, 2 * Math.PI, false);\r\n\t\tthis.stroke();\r\n\t\tthis.restore();\r\n\t};\r\n\r\n\tCanvasRenderingContext2D.prototype.fillCircle = function (x, y, radius) {\r\n\t\tthis.save();\r\n\t\tthis.beginPath();\r\n\t\tthis.arc(x, y, radius, 0, 2 * Math.PI, false);\r\n\t\tthis.fill();\r\n\t\tthis.restore();\r\n\t};\r\n}\r\n\r\nif (typeof(ImageData) !== 'undefined') {\r\n\t/**\r\n\t * Make property non-enumerable.\r\n\t */\r\n\tObject.defineProperty(ImageData.prototype, 'pixelAt', {\r\n\t\tenumerable:false,\r\n\t\twritable:true,\r\n\t\tconfigurable:true\r\n\t});\r\n\r\n\t/**\r\n\t * Augments the canvas context getImageData() object \"ImageData\" with the\r\n\t * pixelAt() method. Gets the pixel color data for the given pixel at the\r\n\t * x, y co-ordinates specified.\r\n\t * @param {Number} x The x co-ordinate of the pixel.\r\n\t * @param {Number} y The y co-ordinate of the pixel.\r\n\t * @return {Object} An object containing the pixel color data in properties\r\n\t * {r, g, b, a}.\r\n\t */\r\n\tImageData.prototype.pixelAt = function (x, y) {\r\n\t\tvar data = this.data,\r\n\t\t\tpixelStart = (y * this.width * 4) + (x * 4);\r\n\r\n\t\treturn {\r\n\t\t\tr: data[pixelStart],\r\n\t\t\tg: data[pixelStart + 1],\r\n\t\t\tb: data[pixelStart + 2],\r\n\t\t\ta: data[pixelStart + 3]\r\n\t\t};\r\n\t};\r\n\r\n\t/**\r\n\t * Make property non-enumerable.\r\n\t */\r\n\tObject.defineProperty(ImageData.prototype, 'isTransparent', {\r\n\t\tenumerable:false,\r\n\t\twritable:true,\r\n\t\tconfigurable:true\r\n\t});\r\n\r\n\t/**\r\n\t * Augments the canvas context getImageData() object \"ImageData\" with the\r\n\t * isTransparent() method. Determines if the pixel at the passed x, y is\r\n\t * fully transparent or not.\r\n\t * @param {Number} x The x co-ordinate of the pixel.\r\n\t * @param {Number} y The y co-ordinate of the pixel.\r\n\t * @return {Boolean} True if fully transparent, false if not.\r\n\t */\r\n\tImageData.prototype.isTransparent = function (x, y) {\r\n\t\tvar data = this.data,\r\n\t\t\tpixelStart = (y * this.width * 4) + (x * 4);\r\n\r\n\t\treturn data[pixelStart + 3] === 0;\r\n\t};\r\n\r\n\t/**\r\n\t * Make property non-enumerable.\r\n\t */\r\n\tObject.defineProperty(ImageData.prototype, 'makeTransparent', {\r\n\t\tenumerable:false,\r\n\t\twritable:true,\r\n\t\tconfigurable:true\r\n\t});\r\n\r\n\t/**\r\n\t * Augments the canvas context getImageData() object \"ImageData\" with the\r\n\t * makeTransparent() method. Makes the pixel at the passed x, y fully\r\n\t * transparent.\r\n\t * @param {Number} x The x co-ordinate of the pixel.\r\n\t * @param {Number} y The y co-ordinate of the pixel.\r\n\t */\r\n\tImageData.prototype.makeTransparent = function (x, y) {\r\n\t\tvar data = this.data,\r\n\t\t\tpixelStart = (y * this.width * 4) + (x * 4);\r\n\r\n\t\tdata[pixelStart + 3] = 0;\r\n\t};\r\n}\r\n\r\n/**\r\n * Turn off the right-click default behaviour in the browser for the passed element.\r\n * @param obj\r\n */\r\nvar disableContextMenu = function (obj) {\r\n\tif (obj !== null) {\r\n\t\t//this.log('Disabling context menus for ' + obj, 'info');\r\n\t\tobj.oncontextmenu = function () { return false; };\r\n\t}\r\n};\r\n\r\n/**\r\n * Adds the indexOf method to all array objects if it does not already exist which\r\n * would you believe can still happen even in 2012!\r\n */\r\nif(!Array.prototype.indexOf){\r\n\t/**\r\n\t * Make property non-enumerable.\r\n\t */\r\n\tObject.defineProperty(Array.prototype, 'indexOf', {\r\n\t\tenumerable:false,\r\n\t\twritable:true,\r\n\t\tconfigurable:true\r\n\t});\r\n\r\n\t/**\r\n\t * Get the index of the passed item.\r\n\t * @param {*} obj The item to find the index for.\r\n\t * @return {Number} The index of the passed item or -1 if not found.\r\n\t */\r\n\tArray.prototype.indexOf = function(obj) {\r\n\t\tvar i, l = this.length;\r\n\t\tfor (i = 0; i < l; i++) {\r\n\t\t\tif(this[i] === obj){\r\n\t\t\t\treturn i;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn -1;\r\n\t};\r\n}\r\n\r\nif (typeof(window) !== 'undefined') {\r\n\t/**\r\n\t * A cross-browser/platform requestAnimationFrame method.\r\n\t */\r\n\t/*window.requestAnimFrame = (function(){\r\n\t\treturn function(callback, element){\r\n\t\t\tsetTimeout(function () { callback(new Date().getTime()); }, 1000 / 60);\r\n\t\t};\r\n\t}());*/\r\n\r\n\trequestAnimFrame = (function(){\r\n\t\treturn  window.requestAnimationFrame       ||\r\n\t\t\t\twindow.webkitRequestAnimationFrame ||\r\n\t\t\t\twindow.mozRequestAnimationFrame    ||\r\n\t\t\t\twindow.oRequestAnimationFrame      ||\r\n\t\t\t\twindow.msRequestAnimationFrame     ||\r\n\t\tfunction(callback, element){\r\n\t\t\tsetTimeout(function () { callback(new Date().getTime()); }, 1000 / 60);\r\n\t\t};\r\n\t}());\r\n} else {\r\n\t/**\r\n\t * A cross-browser/platform requestAnimationFrame method.\r\n\t */\r\n\trequestAnimFrame = (function(){\r\n\t\treturn function(callback, element){\r\n\t\t\tsetTimeout(function () { callback(new Date().getTime()); }, 1000 / 60);\r\n\t\t};\r\n\t}());\r\n}\r\n\r\n// Check console method existence\r\nif (typeof(console) === 'object') {\r\n\tif (typeof(console.log) === 'function') {\r\n\t\tif (typeof(console.info) === 'undefined') {\r\n\t\t\t// We have console.log but not console.info so add it as a replica of console.log\r\n\t\t\tconsole.info = console.log;\r\n\t\t}\r\n\r\n\t\tif (typeof(console.warn) === 'undefined') {\r\n\t\t\t// We have console.log but not console.warn so add it as a replica of console.log\r\n\t\t\tconsole.warn = console.log;\r\n\t\t}\r\n\t}\r\n} else {\r\n\t// Create dummy console\r\n\tconsole = {\r\n\t\tlog: function () {},\r\n\t\twarn: function () {},\r\n\t\tinfo: function () {},\r\n\t\terror: function () {}\r\n\t};\r\n}","/**\r\n * The base class system.\r\n */\r\nvar IgeClass = (function () {\r\n\tvar initializing = false,\r\n\t\tfnTest = /xyz/.test(function () {xyz;}) ? /\\b_super\\b/ : /.*/,\r\n\r\n\t\t// The base Class implementation (does nothing)\r\n\t\tIgeClass = function () {},\r\n\t\t\r\n\t\t/**\r\n\t\t * Provides logging capabilities to all IgeClass instances.\r\n\t\t * @param {String} text The text to log.\r\n\t\t * @param {String} type The type of log to output, can be 'log',\r\n\t\t * 'info', 'warning' or 'error'.\r\n\t\t * @param {Object=} obj An optional object that will be output\r\n\t\t * before the log text is output.\r\n\t\t * @example #Log a message\r\n\t\t *     var entity = new IgeEntity();\r\n\t\t *     \r\n\t\t *     // Will output:\r\n\t\t *     //     IGE *log* [IgeEntity] : hello\r\n\t\t *     entity.log('Hello');\r\n\t\t * @example #Log an info message with an optional parameter\r\n\t\t *     var entity = new IgeEntity(),\r\n\t\t *         param = 'moo';\r\n\t\t *\t\r\n\t\t *     // Will output:\r\n\t\t *     //    moo\r\n\t\t *     //    IGE *log* [IgeEntity] : hello\r\n\t\t *     entity.log('Hello', 'info', param);\r\n\t\t * @example #Log a warning message (which will cause a stack trace to be shown)\r\n\t\t *     var entity = new IgeEntity();\r\n\t\t *\t\r\n\t\t *     // Will output (stack trace is just an example here, real one will be more useful):\r\n\t\t *     //    Stack: {anonymous}()@<anonymous>:2:8\r\n\t\t *     //    ---- Object.InjectedScript._evaluateOn (<anonymous>:444:39)\r\n\t\t *     //    ---- Object.InjectedScript._evaluateAndWrap (<anonymous>:403:52)\r\n\t\t *     //    ---- Object.InjectedScript.evaluate (<anonymous>:339:21)\r\n\t\t *     //    IGE *warning* [IgeEntity] : A test warning\r\n\t\t *     entity.log('A test warning', 'warning');\r\n\t\t * @example #Log an error message (which will cause an exception to be raised and a stack trace to be shown)\r\n\t\t *     var entity = new IgeEntity();\r\n\t\t *\t\r\n\t\t *     // Will output (stack trace is just an example here, real one will be more useful):\r\n\t\t *     //    Stack: {anonymous}()@<anonymous>:2:8\r\n\t\t *     //    ---- Object.InjectedScript._evaluateOn (<anonymous>:444:39)\r\n\t\t *     //    ---- Object.InjectedScript._evaluateAndWrap (<anonymous>:403:52)\r\n\t\t *     //    ---- Object.InjectedScript.evaluate (<anonymous>:339:21)\r\n\t\t *     //    IGE *error* [IgeEntity] : An error message\r\n\t\t *     entity.log('An error message', 'error');\r\n\t\t */\r\n\t\tlog = function (text, type, obj) {\r\n\t\t\tif (igeConfig.debug._enabled) {\r\n\t\t\t\tvar indent = '',\r\n\t\t\t\t\tstack,\r\n\t\t\t\t\tthisId;\r\n\t\t\t\t\r\n\t\t\t\tif (typeof(this._id) !== 'undefined') {\r\n\t\t\t\t\tthisId = ':' + this._id;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthisId = '';\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttype = type || 'log';\r\n\r\n\t\t\t\tif (obj !== undefined) {\r\n\t\t\t\t\tconsole.warn(obj);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (type === 'warning' || type === 'error') {\r\n\t\t\t\t\tif (igeConfig.debug._stacks) {\r\n\t\t\t\t\t\tif (igeConfig.debug._node) {\r\n\t\t\t\t\t\t\tif (console.trace) {\r\n\t\t\t\t\t\t\t\tconsole.trace();\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tstack = new Error().stack;\r\n\t\t\t\t\t\t\t\t//console.log(color.magenta('Stack:'), color.red(stack));\r\n\t\t\t\t\t\t\t\tconsole.log('Stack:', stack);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tif (typeof(printStackTrace) === 'function') {\r\n\t\t\t\t\t\t\t\tconsole.log('Stack:', printStackTrace().join('\\n ---- '));\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (type === 'error') {\r\n\t\t\t\t\tif (typeof(ige) !== 'undefined') {\r\n\t\t\t\t\t\tconsole.log(indent + 'IGE *' + type + '* [' + (this._classId || this.prototype._classId) + thisId + '] : ' + 'Error encountered, stopping engine to prevent console spamming...');\r\n\t\t\t\t\t\tige.stop();\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (igeConfig.debug._throwErrors) {\r\n\t\t\t\t\t\tthrow(indent + 'IGE *' + type + '* [' + (this._classId || this.prototype._classId) + thisId + '] : ' + text);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconsole.log(indent + 'IGE *' + type + '* [' + (this._classId || this.prototype._classId) + thisId + '] : ' + text);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconsole.log(indent + 'IGE *' + type + '* [' + (this._classId || this.prototype._classId) + thisId + '] : ' + text);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Returns the class id. Primarily used to help identify\r\n\t\t * what class an instance was instantiated with and is also\r\n\t\t * output during the ige.scenegraph() method's console logging\r\n\t\t * to show what class an object belongs to.\r\n\t\t * @example #Get the class id of an object\r\n\t\t *     var entity = new IgeEntity();\r\n\t\t *\t\r\n\t\t *     // Will output \"IgeEntity\"\r\n\t\t *     console.log(entity.classId());\r\n\t\t */\r\n\t\tclassId = function () {\r\n\t\t\treturn this._classId;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Creates a new instance of the component argument passing\r\n\t\t * the options argument to the component as it is initialised.\r\n\t\t * The new component instance is then added to \"this\" via\r\n\t\t * a property name that is defined in the component class as\r\n\t\t * \"componentId\".\r\n\t\t * @param {IgeClass} component The class definition of the component.\r\n\t\t * @param {Object=} options An options parameter to pass to the component\r\n\t\t * on init.\r\n\t\t * @example #Add the velocity component to an entity\r\n\t\t *     var entity = new IgeEntity();\r\n\t\t *     entity.addComponent(IgeVelocityComponent);\r\n\t\t *     \r\n\t\t *     // Now that the component is added, we can access\r\n\t\t *     // the component via it's namespace. Call the \r\n\t\t *     // \"byAngleAndPower\" method of the velocity component:\r\n\t\t *     entity.velocity.byAngleAndPower(Math.radians(20), 0.1);\r\n\t\t */\r\n\t\taddComponent = function (component, options) {\r\n\t\t\tvar newComponent = new component(this, options);\r\n\t\t\tthis[newComponent.componentId] = newComponent;\r\n\r\n\t\t\t// Add the component reference to the class component array\r\n\t\t\tthis._components = this._components || [];\r\n\t\t\tthis._components.push(newComponent);\r\n\r\n\t\t\treturn this;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Removes a component by it's id.\r\n\t\t * @param {String} componentId The id of the component to remove.\r\n\t\t * @example #Remove a component by it's id (namespace)\r\n\t\t *     var entity = new IgeEntity();\r\n\t\t *     \r\n\t\t *     // Let's add the velocity component\r\n\t\t *     entity.addComponent(IgeVelocityComponent);\r\n\t\t *\t\r\n\t\t *     // Now that the component is added, let's remove\r\n\t\t *     // it via it's id (\"velocity\")\r\n\t\t *     entity.removeComponent('velocity');\r\n\t\t */\r\n\t\tremoveComponent = function (componentId) {\r\n\t\t\t// If the component has a destroy method, call it\r\n\t\t\tif (this[componentId] && this[componentId].destroy) {\r\n\t\t\t\tthis[componentId].destroy();\r\n\t\t\t}\r\n\r\n\t\t\t// Remove the component from the class component array\r\n\t\t\tif (this._components) {\r\n\t\t\t\tthis._components.pull(this[componentId]);\r\n\t\t\t}\r\n\r\n\t\t\t// Remove the component namespace from the class object\r\n\t\t\tdelete this[componentId];\r\n\t\t\treturn this;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Copies all properties and methods from the classObj object\r\n\t\t * to \"this\". If the overwrite flag is not set or set to false,\r\n\t\t * only properties and methods that don't already exists in\r\n\t\t * \"this\" will be copied. If overwrite is true, they will be\r\n\t\t * copied regardless.\r\n\t\t * @param {Function} classObj\r\n\t\t * @param {Boolean} overwrite\r\n\t\t * @example #Implement all the methods of an object into another object\r\n\t\t *     // Create a couple of test entities with ids\r\n\t\t *     var entity1 = new IgeEntity().id('entity1'),\r\n\t\t *         entity2 = new IgeEntity().id('entity2');\r\n\t\t *\t\r\n\t\t *     // Let's define an object with a couple of methods\r\n\t\t *     var obj = {\r\n\t\t *         newMethod1: function () {\r\n\t\t *             console.log('method1 called on object: ' + this.id());\r\n\t\t *         },\r\n\t\t *         \r\n\t\t *         newMethod2: function () {\r\n\t\t *             console.log('method2 called on object: ' + this.id());\r\n\t\t *         }\r\n\t\t *     };\r\n\t\t *\t\r\n\t\t *     // Now let's implement the methods on our entities\r\n\t\t *     entity1.implement(obj);\r\n\t\t *     entity2.implement(obj);\r\n\t\t *     \r\n\t\t *     // The entities now have the newMethod1 and newMethod2\r\n\t\t *     // methods as part of their instance so we can call them:\r\n\t\t *     entity1.newMethod1();\r\n\t\t *     \r\n\t\t *     // The output to the console is:\r\n\t\t *     //    method1 called on object: entity1\r\n\t\t *     \r\n\t\t *     // Now let's call newMethod2 on entity2:\r\n\t\t *     entity2.newMethod2();\r\n\t\t *\t\r\n\t\t *     // The output to the console is:\r\n\t\t *     //    method2 called on object: entity2\r\n\t\t *     \r\n\t\t *     // As you can see, this is a great way to add extra modular\r\n\t\t *     // functionality to objects / entities at runtime.\r\n\t\t */\r\n\t\timplement = function (classObj, overwrite) {\r\n\t\t\tvar i, obj = classObj.prototype || classObj;\r\n\r\n\t\t\t// Copy the class object's properties to (this)\r\n\t\t\tfor (i in obj) {\r\n\t\t\t\t// Only copy the property if this doesn't already have it\r\n\t\t\t\tif (obj.hasOwnProperty(i) && (overwrite || this[i] === undefined)) {\r\n\t\t\t\t\tthis[i] = obj[i];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn this;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Gets / sets a key / value pair in the object's data object. Useful for\r\n\t\t * storing arbitrary game data in the object.\r\n\t\t * @param {String} key The key under which the data resides.\r\n\t\t * @param {*=} value The data to set under the specified key.\r\n\t\t * @example #Set some arbitrary data key value pair\r\n\t\t *     var entity = new IgeEntity();\r\n\t\t *     entity.data('playerScore', 100);\r\n\t\t *     entity.data('playerName', 'iRock');\r\n\t\t * @example #Get the value of a data key\r\n\t\t *     console.log(entity.data('playerScore'));\r\n\t\t *     console.log(entity.data('playerName'));\r\n\t\t * @return {*}\r\n\t\t */\r\n\t\tdata = function (key, value) {\r\n\t\t\tif (key !== undefined) {\r\n\t\t\t\tif (value !== undefined) {\r\n\t\t\t\t\tthis._data = this._data || {};\r\n\t\t\t\t\tthis._data[key] = value;\r\n\r\n\t\t\t\t\treturn this;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif (this._data) {\r\n\t\t\t\t\treturn this._data[key];\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn null;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t/**\r\n\t * Create a new IgeClass that inherits from this class\r\n\t * @name extend\r\n\t * @example #Creating a new class by extending an existing one\r\n\t *     var NewClass = IgeClass.extend({\r\n\t *         // Init is your constructor\r\n\t *         init: function () {\r\n\t *             console.log('I\\'m alive!');\r\n\t *         }\r\n\t *     });\r\n\t * \r\n\t * Further reading: [Extending Classes](http://www.isogenicengine.com/documentation/isogenic-game-engine/versions/1-1-0/manual/engine-fundamentals/classes/extending-classes/)\r\n\t * @return {Function}\r\n\t */\r\n\tIgeClass.extend = function () {\r\n\t\tvar name,\r\n\t\t\tprototype,\r\n\t\t\t// Set prop to the last argument passed\r\n\t\t\tprop = arguments[arguments.length - 1],\r\n\t\t\textensionArray = arguments[0],\r\n\t\t\textensionItem,\r\n\t\t\textensionOverwrite,\r\n\t\t\textensionIndex,\r\n\t\t\tpropertyIndex,\r\n\t\t\tpropertyObject;\r\n\r\n\t\t// Check that the class has been assigned a classId and bug out if not\r\n\t\tif (!prop.classId) {\r\n\t\t\tconsole.log(prop);\r\n\t\t\tthrow('Cannot create a new class without giving the class a classId property!');\r\n\t\t}\r\n\r\n\t\t// Check that the classId is not already in use\r\n\t\tif (igeClassStore[prop.classId]) {\r\n\t\t\t// This classId has already been used, bug out\r\n\t\t\tthrow('Cannot create class with classId \"' + prop.classId + '\" because a class with that ID has already been created!');\r\n\t\t}\r\n\r\n\t\t// Instantiate a base class (but only create the instance,\r\n\t\t// don't run the init constructor)\r\n\t\tinitializing = true;\r\n\t\tprototype = new this();\r\n\t\tinitializing = false;\r\n\r\n\t\t// Copy the properties over onto the new prototype\r\n\t\tfor (name in prop) {\r\n\t\t\tif (prop.hasOwnProperty(name)) {\r\n\t\t\t\t// Copy the property\r\n\t\t\t\tprototype[name] = prop[name];\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Now implement any other extensions\r\n\t\tif (arguments.length > 1) {\r\n\t\t\tif (extensionArray && extensionArray.length) {\r\n\t\t\t\tfor (extensionIndex = 0; extensionIndex < extensionArray.length; extensionIndex++) {\r\n\t\t\t\t\textensionItem = extensionArray[extensionIndex];\r\n\t\t\t\t\tpropertyObject = extensionItem.extension.prototype || extensionItem.extension;\r\n\t\t\t\t\textensionOverwrite = extensionItem.overwrite;\r\n\r\n\t\t\t\t\t// Copy the class object's properties to (this)\r\n\t\t\t\t\tfor (propertyIndex in propertyObject) {\r\n\t\t\t\t\t\t// Only copy the property if this doesn't already have it or\r\n\t\t\t\t\t\t// the extension is set to overwrite any existing properties\r\n\t\t\t\t\t\tif (propertyObject.hasOwnProperty(propertyIndex) && (extensionOverwrite || prototype[propertyIndex] === undefined)) {\r\n\t\t\t\t\t\t\tprototype[propertyIndex] = propertyObject[propertyIndex];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t//prototype._superClass = this.prototype;\r\n\t\t//console.log(prop.classId, 'extends', this.prototype._classId);\r\n\r\n\t\t// The dummy class constructor\r\n\t\tfunction IgeClass() {\r\n\t\t\tif (!initializing && this.init) {\r\n\t\t\t\t// Call the class init method\r\n\t\t\t\tthis.init.apply(this, arguments);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Populate our constructed prototype object\r\n\t\tIgeClass.prototype = prototype;\r\n\r\n\t\t// Enforce the constructor to be what we expect\r\n\t\tIgeClass.prototype.constructor = IgeClass;\r\n\r\n\t\t// And make this class extensible\r\n\t\tIgeClass.extend = arguments.callee;\r\n\r\n\t\t// Add log capability\r\n\t\tIgeClass.prototype.log = log;\r\n\r\n\t\t// Add data capability\r\n\t\tIgeClass.prototype.data = data;\r\n\r\n\t\t// Add class name capability\r\n\t\tIgeClass.prototype.classId = classId; // This is a method that returns _classId\r\n\t\tIgeClass.prototype._classId = prop.classId || 'IgeClass';\r\n\r\n\t\t// Add the addComponent method\r\n\t\tIgeClass.prototype.addComponent = addComponent;\r\n\r\n\t\t// Add the removeComponent method\r\n\t\tIgeClass.prototype.removeComponent = removeComponent;\r\n\r\n\t\t// Add the implement method\r\n\t\tIgeClass.prototype.implement = implement;\r\n\t\t\r\n\t\t// Add editor settings\r\n\t\tIgeClass.prototype.__igeEditor = prop.editorOptions;\r\n\r\n\t\t// Register the class with the class store\r\n\t\tigeClassStore[prop.classId] = IgeClass;\r\n\r\n\t\treturn IgeClass;\r\n\t};\r\n\r\n\t/**\r\n\t * Test method\r\n\t * @param prop\r\n\t * @return {Function}\r\n\t */\r\n\tIgeClass.vanilla = function (prop) {\r\n\t\tvar IgeClass = prop.init || function () {},\r\n\t\t\tprototype = new this();\r\n\t\t\r\n\t\t// Copy the properties over onto the new prototype\r\n\t\tfor (name in prop) {\r\n\t\t\tif (prop.hasOwnProperty(name) && name !== 'init') {\r\n\t\t\t\t// Copy the property\r\n\t\t\t\tprototype[name] = prop[name];\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t// Populate our constructed prototype object\r\n\t\tIgeClass.prototype = prototype;\r\n\r\n\t\t// Enforce the constructor to be what we expect\r\n\t\tIgeClass.prototype.constructor = IgeClass;\r\n\t\t\r\n\t\t// And make this class extensible\r\n\t\tIgeClass.extend = this.extend;\r\n\t\t\r\n\t\t// Add log capability\r\n\t\tIgeClass.prototype.log = log;\r\n\r\n\t\t// Add data capability\r\n\t\tIgeClass.prototype.data = data;\r\n\r\n\t\t// Add class name capability\r\n\t\tIgeClass.prototype.classId = classId; // This is a method that returns _classId\r\n\t\tIgeClass.prototype._classId = prop.classId || 'IgeClass';\r\n\r\n\t\t// Add the addComponent method\r\n\t\tIgeClass.prototype.addComponent = addComponent;\r\n\r\n\t\t// Add the removeComponent method\r\n\t\tIgeClass.prototype.removeComponent = removeComponent;\r\n\r\n\t\t// Add the implement method\r\n\t\tIgeClass.prototype.implement = implement;\r\n\r\n\t\t// Register the class with the class store\r\n\t\tigeClassStore[prop.classId] = IgeClass;\r\n\t\t\r\n\t\treturn IgeClass;\r\n\t};\r\n\r\n\tIgeClass.prototype._classId = 'IgeClass';\r\n\r\n\treturn IgeClass;\r\n}());\r\n\r\n\r\nif (typeof(module) !== 'undefined' && typeof(module.exports) !== 'undefined') { module.exports = IgeClass; }","/**\r\n * Creates a new class with the capability to emit events.\r\n */\r\nvar IgeEventingClass = IgeClass.extend({\r\n\tclassId: 'IgeEventingClass',\r\n\r\n\t/**\r\n\t * Add an event listener method for an event.\r\n\t * @param {String || Array} eventName The name of the event to listen for (string), or an array of events to listen for.\r\n\t * @param {Function} call The method to call when the event listener is triggered.\r\n\t * @param {Object=} context The context in which the call to the listening method will be made (sets the 'this' variable in the method to the object passed as this parameter).\r\n\t * @param {Boolean=} oneShot If set, will instruct the listener to only listen to the event being fired once and will not fire again.\r\n\t * @param {Boolean=} sendEventName If set, will instruct the emitter to send the event name as the argument instead of any emitted arguments.\r\n\t * @return {Object} The event listener object. Hold this value if you later want to turn off the event listener.\r\n\t * @example #Add an Event Listener\r\n\t *     // Register event lister and store in \"evt\"\r\n\t *     var evt = myEntity.on('mouseDown', function () { console.log('down'); });\r\n\t * @example #Listen for Event Data\r\n\t *     // Set a listener to listen for the data (multiple values emitted\r\n\t *     // from an event are passed as function arguments)\r\n\t *     myEntity.on('hello', function (arg1, arg2) {\r\n\t *         console.log(arg1, arg2);\r\n\t *     }\r\n\t *     \r\n\t *     // Emit the event named \"hello\"\r\n\t *     myEntity.emit('hello', ['data1', 'data2']);\r\n\t *     \r\n\t *     // The console output is:\r\n\t *     //    data1, data2\r\n\t */\r\n\ton: function (eventName, call, context, oneShot, sendEventName) {\r\n\t\tvar self = this,\r\n\t\t\tnewListener,\r\n\t\t\taddListener,\r\n\t\t\texistingIndex,\r\n\t\t\telArr,\r\n\t\t\tmultiEvent,\r\n\t\t\teventIndex,\r\n\t\t\teventData,\r\n\t\t\teventObj,\r\n\t\t\tmultiEventName,\r\n\t\t\ti;\r\n\r\n\t\t// Check that we have an event listener object\r\n\t\tthis._eventListeners = this._eventListeners || {};\r\n\r\n\t\tif (typeof call === 'function') {\r\n\t\t\tif (typeof eventName === 'string') {\r\n\t\t\t\t// Compose the new listener\r\n\t\t\t\tnewListener = {\r\n\t\t\t\t\tcall: call,\r\n\t\t\t\t\tcontext: context,\r\n\t\t\t\t\toneShot: oneShot,\r\n\t\t\t\t\tsendEventName: sendEventName\r\n\t\t\t\t};\r\n\r\n\t\t\t\telArr = this._eventListeners[eventName] = this._eventListeners[eventName] || [];\r\n\r\n\t\t\t\t// Check if we already have this listener in the list\r\n\t\t\t\taddListener = true;\r\n\r\n\t\t\t\t// TO-DO - Could this do with using indexOf? Would that work? Would be faster?\r\n\t\t\t\texistingIndex = elArr.indexOf(newListener);\r\n\t\t\t\tif (existingIndex > -1) {\r\n\t\t\t\t\taddListener = false;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Add this new listener\r\n\t\t\t\tif (addListener) {\r\n\t\t\t\t\telArr.push(newListener);\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn newListener;\r\n\t\t\t} else {\r\n\t\t\t\t// The eventName is an array of names, creating a group of events\r\n\t\t\t\t// that must be fired to fire this event callback\r\n\t\t\t\tif (eventName.length) {\r\n\t\t\t\t\t// Loop the event array\r\n\t\t\t\t\tmultiEvent = [];\r\n\t\t\t\t\tmultiEvent[0] = 0; // This will hold our event count total\r\n\t\t\t\t\tmultiEvent[1] = 0; // This will hold our number of events fired\r\n\r\n\t\t\t\t\t// Define the multi event callback\r\n\t\t\t\t\tmultiEvent[3] = function (firedEventName) {\r\n\t\t\t\t\t\tmultiEvent[1]++;\r\n\r\n\t\t\t\t\t\tif (multiEvent[0] === multiEvent[1]) {\r\n\t\t\t\t\t\t\t// All the multi-event events have fired\r\n\t\t\t\t\t\t\t// so fire the callback\r\n\t\t\t\t\t\t\tcall.apply(context || self);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\tfor (eventIndex in eventName) {\r\n\t\t\t\t\t\tif (eventName.hasOwnProperty(eventIndex)) {\r\n\t\t\t\t\t\t\teventData = eventName[eventIndex];\r\n\t\t\t\t\t\t\teventObj = eventData[0];\r\n\t\t\t\t\t\t\tmultiEventName = eventData[1];\r\n\r\n\t\t\t\t\t\t\t// Increment the event listening count total\r\n\t\t\t\t\t\t\tmultiEvent[0]++;\r\n\r\n\t\t\t\t\t\t\t// Register each event against the event object with a callback\r\n\t\t\t\t\t\t\teventObj.on(multiEventName, multiEvent[3], null, true, true);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (typeof(eventName) !== 'string') {\r\n\t\t\t\teventName = '*Multi-Event*';\r\n\t\t\t}\r\n\t\t\tthis.log('Cannot register event listener for event \"' + eventName + '\" because the passed callback is not a function!', 'error');\r\n\t\t}\r\n\t},\r\n\t\r\n\t/**\r\n\t * Remove an event listener. If the _processing flag is true\r\n\t * then the removal will be placed in the removals array to be\r\n\t * processed after the event loop has completed in the emit()\r\n\t * method.\r\n\t * @param {Boolean} eventName The name of the event you originally registered to listen for.\r\n\t * @param {Object} evtListener The event listener object to cancel. This object is the one\r\n\t * returned when calling the on() method. It is NOT the method you passed as the second argument\r\n\t * to the on() method.\r\n\t * @param {Function} callback The callback method to call when the event listener has been\r\n\t * successfully removed. If you attempt to remove a listener during the event firing loop\r\n\t * then the listener will not immediately be removed but will be queued for removal before\r\n\t * the next listener loop is fired. In this case you may like to be informed via callback\r\n\t * when the listener has been fully removed in which case, provide a method for this argument.\r\n\t * \r\n\t * The callback will be passed a single boolean argument denoting if the removal was successful\r\n\t * (true) or the listener did not exist to remove (false).\r\n\t * @example #Switch off an Event Listener\r\n\t *     // Register event lister and store in \"evt\"\r\n\t *     var evt = myEntity.on('mouseDown', function () { console.log('down'); });\r\n\t *     \r\n\t *     // Switch off event listener\r\n\t *     myEntity.off('mouseDown', evt);\r\n\t * @return {Boolean}\r\n\t */\r\n\toff: function (eventName, evtListener, callback) {\r\n\t\tif (this._eventListeners) {\r\n\t\t\tif (!this._eventListeners._processing) {\r\n\t\t\t\tif (this._eventListeners[eventName]) {\r\n\t\t\t\t\t// Find this listener in the list\r\n\t\t\t\t\tvar evtListIndex = this._eventListeners[eventName].indexOf(evtListener);\r\n\t\t\t\t\tif (evtListIndex > -1) {\r\n\t\t\t\t\t\t// Remove the listener from the event listener list\r\n\t\t\t\t\t\tthis._eventListeners[eventName].splice(evtListIndex, 1);\r\n\t\t\t\t\t\tif (callback) {\r\n\t\t\t\t\t\t\tcallback(true);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.log('Failed to cancel event listener for event named \"' + eventName + '\" !', 'warning', evtListener);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.log('Failed to cancel event listener!');\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\t// Add the removal to a remove queue since we are processing\r\n\t\t\t\t// listeners at the moment and removing one would mess up the\r\n\t\t\t\t// loop!\r\n\t\t\t\tthis._eventListeners._removeQueue = this._eventListeners._removeQueue || [];\r\n\t\t\t\tthis._eventListeners._removeQueue.push([eventName, evtListener, callback]);\r\n\r\n\t\t\t\treturn -1;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (callback) {\r\n\t\t\tcallback(false);\r\n\t\t}\r\n\t\treturn false;\r\n\t},\r\n\r\n\t/**\r\n\t * Emit an event by name.\r\n\t * @param {Object} eventName The name of the event to emit.\r\n\t * @param {Object || Array} args The arguments to send to any listening methods.\r\n\t * If you are sending multiple arguments, use an array containing each argument.\r\n\t * @return {Number}\r\n\t * @example #Emit an Event\r\n\t *     // Emit the event named \"hello\"\r\n\t *     myEntity.emit('hello');\r\n\t * @example #Emit an Event With Data Object\r\n\t *     // Emit the event named \"hello\"\r\n\t *     myEntity.emit('hello', {moo: true});\r\n\t * @example #Emit an Event With Multiple Data Values\r\n\t *     // Emit the event named \"hello\"\r\n\t *     myEntity.emit('hello', [{moo: true}, 'someString']);\r\n\t * @example #Listen for Event Data\r\n\t *     // Set a listener to listen for the data (multiple values emitted\r\n\t *     // from an event are passed as function arguments)\r\n\t *     myEntity.on('hello', function (arg1, arg2) {\r\n\t *         console.log(arg1, arg2);\r\n\t *     }\r\n\t *     \r\n\t *     // Emit the event named \"hello\"\r\n\t *     myEntity.emit('hello', ['data1', 'data2']);\r\n\t *     \r\n\t *     // The console output is:\r\n\t *     //    data1, data2\r\n\t */\r\n\temit: function (eventName, args) {\r\n\t\tif (this._eventListeners) {\r\n\t\t\t// Check if the event has any listeners\r\n\t\t\tif (this._eventListeners[eventName]) {\r\n\r\n\t\t\t\t// Fire the listeners for this event\r\n\t\t\t\tvar eventCount = this._eventListeners[eventName].length,\r\n\t\t\t\t\teventCount2 = this._eventListeners[eventName].length - 1,\r\n\t\t\t\t\tfinalArgs, i, cancelFlag, eventIndex, tempEvt, retVal;\r\n\r\n\t\t\t\t// If there are some events, ensure that the args is ready to be used\r\n\t\t\t\tif (eventCount) {\r\n\t\t\t\t\tfinalArgs = [];\r\n\t\t\t\t\tif (typeof(args) === 'object' && args !== null && args[0] !== null && args[0] !== undefined) {\r\n\t\t\t\t\t\tfor (i in args) {\r\n\t\t\t\t\t\t\tif (args.hasOwnProperty(i)) {\r\n\t\t\t\t\t\t\t\tfinalArgs[i] = args[i];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tfinalArgs = [args];\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Loop and emit!\r\n\t\t\t\t\tcancelFlag = false;\r\n\r\n\t\t\t\t\tthis._eventListeners._processing = true;\r\n\t\t\t\t\twhile (eventCount--) {\r\n\t\t\t\t\t\teventIndex = eventCount2 - eventCount;\r\n\t\t\t\t\t\ttempEvt = this._eventListeners[eventName][eventIndex];\r\n\r\n\r\n\t\t\t\t\t\t// If the sendEventName flag is set, overwrite the arguments with the event name\r\n\t\t\t\t\t\tif (tempEvt.sendEventName) { finalArgs = [eventName]; }\r\n\r\n\t\t\t\t\t\t// Call the callback\r\n\t\t\t\t\t\tretVal = tempEvt.call.apply(tempEvt.context || this, finalArgs);\r\n\r\n\t\t\t\t\t\t// If the retVal === true then store the cancel flag and return to the emitting method\r\n\t\t\t\t\t\tif (retVal === true) {\r\n\t\t\t\t\t\t\t// The receiver method asked us to send a cancel request back to the emitter\r\n\t\t\t\t\t\t\tcancelFlag = true;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Check if we should now cancel the event\r\n\t\t\t\t\t\tif (tempEvt.oneShot) {\r\n\t\t\t\t\t\t\t// The event has a oneShot flag so since we have fired the event,\r\n\t\t\t\t\t\t\t// lets cancel the listener now\r\n\t\t\t\t\t\t\tif (this.off(eventName, tempEvt) === true) {\r\n\t\t\t\t\t\t\t\teventCount2--;\t\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Check that the array still exists because an event\r\n\t\t\t\t\t// could have triggered a method that destroyed our object\r\n\t\t\t\t\t// which would have deleted the array!\r\n\t\t\t\t\tif (this._eventListeners) {\r\n\t\t\t\t\t\tthis._eventListeners._processing = false;\r\n\r\n\t\t\t\t\t\t// Now process any event removal\r\n\t\t\t\t\t\tthis._processRemovals();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (cancelFlag) {\r\n\t\t\t\t\t\treturn 1;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Returns an object containing the current event listeners.\r\n\t * @return {Object}\r\n\t */\r\n\teventList: function () {\r\n\t\treturn this._eventListeners;\r\n\t},\r\n\t\r\n\t/**\r\n\t * Loops the removals array and processes off() calls for\r\n\t * each array item.\r\n\t * @private\r\n\t */\r\n\t_processRemovals: function () {\r\n\t\tif (this._eventListeners) {\r\n\t\t\tvar remArr = this._eventListeners._removeQueue,\r\n\t\t\t\tarrCount,\r\n\t\t\t\titem,\r\n\t\t\t\tresult;\r\n\r\n\t\t\t// If the removal array exists\r\n\t\t\tif (remArr) {\r\n\t\t\t\t// Get the number of items in the removal array\r\n\t\t\t\tarrCount = remArr.length;\r\n\r\n\t\t\t\t// Loop the array\r\n\t\t\t\twhile (arrCount--) {\r\n\t\t\t\t\titem = remArr[arrCount];\r\n\r\n\t\t\t\t\t// Call the off() method for this item\r\n\t\t\t\t\tresult = this.off(item[0], item[1]);\r\n\r\n\t\t\t\t\t// Check if there is a callback\r\n\t\t\t\t\tif (typeof remArr[2] === 'function') {\r\n\t\t\t\t\t\t// Call the callback with the removal result\r\n\t\t\t\t\t\tremArr[2](result);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Remove the removal array\r\n\t\t\tdelete this._eventListeners._removeQueue;\r\n\t\t}\r\n\t}\r\n});\r\n\r\nif (typeof(module) !== 'undefined' && typeof(module.exports) !== 'undefined') { module.exports = IgeEventingClass; }","/**\r\n * Creates a new 2d point (x, y).\r\n */\r\nvar IgePoint2d = IgeClass.extend({\r\n\tclassId: 'IgePoint2d',\r\n\r\n\tinit: function (x, y, floor) {\r\n\t\t// Set values to the passed parameters or\r\n\t\t// zero if they are undefined\r\n\t\t// Commented for increase performance over stability checks\r\n\t\t/*if (x === undefined) { debugger; }\r\n\t\tif (y === undefined) { debugger; }*/\r\n\t\tthis.x = x = x !== undefined ? x : 0;\r\n\t\tthis.y = y = y !== undefined ? y : 0;\r\n\t\t\r\n\t\tthis._floor = floor !== undefined;\r\n\t\t\r\n\t\tif (this._floor) {\r\n\t\t\tthis.x2 = Math.floor(x / 2);\r\n\t\t\tthis.y2 = Math.floor(y / 2);\r\n\t\t} else {\r\n\t\t\tthis.x2 = x / 2;\r\n\t\t\tthis.y2 = y / 2;\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * Gets / sets the floor mode of this point. If set to true the point's\r\n\t * data will be mathematically floored when they are assigned.\r\n\t * @param val\r\n\t * @return {*}\r\n\t */\r\n\tfloor: function (val) {\r\n\t\tif (val !== undefined) {\r\n\t\t\tthis._floor = val;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\treturn this._floor;\r\n\t},\r\n\r\n\t/**\r\n\t * Compares this point's x, y data with the passed point and returns\r\n\t * true if they are the same and false if any is different.\r\n\t * @param {IgePoint2d} point The point to compare data with.\r\n\t * @return {Boolean}\r\n\t */\r\n\tcompare: function (point) {\r\n\t\treturn point && this.x === point.x && this.y === point.y;\r\n\t},\r\n\r\n\t/**\r\n\t * Copies the x, y data from the passed point and overwrites this\r\n\t * point's data with those values.\r\n\t * @param {IgePoint2d} point The point to copy values from.\r\n\t * @returns {*}\r\n\t */\r\n\tcopy: function (point) {\r\n\t\tthis.x = point.x;\r\n\t\tthis.y = point.y;\r\n\t\tthis.z = point.z;\r\n\t\t\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * Converts the point's x, y to an isometric x, y 2d co-ordinate\r\n\t * and returns an object whose x, y values are the result.\r\n\t * @return {Object}\r\n\t */\r\n\ttoIso: function () {\r\n\t\tvar sx = this.x - this.y,\r\n\t\t\tsy = (this.x + this.y) * 0.5;\r\n\r\n\t\treturn {x: sx, y: sy};\r\n\t},\r\n\r\n\t/**\r\n\t * Converts this point's x, y data into isometric co-ordinate space\r\n\t * and overwrites the previous x, y values with the result.\r\n\t * @return {*}\r\n\t */\r\n\tthisToIso: function () {\r\n\t\tvar val = this.toIso();\r\n\t\tthis.x = val.x;\r\n\t\tthis.y = val.y;\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * Converts this point's x, y data into 2d co-ordinate space\r\n\t * and returns an object whose x, y values are the result.\r\n\t * @return {Object}\r\n\t */\r\n\tto2d: function () {\r\n\t\tvar sx = this.y + this.x / 2,\r\n\t\t\tsy = this.y - this.x / 2;\r\n\r\n\t\treturn {x: sx, y: sy};\r\n\t},\r\n\r\n\t/**\r\n\t * Converts this point's x, y data into 2d co-ordinate space\r\n\t * and overwrites the previous x, y values with the result.\r\n\t * @return {*}\r\n\t */\r\n\tthisTo2d: function () {\r\n\t\tvar val = this.to2d();\r\n\t\tthis.x = val.x;\r\n\t\tthis.y = val.y;\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * Adds this point's data by the x, y, values specified\r\n\t * and returns a new IgePoint2d whose values are the result.\r\n\t * @param point\r\n\t * @return {*}\r\n\t */\r\n\taddPoint: function (point) {\r\n\t\treturn new IgePoint2d(this.x + point.x, this.y + point.y);\r\n\t},\r\n\r\n\t/**\r\n\t * Adds this point's data by the x, y values specified and\r\n\t * overwrites the previous x, y values with the result.\r\n\t * @param point\r\n\t * @return {*}\r\n\t */\r\n\tthisAddPoint: function (point) {\r\n\t\tthis.x += point.x;\r\n\t\tthis.y += point.y;\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * Minuses this point's data by the x, y values specified\r\n\t * and returns a new IgePoint2d whose values are the result.\r\n\t * @param point\r\n\t * @return {*}\r\n\t */\r\n\tminusPoint: function (point) {\r\n\t\treturn new IgePoint2d(this.x - point.x, this.y - point.y);\r\n\t},\r\n\r\n\t/**\r\n\t * Minuses this point's data by the x, y values specified and\r\n\t * overwrites the previous x, y values with the result.\r\n\t * @param point\r\n\t * @return {*}\r\n\t */\r\n\tthisMinusPoint: function (point) {\r\n\t\tthis.x -= point.x;\r\n\t\tthis.y -= point.y;\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * Multiplies this point's data by the x, y values specified\r\n\t * and returns a new IgePoint2d whose values are the result.\r\n\t * @param x\r\n\t * @param y\r\n\t * @return {*}\r\n\t */\r\n\tmultiply: function (x, y) {\r\n\t\treturn new IgePoint2d(this.x * x, this.y * y);\r\n\t},\r\n\r\n\t/**\r\n\t * Multiplies this point's data by the point specified\r\n\t * and returns a new IgePoint2d whose values are the result.\r\n\t * @param {IgePoint2d} point\r\n\t * @return {*}\r\n\t */\r\n\tmultiplyPoint: function (point) {\r\n\t\treturn new IgePoint2d(this.x * point.x, this.y * point.y);\r\n\t},\r\n\r\n\t/**\r\n\t * Multiplies this point's data by the x, y values specified and\r\n\t * overwrites the previous x, y values with the result.\r\n\t * @param x\r\n\t * @param y\r\n\t * @param z\r\n\t * @return {*}\r\n\t */\r\n\tthisMultiply: function (x, y) {\r\n\t\tthis.x *= x;\r\n\t\tthis.y *= y;\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * Divides this point's data by the x, y values specified\r\n\t * and returns a new IgePoint2d whose values are the result.\r\n\t * @param x\r\n\t * @param y\r\n\t * @return {*}\r\n\t */\r\n\tdivide: function (x, y) {\r\n\t\treturn new IgePoint2d(this.x / x, this.y / y);\r\n\t},\r\n\t\r\n\t/**\r\n\t * Divides this point's data by the point specified\r\n\t * and returns a new IgePoint2d whose values are the result.\r\n\t * @param {IgePoint2d} point\r\n\t * @return {*}\r\n\t */\r\n\tdividePoint: function (point) {\r\n\t\tvar newX = this.x,\r\n\t\t\tnewY = this.y;\r\n\t\t\r\n\t\tif (point.x) { newX = this.x / point.x; }\r\n\t\tif (point.y) { newY = this.y / point.y; }\r\n\t\t\r\n\t\treturn new IgePoint2d(newX, newY);\r\n\t},\r\n\r\n\t/**\r\n\t * Divides this point's data by the x, y values specified and\r\n\t * overwrites the previous x, y values with the result.\r\n\t * @param x\r\n\t * @param y\r\n\t * @return {*}\r\n\t */\r\n\tthisDivide: function (x, y) {\r\n\t\tthis.x /= x;\r\n\t\tthis.y /= y;\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * Returns a clone of this IgePoint2d's data as a new instance.\r\n\t * @return {*}\r\n\t */\r\n\tclone: function () {\r\n\t\treturn new IgePoint2d(this.x, this.y);\r\n\t},\r\n\r\n\t/**\r\n\t * Interpolates the x, y values of this point towards the endPoint's\r\n\t * x, y values based on the passed time variables and returns a new\r\n\t * IgePoint2d whose values are the result.\r\n\t * @param endPoint\r\n\t * @param startTime\r\n\t * @param currentTime\r\n\t * @param endTime\r\n\t * @return {*}\r\n\t */\r\n\tinterpolate: function (endPoint, startTime, currentTime, endTime) {\r\n\t\tvar totalX = endPoint.x - this.x,\r\n\t\t\ttotalY = endPoint.y - this.y,\r\n\t\t\ttotalTime = endTime - startTime,\r\n\t\t\tdeltaTime = totalTime - (currentTime - startTime),\r\n\t\t\ttimeRatio = deltaTime / totalTime;\r\n\r\n\t\treturn new IgePoint2d(endPoint.x - (totalX * timeRatio), endPoint.y - (totalY * timeRatio));\r\n\t},\r\n\r\n\t/**\r\n\t * Rotates the point by the given radians.\r\n\t * @param {Number} radians Radians to rotate by.\r\n\t * @return {IgePoint2d} A new point with the rotated x, y.\r\n\t */\r\n\trotate: function (radians) {\r\n\t\tvar s = Math.sin(radians),\r\n\t\t\tc = Math.cos(radians),\r\n\t\t\tx = c * this.x - s * this.y,\r\n\t\t\ty = s * this.x - c * this.y;\r\n\t\t\r\n\t\treturn new IgePoint2d(x, y);\r\n\t},\r\n\t\r\n\t/**\r\n\t * Rotates the point by the given radians and updates this point\r\n\t * to the new x, y values.\r\n\t * @param {Number} radians Radians to rotate by.\r\n\t * @return {IgePoint2d} This point.\r\n\t */\r\n\tthisRotate: function (radians) {\r\n\t\tvar s = Math.sin(radians),\r\n\t\t\tc = Math.cos(radians),\r\n\t\t\tx = this.x,\r\n\t\t\ty = this.y;\r\n\t\t\r\n\t\tthis.x = c * x - s * y;\r\n\t\tthis.y = s * x - c * y;\r\n\t\t\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * Returns a string representation of the point's x, y\r\n\t * converting floating point values into fixed using the\r\n\t * passed precision parameter. If no precision is specified\r\n\t * then the precision defaults to 2.\r\n\t * @param {Number=} precision\r\n\t * @return {String}\r\n\t */\r\n\ttoString: function (precision) {\r\n\t\tif (precision === undefined) { precision = 2; }\r\n\t\treturn this.x.toFixed(precision) + ',' + this.y.toFixed(precision);\r\n\t}\r\n});\r\n\r\nif (typeof(module) !== 'undefined' && typeof(module.exports) !== 'undefined') { module.exports = IgePoint2d; }","/**\r\n * Creates a new 3d point (x, y, z).\r\n */\r\nvar IgePoint3d = IgeClass.extend({\r\n\tclassId: 'IgePoint3d',\r\n\r\n\tinit: function (x, y, z, floor) {\r\n\t\t// Set values to the passed parameters or\r\n\t\t// zero if they are undefined\r\n\t\t// Commented for increase performance over stability checks\r\n\t\t/*if (x === undefined) { debugger; }\r\n\t\tif (y === undefined) { debugger; }\r\n\t\tif (z === undefined) { debugger; }*/\r\n\t\tthis.x = x = x !== undefined ? x : 0;\r\n\t\tthis.y = y = y !== undefined ? y : 0;\r\n\t\tthis.z = z = z !== undefined ? z : 0;\r\n\t\t\r\n\t\tthis._floor = floor !== undefined;\r\n\t\t\r\n\t\tif (this._floor) {\r\n\t\t\tthis.x2 = Math.floor(x / 2);\r\n\t\t\tthis.y2 = Math.floor(y / 2);\r\n\t\t\tthis.z2 = Math.floor(z / 2);\r\n\t\t} else {\r\n\t\t\tthis.x2 = x / 2;\r\n\t\t\tthis.y2 = y / 2;\r\n\t\t\tthis.z2 = z / 2;\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * Gets / sets the floor mode of this point. If set to true the point's\r\n\t * data will be mathematically floored when they are assigned.\r\n\t * @param val\r\n\t * @return {*}\r\n\t */\r\n\tfloor: function (val) {\r\n\t\tif (val !== undefined) {\r\n\t\t\tthis._floor = val;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\treturn this._floor;\r\n\t},\r\n\r\n\t/**\r\n\t * Compares this point's x, y, z data with the passed point and returns\r\n\t * true if they are the same and false if any is different.\r\n\t * @param {IgePoint3d} point The point to compare data with.\r\n\t * @return {Boolean}\r\n\t */\r\n\tcompare: function (point) {\r\n\t\treturn point && this.x === point.x && this.y === point.y && this.z === point.z;\r\n\t},\r\n\r\n\t/**\r\n\t * Copies the x, y, z data from the passed point and overwrites this\r\n\t * point's data with those values.\r\n\t * @param {IgePoint3d} point The point to copy values from.\r\n\t * @returns {*}\r\n\t */\r\n\tcopy: function (point) {\r\n\t\tthis.x = point.x;\r\n\t\tthis.y = point.y;\r\n\t\tthis.z = point.z;\r\n\t\t\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * Converts the point's x, y, z to an isometric x, y 2d co-ordinate\r\n\t * and returns an object whose x, y values are the result.\r\n\t * @return {Object}\r\n\t */\r\n\ttoIso: function () {\r\n\t\tvar sx = this.x - this.y,\r\n\t\t\tsy = (-this.z) * 1.2247 + (this.x + this.y) * 0.5;\r\n\r\n\t\treturn {x: sx, y: sy};\r\n\t},\r\n\r\n\t/**\r\n\t * Converts this point's x, y, z data into isometric co-ordinate space\r\n\t * and overwrites the previous x, y, z values with the result.\r\n\t * @return {*}\r\n\t */\r\n\tthisToIso: function () {\r\n\t\tvar val = this.toIso();\r\n\t\tthis.x = val.x;\r\n\t\tthis.y = val.y;\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * Converts this point's x, y, z data into 2d co-ordinate space\r\n\t * and returns an object whose x, y values are the result.\r\n\t * @return {Object}\r\n\t */\r\n\tto2d: function () {\r\n\t\tvar sx = this.y + this.x / 2,\r\n\t\t\tsy = this.y - this.x / 2;\r\n\r\n\t\treturn {x: sx, y: sy};\r\n\t},\r\n\r\n\t/**\r\n\t * Converts this point's x, y, z data into 2d co-ordinate space\r\n\t * and overwrites the previous x, y, z values with the result.\r\n\t * @return {*}\r\n\t */\r\n\tthisTo2d: function () {\r\n\t\tvar val = this.to2d();\r\n\t\tthis.x = val.x;\r\n\t\tthis.y = val.y;\r\n\t\tthis.z = 0;\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * Adds this point's data by the x, y, z, values specified\r\n\t * and returns a new IgePoint3d whose values are the result.\r\n\t * @param point\r\n\t * @return {*}\r\n\t */\r\n\taddPoint: function (point) {\r\n\t\treturn new IgePoint3d(this.x + point.x, this.y + point.y, this.z + point.z);\r\n\t},\r\n\r\n\t/**\r\n\t * Adds this point's data by the x, y, z values specified and\r\n\t * overwrites the previous x, y, z values with the result.\r\n\t * @param point\r\n\t * @return {*}\r\n\t */\r\n\tthisAddPoint: function (point) {\r\n\t\tthis.x += point.x;\r\n\t\tthis.y += point.y;\r\n\t\tthis.z += point.z;\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * Minuses this point's data by the x, y, z, values specified\r\n\t * and returns a new IgePoint3d whose values are the result.\r\n\t * @param point\r\n\t * @return {*}\r\n\t */\r\n\tminusPoint: function (point) {\r\n\t\treturn new IgePoint3d(this.x - point.x, this.y - point.y, this.z - point.z);\r\n\t},\r\n\r\n\t/**\r\n\t * Minuses this point's data by the x, y, z values specified and\r\n\t * overwrites the previous x, y, z values with the result.\r\n\t * @param point\r\n\t * @return {*}\r\n\t */\r\n\tthisMinusPoint: function (point) {\r\n\t\tthis.x -= point.x;\r\n\t\tthis.y -= point.y;\r\n\t\tthis.z -= point.z;\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * Multiplies this point's data by the x, y, z, values specified\r\n\t * and returns a new IgePoint3d whose values are the result.\r\n\t * @param x\r\n\t * @param y\r\n\t * @param z\r\n\t * @return {*}\r\n\t */\r\n\tmultiply: function (x, y, z) {\r\n\t\treturn new IgePoint3d(this.x * x, this.y * y, this.z * z);\r\n\t},\r\n\r\n\t/**\r\n\t * Multiplies this point's data by the point specified\r\n\t * and returns a new IgePoint3d whose values are the result.\r\n\t * @param {IgePoint3d} point\r\n\t * @return {*}\r\n\t */\r\n\tmultiplyPoint: function (point) {\r\n\t\treturn new IgePoint3d(this.x * point.x, this.y * point.y, this.z * point.z);\r\n\t},\r\n\r\n\t/**\r\n\t * Multiplies this point's data by the x, y, z values specified and\r\n\t * overwrites the previous x, y, z values with the result.\r\n\t * @param x\r\n\t * @param y\r\n\t * @param z\r\n\t * @return {*}\r\n\t */\r\n\tthisMultiply: function (x, y, z) {\r\n\t\tthis.x *= x;\r\n\t\tthis.y *= y;\r\n\t\tthis.z *= z;\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * Divides this point's data by the x, y, z, values specified\r\n\t * and returns a new IgePoint3d whose values are the result.\r\n\t * @param x\r\n\t * @param y\r\n\t * @param z\r\n\t * @return {*}\r\n\t */\r\n\tdivide: function (x, y, z) {\r\n\t\treturn new IgePoint3d(this.x / x, this.y / y, this.z / z);\r\n\t},\r\n\t\r\n\t/**\r\n\t * Divides this point's data by the point specified\r\n\t * and returns a new IgePoint3d whose values are the result.\r\n\t * @param {IgePoint3d} point\r\n\t * @return {*}\r\n\t */\r\n\tdividePoint: function (point) {\r\n\t\tvar newX = this.x,\r\n\t\t\tnewY = this.y,\r\n\t\t\tnewZ = this.z;\r\n\t\t\r\n\t\tif (point.x) { newX = this.x / point.x; }\r\n\t\tif (point.y) { newY = this.y / point.y; }\r\n\t\tif (point.z) { newZ = this.z / point.z; }\r\n\t\t\r\n\t\treturn new IgePoint3d(newX, newY, newZ);\r\n\t},\r\n\r\n\t/**\r\n\t * Divides this point's data by the x, y, z values specified and\r\n\t * overwrites the previous x, y, z values with the result.\r\n\t * @param x\r\n\t * @param y\r\n\t * @param z\r\n\t * @return {*}\r\n\t */\r\n\tthisDivide: function (x, y, z) {\r\n\t\tthis.x /= x;\r\n\t\tthis.y /= y;\r\n\t\tthis.z /= z;\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * Returns a clone of this IgePoint3d's data as a new instance.\r\n\t * @return {*}\r\n\t */\r\n\tclone: function () {\r\n\t\treturn new IgePoint3d(this.x, this.y, this.z);\r\n\t},\r\n\r\n\t/**\r\n\t * Interpolates the x, y, z values of this point towards the endPoint's\r\n\t * x, y, z values based on the passed time variables and returns a new\r\n\t * IgePoint3d whose values are the result.\r\n\t * @param endPoint\r\n\t * @param startTime\r\n\t * @param currentTime\r\n\t * @param endTime\r\n\t * @return {*}\r\n\t */\r\n\tinterpolate: function (endPoint, startTime, currentTime, endTime) {\r\n\t\tvar totalX = endPoint.x - this.x,\r\n\t\t\ttotalY = endPoint.y - this.y,\r\n\t\t\ttotalZ = endPoint.z - this.z,\r\n\t\t\ttotalTime = endTime - startTime,\r\n\t\t\tdeltaTime = totalTime - (currentTime - startTime),\r\n\t\t\ttimeRatio = deltaTime / totalTime;\r\n\r\n\t\treturn new IgePoint3d(endPoint.x - (totalX * timeRatio), endPoint.y - (totalY * timeRatio), endPoint.z - (totalZ * timeRatio));\r\n\t},\r\n\r\n\t/**\r\n\t * Rotates the point by the given radians.\r\n\t * @param {Number} radians Radians to rotate by.\r\n\t * @return {IgePoint3d} A new point with the rotated x, y.\r\n\t */\r\n\trotate: function (radians) {\r\n\t\tvar s = Math.sin(radians),\r\n\t\t\tc = Math.cos(radians),\r\n\t\t\tx = c * this.x - s * this.y,\r\n\t\t\ty = s * this.x - c * this.y;\r\n\t\t\r\n\t\treturn new IgePoint3d(x, y, this.z);\r\n\t},\r\n\t\r\n\t/**\r\n\t * Rotates the point by the given radians and updates this point\r\n\t * to the new x, y values.\r\n\t * @param {Number} radians Radians to rotate by.\r\n\t * @return {IgePoint3d} This point.\r\n\t */\r\n\tthisRotate: function (radians) {\r\n\t\tvar s = Math.sin(radians),\r\n\t\t\tc = Math.cos(radians),\r\n\t\t\tx = this.x,\r\n\t\t\ty = this.y;\r\n\t\t\r\n\t\tthis.x = c * x - s * y;\r\n\t\tthis.y = s * x - c * y;\r\n\t\t\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * Returns a string representation of the point's x, y, z\r\n\t * converting floating point values into fixed using the\r\n\t * passed precision parameter. If no precision is specified\r\n\t * then the precision defaults to 2.\r\n\t * @param {Number=} precision\r\n\t * @return {String}\r\n\t */\r\n\ttoString: function (precision) {\r\n\t\tif (precision === undefined) { precision = 2; }\r\n\t\treturn this.x.toFixed(precision) + ',' + this.y.toFixed(precision) + ',' + this.z.toFixed(precision);\r\n\t}\r\n});\r\n\r\nif (typeof(module) !== 'undefined' && typeof(module.exports) !== 'undefined') { module.exports = IgePoint3d; }","/**\r\n * Creates a new 2d polygon made up of IgePoint2d instances.\r\n */\r\nvar IgePoly2d = IgeClass.extend({\r\n\tclassId: 'IgePoly2d',\r\n\r\n\tinit: function () {\r\n\t\tthis._poly = [];\r\n\t\tthis._scale = new IgePoint2d(1, 1);\r\n\t},\r\n\r\n\tscale: function (x, y) {\r\n\t\tif (x !== undefined && y !== undefined) {\r\n\t\t\tthis._scale.x = x;\r\n\t\t\tthis._scale.y = y;\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\treturn this._scale;\r\n\t},\r\n\r\n\t/**\r\n\t * Multiplies the points of the polygon by the supplied factor.\r\n\t * @param {Number} factor The multiplication factor.\r\n\t * @return {*}\r\n\t */\r\n\tmultiply: function (factor) {\r\n\t\tif (factor !== undefined) {\r\n\t\t\tvar polyPoints = this._poly,\r\n\t\t\t\tpointCount = polyPoints.length,\r\n\t\t\t\tpointIndex;\r\n\r\n\t\t\tfor (pointIndex = 0; pointIndex < pointCount; pointIndex++) {\r\n\t\t\t\tpolyPoints[pointIndex].x *= factor;\r\n\t\t\t\tpolyPoints[pointIndex].y *= factor;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * Divides the points of the polygon by the supplied value.\r\n\t * @param {Number} value The divide value.\r\n\t * @return {*}\r\n\t */\r\n\tdivide: function (value) {\r\n\t\tif (value !== undefined) {\r\n\t\t\tvar polyPoints = this._poly,\r\n\t\t\t\tpointCount = polyPoints.length,\r\n\t\t\t\tpointIndex;\r\n\r\n\t\t\tfor (pointIndex = 0; pointIndex < pointCount; pointIndex++) {\r\n\t\t\t\tpolyPoints[pointIndex].x /= value;\r\n\t\t\t\tpolyPoints[pointIndex].y /= value;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * Adds a point to the polygon relative to the polygon center at 0, 0.\r\n\t * @param x\r\n\t * @param y\r\n\t */\r\n\taddPoint: function (x, y) {\r\n\t\tthis._poly.push(new IgePoint2d(x, y));\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * Returns the length of the poly array.\r\n\t * @return {Number}\r\n\t */\r\n\tlength: function () {\r\n\t\treturn this._poly.length;\r\n\t},\r\n\r\n\t/**\r\n\t * Check if a point is inside this polygon.\r\n\t * @param {IgePoint2d} point\r\n\t * @return {Boolean}\r\n\t */\r\n\tpointInPoly: function (point) {\r\n\t\tvar polyPoints = this._poly,\r\n\t\t\tpointCount = polyPoints.length,\r\n\t\t\tpointIndex,\r\n\t\t\toldPointIndex = pointCount - 1,\r\n\t\t\tc = 0;\r\n\r\n\t\tfor (pointIndex = 0; pointIndex < pointCount; oldPointIndex = pointIndex++) {\r\n\t\t\tif (((polyPoints[pointIndex].y > point.y) !== (polyPoints[oldPointIndex].y > point.y)) &&\r\n\t\t\t\t(point.x < (polyPoints[oldPointIndex].x - polyPoints[pointIndex].x) *\r\n\t\t\t\t\t(point.y - polyPoints[pointIndex].y) / (polyPoints[oldPointIndex].y - polyPoints[pointIndex].y) +\r\n\t\t\t\t\tpolyPoints[pointIndex].x)) {\r\n\t\t\t\tc = !c;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn Boolean(c);\r\n\t},\r\n\t\r\n\t/**\r\n\t * Check if the passed x and y are inside this polygon.\r\n\t * @param {Number} x\r\n\t * @param {Number} y\r\n\t * @return {Boolean}\r\n\t */\r\n\txyInside: function (x, y) {\r\n\t\tvar polyPoints = this._poly,\r\n\t\t\tpointCount = polyPoints.length,\r\n\t\t\tpointIndex,\r\n\t\t\toldPointIndex = pointCount - 1,\r\n\t\t\tc = 0;\r\n\r\n\t\tfor (pointIndex = 0; pointIndex < pointCount; oldPointIndex = pointIndex++) {\r\n\t\t\tif (((polyPoints[pointIndex].y > y) !== (polyPoints[oldPointIndex].y > y)) &&\r\n\t\t\t\t(x < (polyPoints[oldPointIndex].x - polyPoints[pointIndex].x) *\r\n\t\t\t\t\t(y - polyPoints[pointIndex].y) / (polyPoints[oldPointIndex].y - polyPoints[pointIndex].y) +\r\n\t\t\t\t\tpolyPoints[pointIndex].x)) {\r\n\t\t\t\tc = !c;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn Boolean(c);\r\n\t},\r\n\t\r\n\taabb: function () {\r\n\t\tvar minX,\r\n\t\t\tminY,\r\n\t\t\tmaxX,\r\n\t\t\tmaxY,\r\n\t\t\txArr = [],\r\n\t\t\tyArr = [],\r\n\t\t\tarr = this._poly,\r\n\t\t\tarrIndex,\r\n\t\t\tarrCount = arr.length;\r\n\t\t\r\n\t\tfor (arrIndex = 0; arrIndex < arrCount; arrIndex++) {\r\n\t\t\txArr.push(arr[arrIndex].x);\r\n\t\t\tyArr.push(arr[arrIndex].y);\r\n\t\t}\r\n\t\t\r\n\t\t// Get the extents of the newly transformed poly\r\n\t\tminX = Math.min.apply(Math, xArr);\r\n\t\tminY = Math.min.apply(Math, yArr);\r\n\t\tmaxX = Math.max.apply(Math, xArr);\r\n\t\tmaxY = Math.max.apply(Math, yArr);\r\n\t\r\n\t\treturn new IgeRect(minX, minY, maxX - minX, maxY - minY);\r\n\t},\r\n\r\n\t/**\r\n\t * Returns a copy of this IgePoly2d object that is\r\n\t * it's own version, separate from the original.\r\n\t * @return {IgePoly2d}\r\n\t */\r\n\tclone: function () {\r\n\t\tvar newPoly = new IgePoly2d(),\r\n\t\t\tarr = this._poly,\r\n\t\t\tarrCount = arr.length,\r\n\t\t\ti;\r\n\r\n\t\tfor (i = 0; i < arrCount; i++) {\r\n\t\t\tnewPoly.addPoint(arr[i].x, arr[i].y);\r\n\t\t}\r\n\r\n\t\tnewPoly.scale(this._scale.x, this._scale.y);\r\n\r\n\t\treturn newPoly;\r\n\t},\r\n\r\n\t/**\r\n\t * Determines if the polygon is clockwise or not.\r\n\t * @return {Boolean} A boolean true if clockwise or false\r\n\t * if not.\r\n\t */\r\n\tclockWiseTriangle: function () {\r\n\t\t// Loop the polygon points and determine if they are counter-clockwise\r\n\t\tvar arr = this._poly,\r\n\t\t\tval,\r\n\t\t\tp1, p2, p3;\r\n\r\n\t\tp1 = arr[0];\r\n\t\tp2 = arr[1];\r\n\t\tp3 = arr[2];\r\n\r\n\t\tval = (p1.x * p2.y) + (p2.x * p3.y) + (p3.x * p1.y) - (p2.y * p3.x) - (p3.y * p1.x) - (p1.y * p2.x);\r\n\r\n\t\treturn val > 0;\r\n\t},\r\n\r\n\tmakeClockWiseTriangle: function () {\r\n\t\t// If our data is already clockwise exit\r\n\t\tif (!this.clockWiseTriangle()) {\r\n\t\t\tvar p0 = this._poly[0],\r\n\t\t\t\tp1 = this._poly[1],\r\n\t\t\t\tp2 = this._poly[2];\r\n\r\n\t\t\tthis._poly[2] = p1;\r\n\t\t\tthis._poly[1] = p2;\r\n\t\t}\r\n\t},\r\n\r\n\ttriangulate: function () {\r\n\t\t// Get the indices of each new triangle\r\n\t\tvar poly = this._poly,\r\n\t\t\ttriangles = [],\r\n\t\t\tindices = this.triangulationIndices(),\r\n\t\t\ti,\r\n\t\t\tpoint1,\r\n\t\t\tpoint2,\r\n\t\t\tpoint3,\r\n\t\t\tnewPoly;\r\n\r\n\t\t// Generate new polygons from the index data\r\n\t\tfor (i = 0; i < indices.length; i += 3) {\r\n\t\t\tpoint1 = poly[indices[i]];\r\n\t\t\tpoint2 = poly[indices[i + 1]];\r\n\t\t\tpoint3 = poly[indices[i + 2]];\r\n\t\t\tnewPoly = new IgePoly2d();\r\n\r\n\t\t\tnewPoly.addPoint(point1.x, point1.y);\r\n\t\t\tnewPoly.addPoint(point2.x, point2.y);\r\n\t\t\tnewPoly.addPoint(point3.x, point3.y);\r\n\r\n\t\t\t// Check the new poly and make sure it's clockwise\r\n\t\t\tnewPoly.makeClockWiseTriangle();\r\n\t\t\ttriangles.push(newPoly);\r\n\t\t}\r\n\r\n\t\treturn triangles;\r\n\t},\r\n\r\n\ttriangulationIndices: function () {\r\n\t\tvar indices = [],\r\n\t\t\tn = this._poly.length,\r\n\t\t\tv = [],\r\n\t\t\tV = [],\r\n\t\t\tnv,\r\n\t\t\tcount,\r\n\t\t\tm,\r\n\t\t\tu,\r\n\t\t\tw,\r\n\t\t\ta,\r\n\t\t\tb,\r\n\t\t\tc,\r\n\t\t\ts,\r\n\t\t\tt;\r\n\t\t\r\n\t\tif (n < 3) { return indices; }\r\n\r\n\t\tif (this._area() > 0) {\r\n\t\t\tfor (v = 0; v < n; v++) {\r\n\t\t\t\tV[v] = v;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tfor (v = 0; v < n; v++) {\r\n\t\t\t\tV[v] = (n - 1) - v;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tnv = n;\r\n\t\tcount = 2 * nv;\r\n\t\tm = 0;\r\n\r\n\t\tfor (v = nv - 1; nv > 2; ) {\r\n\t\t\tif ((count--) <= 0) {\r\n\t\t\t\treturn indices;\r\n\t\t\t}\r\n\r\n\t\t\tu = v;\r\n\t\t\tif (nv <= u) {\r\n\t\t\t\tu = 0;\r\n\t\t\t}\r\n\r\n\t\t\tv = u + 1;\r\n\r\n\t\t\tif (nv <= v) {\r\n\t\t\t\tv = 0;\r\n\t\t\t}\r\n\r\n\t\t\tw = v + 1;\r\n\r\n\t\t\tif (nv <= w) {\r\n\t\t\t\tw = 0;\r\n\t\t\t}\r\n\r\n\t\t\tif (this._snip(u, v, w, nv, V)) {\r\n\t\t\t\ta = V[u];\r\n\t\t\t\tb = V[v];\r\n\t\t\t\tc = V[w];\r\n\t\t\t\tindices.push(a);\r\n\t\t\t\tindices.push(b);\r\n\t\t\t\tindices.push(c);\r\n\t\t\t\tm++;\r\n\t\t\t\ts = v;\r\n\r\n\t\t\t\tfor (t = v + 1; t < nv; t++) {\r\n\t\t\t\t\tV[s] = V[t];\r\n\t\t\t\t\ts++;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tnv--;\r\n\t\t\t\tcount = 2 * nv;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tindices.reverse();\r\n\t\treturn indices;\r\n\t},\r\n\r\n\t_area: function () {\r\n\t\tvar n = this._poly.length,\r\n\t\t\ta = 0.0,\r\n\t\t\tq = 0,\r\n\t\t\tp,\r\n\t\t\tpval,\r\n\t\t\tqval;\r\n\r\n\t\tfor (p = n - 1; q < n; p = q++) {\r\n\t\t\tpval = this._poly[p];\r\n\t\t\tqval = this._poly[q];\r\n\t\t\ta += pval.x * qval.y - qval.x * pval.y;\r\n\t\t}\r\n\r\n\t\treturn (a * 0.5);\r\n\t},\r\n\r\n\t_snip: function (u, v, w, n, V) {\r\n\t\tvar p,\r\n\t\t\tA = this._poly[V[u]],\r\n\t\t\tB = this._poly[V[v]],\r\n\t\t\tC = this._poly[V[w]],\r\n\t\t\tP;\r\n\r\n\t\t// Replaced Math.Epsilon with 0.00001\r\n\t\tif (0.00001 > (((B.x - A.x) * (C.y - A.y)) - ((B.y - A.y) * (C.x - A.x)))) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tfor (p = 0; p < n; p++) {\r\n\t\t\tif ((p == u) || (p == v) || (p == w)) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tP = this._poly[V[p]];\r\n\t\t\tif (this._insideTriangle(A, B, C, P)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t},\r\n\r\n\t_insideTriangle: function (A, B, C, P) {\r\n\t\tvar ax,\r\n\t\t\tay,\r\n\t\t\tbx,\r\n\t\t\tby,\r\n\t\t\tcx,\r\n\t\t\tcy,\r\n\t\t\tapx,\r\n\t\t\tapy,\r\n\t\t\tbpx,\r\n\t\t\tbpy,\r\n\t\t\tcpx,\r\n\t\t\tcpy,\r\n\t\t\tcCROSSap,\r\n\t\t\tbCROSScp,\r\n\t\t\taCROSSbp;\r\n\r\n\t\tax = C.x - B.x; ay = C.y - B.y;\r\n\t\tbx = A.x - C.x; by = A.y - C.y;\r\n\t\tcx = B.x - A.x; cy = B.y - A.y;\r\n\t\tapx = P.x - A.x; apy = P.y - A.y;\r\n\t\tbpx = P.x - B.x; bpy = P.y - B.y;\r\n\t\tcpx = P.x - C.x; cpy = P.y - C.y;\r\n\r\n\t\taCROSSbp = ax * bpy - ay * bpx;\r\n\t\tcCROSSap = cx * apy - cy * apx;\r\n\t\tbCROSScp = bx * cpy - by * cpx;\r\n\r\n\t\treturn ((aCROSSbp >= 0.0) && (bCROSScp >= 0.0) && (cCROSSap >= 0.0));\r\n\t},\r\n\r\n\t/**\r\n\t * Draws the polygon bounding lines to the passed context.\r\n\t * @param {CanvasRenderingContext2D} ctx\r\n\t */\r\n\trender: function (ctx, fill) {\r\n\t\tvar polyPoints = this._poly,\r\n\t\t\tpointCount = polyPoints.length,\r\n\t\t\tscaleX = this._scale.x,\r\n\t\t\tscaleY = this._scale.y,\r\n\t\t\ti;\r\n\r\n\t\tctx.beginPath();\r\n\t\tctx.moveTo(polyPoints[0].x * scaleX, polyPoints[0].y * scaleY);\r\n\t\tfor (i = 1; i < pointCount; i++) {\r\n\t\t\tctx.lineTo(polyPoints[i].x * scaleX, polyPoints[i].y * scaleY);\r\n\t\t}\r\n\t\tctx.lineTo(polyPoints[0].x * scaleX, polyPoints[0].y * scaleY);\r\n\t\tif (fill) { ctx.fill(); }\r\n\t\tctx.stroke();\r\n\r\n\t\treturn this;\r\n\t}\r\n});\r\n\r\nif (typeof(module) !== 'undefined' && typeof(module.exports) !== 'undefined') { module.exports = IgePoly2d; }","/**\r\n * Creates a new rectangle (x, y, width, height).\r\n */\r\nvar IgeRect = IgeClass.extend({\r\n\tclassId: 'IgeRect',\r\n\r\n\tinit: function (x, y, width, height) {\r\n\t\t// Set values to the passed parameters or\r\n\t\t// zero if they are undefined\r\n\t\tthis.x = x = x !== undefined ? x : 0;\r\n\t\tthis.y = y = y !== undefined ? y : 0;\r\n\t\tthis.width = width = width !== undefined ? width : 0;\r\n\t\tthis.height = height = height !== undefined ? height : 0;\r\n\r\n\t\tthis.x2 = this.x / 2;\r\n\t\tthis.y2 = this.y / 2;\r\n\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\t/**\r\n\t * Combines the extents of the passed IgeRect with this rect\r\n\t * to create a new rect whose bounds encapsulate both rects.\r\n\t * @param {IgeRect} rect The rect to combine with this one.\r\n\t * @return {IgeRect} The new rect encapsulating both rects.\r\n\t */\r\n\tcombineRect: function (rect) {\r\n\t\tvar thisRectMaxX = this.x + this.width,\r\n\t\t\tthisRectMaxY = this.y + this.height,\r\n\t\t\tthatRectMaxX = rect.x + rect.width,\r\n\t\t\tthatRectMaxY = rect.y + rect.height,\r\n\r\n\t\t\tx = Math.min(this.x, rect.x),\r\n\t\t\ty = Math.min(this.y, rect.y),\r\n\t\t\twidth = Math.max(thisRectMaxX - this.x, thatRectMaxX - this.x),\r\n\t\t\theight = Math.max(thisRectMaxY - this.y, thatRectMaxY - this.y);\r\n\r\n\t\treturn new IgeRect(x, y, width, height);\r\n\t},\r\n\r\n\t/**\r\n\t * Combines the extents of the passed IgeRect with this rect\r\n\t * and replaces this rect with one whose bounds encapsulate\r\n\t * both rects.\r\n\t * @param {IgeRect} rect The rect to combine with this one.\r\n\t */\r\n\tthisCombineRect: function (rect) {\r\n\t\tvar thisRectMaxX = this.x + this.width,\r\n\t\t\tthisRectMaxY = this.y + this.height,\r\n\t\t\tthatRectMaxX = rect.x + rect.width,\r\n\t\t\tthatRectMaxY = rect.y + rect.height;\r\n\r\n\t\tthis.x = Math.min(this.x, rect.x);\r\n\t\tthis.y = Math.min(this.y, rect.y);\r\n\r\n\t\tthis.width = Math.max(thisRectMaxX - this.x, thatRectMaxX - this.x);\r\n\t\tthis.height = Math.max(thisRectMaxY - this.y, thatRectMaxY - this.y);\r\n\t},\r\n\t\r\n\tminusPoint: function (point) {\r\n\t\treturn new IgeRect(this.x - point.x, this.y - point.y, this.width, this.height);\r\n\t},\r\n\r\n\t/**\r\n\t * Compares this rect's dimensions with the passed rect and returns\r\n\t * true if they are the same and false if any is different.\r\n\t * @param {IgeRect} rect\r\n\t * @return {Boolean}\r\n\t */\r\n\tcompare: function (rect) {\r\n\t\treturn rect && this.x === rect.x && this.y === rect.y && this.width === rect.width && this.height === rect.height;\r\n\t},\r\n\r\n\t/**\r\n\t * Returns boolean indicating if the passed x, y is\r\n\t * inside the rectangle.\r\n\t * @param x\r\n\t * @param y\r\n\t * @return {Boolean}\r\n\t */\r\n\txyInside: function (x, y) {\r\n\t\treturn x >= this.x && y > this.y && x <= this.x + this.width && y <= this.y + this.height;\r\n\t},\r\n\r\n\t/**\r\n\t * Returns boolean indicating if the passed point is\r\n\t * inside the rectangle.\r\n\t * @param {IgePoint3d} point\r\n\t * @return {Boolean}\r\n\t */\r\n\tpointInside: function (point) {\r\n\t\treturn point.x >= this.x && point.y > this.y && point.x <= this.x + this.width && point.y <= this.y + this.height;\r\n\t},\r\n\r\n\t/**\r\n\t * Returns boolean indicating if the passed IgeRect is\r\n\t * intersecting the rectangle.\r\n\t * @param {IgeRect} rect\r\n\t * @return {Boolean}\r\n\t */\r\n\trectIntersect: function (rect) {\r\n\t\tthis.log('rectIntersect has been renamed to \"intersects\". Please update your code. rectIntersect will be removed in a later version of IGE.', 'warning');\r\n\t\treturn this.intersects(rect);\r\n\t},\r\n\r\n\t/**\r\n\t * Returns boolean indicating if the passed IgeRect is\r\n\t * intersecting the rectangle.\r\n\t * @param {IgeRect} rect\r\n\t * @return {Boolean}\r\n\t */\r\n\tintersects: function (rect) {\r\n\t\tif (rect) {\r\n\t\t\tvar sX1 = this.x,\r\n\t\t\t\tsY1 = this.y,\r\n\t\t\t\tsW = this.width,\r\n\t\t\t\tsH = this.height,\r\n\r\n\t\t\t\tdX1 = rect.x,\r\n\t\t\t\tdY1 = rect.y,\r\n\t\t\t\tdW = rect.width,\r\n\t\t\t\tdH = rect.height,\r\n\r\n\t\t\t\tsX2 = sX1 + sW,\r\n\t\t\t\tsY2 = sY1 + sH,\r\n\t\t\t\tdX2 = dX1 + dW,\r\n\t\t\t\tdY2 = dY1 + dH;\r\n\r\n\t\t\tif (sX1 < dX2 && sX2 > dX1 && sY1 < dY2 && sY2 > dY1) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t},\r\n\t\r\n\t/**\r\n\t * Multiplies this rect's data by the values specified\r\n\t * and returns a new IgeRect whose values are the result.\r\n\t * @param x1\r\n\t * @param y1\r\n\t * @param x2\r\n\t * @param y2\r\n\t * @return {*}\r\n\t */\r\n\tmultiply: function (x1, y1, x2, y2) {\r\n\t\treturn new IgeRect(this.x * x1, this.y * y1, this.width * x2, this.height * y2);\r\n\t},\r\n\t\r\n\t/**\r\n\t * Multiplies this rects's data by the values specified and\r\n\t * overwrites the previous values with the result.\r\n\t * @param x1\r\n\t * @param y1\r\n\t * @param x2\r\n\t * @param y2\r\n\t * @return {*}\r\n\t */\r\n\tthisMultiply: function (x1, y1, x2, y2) {\r\n\t\tthis.x *= x1;\r\n\t\tthis.y *= y1;\r\n\t\tthis.width *= x2;\r\n\t\tthis.height *= y2;\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * Returns a clone of this object that is not a reference\r\n\t * but retains the same values.\r\n\t * @return {IgeRect}\r\n\t */\r\n\tclone: function () {\r\n\t\treturn new IgeRect(this.x, this.y, this.width, this.height);\r\n\t},\r\n\r\n\t/**\r\n\t * Returns a string representation of the rect's x, y, width,\r\n\t * height, converting floating point values into fixed using the\r\n\t * passed precision parameter. If no precision is specified\r\n\t * then the precision defaults to 2.\r\n\t * @param {Number=} precision\r\n\t * @return {String}\r\n\t */\r\n\ttoString: function (precision) {\r\n\t\tif (precision === undefined) { precision = 2; }\r\n\t\treturn this.x.toFixed(precision) + ',' + this.y.toFixed(precision) + ',' + this.width.toFixed(precision) + ',' + this.height.toFixed(precision);\r\n\t},\r\n\t\r\n\t/**\r\n\t * Draws the polygon bounding lines to the passed context.\r\n\t * @param {CanvasRenderingContext2D} ctx\r\n\t */\r\n\trender: function (ctx, fill) {\r\n\t\tctx.rect(this.x, this.y, this.width, this.height);\r\n\t\tif (fill) { ctx.fill(); }\r\n\t\tctx.stroke();\r\n\r\n\t\treturn this;\r\n\t}\r\n});\r\n\r\nif (typeof(module) !== 'undefined' && typeof(module.exports) !== 'undefined') { module.exports = IgeRect; }","// TODO: Clean up the variable declarations in this file so they all run on the same var call at the top of the method.\r\n/**\r\n * Creates a new transformation matrix.\r\n */\r\nvar IgeMatrix2d = function() {\r\n\tthis.matrix = [\r\n\t\t1.0,0.0,0.0,\r\n\t\t0.0,1.0,0.0,\r\n\t\t0.0,0.0,1.0\r\n\t];\r\n\r\n\tthis._rotateOrigin = new IgePoint3d(0, 0, 0);\r\n\tthis._scaleOrigin = new IgePoint3d(0, 0, 0);\r\n};\r\n\r\nIgeMatrix2d.prototype = {\r\n\tmatrix:\tnull,\r\n\r\n\t/**\r\n\t * Transform a point by this matrix. The parameter point will be modified with the transformation values.\r\n\t * @param {IgePoint3d} point\r\n\t * @return {IgePoint3d} The passed point.\r\n\t */\r\n\ttransformCoord: function(point, obj) {\r\n\t\tvar x = point.x,\r\n\t\t\ty = point.y,\r\n\t\t\ttm = this.matrix;\r\n\r\n\t\tpoint.x = x * tm[0] + y * tm[1] + tm[2];\r\n\t\tpoint.y = x * tm[3] + y * tm[4] + tm[5];\r\n\t\t\r\n\t\t/* DEXCLUDE */\r\n\t\tif (isNaN(tm[0]) || isNaN(tm[1]) || isNaN(tm[2]) || isNaN(tm[3]) || isNaN(tm[4]) || isNaN(tm[5])) {\r\n\t\t\tobj.log('The matrix operation produced a NaN value!', 'error');\r\n\t\t}\r\n\t\t/* DEXCLUDE */\r\n\r\n\t\treturn point;\r\n\t},\r\n\r\n\t/**\r\n\t * Transform a point by this matrix in inverse. The parameter point will be modified with the transformation values.\r\n\t * @param {IgePoint3d} point.\r\n\t * @return {IgePoint3d} The passed point.\r\n\t */\r\n\ttransformCoordInverse: function(point, obj) {\r\n\t\tvar x = point.x,\r\n\t\t\ty = point.y,\r\n\t\t\ttm = this.matrix;\r\n\r\n\t\tpoint.x = x * tm[0] - y * tm[1] + tm[2];\r\n\t\tpoint.y = x * tm[3] + y * tm[4] - tm[5];\r\n\t\t\r\n\t\t/* DEXCLUDE */\r\n\t\tif (isNaN(tm[0]) || isNaN(tm[1]) || isNaN(tm[2]) || isNaN(tm[3]) || isNaN(tm[4]) || isNaN(tm[5])) {\r\n\t\t\tobj.log('The matrix operation produced a NaN value!', 'error');\r\n\t\t}\r\n\t\t/* DEXCLUDE */\r\n\r\n\t\treturn point;\r\n\t},\r\n\r\n\ttransform: function (points, obj) {\r\n\t\tvar pointIndex,\r\n\t\t\tpointCount = points.length;\r\n\r\n\t\tfor (pointIndex = 0; pointIndex < pointCount; pointIndex++) {\r\n\t\t\tthis.transformCoord(points[pointIndex], obj);\r\n\t\t}\r\n\r\n\t\treturn points;\r\n\t},\r\n\r\n\t/**\r\n\t * Create a new rotation matrix and set it up for the specified angle in radians.\r\n\t * @param {Number} angle\r\n\t * @return {IgeMatrix2d} A new matrix object.\r\n\t */\r\n\t_newRotate: function(angle) {\r\n\t\tvar m = new IgeMatrix2d();\r\n\t\tm.rotateTo(angle);\r\n\t\treturn m;\r\n\t},\r\n\r\n\trotateBy: function(angle) {\r\n\t\tvar m = new IgeMatrix2d();\r\n\r\n\t\tm.translateBy(this._rotateOrigin.x, this._rotateOrigin.y);\r\n\t\tm.rotateTo(angle);\r\n\t\tm.translateBy(-this._rotateOrigin.x, -this._rotateOrigin.y);\r\n\r\n\t\tthis.multiply(m);\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\trotateTo: function (angle) {\r\n\t\tvar tm = this.matrix,\r\n\t\t\tc = Math.cos(angle),\r\n\t\t\ts = Math.sin(angle);\r\n\r\n\t\ttm[0] = c;\r\n\t\ttm[1] = -s;\r\n\t\ttm[3] = s;\r\n\t\ttm[4] = c;\r\n\t\t\r\n\t\t/* DEXCLUDE */\r\n\t\tif (isNaN(tm[0]) || isNaN(tm[1]) || isNaN(tm[2]) || isNaN(tm[3]) || isNaN(tm[4]) || isNaN(tm[5])) {\r\n\t\t\tconsole.log('The matrix operation produced a NaN value!', 'error');\r\n\t\t}\r\n\t\t/* DEXCLUDE */\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * Gets the rotation from the matrix and returns it in\r\n\t * radians.\r\n\t * @return {Number}\r\n\t */\r\n\trotationRadians: function () {\r\n\t\treturn Math.asin(this.matrix[3]);\r\n\t},\r\n\r\n\t/**\r\n\t * Gets the rotation from the matrix and returns it in\r\n\t * degrees.\r\n\t * @return {Number}\r\n\t */\r\n\trotationDegrees: function () {\r\n\t\treturn Math.degrees(Math.acos(this.matrix[0]));\r\n\t},\r\n\r\n\t/**\r\n\t * Create a scale matrix.\r\n\t * @param {Number} x X scale magnitude.\r\n\t * @param {Number} y Y scale magnitude.\r\n\t *\r\n\t * @return {IgeMatrix2d} a matrix object.\r\n\t *\r\n\t * @static\r\n\t */\r\n\t_newScale: function(x, y) {\r\n\t\tvar m = new IgeMatrix2d();\r\n\r\n\t\tm.matrix[0] = x;\r\n\t\tm.matrix[4] = y;\r\n\r\n\t\treturn m;\r\n\t},\r\n\r\n\tscaleBy: function(x, y) {\r\n\t\tvar m = new IgeMatrix2d();\r\n\r\n\t\tm.matrix[0] = x;\r\n\t\tm.matrix[4] = y;\r\n\r\n\t\tthis.multiply(m);\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\tscaleTo: function(x, y) {\r\n\t\tvar tm = this.matrix;\r\n\t\t//this.identity();\r\n\t\ttm[0] = x;\r\n\t\ttm[4] = y;\r\n\t\t\r\n\t\t/* DEXCLUDE */\r\n\t\tif (isNaN(tm[0]) || isNaN(tm[1]) || isNaN(tm[2]) || isNaN(tm[3]) || isNaN(tm[4]) || isNaN(tm[5])) {\r\n\t\t\tthis.log('The matrix operation produced a NaN value!', 'error');\r\n\t\t}\r\n\t\t/* DEXCLUDE */\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * Create a translation matrix.\r\n\t * @param {Number} x X translation magnitude.\r\n\t * @param {Number} y Y translation magnitude.\r\n\t * @return {IgeMatrix2d} A new matrix object.\r\n\t */\r\n\t_newTranslate: function (x, y) {\r\n\t\tvar m = new IgeMatrix2d();\r\n\r\n\t\tm.matrix[2] = x;\r\n\t\tm.matrix[5] = y;\r\n\r\n\t\treturn m;\r\n\t},\r\n\r\n\ttranslateBy: function (x, y) {\r\n\t\tvar m = new IgeMatrix2d();\r\n\r\n\t\tm.matrix[2] = x;\r\n\t\tm.matrix[5] = y;\r\n\r\n\t\tthis.multiply(m);\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * Sets this matrix as a translation matrix.\r\n\t * @param x\r\n\t * @param y\r\n\t */\r\n\ttranslateTo: function (x, y) {\r\n\t\tvar tm = this.matrix;\r\n\t\t\r\n\t\ttm[2] = x;\r\n\t\ttm[5] = y;\r\n\t\t\r\n\t\t/* DEXCLUDE */\r\n\t\tif (isNaN(tm[0]) || isNaN(tm[1]) || isNaN(tm[2]) || isNaN(tm[3]) || isNaN(tm[4]) || isNaN(tm[5])) {\r\n\t\t\tthis.log('The matrix operation produced a NaN value!', 'error');\r\n\t\t}\r\n\t\t/* DEXCLUDE */\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * Copy into this matrix the given matrix values.\r\n\t * @param {IgeMatrix2d} matrix \r\n\t * @return {Object} \"this\".\r\n\t */\r\n\tcopy: function (matrix) {\r\n\t\tmatrix = matrix.matrix;\r\n\r\n\t\tvar tmatrix = this.matrix;\r\n\t\ttmatrix[0] = matrix[0];\r\n\t\ttmatrix[1] = matrix[1];\r\n\t\ttmatrix[2] = matrix[2];\r\n\t\ttmatrix[3] = matrix[3];\r\n\t\ttmatrix[4] = matrix[4];\r\n\t\ttmatrix[5] = matrix[5];\r\n\t\ttmatrix[6] = matrix[6];\r\n\t\ttmatrix[7] = matrix[7];\r\n\t\ttmatrix[8] = matrix[8];\r\n\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\tcompare: function (matrix) {\r\n\t\tvar thisMatrix = this.matrix,\r\n\t\t\tthatMatrix = matrix.matrix;\r\n\t\t\r\n\t\tfor (var i = 0; i < 9; i++) {\r\n\t\t\tif (thisMatrix[i] !== thatMatrix[i]) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\treturn true;\r\n\t},\r\n\r\n\t/**\r\n\t * Set this matrix to the identity matrix.\r\n\t * @return {Object} \"this\".\r\n\t */\r\n\tidentity: function() {\r\n\r\n\t\tvar m = this.matrix;\r\n\t\tm[0] = 1.0;\r\n\t\tm[1] = 0.0;\r\n\t\tm[2] = 0.0;\r\n\r\n\t\tm[3] = 0.0;\r\n\t\tm[4] = 1.0;\r\n\t\tm[5] = 0.0;\r\n\r\n\t\tm[6] = 0.0;\r\n\t\tm[7] = 0.0;\r\n\t\tm[8] = 1.0;\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * Multiply this matrix by a given matrix.\r\n\t * @param {IgeMatrix2d} m The IgeMatrix2d to multiply the\r\n\t * current matrix by.\r\n\t * @return {Object} \"this\".\r\n\t */\r\n\tmultiply: function (m) {\r\n\t\tvar tm = this.matrix,\r\n\t\t\tmm = m.matrix,\r\n\r\n\t\t\ttm0 = tm[0],\r\n\t\t\ttm1 = tm[1],\r\n\t\t\ttm2 = tm[2],\r\n\t\t\ttm3 = tm[3],\r\n\t\t\ttm4 = tm[4],\r\n\t\t\ttm5 = tm[5],\r\n\t\t\ttm6 = tm[6],\r\n\t\t\ttm7 = tm[7],\r\n\t\t\ttm8 = tm[8],\r\n\r\n\t\t\tmm0 = mm[0],\r\n\t\t\tmm1 = mm[1],\r\n\t\t\tmm2 = mm[2],\r\n\t\t\tmm3 = mm[3],\r\n\t\t\tmm4 = mm[4],\r\n\t\t\tmm5 = mm[5],\r\n\t\t\tmm6 = mm[6],\r\n\t\t\tmm7 = mm[7],\r\n\t\t\tmm8 = mm[8];\r\n\r\n\t\ttm[0] = tm0*mm0 + tm1*mm3 + tm2*mm6;\r\n\t\ttm[1] = tm0*mm1 + tm1*mm4 + tm2*mm7;\r\n\t\ttm[2] = tm0*mm2 + tm1*mm5 + tm2*mm8;\r\n\t\ttm[3] = tm3*mm0 + tm4*mm3 + tm5*mm6;\r\n\t\ttm[4] = tm3*mm1 + tm4*mm4 + tm5*mm7;\r\n\t\ttm[5] = tm3*mm2 + tm4*mm5 + tm5*mm8;\r\n\t\ttm[6] = tm6*mm0 + tm7*mm3 + tm8*mm6;\r\n\t\ttm[7] = tm6*mm1 + tm7*mm4 + tm8*mm7;\r\n\t\ttm[8] = tm6*mm2 + tm7*mm5 + tm8*mm8;\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * Premultiply this matrix by a given matrix.\r\n\t * @param {IgeMatrix2d} m The IgeMatrix2d to premultiply the\r\n\t * current matrix by.\r\n\t * @return {Object} \"this\".\r\n\t */\r\n\tpremultiply: function(m) {\r\n\r\n\t\tvar m00 = m.matrix[0]*this.matrix[0] + m.matrix[1]*this.matrix[3] + m.matrix[2]*this.matrix[6];\r\n\t\tvar m01 = m.matrix[0]*this.matrix[1] + m.matrix[1]*this.matrix[4] + m.matrix[2]*this.matrix[7];\r\n\t\tvar m02 = m.matrix[0]*this.matrix[2] + m.matrix[1]*this.matrix[5] + m.matrix[2]*this.matrix[8];\r\n\r\n\t\tvar m10 = m.matrix[3]*this.matrix[0] + m.matrix[4]*this.matrix[3] + m.matrix[5]*this.matrix[6];\r\n\t\tvar m11 = m.matrix[3]*this.matrix[1] + m.matrix[4]*this.matrix[4] + m.matrix[5]*this.matrix[7];\r\n\t\tvar m12 = m.matrix[3]*this.matrix[2] + m.matrix[4]*this.matrix[5] + m.matrix[5]*this.matrix[8];\r\n\r\n\t\tvar m20 = m.matrix[6]*this.matrix[0] + m.matrix[7]*this.matrix[3] + m.matrix[8]*this.matrix[6];\r\n\t\tvar m21 = m.matrix[6]*this.matrix[1] + m.matrix[7]*this.matrix[4] + m.matrix[8]*this.matrix[7];\r\n\t\tvar m22 = m.matrix[6]*this.matrix[2] + m.matrix[7]*this.matrix[5] + m.matrix[8]*this.matrix[8];\r\n\r\n\t\tthis.matrix[0] = m00;\r\n\t\tthis.matrix[1] = m01;\r\n\t\tthis.matrix[2] = m02;\r\n\r\n\t\tthis.matrix[3] = m10;\r\n\t\tthis.matrix[4] = m11;\r\n\t\tthis.matrix[5] = m12;\r\n\r\n\t\tthis.matrix[6] = m20;\r\n\t\tthis.matrix[7] = m21;\r\n\t\tthis.matrix[8] = m22;\r\n\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * Creates a new inverse matrix from this matrix.\r\n\t * @return {IgeMatrix2d} An inverse matrix.\r\n\t */\r\n\tgetInverse: function() {\r\n\t\tvar tm = this.matrix;\r\n\r\n\t\tvar m00 = tm[0],\r\n\t\t\tm01 = tm[1],\r\n\t\t\tm02 = tm[2],\r\n\t\t\tm10 = tm[3],\r\n\t\t\tm11 = tm[4],\r\n\t\t\tm12 = tm[5],\r\n\t\t\tm20 = tm[6],\r\n\t\t\tm21 = tm[7],\r\n\t\t\tm22 = tm[8],\r\n\r\n\t\t\tnewMatrix = new IgeMatrix2d(),\r\n\t\t\tdeterminant = m00* (m11*m22 - m21*m12) - m10*(m01*m22 - m21*m02) + m20 * (m01*m12 - m11*m02);\r\n\r\n\t\tif  (determinant===0) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\tvar m = newMatrix.matrix;\r\n\r\n\t\tm[0] = m11*m22-m12*m21;\r\n\t\tm[1] = m02*m21-m01*m22;\r\n\t\tm[2] = m01*m12-m02*m11;\r\n\r\n\t\tm[3] = m12*m20-m10*m22;\r\n\t\tm[4] = m00*m22-m02*m20;\r\n\t\tm[5] = m02*m10-m00*m12;\r\n\r\n\t\tm[6] = m10*m21-m11*m20;\r\n\t\tm[7] = m01*m20-m00*m21;\r\n\t\tm[8] = m00*m11-m01*m10;\r\n\r\n\t\tnewMatrix.multiplyScalar (1/determinant);\r\n\r\n\t\treturn newMatrix;\r\n\t},\r\n\r\n\t/**\r\n\t * Multiply this matrix by a scalar.\r\n\t * @param scalar {number} Scalar value.\r\n\t * @return this\r\n\t */\r\n\tmultiplyScalar: function (scalar) {\r\n\t\tvar i;\r\n\r\n\t\tfor (i=0; i<9; i++) {\r\n\t\t\tthis.matrix[i]*=scalar;\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * Transforms the passed rendering context by the current matrix\r\n\t * data using the setTransform() method so that the matrix data\r\n\t * is set non-cumulative with the previous matrix data.\r\n\t * @param {CanvasRenderingContext2d} ctx The rendering context to\r\n\t * set the transform matrix for.\r\n\t */\r\n\ttransformRenderingContextSet: function(ctx) {\r\n\t\tvar m = this.matrix;\r\n\t\tctx.setTransform (m[0], m[3], m[1], m[4], m[2], m[5]);\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * Transforms the passed rendering context by the current matrix\r\n\t * data using the transform() method so that the matrix data\r\n\t * is set cumulative with the previous matrix data.\r\n\t * @param {CanvasRenderingContext2d} ctx The rendering context to\r\n\t * set the transform matrix for.\r\n\t */\r\n\ttransformRenderingContext: function(ctx) {\r\n\t\tvar m = this.matrix;\r\n\t\tctx.transform(m[0], m[3], m[1], m[4], m[2], m[5]);\r\n\t\treturn this;\r\n\t}\r\n};\r\n\r\nif (typeof(module) !== 'undefined' && typeof(module.exports) !== 'undefined') { module.exports = IgeMatrix2d; }","var IgeTimeComponent = IgeEventingClass.extend({\r\n\tclassId: 'IgeTimeComponent',\r\n\tcomponentId: 'time',\r\n\t\r\n\t/**\r\n\t * @constructor\r\n\t * @param {Object} entity The parent object that this component is being added to.\r\n\t * @param {Object=} options An optional object that is passed to the component when it is being initialised.\r\n\t */\r\n\tinit: function (entity, options) {\r\n\t\tthis._entity = entity;\r\n\t\tthis._timers = [];\r\n\t\tthis._additions = [];\r\n\t\tthis._removals = [];\r\n\r\n\t\t// Add the animation behaviour to the entity\r\n\t\tentity.addBehaviour('time', this._update);\r\n\t},\r\n\t\r\n\taddTimer: function (timer) {\r\n\t\tif (timer) {\r\n\t\t\tif (!this._updating) {\r\n\t\t\t\tthis._timers.push(timer);\r\n\t\t\t} else {\r\n\t\t\t\tthis._additions.push(timer);\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\tremoveTimer: function (timer) {\r\n\t\tif (timer) {\r\n\t\t\tif (!this._updating) {\r\n\t\t\t\tthis._timers.pull(timer);\r\n\t\t\t} else {\r\n\t\t\t\tthis._removals.push(timer);\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\t_update: function () {\r\n\t\t// Get the ige tick delta and tell our timers / intervals that an update has occurred\r\n\t\tvar self = ige.time,\r\n\t\t\tdelta = ige._tickDelta,\r\n\t\t\tarr = self._timers,\r\n\t\t\tarrCount = arr.length;\r\n\t\t\r\n\t\twhile (arrCount--) {\r\n\t\t\tarr[arrCount]\r\n\t\t\t\t.addTime(delta)\r\n\t\t\t\t.update();\r\n\t\t}\r\n\t\t\r\n\t\t// Process removing any timers that were scheduled for removal\r\n\t\tself._processRemovals();\r\n\t\t\r\n\t\t// Now process any additions to the timers that were scheduled to be added\r\n\t\tself._processAdditions();\r\n\t\t\r\n\t\treturn self;\r\n\t},\r\n\t\r\n\t_processAdditions: function () {\r\n\t\tvar arr = this._additions,\r\n\t\t\tarrCount = arr.length;\r\n\t\t\r\n\t\tif (arrCount) {\r\n\t\t\twhile (arrCount--) {\r\n\t\t\t\tthis._timers.push(arr[arrCount]);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis._additions = [];\r\n\t\t}\r\n\t\t\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\t_processRemovals: function () {\r\n\t\tvar arr = this._removals,\r\n\t\t\tarrCount = arr.length;\r\n\t\t\r\n\t\tif (arrCount) {\r\n\t\t\twhile (arrCount--) {\r\n\t\t\t\tthis._timers.pull(arr[arrCount]);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis._removals = [];\r\n\t\t}\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n});\r\n\r\nif (typeof(module) !== 'undefined' && typeof(module.exports) !== 'undefined') { module.exports = IgeTimeComponent; }","/**\r\n * The animation component class. Handles defining and controlling\r\n * frame-based animations based on cells from a texture.\r\n * @event started - The animation starts.\r\n * @event stopped - The animation ends or is stopped.\r\n * @event loopComplete - The animation has completed a full cycle (shown all frames).\r\n * @event complete - The animation has completed all assigned loop cycles.\r\n */\r\nvar IgeAnimationComponent = IgeEventingClass.extend({\r\n\tclassId: 'IgeAnimationComponent',\r\n\tcomponentId: 'animation',\r\n\r\n\t/**\r\n\t * @constructor\r\n\t * @param {Object} entity The parent object that this component is being added to.\r\n\t * @param {Object=} options An optional object that is passed to the component when it is being initialised.\r\n\t */\r\n\tinit: function (entity, options) {\r\n\t\tthis._entity = entity;\r\n\t\tthis._anims = {};\r\n\r\n\t\t// Add the animation behaviour to the entity\r\n\t\tentity.addBehaviour('tween', this._update);\r\n\t},\r\n\r\n\t/**\r\n\t * Defines an animation specifying the frames to use, the\r\n\t * frames per second to animate at and if the animation\r\n\t * should loop and if so, how many times.\r\n\t * @param {String} id The unique animation id.\r\n\t * @param {Array} frames An array of cell numbers to animate through.\r\n\t * @param {Number} fps The speed of the animation (frames per second).\r\n\t * @param {Number} loop The number of times to loop the animation, or -1 to loop forever. Defaults to -1.\r\n\t * @param {Boolean} convertIdsToIndex If true will convert cell ids to cell indexes to speed\r\n\t * up animation processing. This is true by default but should be disabled if you intend to\r\n\t * change the assigned texture of the entity that this animation is applied to after you have\r\n\t * defined the animation since the frame indexes will likely map to incorrect cells on a\r\n\t * different texture.\r\n\t * @example #Define an animation\r\n\t *     // Create an entity, add the animation component and define\r\n\t *     // an animation using frames 1, 2, 3 and 4, with an FPS of\r\n\t *     // 25 and looping forever (-1)\r\n\t *     var entity = new IgeEntity()\r\n\t *         .addComponent(IgeAnimationComponent)\r\n\t *         .animation.define('anim1', [1, 2, 3, 4], 25, -1);\r\n\t * @return {*}\r\n\t */\r\n\tdefine: function (id, frames, fps, loop, convertIdsToIndex) {\r\n\t\tif (frames && frames.length) {\r\n\t\t\tvar i, frame;\r\n\t\t\tthis._anims.length = this._anims.length || 0;\r\n\r\n\t\t\tif (convertIdsToIndex === undefined) {\r\n\t\t\t\tconvertIdsToIndex = true; // Default the flag to true if undefined\r\n\t\t\t}\r\n\r\n\t\t\tif (convertIdsToIndex) {\r\n\t\t\t\t// Check each frame for string values\r\n\t\t\t\tfor (i = 0; i < frames.length; i++) {\r\n\t\t\t\t\tframe = frames[i];\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (typeof(frame) === 'string') {\r\n\t\t\t\t\t\tif (this._entity._texture) {\r\n\t\t\t\t\t\t\t// The frame has a cell id so convert to an index\r\n\t\t\t\t\t\t\tframe = this._entity._texture.cellIdToIndex(frame);\r\n\t\t\t\t\t\t\tframes[i] = frame;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tthis.log('You can increase the performance of id-based cell animations by specifying the animation.define AFTER you have assigned your sprite sheet to the entity on entity with ID: ' + this._entity.id(), 'warning');\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Store the animation\r\n\t\t\tvar frameTime = ((1000 / fps)|0);\r\n\t\t\tthis._anims[id] = {\r\n\t\t\t\tframes: frames,\r\n\t\t\t\tframeTime: frameTime,\r\n\t\t\t\tloop: loop !== undefined ? loop : -1, // Default to infinite loop (-1)\r\n\t\t\t\tframeCount: frames.length,\r\n\t\t\t\ttotalTime: frames.length * frameTime,\r\n\t\t\t\tcurrentDelta: 0,\r\n\t\t\t\tcurrentLoop: 0\r\n\t\t\t};\r\n\r\n\t\t\tthis._anims.length++;\r\n\t\t} else {\r\n\t\t\tthis.log('Cannot define an animation without a frame array!', 'error');\r\n\t\t}\r\n\t\treturn this._entity;\r\n\t},\r\n\t\r\n\taddFrame: function (id, frameId) {\r\n\t\tif (this._anims[id]) {\r\n\t\t\tvar anim = this._anims[id];\r\n\t\t\t\r\n\t\t\tif (typeof(frameId) === 'string') {\r\n\t\t\t\tframeId = this._entity._texture.cellIdToIndex(frameId);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tanim.frames.push(frameId);\r\n\t\t\tanim.frameCount++;\r\n\t\t\tanim.totalTime = anim.frames.length * anim.frameTime;\r\n\t\t}\r\n\t},\r\n\t\r\n\tremoveFrame: function (id, frameIndex) {\r\n\t\tif (this._anims[id]) {\r\n\t\t\tvar anim = this._anims[id];\r\n\t\t\t\r\n\t\t\tanim.frames.splice(frameIndex, 1);\r\n\t\t\tanim.frameCount--;\r\n\t\t\tanim.totalTime = anim.frames.length * anim.frameTime;\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Removes a previously defined animation from the entity.\r\n\t * @param {String} id The id of the animation to remove.\r\n\t * @returns {*}\r\n\t */\r\n\tremove: function (id) {\r\n\t\tdelete this._anims[id];\r\n\t\tthis._anims.length--;\r\n\t\t\r\n\t\treturn this._entity;\r\n\t},\r\n\r\n\t/**\r\n\t * Returns true if the specified animation has been defined.\r\n\t * @param {String} id The id of the animation to check for.\r\n\t * @returns {Boolean} True if the animation has been defined.\r\n\t */\r\n\tdefined: function (id) {\r\n\t\treturn Boolean(this._anims[id]);\r\n\t},\r\n\r\n\t/**\r\n\t * Sets the specified animation's FPS.\r\n\t * @param {String} id The ID of the animation to alter the FPS for.\r\n\t * @param {Number=} fps The number of frames per second the animation\r\n\t * should play at.\r\n\t * @example #Set the specified animation's FPS\r\n\t *     // Create an entity, add the animation component and define\r\n\t *     // an animation with an FPS of 25\r\n\t *     var entity = new IgeEntity()\r\n\t *         .addComponent(IgeAnimationComponent)\r\n\t *         .animation.define('anim1', [1, 2, 3, 4], 25, -1);\r\n\t *     \r\n\t *     // Change the FPS to 12\r\n\t *     entity.animation.setFps('anim1', 12);\r\n\t * @return {*}\r\n\t */\r\n\tsetFps: function (id, fps) {\r\n\t\tif (this._anims) {\r\n\t\t\tvar anim = this._anims[id];\r\n\t\t\t\r\n\t\t\tif (anim) {\r\n\t\t\t\tanim.frameTime = ((1000 / fps)|0);\r\n\t\t\t\tanim.totalTime = anim.frameCount * anim.frameTime;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\treturn this._entity;\r\n\t},\r\n\t\r\n\t/**\r\n\t * Sets all the animations assigned to an entity to the specified FPS.\r\n\t * @param {Number=} fps The number of frames per second the animations\r\n\t * should play at.\r\n\t * @example #Set all entity animations to specified FPS\r\n\t *     // Create an entity, add the animation component and define\r\n\t *     // a couple of animations with an FPS of 25\r\n\t *     var entity = new IgeEntity()\r\n\t *         .addComponent(IgeAnimationComponent)\r\n\t *         .animation.define('anim1', [1, 2, 3, 4], 25, -1);\r\n\t *         .animation.define('anim2', [5, 6, 7, 8], 25, -1);\r\n\t *     \r\n\t *     // Change the FPS of all animations to 12\r\n\t *     entity.animation.setAllFps(12);\r\n\t * @return {*}\r\n\t */\r\n\tsetAllFps: function (fps) {\r\n\t\tif (this._anims) {\r\n\t\t\tfor (id in this._anims) {\r\n\t\t\t\tif (this._anims.hasOwnProperty(id)) {\r\n\t\t\t\t\tthis.setFps(id, fps);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\treturn this._entity;\r\n\t},\r\n\r\n\t/**\r\n\t * Checks the current animation state, either started\r\n\t * or stopped. \r\n\t * @return {Boolean} True if an animation is currently playing\r\n\t * or false if not.\r\n\t */\r\n\tplaying: function () {\r\n\t\treturn this._playing;\r\n\t},\r\n\r\n\t/**\r\n\t * Starts an animation from the beginning frame.\r\n\t * @param {String} animId The id of the animation to start.\r\n\t * @param {Object=} options An object with some option properties.\r\n\t * @example #Start an animation\r\n\t *     // Create an entity, add the animation component, define\r\n\t *     // an animation and then start it\r\n\t *     var entity = new IgeEntity()\r\n\t *         .addComponent(IgeAnimationComponent)\r\n\t *         .animation.define('anim1', [1, 2, 3, 4], 25, -1);\r\n\t *         \r\n\t *     entity.animation.start('anim1');\r\n\t *     \r\n\t * @example #Start an animation with callbacks for animation events\r\n\t *     // Create an entity, add the animation component, define\r\n\t *     // an animation and then start it\r\n\t *     var entity = new IgeEntity()\r\n\t *         .addComponent(IgeAnimationComponent)\r\n\t *         .animation.define('anim1', [1, 2, 3, 4], 25, -1);\r\n\t *         \r\n\t *     // In each animation callback...\r\n\t *     // this = the entity's animation component instance\r\n\t *     // anim = the animation component's _anim object\r\n\t *     // this._entity = the entity the animation is attached to\r\n\t *     \r\n\t *     entity.animation.start('anim1', {\r\n\t *     \t\tonLoop: function (anim) {\r\n\t *     \t\t\tconsole.log('Animation looped', this, anim);\t\r\n\t *     \t\t},\r\n\t *     \t\tonStopped: function (anim) {\r\n\t *     \t\t\tconsole.log('Animation stopped', this, anim);\t\r\n\t *     \t\t},\r\n\t *     \t\tonComplete: function (anim) {\r\n\t *     \t\t\tconsole.log('Animation completed', this, anim);\t\r\n\t *     \t\t}\r\n\t *     });\r\n\t *     \r\n\t * @example #Start an animation with callbacks for animation events via event listeners\r\n\t *     // Create an entity, add the animation component, define\r\n\t *     // an animation and then start it\r\n\t *     var entity = new IgeEntity()\r\n\t *         .addComponent(IgeAnimationComponent)\r\n\t *         .animation.define('anim1', [1, 2, 3, 4], 25, -1);\r\n\t *     \r\n\t *     // In each animation callback...\r\n\t *     // this = the entity's animation component instance\r\n\t *     // anim = the animation component's _anim object\r\n\t *     // this._entity = the entity the animation is attached to\r\n\t *     \r\n\t *     entity.animation.on('started', function (anim) {\r\n\t *     \t\tconsole.log('Animation started', this, anim);\t\r\n\t *     });\r\n\t *     \r\n\t *     entity.animation.on('loopComplete', function (anim) {\r\n\t *     \t\tconsole.log('Animation looped', this, anim);\t\r\n\t *     });\r\n\t *     \r\n\t *     entity.animation.on('stopped', function (anim) {\r\n\t *     \t\tconsole.log('Animation stopped', this, anim);\t\r\n\t *     });\r\n\t *     \r\n\t *     entity.animation.on('complete', function (anim) {\r\n\t *     \t\tconsole.log('Animation complete', this, anim);\t\r\n\t *     });\r\n\t *     \r\n\t *     entity.animation.start('anim1');\r\n\t * @return {*}\r\n\t */\r\n\tstart: function (animId, options) {\r\n\t\tif (this._anims) {\r\n\t\t\tvar anim = this._anims[animId];\r\n\r\n\t\t\tif (anim) {\r\n\t\t\t\tanim.currentDelta = 0;\r\n\t\t\t\tanim.currentLoop = 0;\r\n\t\t\t\tanim.startTime = ige._currentTime;\r\n\r\n\t\t\t\tthis._anim = anim;\r\n\t\t\t\tthis._animId = animId;\r\n\t\t\t\t\r\n\t\t\t\t// Check for any callbacks in the options object\r\n\t\t\t\tif (options !== undefined) {\r\n\t\t\t\t\tthis._completeCallback = options.onComplete;\r\n\t\t\t\t\tthis._loopCallback = options.onLoop;\r\n\t\t\t\t\tthis._stoppedCallback = options.onStopped;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tthis._playing = true;\r\n\r\n\t\t\t\tthis.emit('started', anim);\r\n\t\t\t} else {\r\n\t\t\t\tthis.log('Cannot set animation to \"' + animId + '\" because the animation does not exist!', 'warning');\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthis.log('Cannot set animation to \"' + animId + '\" because no animations have been defined with defineAnim(...);', 'warning');\r\n\t\t}\r\n\r\n\t\treturn this._entity;\r\n\t},\r\n\r\n\t/**\r\n\t * Starts an animation only if the passed animation is not already\r\n\t * started.\r\n\t * @param {String} animId The id of the animation to start.\r\n\t * @param {Object=} options An object with some option properties.\r\n\t * @example #Select an animation\r\n\t *     // Create an entity, add the animation component, define\r\n\t *     // an animation and then select it\r\n\t *     var entity = new IgeEntity()\r\n\t *         .addComponent(IgeAnimationComponent)\r\n\t *         .animation.define('anim1', [1, 2, 3, 4], 25, -1);\r\n\t *         \r\n\t *     entity.animation.select('anim1');\r\n\t *     \r\n\t *     // Selecting the same animation twice will NOT reset the\r\n\t *     // animation because it is already playing. This is how\r\n\t *     // select() differs from start()\r\n\t *     entity.animation.select('anim1');\r\n\t * @return {*}\r\n\t */\r\n\tselect: function (animId, options) {\r\n\t\tif (this._animId !== animId) {\r\n\t\t\tthis.start(animId, options);\r\n\t\t}\r\n\r\n\t\treturn this._entity;\r\n\t},\r\n\r\n\t/**\r\n\t * Stops the current animation.\r\n\t * @example #Stop the current animation\r\n\t *     entity.animation.stop();\r\n\t * @return {*}\r\n\t */\r\n\tstop: function () {\r\n\t\tif (this._stoppedCallback) {\r\n\t\t\tthis._stoppedCallback.call(this, this._anim);\r\n\t\t}\r\n\t\t\r\n\t\tthis.emit('stopped', this._anim);\r\n\t\t\r\n\t\tthis._playing = false;\r\n\r\n\t\tdelete this._anim;\r\n\t\tdelete this._animId;\r\n\r\n\t\tdelete this._completeCallback;\r\n\t\tdelete this._loopCallback;\r\n\t\tdelete this._stoppedCallback;\r\n\r\n\t\treturn this._entity;\r\n\t},\r\n\t\r\n\t/**\r\n\t * Handles the animation processing each update.\r\n\t * @param {CanvasRenderingContext2D} ctx The rendering context to use when doing draw operations.\r\n\t * @param {Number} tickDelta The current ige._tickDelta passed down the scenegraph.\r\n\t */\r\n\t_update: function (ctx, tickDelta) {\r\n\t\tvar self = this.animation;\r\n\t\t\r\n\t\t// Just in case someone forgets to pass it in their update call!\r\n\t\ttickDelta = tickDelta || ige._tickDelta;\r\n\t\t\r\n\t\tif (self._anim) {\r\n\t\t\tvar anim = self._anim,\r\n\t\t\t\tmultiple,\r\n\t\t\t\tcell,\r\n\t\t\t\tframe;\r\n\r\n\t\t\t// Advance the internal animation timer\r\n\t\t\tanim.currentDelta += tickDelta;\r\n\r\n\t\t\t// Check if the animation timer is greater than the total animation time\r\n\t\t\tif (anim.currentDelta > anim.totalTime) {\r\n\t\t\t\t// Check if we have a single loop animation\r\n\t\t\t\tif (!anim.loop) {\r\n\t\t\t\t\tif (self._completeCallback) {\r\n\t\t\t\t\t\tself._completeCallback.call(self, anim);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tself.emit('complete', anim);\r\n\t\t\t\t\tself.stop();\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// Check if we have an infinite loop\r\n\t\t\t\t\tif (anim.loop === -1) {\r\n\t\t\t\t\t\t// Loop back round to the beginning\r\n\t\t\t\t\t\tmultiple = anim.currentDelta / anim.totalTime;\r\n\t\t\t\t\t\tif (Math.abs(multiple) > 1) {\r\n\t\t\t\t\t\t\tanim.currentDelta -= ((multiple|0) * anim.totalTime); // Bitwise floor\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (self._loopCallback) {\r\n\t\t\t\t\t\t\tself._loopCallback.call(self, anim);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tself.emit('loopComplete', anim);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tanim.currentLoop++;\r\n\t\t\t\t\t\tif (anim.loop > 0 && anim.currentLoop <= anim.loop) {\r\n\t\t\t\t\t\t\t// Loop back round to the beginning\r\n\t\t\t\t\t\t\tmultiple = anim.currentDelta / anim.totalTime;\r\n\t\t\t\t\t\t\tif (Math.abs(multiple) > 1) {\r\n\t\t\t\t\t\t\t\tanim.currentDelta -= ((multiple|0) * anim.totalTime); // Bitwise floor\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif (self._loopCallback) {\r\n\t\t\t\t\t\t\t\tself._loopCallback.call(self, anim);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tself.emit('loopComplete', anim);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t// The animation has ended\r\n\t\t\t\t\t\t\tif (self._completeCallback) {\r\n\t\t\t\t\t\t\t\tself._completeCallback.call(self, anim);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tself.emit('complete', anim);\r\n\t\t\t\t\t\t\tself.stop();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tframe = ((anim.currentDelta / anim.frameTime)|0);\r\n\r\n\t\t\tif (frame >= anim.frameCount) {\r\n\t\t\t\tframe = anim.frameCount - 1;\r\n\t\t\t}\r\n\r\n\t\t\tcell = anim.frames[frame];\r\n\r\n\t\t\t// Set the current frame\r\n\t\t\tif (typeof(cell) === 'string') {\r\n\t\t\t\tself._entity.cellById(cell);\r\n\t\t\t} else {\r\n\t\t\t\tself._entity.cell(cell);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n});\r\n\r\nif (typeof(module) !== 'undefined' && typeof(module.exports) !== 'undefined') { module.exports = IgeAnimationComponent; }","// TODO: Doc this class!\r\nvar IgeVelocityComponent = IgeClass.extend({\r\n\tclassId: 'IgeVelocityComponent',\r\n\tcomponentId: 'velocity',\r\n\r\n\tinit: function (entity, options) {\r\n\t\tthis._entity = entity;\r\n\r\n\t\tthis._velocity = new IgePoint3d(0, 0, 0);\r\n\t\tthis._friction = new IgePoint3d(1, 1, 1);\r\n\r\n\t\t// Add the velocity behaviour to the entity\r\n\t\tentity.addBehaviour('velocity', this._behaviour);\r\n\t},\r\n\r\n\t/**\r\n\t * The behaviour method executed each tick.\r\n\t * @param ctx\r\n\t * @private\r\n\t */\r\n\t_behaviour: function (ctx) {\r\n\t\tthis.velocity.tick(ctx);\r\n\t},\r\n\r\n\tbyAngleAndPower: function (radians, power, relative) {\r\n\t\tvar vel = this._velocity,\r\n\t\t\tx = Math.cos(radians) * power,\r\n\t\t\ty = Math.sin(radians) * power,\r\n\t\t\tz = 0;\r\n\r\n\t\tif (!relative) {\r\n\t\t\tvel.x = x;\r\n\t\t\tvel.y = y;\r\n\t\t\tvel.z = z;\r\n\t\t} else {\r\n\t\t\tvel.x += x;\r\n\t\t\tvel.y += y;\r\n\t\t\tvel.z += z;\r\n\t\t}\r\n\r\n\t\treturn this._entity;\r\n\t},\r\n\r\n\txyz: function (x, y, z, relative) {\r\n\t\tvar vel = this._velocity;\r\n\r\n\t\tif (!relative) {\r\n\t\t\tvel.x = x;\r\n\t\t\tvel.y = y;\r\n\t\t\tvel.z = z;\r\n\t\t} else {\r\n\t\t\tvel.x += x;\r\n\t\t\tvel.y += y;\r\n\t\t\tvel.z += z;\r\n\t\t}\r\n\r\n\t\treturn this._entity;\r\n\t},\r\n\r\n\tx: function (x, relative) {\r\n\t\tvar vel = this._velocity;\r\n\r\n\t\tif (!relative) {\r\n\t\t\tvel.x = x;\r\n\t\t} else {\r\n\t\t\tvel.x += x;\r\n\t\t}\r\n\r\n\t\treturn this._entity;\r\n\t},\r\n\r\n\ty: function (y, relative) {\r\n\t\tvar vel = this._velocity;\r\n\r\n\t\tif (!relative) {\r\n\t\t\tvel.y = y;\r\n\t\t} else {\r\n\t\t\tvel.y += y;\r\n\t\t}\r\n\r\n\t\treturn this._entity;\r\n\t},\r\n\r\n\tz: function (z, relative) {\r\n\t\tvar vel = this._velocity;\r\n\r\n\t\tif (!relative) {\r\n\t\t\tvel.z = y;\r\n\t\t} else {\r\n\t\t\tvel.z += z;\r\n\t\t}\r\n\r\n\t\treturn this._entity;\r\n\t},\r\n\r\n\tvector3: function (vector, relative) {\r\n\t\tif (typeof(vector.scale) !== 'number') {\r\n\t\t\tvector.scale = 1; // Default to 1\r\n\t\t}\r\n\r\n\t\tvar vel = this._velocity,\r\n\t\t\tx = vector.x,\r\n\t\t\ty = vector.y,\r\n\t\t\tz = vector.z;\r\n\r\n\t\tif (!relative) {\r\n\t\t\tvel.x = x;\r\n\t\t\tvel.y = y;\r\n\t\t\tvel.z = z;\r\n\t\t} else {\r\n\t\t\tvel.x += x;\r\n\t\t\tvel.y += y;\r\n\t\t\tvel.z += z;\r\n\t\t}\r\n\r\n\t\treturn this._entity;\r\n\t},\r\n\r\n\tfriction: function (val) {\r\n\t\tvar finalFriction = 1 - val;\r\n\r\n\t\tif (finalFriction < 0) {\r\n\t\t\tfinalFriction = 0;\r\n\t\t}\r\n\r\n\t\tthis._friction = new IgePoint3d(finalFriction, finalFriction, finalFriction);\r\n\r\n\t\treturn this._entity;\r\n\t},\r\n\r\n\tlinearForce: function (degrees, power) {\r\n\t\tpower /= 1000;\r\n\t\tvar radians = (degrees * Math.PI / 180),\r\n\t\t\tx = Math.cos(radians) * power,\r\n\t\t\ty = Math.sin(radians) * power,\r\n\t\t\tz = x * y;\r\n\t\tthis._linearForce = new IgePoint3d(x, y, z);\r\n\r\n\t\treturn this._entity;\r\n\t},\r\n\r\n\tlinearForceXYZ: function (x, y, z) {\r\n\t\tthis._linearForce = new IgePoint3d(x, y, z);\r\n\t\treturn this._entity;\r\n\t},\r\n\r\n\tlinearForceVector3: function (vector, power, relative) {\r\n\t\tvar force = this._linearForce = this._linearForce || new IgePoint3d(0, 0, 0),\r\n\t\t\tx = vector.x / 1000,\r\n\t\t\ty = vector.y / 1000,\r\n\t\t\tz = vector.z / 1000;\r\n\r\n\t\tif (!relative) {\r\n\t\t\tforce.x = x || 0;\r\n\t\t\tforce.y = y || 0;\r\n\t\t\tforce.z = z || 0;\r\n\t\t} else {\r\n\t\t\tforce.x += x || 0;\r\n\t\t\tforce.y += y || 0;\r\n\t\t\tforce.z += z || 0;\r\n\t\t}\r\n\r\n\t\treturn this._entity;\r\n\t},\r\n\r\n\t_applyLinearForce: function (delta) {\r\n\t\tif (this._linearForce) {\r\n\t\t\tvar vel = this._velocity;\r\n\r\n\t\t\tvel.x += (this._linearForce.x * delta);\r\n\t\t\tvel.y += (this._linearForce.y * delta);\r\n\t\t\tvel.z += (this._linearForce.z * delta);\r\n\t\t}\r\n\t},\r\n\r\n\t_applyFriction: function () {\r\n\t\tvar vel = this._velocity,\r\n\t\t\tfric = this._friction;\r\n\r\n\t\tvel.x *= fric.x;\r\n\t\tvel.y *= fric.y;\r\n\t\tvel.z *= fric.z;\r\n\t},\r\n\r\n\ttick: function (ctx) {\r\n\t\tvar delta = ige._tickDelta,\r\n\t\t\tvel = this._velocity,\r\n\t\t\tx, y, z;\r\n\r\n\t\tif (delta) {\r\n\t\t\tthis._applyLinearForce(delta);\r\n\t\t\t//this._applyFriction();\r\n\r\n\t\t\tx = vel.x * delta;\r\n\t\t\ty = vel.y * delta;\r\n\t\t\tz = vel.z * delta;\r\n\r\n\t\t\tif (x || y || z) {\r\n\t\t\t\tthis._entity.translateBy(x, y, z);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n});\r\n\r\nif (typeof(module) !== 'undefined' && typeof(module.exports) !== 'undefined') { module.exports = IgeVelocityComponent; }","/**\r\n * This component is already included in the IgeEngine (ige)\r\n * instance and is not designed for use in any other way!\r\n * It handles global tween processing on all tweening values.\r\n */\r\nvar IgeTweenComponent = IgeClass.extend({\r\n\tclassId: 'IgeTweenComponent',\r\n\tcomponentId: 'tween',\r\n\r\n\tinit: function (entity, options) {\r\n\t\tthis._entity = entity;\r\n\t\tthis._transform = entity.transform;\r\n\r\n\t\t// Setup the array that will hold our active tweens\r\n\t\tthis._tweens = [];\r\n\r\n\t\t// Add the tween behaviour to the entity \r\n\t\tentity.addBehaviour('tween', this.update);\r\n\t},\r\n\r\n\t/**\r\n\t * Start tweening particular properties for the object.\r\n\t * @param {IgeTween} tween The tween to start.\r\n\t * @return {Number} The index of the added tween or -1 on error.\r\n\t */\r\n\tstart: function (tween) {\r\n\t\tif (tween._startTime > ige._currentTime) {\r\n\t\t\t// The tween is scheduled for later\r\n\t\t\t// Push the tween into the IgeTweenComponent's _tweens array\r\n\t\t\tthis._tweens.push(tween);\r\n\t\t} else {\r\n\t\t\t// The tween should start immediately\r\n\t\t\ttween._currentStep = 0;\r\n\t\t\t\r\n\t\t\t// Setup the tween's step\r\n\t\t\tif (this._setupStep(tween, false)) {\r\n\t\t\t\t// Push the tween into the IgeTweenComponent's _tweens array\r\n\t\t\t\tthis._tweens.push(tween);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Enable tweening on the IgeTweenComponent\r\n\t\tthis.enable();\r\n\r\n\t\t// Return the tween\r\n\t\treturn tween;\r\n\t},\r\n\r\n\t_setupStep: function (tween, newTime) {\r\n\t\tvar targetObj = tween._targetObj,\r\n\t\t\tstep = tween._steps[tween._currentStep],\r\n\t\t\tpropertyNameAndValue, // = tween._propertyObj\r\n\t\t\tdurationMs,\r\n\t\t\tendTime,\r\n\t\t\teasing,\r\n\t\t\tpropertyIndex,\r\n\t\t\ttargetData = [];\r\n\r\n\t\tif (step) {\r\n\t\t\tpropertyNameAndValue = step.props;\r\n\t\t}\r\n\r\n\t\tif (targetObj) {\r\n\t\t\t// Check / fill some option defaults\r\n\t\t\tif (tween._currentStep === 0 && !newTime) {\r\n\t\t\t\t// Because we are on step zero we can check for a start time\r\n\t\t\t\tif (tween._startTime === undefined) {\r\n\t\t\t\t\ttween._startTime = ige._currentTime;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\t// We're not on step zero anymore so the new step start time\r\n\t\t\t\t// is NOW!\r\n\t\t\t\ttween._startTime = ige._currentTime;\r\n\t\t\t}\r\n\r\n\t\t\tdurationMs = step.durationMs ? step.durationMs : tween._durationMs;\r\n\t\t\ttween._selectedEasing = step.easing ? step.easing : tween._easing;\r\n\r\n\t\t\t// Calculate the end time\r\n\t\t\ttween._endTime = tween._startTime + durationMs;\r\n\r\n\t\t\tfor (propertyIndex in propertyNameAndValue) {\r\n\t\t\t\tif (propertyNameAndValue.hasOwnProperty(propertyIndex)) {\r\n\t\t\t\t\ttargetData.push({\r\n\t\t\t\t\t\ttargetObj: targetObj,\r\n\t\t\t\t\t\tpropName: propertyIndex,\r\n\t\t\t\t\t\tdeltaVal: propertyNameAndValue[propertyIndex] - (step.isDelta ? 0 : targetObj[propertyIndex]), // The diff between end and start values\r\n\t\t\t\t\t\toldDelta: 0 // Var to save the old delta in order to get the actual difference data.\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttween._targetData = targetData;\r\n\t\t\ttween._destTime = tween._endTime - tween._startTime;\r\n\r\n\t\t\treturn tween; // Return the tween\r\n\t\t} else {\r\n\t\t\tthis.log('Cannot start tweening properties of the specified object \"' + obj + '\" because it does not exist!', 'error');\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Removes the specified tween from the active tween list.\r\n\t * @param {IgeTween} tween The tween to stop.\r\n\t */\r\n\tstop: function (tween) {\r\n\t\t// Store the new tween details in the item\r\n\t\tthis._tweens.pull(tween);\r\n\r\n\t\tif (!this._tweens.length) {\r\n\t\t\t// Disable tweening on this item as there are\r\n\t\t\t// no more tweens to process\r\n\t\t\tthis.disable();\r\n\t\t}\r\n\t\t\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * Stop all tweening for the object.\r\n\t */\r\n\tstopAll: function () {\r\n\t\t// Disable tweening\r\n\t\tthis.disable();\r\n\r\n\t\t// Remove all tween details\r\n\t\tdelete this._tweens;\r\n\t\tthis._tweens = [];\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * Enable tweening for the object.\r\n\t */\r\n\tenable: function () {\r\n\t\t// Check if the item is currently tweening\r\n\t\tif (!this._tweening) {\r\n\t\t\t// Set the item to tweening\r\n\t\t\tthis._tweening = true;\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * Disable tweening for the object.\r\n\t */\r\n\tdisable: function () {\r\n\t\t// Check if the item is currently tweening\r\n\t\tif (this._tweening) {\r\n\t\t\t// Set the item to not tweening\r\n\t\t\tthis._tweening = false;\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * Process tweening for the object.\r\n\t */\r\n\tupdate: function (ctx) {\r\n\t\tvar thisTween = this.tween;\r\n\t\tif (thisTween._tweens && thisTween._tweens.length) {\r\n\t\t\tvar currentTime = ige._tickStart,\r\n\t\t\t\ttweens = thisTween._tweens,\r\n\t\t\t\ttweenCount = tweens.length,\r\n\t\t\t\ttween,\r\n\t\t\t\tdeltaTime,\r\n\t\t\t\tdestTime,\r\n\t\t\t\teasing,\r\n\t\t\t\titem,\r\n\t\t\t\ttargetProp,\r\n\t\t\t\ttargetPropVal,\r\n\t\t\t\ttargets,\r\n\t\t\t\ttargetIndex,\r\n\t\t\t\tstepIndex,\r\n\t\t\t\tstopped,\r\n\t\t\t\tcurrentDelta;\r\n\r\n\t\t\t// Loop the item's tweens\r\n\t\t\twhile (tweenCount--) {\r\n\t\t\t\ttween = tweens[tweenCount];\r\n\t\t\t\tstopped = false;\r\n\r\n\t\t\t\t// Check if we should be starting this tween yet\r\n\t\t\t\tif (tween._started || currentTime >= tween._startTime) {\r\n\t\t\t\t\tif (!tween._started) {\r\n\t\t\t\t\t\t// Check if the tween's step is -1 indicating no step\r\n\t\t\t\t\t\t// data has been set up yet\r\n\t\t\t\t\t\tif (tween._currentStep === -1) {\r\n\t\t\t\t\t\t\t// Setup the tween step now\r\n\t\t\t\t\t\t\ttween._currentStep = 0;\r\n\t\t\t\t\t\t\tthisTween._setupStep(tween, false);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t// Check if we have a beforeTween callback to fire\r\n\t\t\t\t\t\tif (typeof(tween._beforeTween) === 'function') {\r\n\t\t\t\t\t\t\t// Fire the beforeTween callback\r\n\t\t\t\t\t\t\ttween._beforeTween(tween);\r\n\r\n\t\t\t\t\t\t\t// Delete the callback so we don't store it any longer\r\n\t\t\t\t\t\t\tdelete tween._beforeTween;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Check if we have a beforeStep callback to fire\r\n\t\t\t\t\t\tif (typeof(tween._beforeStep) === 'function') {\r\n\t\t\t\t\t\t\t// Fire the beforeStep callback\r\n\t\t\t\t\t\t\tif (tween._stepDirection) {\r\n\t\t\t\t\t\t\t\tstepIndex = tween._steps.length - (tween._currentStep + 1);\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tstepIndex = tween._currentStep;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\ttween._beforeStep(tween, stepIndex);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\ttween._started = true;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tdeltaTime = currentTime - tween._startTime; // Delta from start time to current time\r\n\t\t\t\t\tdestTime = tween._destTime;\r\n\t\t\t\t\teasing = tween._selectedEasing;\r\n\r\n\t\t\t\t\t// Check if the tween has reached it's destination based upon\r\n\t\t\t\t\t// the current time\r\n\t\t\t\t\tif (deltaTime >= destTime) {\r\n\t\t\t\t\t\t// The tween time indicates the tween has ended so set to\r\n\t\t\t\t\t\t// the ending value\r\n\t\t\t\t\t\ttargets = tween._targetData;\r\n\r\n\t\t\t\t\t\tfor (targetIndex in targets) {\r\n\t\t\t\t\t\t\tif (targets.hasOwnProperty(targetIndex)) {\r\n\t\t\t\t\t\t\t\titem = targets[targetIndex];\r\n\t\t\t\t\t\t\t\ttargetProp = item.targetObj;\r\n\t\t\t\t\t\t\t\ttargetPropVal = targetProp[item.propName];\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t// Check if the destination time is not zero\r\n\t\t\t\t\t\t\t\t// because otherwise the easing method will provide\r\n\t\t\t\t\t\t\t\t// a divide by zero error resulting in a NaN value\r\n\t\t\t\t\t\t\t\tif (destTime !== 0) {\r\n\t\t\t\t\t\t\t\t\t// Add the delta amount to destination\r\n\t\t\t\t\t\t\t\t\tcurrentDelta = thisTween.easing[easing](\r\n\t\t\t\t\t\t\t\t\t\tdestTime,\r\n\t\t\t\t\t\t\t\t\t\titem.deltaVal,\r\n\t\t\t\t\t\t\t\t\t\tdestTime\r\n\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tcurrentDelta = item.deltaVal;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\ttargetPropVal += currentDelta - item.oldDelta;\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t// Round the value to correct floating point operation imprecision\r\n\t\t\t\t\t\t\t\tvar roundingPrecision = Math.pow(10, 15-(targetPropVal.toFixed(0).toString().length));\r\n\t\t\t\t\t\t\t\ttargetProp[item.propName] = Math.round(targetPropVal * roundingPrecision)/roundingPrecision;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Check if we have a afterStep callback to fire\r\n\t\t\t\t\t\tif (typeof(tween._afterStep) === 'function') {\r\n\t\t\t\t\t\t\t// Fire the afterStep\r\n\t\t\t\t\t\t\tif (tween._stepDirection) {\r\n\t\t\t\t\t\t\t\tstepIndex = tween._steps.length - (tween._currentStep + 1);\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tstepIndex = tween._currentStep;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\ttween._afterStep(tween, stepIndex);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (tween._steps.length === tween._currentStep + 1) {\r\n\t\t\t\t\t\t\t// The tween has ended, is the tween repeat mode enabled?\r\n\t\t\t\t\t\t\tif (tween._repeatMode) {\r\n\t\t\t\t\t\t\t\t// We have a repeat mode, lets check for a count\r\n\t\t\t\t\t\t\t\tif (tween._repeatCount !== -1) {\r\n\t\t\t\t\t\t\t\t\t// Check if the repeat count has reached the\r\n\t\t\t\t\t\t\t\t\t// number of repeats we wanted\r\n\t\t\t\t\t\t\t\t\ttween._repeatedCount++;\r\n\t\t\t\t\t\t\t\t\tif (tween._repeatCount === tween._repeatedCount) {\r\n\t\t\t\t\t\t\t\t\t\t// The tween has ended\r\n\t\t\t\t\t\t\t\t\t\tstopped = true;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\tif (!stopped) {\r\n\t\t\t\t\t\t\t\t\t// Work out what mode we're running on\r\n\t\t\t\t\t\t\t\t\tif (tween._repeatMode === 1) {\r\n\t\t\t\t\t\t\t\t\t\ttween._currentStep = 0;\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\tif (tween._repeatMode === 2) {\r\n\t\t\t\t\t\t\t\t\t\t// We are on \"reverse loop\" mode so now\r\n\t\t\t\t\t\t\t\t\t\t// reverse the tween's steps and then\r\n\t\t\t\t\t\t\t\t\t\t// start from step zero\r\n\t\t\t\t\t\t\t\t\t\ttween._stepDirection = !tween._stepDirection;\r\n\t\t\t\t\t\t\t\t\t\ttween._steps.reverse();\r\n\r\n\t\t\t\t\t\t\t\t\t\ttween._currentStep = 1;\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\t// Check if we have a stepsComplete callback to fire\r\n\t\t\t\t\t\t\t\t\tif (typeof(tween._stepsComplete) === 'function') {\r\n\t\t\t\t\t\t\t\t\t\t// Fire the stepsComplete callback\r\n\t\t\t\t\t\t\t\t\t\ttween._stepsComplete(tween, tween._currentStep);\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\t// Check if we have a beforeStep callback to fire\r\n\t\t\t\t\t\t\t\t\tif (typeof(tween._beforeStep) === 'function') {\r\n\t\t\t\t\t\t\t\t\t\t// Fire the beforeStep callback\r\n\t\t\t\t\t\t\t\t\t\tif (tween._stepDirection) {\r\n\t\t\t\t\t\t\t\t\t\t\tstepIndex = tween._steps.length - (tween._currentStep + 1);\r\n\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\tstepIndex = tween._currentStep;\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\ttween._beforeStep(tween, stepIndex);\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\tthisTween._setupStep(tween, true);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tstopped = true;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif (stopped) {\r\n\t\t\t\t\t\t\t\t// Now stop tweening this tween\r\n\t\t\t\t\t\t\t\ttween.stop();\r\n\r\n\t\t\t\t\t\t\t\t// If there is a callback, call it\r\n\t\t\t\t\t\t\t\tif (typeof(tween._afterTween) === 'function') {\r\n\t\t\t\t\t\t\t\t\t// Fire the afterTween callback\r\n\t\t\t\t\t\t\t\t\ttween._afterTween(tween);\r\n\r\n\t\t\t\t\t\t\t\t\t// Delete the callback so we don't store it any longer\r\n\t\t\t\t\t\t\t\t\tdelete tween._afterTween;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t// Start the next step\r\n\t\t\t\t\t\t\ttween._currentStep++;\r\n\r\n\t\t\t\t\t\t\t// Check if we have a beforeStep callback to fire\r\n\t\t\t\t\t\t\tif (typeof(tween._beforeStep) === 'function') {\r\n\t\t\t\t\t\t\t\t// Fire the beforeStep callback\r\n\t\t\t\t\t\t\t\tif (tween._stepDirection) {\r\n\t\t\t\t\t\t\t\t\tstepIndex = tween._steps.length - (tween._currentStep + 1);\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tstepIndex = tween._currentStep;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\ttween._beforeStep(tween, stepIndex);\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tthisTween._setupStep(tween, true);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif (typeof(tween._afterChange) === 'function') {\r\n\t\t\t\t\t\t\ttween._afterChange(tween, stepIndex);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// The tween is still active, process the tween by passing it's details\r\n\t\t\t\t\t\t// to the selected easing method\r\n\t\t\t\t\t\ttargets = tween._targetData;\r\n\r\n\t\t\t\t\t\tfor (targetIndex in targets) {\r\n\t\t\t\t\t\t\tif (targets.hasOwnProperty(targetIndex)) {\r\n\t\t\t\t\t\t\t\titem = targets[targetIndex];\r\n\t\t\t\t\t\t\t\tvar currentDelta = thisTween.easing[easing](\r\n\t\t\t\t\t\t\t\t\tdeltaTime,\r\n\t\t\t\t\t\t\t\t\titem.deltaVal,\r\n\t\t\t\t\t\t\t\t\tdestTime\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\titem.targetObj[item.propName] += currentDelta - item.oldDelta;\r\n\t\t\t\t\t\t\t\titem.oldDelta = currentDelta;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif (typeof(tween._afterChange) === 'function') {\r\n\t\t\t\t\t\t\ttween._afterChange(tween, stepIndex);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\t/** tweenEasing - Contains all the tween easing functions. {\r\n\t\tcategory:\"property\",\r\n\t\ttype:\"object\",\r\n\t} **/\r\n\teasing: {\r\n\t\t// Easing equations converted from AS to JS from original source at\r\n\t\t// http://robertpenner.com/easing/\r\n\t\tnone: function(t, c, d) {\r\n\t\t\treturn c*t/d;\r\n\t\t},\r\n\t\tinQuad: function(t, c, d) {\r\n\t\t\treturn c*(t/=d)*t;\r\n\t\t},\r\n\t\toutQuad: function(t, c, d) {\r\n\t\t\treturn -c *(t/=d)*(t-2);\r\n\t\t},\r\n\t\tinOutQuad: function(t, c, d) {\r\n\t\t\tif((t/=d/2) < 1) { return c/2*t*t; }\r\n\t\t\treturn -c/2 *((--t)*(t-2) - 1);\r\n\t\t},\r\n\t\tinCubic: function(t, c, d) {\r\n\t\t\treturn c*(t/=d)*t*t;\r\n\t\t},\r\n\t\toutCubic: function(t, c, d) {\r\n\t\t\treturn c*((t=t/d-1)*t*t + 1);\r\n\t\t},\r\n\t\tinOutCubic: function(t, c, d) {\r\n\t\t\tif((t/=d/2) < 1) { return c/2*t*t*t; }\r\n\t\t\treturn c/2*((t-=2)*t*t + 2);\r\n\t\t},\r\n\t\toutInCubic: function(t, c, d) {\r\n\t\t\tif(t < d/2) { return this.outCubic(t*2, c/2, d); }\r\n\t\t\treturn this.inCubic((t*2)-d, c/2, c/2, d);\r\n\t\t},\r\n\t\tinQuart: function(t, c, d) {\r\n\t\t\treturn c*(t/=d)*t*t*t;\r\n\t\t},\r\n\t\toutQuart: function(t, c, d) {\r\n\t\t\treturn -c *((t=t/d-1)*t*t*t - 1);\r\n\t\t},\r\n\t\tinOutQuart: function(t, c, d) {\r\n\t\t\tif((t/=d/2) < 1) { return c/2*t*t*t*t; }\r\n\t\t\treturn -c/2 *((t-=2)*t*t*t - 2);\r\n\t\t},\r\n\t\toutInQuart: function(t, c, d) {\r\n\t\t\tif(t < d/2) { return this.outQuart(t*2, c/2, d); }\r\n\t\t\treturn this.inQuart((t*2)-d, c/2, c/2, d);\r\n\t\t},\r\n\t\tinQuint: function(t, c, d) {\r\n\t\t\treturn c*(t/=d)*t*t*t*t;\r\n\t\t},\r\n\t\toutQuint: function(t, c, d) {\r\n\t\t\treturn c*((t=t/d-1)*t*t*t*t + 1);\r\n\t\t},\r\n\t\tinOutQuint: function(t, c, d) {\r\n\t\t\tif((t/=d/2) < 1) { return c/2*t*t*t*t*t; }\r\n\t\t\treturn c/2*((t-=2)*t*t*t*t + 2);\r\n\t\t},\r\n\t\toutInQuint: function(t, c, d) {\r\n\t\t\tif(t < d/2) { return this.outQuint(t*2, c/2, d); }\r\n\t\t\treturn this.inQuint((t*2)-d, c/2, c/2, d);\r\n\t\t},\r\n\t\tinSine: function(t, c, d) {\r\n\t\t\treturn -c * Math.cos(t/d *(Math.PI/2)) + c;\r\n\t\t},\r\n\t\toutSine: function(t, c, d) {\r\n\t\t\treturn c * Math.sin(t/d *(Math.PI/2));\r\n\t\t},\r\n\t\tinOutSine: function(t, c, d) {\r\n\t\t\treturn -c/2 *(Math.cos(Math.PI*t/d) - 1);\r\n\t\t},\r\n\t\toutInSine: function(t, c, d) {\r\n\t\t\tif(t < d/2) { return this.outSine(t*2, c/2, d); }\r\n\t\t\treturn this.inSine((t*2)-d, c/2, c/2, d);\r\n\t\t},\r\n\t\tinExpo: function(t, c, d) {\r\n\t\t\treturn(t === 0) ? 0 : c * Math.pow(2, 10 *(t/d - 1)) - c * 0.001;\r\n\t\t},\r\n\t\toutExpo: function(t, c, d) {\r\n\t\t\treturn(t === d) ? c : c * 1.001 *(-Math.pow(2, -10 * t/d) + 1);\r\n\t\t},\r\n\t\tinOutExpo: function(t, c, d) {\r\n\t\t\tif(t === 0) { return 0; }\r\n\t\t\tif(t === d) { return c; }\r\n\t\t\tif((t/=d/2) < 1) { return c/2 * Math.pow(2, 10 *(t - 1)) - c * 0.0005; }\r\n\t\t\treturn c/2 * 1.0005 *(-Math.pow(2, -10 * --t) + 2);\r\n\t\t},\r\n\t\toutInExpo: function(t, c, d) {\r\n\t\t\tif(t < d/2) { return this.outExpo(t*2, c/2, d); }\r\n\t\t\treturn this.inExpo((t*2)-d, c/2, c/2, d);\r\n\t\t},\r\n\t\tinCirc: function(t, c, d) {\r\n\t\t\treturn -c *(Math.sqrt(1 -(t/=d)*t) - 1);\r\n\t\t},\r\n\t\toutCirc: function(t, c, d) {\r\n\t\t\treturn c * Math.sqrt(1 -(t=t/d-1)*t);\r\n\t\t},\r\n\t\tinOutCirc: function(t, c, d) {\r\n\t\t\tif((t/=d/2) < 1) { return -c/2 *(Math.sqrt(1 - t*t) - 1); }\r\n\t\t\treturn c/2 *(Math.sqrt(1 -(t-=2)*t) + 1);\r\n\t\t},\r\n\t\toutInCirc: function(t, c, d) {\r\n\t\t\tif(t < d/2) { return this.outCirc(t*2, c/2, d); }\r\n\t\t\treturn this.inCirc((t*2)-d, c/2, c/2, d);\r\n\t\t},\r\n\t\tinElastic: function(t, c, d, a, p) {\r\n\t\t\tvar s;\r\n\t\t\tif(t===0) {return 0;}\r\n\t\t\tif((t/=d)===1) { return c; }\r\n\t\t\tif(!p) { p=d*0.3; }\r\n\t\t\tif(!a || a < Math.abs(c)) { a=c; s=p/4; } else { s = p/(2*Math.PI) * Math.asin(c/a); }\r\n\t\t\treturn -(a*Math.pow(2,10*(t-=1)) * Math.sin((t*d-s)*(2*Math.PI)/p ));\r\n\t\t},\r\n\t\toutElastic: function(t, c, d, a, p) {\r\n\t\t\tvar s;\r\n\t\t\tif(t===0) { return 0; }\r\n\t\t\tif((t/=d)===1) { return c; }\r\n\t\t\tif(!p) { p=d*0.3; }\r\n\t\t\tif(!a || a < Math.abs(c)) { a=c; s=p/4; } else { s = p/(2*Math.PI) * Math.asin(c/a); }\r\n\t\t\treturn(a*Math.pow(2,-10*t) * Math.sin((t*d-s)*(2*Math.PI)/p ) + c);\r\n\t\t},\r\n\t\tinOutElastic: function(t, c, d, a, p) {\r\n\t\t\tvar s;\r\n\t\t\tif(t===0) { return 0; }\r\n\t\t\tif((t/=d/2)===2) { return c; }\r\n\t\t\tif(!p) { p=d*(0.3*1.5); }\r\n\t\t\tif(!a || a < Math.abs(c)) { a=c; s=p/4; } else { s = p/(2*Math.PI) * Math.asin(c/a); }\r\n\t\t\tif(t < 1) { return -0.5*(a*Math.pow(2,10*(t-=1)) * Math.sin((t*d-s)*(2*Math.PI)/p)); }\r\n\t\t\treturn a*Math.pow(2,-10*(t-=1)) * Math.sin((t*d-s)*(2*Math.PI)/p )*0.5 + c;\r\n\t\t},\r\n\t\toutInElastic: function(t, c, d, a, p) {\r\n\t\t\tif(t < d/2) { return this.outElastic(t*2, c/2, d, a, p); }\r\n\t\t\treturn this.inElastic((t*2)-d, c/2, c/2, d, a, p);\r\n\t\t},\r\n\t\tinBack: function(t, c, d, s) {\r\n\t\t\tif(s === undefined) { s = 1.70158; }\r\n\t\t\treturn c*(t/=d)*t*((s+1)*t - s);\r\n\t\t},\r\n\t\toutBack: function(t, c, d, s) {\r\n\t\t\tif(s === undefined) { s = 1.70158; }\r\n\t\t\treturn c*((t=t/d-1)*t*((s+1)*t + s) + 1);\r\n\t\t},\r\n\t\tinOutBack: function(t, c, d, s) {\r\n\t\t\tif(s === undefined) { s = 1.70158; }\r\n\t\t\tif((t/=d/2) < 1) { return c/2*(t*t*(((s*=(1.525))+1)*t - s)); }\r\n\t\t\treturn c/2*((t-=2)*t*(((s*=(1.525))+1)*t + s) + 2);\r\n\t\t},\r\n\t\toutInBack: function(t, c, d, s) {\r\n\t\t\tif(t < d/2) { return this.outBack(t*2, c/2, d, s); }\r\n\t\t\treturn this.inBack((t*2)-d, c/2, c/2, d, s);\r\n\t\t},\r\n\t\tinBounce: function(t, c, d) {\r\n\t\t\treturn c - this.outBounce(d-t, 0, c, d);\r\n\t\t},\r\n\t\toutBounce: function(t, c, d) {\r\n\t\t\tif((t/=d) <(1/2.75)) {\r\n\t\t\t\treturn c*(7.5625*t*t);\r\n\t\t\t} else if(t <(2/2.75)) {\r\n\t\t\t\treturn c*(7.5625*(t-=(1.5/2.75))*t + 0.75);\r\n\t\t\t} else if(t <(2.5/2.75)) {\r\n\t\t\t\treturn c*(7.5625*(t-=(2.25/2.75))*t + 0.9375);\r\n\t\t\t} else {\r\n\t\t\t\treturn c*(7.5625*(t-=(2.625/2.75))*t + 0.984375);\r\n\t\t\t}\r\n\t\t},\r\n\t\tinOutBounce: function(t, c, d) {\r\n\t\t\tif(t < d/2) {\r\n\t\t\t\treturn this.inBounce(t*2, 0, c, d) * 0.5;\r\n\t\t\t} else {\r\n\t\t\t\treturn this.outBounce(t*2-d, 0, c, d) * 0.5 + c*0.5;\r\n\t\t\t}\r\n\t\t},\r\n\t\toutInBounce: function(t, c, d) {\r\n\t\t\tif(t < d/2) { return this.outBounce(t*2, c/2, d); }\r\n\t\t\treturn this.inBounce((t*2)-d, c/2, c/2, d);\r\n\t\t}\r\n\t}\r\n});\r\n\r\nif (typeof(module) !== 'undefined' && typeof(module.exports) !== 'undefined') { module.exports = IgeTweenComponent; }","/**\r\n * Handles entity path traversal.\r\n */\r\nvar IgePathComponent = IgeEventingClass.extend({\r\n\tclassId: 'IgePathComponent',\r\n\tcomponentId: 'path',\r\n\r\n\tinit: function (entity, options) {\r\n\t\tthis._entity = entity;\r\n\t\tthis._points = [];\r\n\t\tthis._speed = 1 / 1000;\r\n\t\t\r\n\t\tthis._previousPointFrom = 0;\r\n\t\tthis._currentPointFrom = 0;\r\n\t\tthis._previousPointTo = 0;\r\n\t\tthis._currentPointTo = 0;\r\n\t\t\r\n\t\t// Add the path behaviour to the entity\r\n\t\tentity.addBehaviour('path', this._updateBehaviour, false);\r\n\t},\r\n\r\n\t/**\r\n\t * Gets / sets the tile map that will be used when calculating paths.\r\n\t * @param {IgeTileMap2d} val The tileMap to use for path calculations.\r\n\t * @returns {*}\r\n\t */\r\n\ttileMap: function (val) {\r\n\t\tif (val !== undefined) {\r\n\t\t\tthis._tileMap = val;\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\treturn this._tileMap;\r\n\t},\r\n\t\r\n\t/**\r\n\t * Gets / sets the path finder class instance used to generate paths.\r\n\t * @param {IgePathFinder} val The pathfinder class instance to use to generate paths.\r\n\t * @returns {*}\r\n\t */\r\n\tfinder: function (val) {\r\n\t\tif (val !== undefined) {\r\n\t\t\tthis._finder = val;\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\treturn this._finder;\r\n\t},\r\n\r\n\t/**\r\n\t * Gets / sets the dynamic mode enabled flag. If dynamic mode is enabled\r\n\t * then at the end of every path point (reaching a tile along the path)\r\n\t * the path finder will evaluate the path by looking ahead and seeing if\r\n\t * the path has changed (the tiles along the path have now been marked as\r\n\t * cannot path on). If any tile along the path up to the look-ahead value\r\n\t * has been blocked, the path will auto re-calculate to avoid the new block.\r\n\t * \r\n\t * For dynamic mode to work you need to supply a path-finder instance by\r\n\t * calling .finder(), a tile checker method by calling .tileChecker() and\r\n\t * the number of look-ahead steps by calling .lookAheadSteps(). See the\r\n\t * doc for those methods for usage and required arguments.\r\n\t * @param {Boolean} enable If set to true, enables dynamic mode.\r\n\t * @returns {*}\r\n\t */\r\n\tdynamic: function (enable) {\r\n\t\tif (enable !== undefined) {\r\n\t\t\tthis._dynamic = enable;\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\treturn this._dynamic;\r\n\t},\r\n\r\n\t/**\r\n\t * Gets / sets the tile checker method used when calculating paths.\r\n\t * @param {Function=} val The method to call when checking if a tile is valid\r\n\t * to traverse when calculating paths.\r\n\t * @returns {*}\r\n\t */\r\n\ttileChecker: function (val) {\r\n\t\tif (val !== undefined) {\r\n\t\t\tvar self = this;\r\n\t\t\t\r\n\t\t\tthis._tileChecker = function () { return val.apply(self._entity, arguments); };\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\treturn this._tileChecker;\r\n\t},\r\n\t\r\n\tlookAheadSteps: function (val) {\r\n\t\tif (val !== undefined) {\r\n\t\t\tthis._lookAheadSteps = val;\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\treturn this._lookAheadSteps;\r\n\t},\r\n\r\n\t/**\r\n\t * Gets / sets the flag determining if a path can use N, S, E and W movement.\r\n\t * @param {Boolean=} val Set to true to allow, false to disallow.\r\n\t * @returns {*}\r\n\t */\r\n\tallowSquare: function (val) {\r\n\t\tif (val !== undefined) {\r\n\t\t\tthis._allowSquare = val;\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\treturn this._allowSquare;\r\n\t},\r\n\t\r\n\t/**\r\n\t * Gets / sets the flag determining if a path can use NW, SW, NE and SE movement.\r\n\t * @param {Boolean=} val Set to true to allow, false to disallow.\r\n\t * @returns {*}\r\n\t */\r\n\tallowDiagonal: function (val) {\r\n\t\tif (val !== undefined) {\r\n\t\t\tthis._allowDiagonal = val;\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\treturn this._allowDiagonal;\r\n\t},\r\n\r\n\t/**\r\n\t * Clears any existing path points and sets the path the entity will traverse\r\n\t * from start to finish.\r\n\t * @param {Number} fromX The x tile to path from.\r\n\t * @param {Number} fromY The y tile to path from.\r\n\t * @param {Number} fromZ The z tile to path from.\r\n\t * @param {Number} toX The x tile to path to.\r\n\t * @param {Number} toY The y tile to path to.\r\n\t * @param {Number} toZ The z tile to path to.\r\n\t * @param {Boolean=} findNearest If the destination is unreachable, when set to\r\n\t * true this option will allow the pathfinder to return the closest path to the\r\n\t * destination tile.\r\n\t * @returns {*}\r\n\t */\r\n\tset: function (fromX, fromY, fromZ, toX, toY, toZ, findNearest) {\r\n\t\t// Clear existing path\r\n\t\tthis.clear();\r\n\t\t\r\n\t\t// Create a new path\r\n\t\tvar path = this._finder.generate(\r\n\t\t\tthis._tileMap,\r\n\t\t\tnew IgePoint3d(fromX, fromY, fromZ),\r\n\t\t\tnew IgePoint3d(toX, toY, toZ),\r\n\t\t\tthis._tileChecker,\r\n\t\t\tthis._allowSquare,\r\n\t\t\tthis._allowDiagonal,\r\n\t\t\tfindNearest\r\n\t\t);\r\n\t\t\r\n\t\tthis.addPoints(path);\r\n\t\t\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\tadd: function (x, y, z, findNearest) {\r\n\t\t// Get the endPoint of the current path\r\n\t\tvar endPoint = this.getEndPoint(),\r\n\t\t\tshift = true;\r\n\t\t\r\n\t\tif (!endPoint) {\r\n\t\t\t// There is no existing path, detect current tile position\r\n\t\t\tendPoint = this._entity._parent.pointToTile(this._entity._translate);\r\n\t\t\tshift = false;\r\n\t\t}\r\n\t\t\r\n\t\t// Create a new path\r\n\t\tvar path = this._finder.generate(\r\n\t\t\tthis._tileMap,\r\n\t\t\tendPoint,\r\n\t\t\tnew IgePoint3d(x, y, z),\r\n\t\t\tthis._tileChecker,\r\n\t\t\tthis._allowSquare,\r\n\t\t\tthis._allowDiagonal,\r\n\t\t\tfindNearest\r\n\t\t);\r\n\t\t\r\n\t\tif (shift) {\r\n\t\t\t// Remove the first tile, it's the last one on the list already\r\n\t\t\tpath.shift();\r\n\t\t}\r\n\t\t\r\n\t\tthis.addPoints(path);\r\n\t\t\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * Adds a path array containing path points (IgePoint3d instances) to the points queue.\r\n\t * @param {Array} path An array of path points.\r\n\t * @return {*}\r\n\t */\r\n\taddPoints: function (path) {\r\n\t\tif (path !== undefined) {\r\n\t\t\t// Check the path array has items in it!\r\n\t\t\tif (path.length) {\r\n\t\t\t\tthis._points = this._points.concat(path);\r\n\t\t\t\tthis._calculatePathData();\r\n\t\t\t} else {\r\n\t\t\t\tthis.log('Cannot add an empty path to the path queue!', 'warning');\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * Gets the path node point that the entity is travelling from.\r\n\t * @return {IgePoint3d} A new point representing the travelled from node.\r\n\t */\r\n\tgetFromPoint: function () {\r\n\t\treturn this._points[this._currentPointFrom];\r\n\t},\r\n\r\n\t/**\r\n\t * Gets the path node point that the entity is travelling to.\r\n\t * @return {IgePoint3d} A new point representing the travelling to node.\r\n\t */\r\n\tgetToPoint: function () {\r\n\t\treturn this._points[this._currentPointTo];\r\n\t},\r\n\r\n\t/**\r\n\t * Gets the current direction.\r\n\t * @example #Get the direction of movement along the current path\r\n\t *     // Create an entity and add the path component\r\n\t *     var entity = new IgeEntity()\r\n\t *         .addComponent(IgePathComponent);\r\n\t *     \r\n\t *     // Create a path and add it to the entity\r\n\t *     // ...\r\n\t *     // Now get the current direction\r\n\t *     var direction = entity.path.currentDirection();\r\n\t * @return {String} A string such as N, S, E, W, NW, NE, SW, SE.\r\n\t * If there is currently no direction then the return value is a blank string.\r\n\t */\r\n\tgetDirection: function () {\r\n\t\tif (!this._finished) {\r\n\t\t\tvar cell = this.getToPoint(),\r\n\t\t\t\tdir = '';\r\n\t\t\t\r\n\t\t\tif (cell) {\r\n\t\t\t\tdir = cell.direction;\r\n\t\t\t\t\r\n\t\t\t\tif (this._entity._mode === 1) {\r\n\t\t\t\t\t// Convert direction for isometric\r\n\t\t\t\t\tswitch (dir) {\r\n\t\t\t\t\t\tcase 'E':\r\n\t\t\t\t\t\t\tdir = 'SE';\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tcase 'S':\r\n\t\t\t\t\t\t\tdir = 'SW';\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tcase 'W':\r\n\t\t\t\t\t\t\tdir = 'NW';\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tcase 'N':\r\n\t\t\t\t\t\t\tdir = 'NE';\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tcase 'NE':\r\n\t\t\t\t\t\t\tdir = 'E';\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tcase 'SW':\r\n\t\t\t\t\t\t\tdir = 'W';\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tcase 'NW':\r\n\t\t\t\t\t\t\tdir = 'N';\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tcase 'SE':\r\n\t\t\t\t\t\t\tdir = 'S';\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tdir = '';\r\n\t\t}\r\n\r\n\t\treturn dir;\r\n\t},\r\n\r\n\t/**\r\n\t * Gets / sets the time towards the end of the path when the path\r\n\t * component will emit a \"almostComplete\" event.\r\n\t * @param {Number=} ms The time in milliseconds to emit the event\r\n\t * on before the end of the path.\r\n\t * @return {*}\r\n\t */\r\n\twarnTime: function (ms) {\r\n\t\tif (ms !== undefined) {\r\n\t\t\tthis._warnTime = ms;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\treturn this._warnTime;\r\n\t},\r\n\r\n\t/**\r\n\t * Gets / sets the flag determining if the entity moving along\r\n\t * the path will stop automatically at the end of the path.\r\n\t * @param {Boolean=} val If true, will stop at the end of the path.\r\n\t * @return {*}\r\n\t */\r\n\tautoStop: function (val) {\r\n\t\tif (val !== undefined) {\r\n\t\t\tthis._autoStop = val;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\treturn this._autoStop;\r\n\t},\r\n\r\n\t/**\r\n\t * Gets / sets the speed at which the entity will traverse the path in pixels\r\n\t * per second (world space).\r\n\t * @param {Number=} val\r\n\t * @return {*}\r\n\t */\r\n\tspeed: function (val) {\r\n\t\tif (val !== undefined) {\r\n\t\t\tthis._speed = val / 1000;\r\n\t\t\t\r\n\t\t\tif (this._active) {\r\n\t\t\t\tthis.stop();\r\n\t\t\t\tthis.start(this._startTime);\r\n\t\t\t}\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\treturn this._speed;\r\n\t},\r\n\r\n\t/**\r\n\t * Starts path traversal.\r\n\t * @param {Number=} startTime The time to start path traversal. Defaults\r\n\t * to new Date().getTime() if no\r\n\t * value is presented.\r\n\t * @return {*}\r\n\t */\r\n\tstart: function (startTime) {\r\n\t\tif (!this._active) {\r\n\t\t\tthis._active = true;\r\n\t\t\tthis._finished = false;\r\n\t\t\tthis._startTime = startTime || ige._currentTime;\r\n\t\t\t\r\n\t\t\tthis._calculatePathData();\r\n\t\t} else {\r\n\t\t\tthis._finished = false;\r\n\t\t}\r\n\t\t\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * Returns the last point of the last path in the path queue.\r\n\t * @return {IgePoint3d}\r\n\t */\r\n\tgetEndPoint: function () {\r\n\t\treturn this._points[this._points.length - 1];\r\n\t},\r\n\r\n\t/**\r\n\t * Pauses path traversal but does not clear the path queue or any path data.\r\n\t * @return {*}\r\n\t */\r\n\tpause: function () {\r\n\t\tthis._active = false;\r\n\t\tthis._paused = true;\r\n\t\tthis._pauseTime = ige._currentTime;\r\n\t\t\r\n\t\tthis.emit('paused', this._entity);\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * Clears all path queue and path data.\r\n\t * @return {*}\r\n\t */\r\n\tclear: function () {\r\n\t\tif (this._active) {\r\n\t\t\tthis.stop();\r\n\t\t}\r\n\t\t\r\n\t\tthis._previousPointFrom = 0;\r\n\t\tthis._currentPointFrom = 0;\r\n\t\tthis._previousPointTo = 0;\r\n\t\tthis._currentPointTo = 0;\r\n\t\tthis._points = [];\r\n\t\t\r\n\t\tthis.emit('cleared', this._entity);\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\t/**\r\n\t * Stops path traversal but does not clear the path\r\n\t * queue or any path data.\r\n\t * @return {*}\r\n\t */\r\n\tstop: function () {\r\n\t\t//this.log('Setting pathing as inactive...');\r\n\t\tthis._active = false;\r\n\t\tthis._finished = true;\r\n\t\tthis.emit('stopped', this._entity);\r\n\t\t\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * Gets / sets the flag determining if the path component\r\n\t * should draw the current path of the entity to the canvas\r\n\t * on each tick. Useful for debugging paths.\r\n\t * @param {Boolean=} val If true, will draw the path.\r\n\t * @return {*}\r\n\t */\r\n\tdrawPath: function (val) {\r\n\t\tif (val !== undefined) {\r\n\t\t\tthis._drawPath = val;\r\n\t\t\t\r\n\t\t\tif (val) {\r\n\t\t\t\tthis._entity.addBehaviour('path', this._tickBehaviour, true);\r\n\t\t\t} else {\r\n\t\t\t\tthis._entity.removeBehaviour('path', true);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\treturn this._drawPath;\r\n\t},\r\n\r\n\t/**\r\n\t * Gets / sets the flag that determines if the path that\r\n\t * is drawn gets some added glow effects or not. Pure eye\r\n\t * candy, completely pointless otherwise.\r\n\t * @param {Boolean=} val If true will add glow effects to the path.\r\n\t * @return {*}\r\n\t */\r\n\tdrawPathGlow: function (val) {\r\n\t\tif (val !== undefined) {\r\n\t\t\tthis._drawPathGlow = val;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\treturn this._drawPathGlow;\r\n\t},\r\n\r\n\t/**\r\n\t * Gets / sets the flag that determines if the path that\r\n\t * is drawn gets some added labels or not.\r\n\t * @param {Boolean=} val If true will draw labels on each path point.\r\n\t * @return {*}\r\n\t */\r\n\tdrawPathText: function (val) {\r\n\t\tif (val !== undefined) {\r\n\t\t\tthis._drawPathText = val;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\treturn this._drawPathText;\r\n\t},\r\n\t\r\n\tmultiplyPoint: function (point) {\r\n\t\treturn point.multiply(\r\n\t\t\tthis._entity._parent._tileWidth,\r\n\t\t\tthis._entity._parent._tileHeight,\r\n\t\t\t1\r\n\t\t);\r\n\t},\r\n\r\n\tdividePoint: function (point) {\r\n\t\treturn point.divide(\r\n\t\t\tthis._entity._parent._tileWidth,\r\n\t\t\tthis._entity._parent._tileHeight,\r\n\t\t\t1\r\n\t\t);\r\n\t},\r\n\t\r\n\ttransformPoint: function (point) {\r\n\t\treturn new IgePoint3d(\r\n\t\t\tpoint.x + this._entity._parent._tileWidth / 2,\r\n\t\t\tpoint.y + this._entity._parent._tileHeight / 2,\r\n\t\t\tpoint.z\r\n\t\t);\r\n\t},\r\n\r\n\tunTransformPoint: function (point) {\r\n\t\treturn new IgePoint3d(\r\n\t\t\tpoint.x - this._entity._parent._tileWidth / 2,\r\n\t\t\tpoint.y - this._entity._parent._tileHeight / 2,\r\n\t\t\tpoint.z\r\n\t\t);\r\n\t},\r\n\r\n\t/**\r\n\t * The behaviour method executed each tick.\r\n\t * @param {CanvasRenderingContext2d} ctx The canvas that is currently being\r\n\t * rendered to.\r\n\t * @private\r\n\t */\r\n\t_updateBehaviour: function (ctx) {\r\n\t\tvar path = this.path,\r\n\t\t\tcurrentTime = ige._currentTime,\r\n\t\t\tprogressTime = currentTime - path._startTime;\r\n\t\t\r\n\t\t// Check if we should be processing paths\r\n\t\tif (path._active && path._totalDistance !== 0 && currentTime >= path._startTime && (progressTime <= path._totalTime || !path._finished)) {\r\n\t\t\tvar distanceTravelled = (path._speed) * progressTime,\r\n\t\t\t\ttotalDistance = 0,\r\n\t\t\t\tpointArr = path._points,\r\n\t\t\t\tpointCount = pointArr.length,\r\n\t\t\t\tpointIndex,\r\n\t\t\t\tpointFrom,\r\n\t\t\t\tpointTo,\r\n\t\t\t\tnewPoint,\r\n\t\t\t\tdynamicResult;\r\n\t\t\t\r\n\t\t\t// Loop points along the path and determine which points we are traversing between\r\n\t\t\tfor (pointIndex = 0; pointIndex < pointCount; pointIndex++) {\r\n\t\t\t\ttotalDistance += pointArr[pointIndex]._distanceToNext;\r\n\t\t\t\t\r\n\t\t\t\tif (totalDistance > distanceTravelled) {\r\n\t\t\t\t\t// Found points we are traversing\r\n\t\t\t\t\tpath._finished = false;\r\n\t\t\t\t\tpath._currentPointFrom = pointIndex;\r\n\t\t\t\t\tpath._currentPointTo = pointIndex + 1;\r\n\t\t\t\t\tpointFrom = pointArr[pointIndex];\r\n\t\t\t\t\tpointTo = pointArr[pointIndex + 1];\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t// Check if we have points to traverse between\r\n\t\t\tif (pointFrom && pointTo) {\r\n\t\t\t\tif (path._currentPointFrom !== path._previousPointFrom) {\r\n\t\t\t\t\t// Emit point complete\r\n\t\t\t\t\tpath.emit('pointComplete', [this, pointArr[path._previousPointFrom].x, pointArr[path._previousPointFrom].y, pointArr[path._currentPointFrom].x, pointArr[path._currentPointFrom].y]);\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t// Check if we are in dynamic mode and if so, ensure our path is still valid\r\n\t\t\t\tif (path._dynamic) {\r\n\t\t\t\t\tdynamicResult = path._processDynamic(pointFrom, pointTo, pointArr[pointCount - 1]);\r\n\t\t\t\t\tif (dynamicResult === true) {\r\n\t\t\t\t\t\t// Re-assign the points to the new ones that the dynamic path\r\n\t\t\t\t\t\t// spliced into our points array\r\n\t\t\t\t\t\tpointFrom = pointArr[path._currentPointFrom];\r\n\t\t\t\t\t\tpointTo = pointArr[path._currentPointTo];\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tpath.emit('pathRecalculated', [this, pointArr[path._previousPointFrom].x, pointArr[path._previousPointFrom].y, pointArr[path._currentPointFrom].x, pointArr[path._currentPointFrom].y]);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (dynamicResult === -1) {\r\n\t\t\t\t\t\t// Failed to find a new dynamic path\r\n\t\t\t\t\t\tpath._finished = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t// Calculate position along vector between the two points\r\n\t\t\t\tnewPoint = path._positionAlongVector(\r\n\t\t\t\t\tpointFrom,\r\n\t\t\t\t\tpointTo,\r\n\t\t\t\t\tpath._speed,\r\n\t\t\t\t\tpointFrom._deltaTimeToNext - (pointFrom._absoluteTimeToNext - progressTime)\r\n\t\t\t\t);\r\n\t\t\t\t\r\n\t\t\t\tnewPoint = path.multiplyPoint(newPoint);\r\n\t\t\t\tnewPoint = path.transformPoint(newPoint);\r\n\t\t\t\t\r\n\t\t\t\t// Translate the entity to the new path point\r\n\t\t\t\tthis.translateToPoint(newPoint);\r\n\t\t\t\t\r\n\t\t\t\tpath._previousPointFrom = path._currentPointFrom;\r\n\t\t\t\tpath._previousPointTo = path._currentPointTo;\r\n\t\t\t} else {\r\n\t\t\t\tpointTo = pointArr[pointCount - 1];\r\n\t\t\t\t\r\n\t\t\t\tnewPoint = path.multiplyPoint(pointTo);\r\n\t\t\t\tnewPoint = path.transformPoint(newPoint);\r\n\t\t\t\t\r\n\t\t\t\tpath._previousPointFrom = pointCount - 1;\r\n\t\t\t\tpath._previousPointTo = pointCount - 1;\r\n\t\t\t\tpath._currentPointFrom = pointCount - 1;\r\n\t\t\t\tpath._currentPointTo = pointCount - 1;\r\n\t\t\t\t\r\n\t\t\t\tthis.translateToPoint(newPoint);\r\n\t\t\t\t\r\n\t\t\t\tpath._finished = true;\r\n\t\t\t\tpath.emit('pathComplete', [this, pointArr[path._previousPointFrom].x, pointArr[path._previousPointFrom].y]);\r\n\t\t\t}\r\n\t\t} else if(path._active && path._totalDistance == 0 && !path._finished) {\r\n\t\t\tpath._finished = true;\r\n\t\t}\r\n\t},\r\n\t\r\n\t_processDynamic: function (pointFrom, pointTo, destinationPoint) {\r\n\t\tvar self = this,\r\n\t\t\ttileMapData,\r\n\t\t\ttileCheckData,\r\n\t\t\tnewPathPoints;\r\n\t\t\r\n\t\t// We are in dynamic mode, check steps ahead to see if they\r\n\t\t// have been blocked or not\r\n\t\ttileMapData = self._tileMap.map._mapData;\r\n\t\ttileCheckData = tileMapData[pointTo.y] && tileMapData[pointTo.y][pointTo.x] ? tileMapData[pointTo.y][pointTo.x] : null;\r\n\t\t\r\n\t\tif (!self._tileChecker(tileCheckData, pointTo.x, pointTo.y, null, null, null, true)) {\r\n\t\t\t// The new destination tile is blocked, recalculate path\r\n\t\t\tnewPathPoints = self._finder.generate(\r\n\t\t\t\tself._tileMap,\r\n\t\t\t\tnew IgePoint3d(pointFrom.x, pointFrom.y, pointFrom.z),\r\n\t\t\t\tnew IgePoint3d(destinationPoint.x, destinationPoint.y, destinationPoint.z),\r\n\t\t\t\tself._tileChecker,\r\n\t\t\t\tself._allowSquare,\r\n\t\t\t\tself._allowDiagonal,\r\n\t\t\t\tfalse\r\n\t\t\t);\r\n\t\t\t\r\n\t\t\tif (newPathPoints.length) {\r\n\t\t\t\tself.replacePoints(self._currentPointFrom, self._points.length - self._currentPointFrom, newPathPoints);\r\n\t\t\t\treturn true;\r\n\t\t\t} else {\r\n\t\t\t\t// Cannot generate valid path, delete this path\r\n\t\t\t\tself.emit('dynamicFail', [this, new IgePoint3d(pointFrom.x, pointFrom.y, pointFrom.z), new IgePoint3d(destinationPoint.x, destinationPoint.y, destinationPoint.z)]);\r\n\t\t\t\tself.clear();\r\n\t\t\t\t\r\n\t\t\t\treturn -1;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\treturn false;\r\n\t},\r\n\t\r\n\t_calculatePathData: function () {\r\n\t\tvar totalDistance = 0,\r\n\t\t\tstartPoint,\r\n\t\t\tpointFrom,\r\n\t\t\tpointTo,\r\n\t\t\ti;\r\n\r\n\r\n\t\tif(this._currentPointFrom === 0) {\r\n\t\t\t// always set the first point to be the current position\r\n\t\t\tstartPoint = this._entity._translate.clone();\r\n\t\t\tstartPoint = this.unTransformPoint(startPoint);\r\n\t\t\tstartPoint = this.dividePoint(startPoint);\r\n\t\t\tthis._points[0] = startPoint;\r\n\t\t}\r\n\r\n\t\t// Calculate total distance to travel\r\n\t\tfor (i = 1; i < this._points.length; i++) {\r\n\t\t\tpointFrom = this._points[i - 1];\r\n\t\t\tpointTo = this._points[i];\r\n\t\t\tpointFrom._distanceToNext = Math.distance(pointFrom.x, pointFrom.y, pointTo.x, pointTo.y);\r\n\t\t\t\r\n\t\t\ttotalDistance += Math.abs(pointFrom._distanceToNext);\r\n\t\t\t\r\n\t\t\tpointFrom._deltaTimeToNext = pointFrom._distanceToNext / this._speed;\r\n\t\t\tpointFrom._absoluteTimeToNext = totalDistance / this._speed;\r\n\t\t}\r\n\t\t\r\n\t\tthis._totalDistance = totalDistance;\r\n\t\tthis._totalTime = totalDistance / this._speed;\r\n\t\t\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * Replaces a number of points in the current queue with the new points passed.\r\n\t * @param {Number} fromIndex The from index.\r\n\t * @param {Number} replaceLength The number of points to replace.\r\n\t * @param {Array} newPoints The array of new points to insert.\r\n\t */\r\n\treplacePoints: function (fromIndex, replaceLength, newPoints) {\r\n\t\tvar args = [fromIndex, replaceLength].concat(newPoints);\r\n\t\tthis._points.splice.apply(this._points, args);\r\n\t\tthis._calculatePathData();\r\n\t},\r\n\t\r\n\t_tickBehaviour: function (ctx) {\r\n\t\tif (ige.isClient) {\r\n\t\t\tvar self = this.path,\r\n\t\t\t\tentity = this,\r\n\t\t\t\tcurrentPath = self._points,\r\n\t\t\t\toldTracePathPoint,\r\n\t\t\t\ttracePathPoint,\r\n\t\t\t\tpathPointIndex,\r\n\t\t\t\ttempPathText;\r\n\t\t\t\r\n\t\t\tif (currentPath.length) {\r\n\t\t\t\tif (currentPath && self._drawPath) {\r\n\t\t\t\t\t// Draw the current path\r\n\t\t\t\t\tctx.save();\r\n\t\r\n\t\t\t\t\toldTracePathPoint = undefined;\r\n\t\r\n\t\t\t\t\tfor (pathPointIndex = 0; pathPointIndex < currentPath.length; pathPointIndex++) {\r\n\t\t\t\t\t\tctx.strokeStyle = '#0096ff';\r\n\t\t\t\t\t\tctx.fillStyle = '#0096ff';\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\ttracePathPoint = new IgePoint3d(\r\n\t\t\t\t\t\t\tcurrentPath[pathPointIndex].x,\r\n\t\t\t\t\t\t\tcurrentPath[pathPointIndex].y,\r\n\t\t\t\t\t\t\tcurrentPath[pathPointIndex].z\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\ttracePathPoint = self.multiplyPoint(tracePathPoint);\r\n\t\t\t\t\t\ttracePathPoint = self.transformPoint(tracePathPoint);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif (entity._parent._mountMode === 1) {\r\n\t\t\t\t\t\t\ttracePathPoint = tracePathPoint.toIso();\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tif (!oldTracePathPoint) {\r\n\t\t\t\t\t\t\t// The starting point of the path\r\n\t\t\t\t\t\t\tctx.beginPath();\r\n\t\t\t\t\t\t\tctx.arc(tracePathPoint.x, tracePathPoint.y, 5, 0, Math.PI*2, true);\r\n\t\t\t\t\t\t\tctx.closePath();\r\n\t\t\t\t\t\t\tctx.fill();\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t// Not the starting point\r\n\t\t\t\t\t\t\tif (self._drawPathGlow) {\r\n\t\t\t\t\t\t\t\tctx.globalAlpha = 0.1;\r\n\t\t\t\t\t\t\t\tfor (var k = 3; k >= 0 ; k--) {\r\n\t\t\t\t\t\t\t\t\tctx.lineWidth = (k + 1) * 4 - 3.5;\r\n\t\t\t\t\t\t\t\t\tctx.beginPath();\r\n\t\t\t\t\t\t\t\t\tctx.moveTo(oldTracePathPoint.x, oldTracePathPoint.y);\r\n\t\t\t\t\t\t\t\t\tctx.lineTo(tracePathPoint.x, tracePathPoint.y);\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\tif (pathPointIndex < self._currentPointTo) {\r\n\t\t\t\t\t\t\t\t\t\tctx.strokeStyle = '#666666';\r\n\t\t\t\t\t\t\t\t\t\tctx.fillStyle = '#333333';\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tif (k === 0) {\r\n\t\t\t\t\t\t\t\t\t\tctx.globalAlpha = 1;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\t\t\tctx.stroke();\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tctx.beginPath();\r\n\t\t\t\t\t\t\t\tctx.moveTo(oldTracePathPoint.x, oldTracePathPoint.y);\r\n\t\t\t\t\t\t\t\tctx.lineTo(tracePathPoint.x, tracePathPoint.y);\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tif (pathPointIndex < self._currentPointTo) {\r\n\t\t\t\t\t\t\t\t\tctx.strokeStyle = '#666666';\r\n\t\t\t\t\t\t\t\t\tctx.fillStyle = '#333333';\r\n\t\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\t\tctx.stroke();\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\tif (pathPointIndex === self._currentPointTo) {\r\n\t\t\t\t\t\t\t\tctx.save();\r\n\t\t\t\t\t\t\t\tctx.fillStyle = '#24b9ea';\r\n\t\t\t\t\t\t\t\tctx.fillRect(tracePathPoint.x - 5, tracePathPoint.y - 5, 10, 10);\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tif (self._drawPathText) {\r\n\t\t\t\t\t\t\t\t\tctx.fillStyle = '#eade24';\r\n\t\t\t\t\r\n\t\t\t\t\t\t\t\t\tif (self._drawPathGlow) {\r\n\t\t\t\t\t\t\t\t\t\t// Apply shadow to the text\r\n\t\t\t\t\t\t\t\t\t\tctx.shadowOffsetX = 1;\r\n\t\t\t\t\t\t\t\t\t\tctx.shadowOffsetY = 2;\r\n\t\t\t\t\t\t\t\t\t\tctx.shadowBlur    = 4;\r\n\t\t\t\t\t\t\t\t\t\tctx.shadowColor   = 'rgba(0, 0, 0, 1)';\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t\t\t\t\t\ttempPathText = 'Entity: ' + entity.id();\r\n\t\t\t\t\t\t\t\t\tctx.fillText(tempPathText, tracePathPoint.x - Math.floor(ctx.measureText(tempPathText).width / 2), tracePathPoint.y + 16);\r\n\t\t\t\t\r\n\t\t\t\t\t\t\t\t\ttempPathText = 'Point (' + currentPath[pathPointIndex].x + ', ' + currentPath[pathPointIndex].y + ')';\r\n\t\t\t\t\t\t\t\t\tctx.fillText(tempPathText, tracePathPoint.x - Math.floor(ctx.measureText(tempPathText).width / 2), tracePathPoint.y + 28);\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\ttempPathText = 'Abs (' + Math.floor(entity._translate.x) + ', ' + Math.floor(entity._translate.y) + ')';\r\n\t\t\t\t\t\t\t\t\tctx.fillText(tempPathText, tracePathPoint.x - Math.floor(ctx.measureText(tempPathText).width / 2), tracePathPoint.y + 40);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tctx.restore();\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tctx.fillRect(tracePathPoint.x - 2.5, tracePathPoint.y - 2.5, 5, 5);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\toldTracePathPoint = tracePathPoint;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tctx.restore();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\tgetPreviousPoint: function (val) {\r\n\t\treturn this._points[this._currentPointFrom - val];\r\n\t},\r\n\t\r\n\tgetNextPoint: function (val) {\r\n\t\treturn this._points[this._currentPointTo + val];\r\n\t},\r\n\r\n\t/**\r\n\t * Calculates the position of the entity along a vector based on the speed\r\n\t * of the entity and the delta time.\r\n\t * @param {IgePoint3d} p1 Vector start point\r\n\t * @param {IgePoint3d} p2 Vector end point\r\n\t * @param {Number} speed Speed along the vector\r\n\t * @param {Number} deltaTime The time between the last update and now.\r\n\t * @return {IgePoint3d}\r\n\t * @private\r\n\t */\r\n\t_positionAlongVector: function (p1, p2, speed, deltaTime) {\r\n\t\tvar newPoint,\r\n\t\t\tp1X = p1.x,\r\n\t\t\tp1Y = p1.y,\r\n\t\t\tp2X = p2.x,\r\n\t\t\tp2Y = p2.y,\r\n\t\t\tdeltaX = (p2X - p1X),\r\n\t\t\tdeltaY = (p2Y - p1Y),\r\n\t\t\tmagnitude = Math.sqrt(deltaX * deltaX + deltaY * deltaY),\r\n\t\t\tnormalisedX = deltaX / magnitude,\r\n\t\t\tnormalisedY = deltaY / magnitude;\r\n\t\t\r\n\t\tif (deltaX !== 0 || deltaY !== 0) {\r\n\t\t\tnewPoint = new IgePoint3d(\r\n\t\t\t\tp1X + (normalisedX * (speed * deltaTime)),\r\n\t\t\t\tp1Y + (normalisedY * (speed * deltaTime)),\r\n\t\t\t\t0\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\tnewPoint = new IgePoint3d(0, 0, 0);\r\n\t\t}\r\n\r\n\t\treturn newPoint;\r\n\t}\r\n});\r\n\r\nif (typeof(module) !== 'undefined' && typeof(module.exports) !== 'undefined') { module.exports = IgePathComponent; }","var IgeInputComponent = IgeEventingClass.extend({\r\n\tclassId: 'IgeInputComponent',\r\n\tcomponentId: 'input',\r\n\r\n\tinit: function () {\r\n\t\t// Setup the input objects to hold the current input state\r\n\t\tthis._eventQueue = [];\r\n\t\tthis._eventControl = {\r\n\t\t\t_cancelled: false,\r\n\t\t\tstopPropagation: function () {\r\n\t\t\t\tthis._cancelled = true;\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tthis.tick();\r\n\r\n\t\tthis.mouse = {\r\n\t\t\t// Virtual codes\r\n\t\t\tdblClick: -302,\r\n\t\t\tdown: -301,\r\n\t\t\tup: -300,\r\n\t\t\tmove: -259,\r\n\t\t\twheel: -258,\r\n\t\t\twheelUp: -257,\r\n\t\t\twheelDown: -256,\r\n\t\t\tx: -255,\r\n\t\t\ty: -254,\r\n\t\t\tbutton1: -253,\r\n\t\t\tbutton2: -252,\r\n\t\t\tbutton3: -251\r\n\t\t};\r\n\r\n\t\tthis.pad1 = {\r\n\t\t\t// Virtual codes\r\n\t\t\tbutton1: -250,\r\n\t\t\tbutton2: -249,\r\n\t\t\tbutton3: -248,\r\n\t\t\tbutton4: -247,\r\n\t\t\tbutton5: -246,\r\n\t\t\tbutton6: -245,\r\n\t\t\tbutton7: -244,\r\n\t\t\tbutton8: -243,\r\n\t\t\tbutton9: -242,\r\n\t\t\tbutton10: -241,\r\n\t\t\tbutton11: -240,\r\n\t\t\tbutton12: -239,\r\n\t\t\tbutton13: -238,\r\n\t\t\tbutton14: -237,\r\n\t\t\tbutton15: -236,\r\n\t\t\tbutton16: -235,\r\n\t\t\tbutton17: -234,\r\n\t\t\tbutton18: -233,\r\n\t\t\tbutton19: -232,\r\n\t\t\tbutton20: -231,\r\n\t\t\tstick1: -230,\r\n\t\t\tstick2: -229,\r\n\t\t\tstick1Up: -228,\r\n\t\t\tstick1Down: -227,\r\n\t\t\tstick1Left: -226,\r\n\t\t\tstick1Right: -225,\r\n\t\t\tstick2Up: -224,\r\n\t\t\tstick2Down: -223,\r\n\t\t\tstick2Left: -222,\r\n\t\t\tstick2Right: -221\r\n\t\t};\r\n\r\n\t\tthis.pad2 = {\r\n\t\t\t// Virtual codes\r\n\t\t\tbutton1: -220,\r\n\t\t\tbutton2: -219,\r\n\t\t\tbutton3: -218,\r\n\t\t\tbutton4: -217,\r\n\t\t\tbutton5: -216,\r\n\t\t\tbutton6: -215,\r\n\t\t\tbutton7: -214,\r\n\t\t\tbutton8: -213,\r\n\t\t\tbutton9: -212,\r\n\t\t\tbutton10: -211,\r\n\t\t\tbutton11: -210,\r\n\t\t\tbutton12: -209,\r\n\t\t\tbutton13: -208,\r\n\t\t\tbutton14: -207,\r\n\t\t\tbutton15: -206,\r\n\t\t\tbutton16: -205,\r\n\t\t\tbutton17: -204,\r\n\t\t\tbutton18: -203,\r\n\t\t\tbutton19: -202,\r\n\t\t\tbutton20: -201,\r\n\t\t\tstick1: -200,\r\n\t\t\tstick2: -199,\r\n\t\t\tstick1Up: -198,\r\n\t\t\tstick1Down: -197,\r\n\t\t\tstick1Left: -196,\r\n\t\t\tstick1Right: -195,\r\n\t\t\tstick2Up: -194,\r\n\t\t\tstick2Down: -193,\r\n\t\t\tstick2Left: -192,\r\n\t\t\tstick2Right: -191\r\n\t\t};\r\n\r\n\t\t// Keycodes from http://www.asciitable.com/\r\n\t\t// and general console.log efforts :)\r\n\t\tthis.key = {\r\n\t\t\t// Virtual codes\r\n\t\t\t'shift': -3,\r\n\t\t\t'ctrl': -2,\r\n\t\t\t'alt': -1,\r\n\t\t\t// Read codes\r\n\t\t\t'backspace': 8,\r\n\t\t\t'tab': 9,\r\n\t\t\t'enter': 13,\r\n\t\t\t'escape': 27,\r\n\t\t\t'space': 32,\r\n\t\t\t'pageUp': 33,\r\n\t\t\t'pageDown': 34,\r\n\t\t\t'end': 35,\r\n\t\t\t'home': 36,\r\n\t\t\t'left': 37,\r\n\t\t\t'up': 38,\r\n\t\t\t'right': 39,\r\n\t\t\t'down': 40,\r\n\t\t\t'insert': 45,\r\n\t\t\t'del': 46,\r\n\t\t\t'0': 48,\r\n\t\t\t'1': 49,\r\n\t\t\t'2': 50,\r\n\t\t\t'3': 51,\r\n\t\t\t'4': 52,\r\n\t\t\t'5': 53,\r\n\t\t\t'6': 54,\r\n\t\t\t'7': 55,\r\n\t\t\t'8': 56,\r\n\t\t\t'9': 57,\r\n\t\t\t'a': 65,\r\n\t\t\t'b': 66,\r\n\t\t\t'c': 67,\r\n\t\t\t'd': 68,\r\n\t\t\t'e': 69,\r\n\t\t\t'f': 70,\r\n\t\t\t'g': 71,\r\n\t\t\t'h': 72,\r\n\t\t\t'i': 73,\r\n\t\t\t'j': 74,\r\n\t\t\t'k': 75,\r\n\t\t\t'l': 76,\r\n\t\t\t'm': 77,\r\n\t\t\t'n': 78,\r\n\t\t\t'o': 79,\r\n\t\t\t'p': 80,\r\n\t\t\t'q': 81,\r\n\t\t\t'r': 82,\r\n\t\t\t's': 83,\r\n\t\t\t't': 84,\r\n\t\t\t'u': 85,\r\n\t\t\t'v': 86,\r\n\t\t\t'w': 87,\r\n\t\t\t'x': 88,\r\n\t\t\t'y': 89,\r\n\t\t\t'z': 90\r\n\t\t};\r\n\r\n\t\tthis._controlMap = [];\r\n\t\tthis._state = [];\r\n\r\n\t\t// Set default values for the mouse position\r\n\t\tthis._state[this.mouse.x] = 0;\r\n\t\tthis._state[this.mouse.y] = 0;\r\n\t},\r\n\r\n\tdebug: function (val) {\r\n\t\tif (val !== undefined) {\r\n\t\t\tthis._debug = val;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\treturn this._debug;\r\n\t},\r\n\r\n\t/**\r\n\t * Sets up the event listeners on the main window and front\r\n\t * buffer DOM objects.\r\n\t * @private\r\n\t */\r\n\tsetupListeners: function (canvas) {\r\n\t\tthis.log('Setting up input event listeners...');\r\n\r\n\t\tthis._canvas = canvas;\r\n\r\n\t\t// Setup the event listeners\r\n\t\tvar self = this;\r\n\r\n\t\t// Define event functions and keep references for later removal\r\n\t\tthis._evRef = {\r\n\t\t\t'mousedown': function (event) { event.igeType = 'mouse'; self._rationalise(event); self._mouseDown(event); },\r\n\t\t\t'mouseup': function (event) { event.igeType = 'mouse'; self._rationalise(event); self._mouseUp(event); },\r\n\t\t\t'mousemove': function (event) { event.igeType = 'mouse'; self._rationalise(event); self._mouseMove(event); },\r\n\t\t\t'mousewheel': function (event) { event.igeType = 'mouse'; self._rationalise(event); self._mouseWheel(event); },\r\n\r\n\t\t\t'touchmove': function (event) { event.igeType = 'touch'; self._rationalise(event, true); self._mouseMove(event); },\r\n\t\t\t'touchstart': function (event) { event.igeType = 'touch'; self._rationalise(event, true); self._mouseDown(event); },\r\n\t\t\t'touchend': function (event) { event.igeType = 'touch'; self._rationalise(event, true); self._mouseUp(event); },\r\n\r\n\t\t\t'contextmenu': function (event) { event.preventDefault(); event.igeType = 'mouse'; self._rationalise(event); self._contextMenu(event); },\r\n\r\n\t\t\t'keydown': function (event) { event.igeType = 'key'; self._rationalise(event); self._keyDown(event); },\r\n\t\t\t'keyup': function (event) { event.igeType = 'key'; self._rationalise(event); self._keyUp(event); }\r\n\t\t};\r\n\r\n\t\t// Listen for mouse events\r\n\t\tcanvas.addEventListener('mousedown', this._evRef.mousedown, false);\r\n\t\tcanvas.addEventListener('mouseup', this._evRef.mouseup, false);\r\n\t\tcanvas.addEventListener('mousemove', this._evRef.mousemove, false);\r\n\t\tcanvas.addEventListener('mousewheel', this._evRef.mousewheel, false);\r\n\r\n\t\t// Touch events\r\n\t\tcanvas.addEventListener('touchmove', this._evRef.touchmove, false);\r\n\t\tcanvas.addEventListener('touchstart', this._evRef.touchstart, false);\r\n\t\tcanvas.addEventListener('touchend', this._evRef.touchend, false);\r\n\r\n\t\t// Kill the context menu on right-click, urgh!\r\n\t\tcanvas.addEventListener('contextmenu', this._evRef.contextmenu, false);\r\n\r\n\t\t// Listen for keyboard events\r\n\t\twindow.addEventListener('keydown', this._evRef.keydown, false);\r\n\t\twindow.addEventListener('keyup', this._evRef.keyup, false);\r\n\t},\r\n\r\n\tdestroyListeners: function () {\r\n\t\tthis.log('Removing input event listeners...');\r\n\r\n\t\t// Remove the event listeners\r\n\t\tvar canvas = this._canvas;\r\n\r\n\t\t// Listen for mouse events\r\n\t\tcanvas.removeEventListener('mousedown', this._evRef.mousedown, false);\r\n\t\tcanvas.removeEventListener('mouseup', this._evRef.mouseup, false);\r\n\t\tcanvas.removeEventListener('mousemove', this._evRef.mousemove, false);\r\n\t\tcanvas.removeEventListener('mousewheel', this._evRef.mousewheel, false);\r\n\r\n\t\t// Touch events\r\n\t\tcanvas.removeEventListener('touchmove', this._evRef.touchmove, false);\r\n\t\tcanvas.removeEventListener('touchstart', this._evRef.touchstart, false);\r\n\t\tcanvas.removeEventListener('touchend', this._evRef.touchend, false);\r\n\r\n\t\t// Kill the context menu on right-click, urgh!\r\n\t\tcanvas.removeEventListener('contextmenu', this._evRef.contextmenu, false);\r\n\r\n\t\t// Listen for keyboard events\r\n\t\twindow.removeEventListener('keydown', this._evRef.keydown, false);\r\n\t\twindow.removeEventListener('keyup', this._evRef.keyup, false);\r\n\t},\r\n\r\n\t/**\r\n\t * Fires an input event that didn't occur on the main canvas, as if it had\r\n\t * occurred on the main canvas, allowing you to pass through events like\r\n\t * mousedown and mouseup that occurred elsewhere on the DOM but might be\r\n\t * useful for the engine to be aware of, such as if you are dragging an entity\r\n\t * and then the mouse goes off-canvas and the button is released.\r\n\t * @param {String} eventName The lowercase name of the event to fire e.g. mousedown.\r\n\t * @param {Object} eventObj The event object that was passed by the DOM.\r\n\t */\r\n\tfireManualEvent: function (eventName, eventObj) {\r\n\t\tif (eventName && eventObj) {\r\n\t\t\tif (this._evRef[eventName]) {\r\n\t\t\t\tthis._evRef[eventName](eventObj);\r\n\t\t\t} else {\r\n\t\t\t\tthis.log('Cannot fire manual event \"' + eventName + '\" because no listener exists in the engine for this event type!', 'warning');\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthis.log('Cannot fire manual event because both eventName and eventObj params are required.', 'warning');\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Sets igeX and igeY properties in the event object that\r\n\t * can be relied on to provide the x, y co-ordinates of the\r\n\t * mouse event including the canvas offset.\r\n\t * @param {Event} event The event object.\r\n\t * @param {Boolean} touch If the event was a touch event or\r\n\t * not.\r\n\t * @private\r\n\t */\r\n\t_rationalise: function (event, touch) {\r\n\t\t// Check if we want to prevent default behaviour\r\n\t\tif (event.igeType === 'key') {\r\n\t\t\tif (event.keyCode === 8) { // Backspace\r\n\t\t\t\t// Check if the event occurred on the body\r\n\t\t\t\tvar elem = event.srcElement || event.target;\r\n\r\n\t\t\t\tif (elem.tagName.toLowerCase() === 'body') {\r\n\t\t\t\t\t// The event occurred on our body element so prevent\r\n\t\t\t\t\t// default behaviour. This allows other elements on\r\n\t\t\t\t\t// the page to retain focus such as text boxes etc\r\n\t\t\t\t\t// and allows them to behave normally.\r\n\t\t\t\t\tevent.preventDefault();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (event.igeType === 'touch') {\r\n\t\t\tevent.preventDefault();\r\n\t\t}\r\n\r\n\t\tif (touch) {\r\n\t\t\tevent.button = 0; // Emulate left mouse button\r\n\r\n\t\t\t// Handle touch changed\r\n\t\t\tif (event.changedTouches && event.changedTouches.length) {\r\n\t\t\t\tevent.igePageX = event.changedTouches[0].pageX;\r\n\t\t\t\tevent.igePageY = event.changedTouches[0].pageY;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tevent.igePageX = event.pageX;\r\n\t\t\tevent.igePageY = event.pageY;\r\n\t\t}\r\n\r\n\t\tevent.igeX = (event.igePageX - ige._canvasPosition().left);\r\n\t\tevent.igeY = (event.igePageY - ige._canvasPosition().top);\r\n\r\n\t\tthis.emit('inputEvent', event);\r\n\t},\r\n\r\n\r\n\t/**\r\n\t * Emits the \"mouseDown\" event.\r\n\t * @param event\r\n\t * @private\r\n\t */\r\n\t_mouseDown: function (event) {\r\n\t\tif (this._debug) {\r\n\t\t\tconsole.log('Mouse Down', event);\r\n\t\t}\r\n\t\t// Update the mouse position within the viewports\r\n\t\tthis._updateMouseData(event);\r\n\r\n\t\tvar mx = event.igeX - ige._bounds2d.x2,\r\n\t\t\tmy = event.igeY - ige._bounds2d.y2,\r\n\t\t\tself = this;\r\n\r\n\t\tif (event.button === 0) {\r\n\t\t\tthis._state[this.mouse.button1] = true;\r\n\t\t}\r\n\r\n\t\tif (event.button === 1) {\r\n\t\t\tthis._state[this.mouse.button2] = true;\r\n\t\t}\r\n\r\n\t\tif (event.button === 2) {\r\n\t\t\tthis._state[this.mouse.button3] = true;\r\n\t\t}\r\n\r\n\t\tthis.mouseDown = event;\r\n\r\n\t\tif (!self.emit('preMouseDown', [event, mx, my, event.button + 1])) {\r\n\t\t\tthis.queueEvent(this, function () {\r\n\t\t\t\tself.emit('mouseDown', [event, mx, my, event.button + 1]);\r\n\t\t\t});\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Emits the \"mouseUp\" event.\r\n\t * @param event\r\n\t * @private\r\n\t */\r\n\t_mouseUp: function (event) {\r\n\t\tif (this._debug) {\r\n\t\t\tconsole.log('Mouse Up', event);\r\n\t\t}\r\n\t\t// Update the mouse position within the viewports\r\n\t\tthis._updateMouseData(event);\r\n\r\n\t\tvar mx = event.igeX - ige._bounds2d.x2,\r\n\t\t\tmy = event.igeY - ige._bounds2d.y2,\r\n\t\t\tself = this;\r\n\r\n\t\tif (event.button === 0) {\r\n\t\t\tthis._state[this.mouse.button1] = false;\r\n\t\t}\r\n\r\n\t\tif (event.button === 1) {\r\n\t\t\tthis._state[this.mouse.button2] = false;\r\n\t\t}\r\n\r\n\t\tif (event.button === 2) {\r\n\t\t\tthis._state[this.mouse.button3] = false;\r\n\t\t}\r\n\r\n\t\tthis.mouseUp = event;\r\n\t\t\r\n\t\tif (!self.emit('preMouseUp', [event, mx, my, event.button + 1])) {\r\n\t\t\tthis.queueEvent(this, function () {\r\n\t\t\t\tself.emit('mouseUp', [event, mx, my, event.button + 1]);\r\n\t\t\t});\r\n\t\t}\r\n\t},\r\n\t\r\n\t_contextMenu: function (event) {\r\n\t\tif (this._debug) {\r\n\t\t\tconsole.log('Context Menu', event);\r\n\t\t}\r\n\t\t// Update the mouse position within the viewports\r\n\t\tthis._updateMouseData(event);\r\n\r\n\t\tvar mx = event.igeX - ige._bounds2d.x2,\r\n\t\t\tmy = event.igeY - ige._bounds2d.y2,\r\n\t\t\tself = this;\r\n\r\n\t\tif (event.button === 0) {\r\n\t\t\tthis._state[this.mouse.button1] = false;\r\n\t\t}\r\n\r\n\t\tif (event.button === 1) {\r\n\t\t\tthis._state[this.mouse.button2] = false;\r\n\t\t}\r\n\r\n\t\tif (event.button === 2) {\r\n\t\t\tthis._state[this.mouse.button3] = false;\r\n\t\t}\r\n\r\n\t\tthis.contextMenu = event;\r\n\t\t\r\n\t\tif (!self.emit('preContextMenu', [event, mx, my, event.button + 1])) {\r\n\t\t\tthis.queueEvent(this, function () {\r\n\t\t\t\tself.emit('contextMenu', [event, mx, my, event.button + 1]);\r\n\t\t\t});\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Emits the \"mouseMove\" event.\r\n\t * @param event\r\n\t * @private\r\n\t */\r\n\t_mouseMove: function (event) {\r\n\t\t// Update the mouse position within the viewports\r\n\t\tige._mouseOverVp = this._updateMouseData(event);\r\n\r\n\t\tvar mx = event.igeX - ige._bounds2d.x2,\r\n\t\t\tmy = event.igeY - ige._bounds2d.y2,\r\n\t\t\tself = this;\r\n\r\n\t\tthis._state[this.mouse.x] = mx;\r\n\t\tthis._state[this.mouse.y] = my;\r\n\r\n\t\tthis.mouseMove = event;\r\n\r\n\t\tif (!self.emit('preMouseMove', [event, mx, my, event.button + 1])) {\r\n\t\t\tthis.queueEvent(this, function () {\r\n\t\t\t\tself.emit('mouseMove', [event, mx, my, event.button + 1]);\r\n\t\t\t});\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Emits the \"mouseWheel\" event.\r\n\t * @param event\r\n\t * @private\r\n\t */\r\n\t_mouseWheel: function (event) {\r\n\t\t// Update the mouse position within the viewports\r\n\t\tthis._updateMouseData(event);\r\n\r\n\t\tvar mx = event.igeX - ige._bounds2d.x2,\r\n\t\t\tmy = event.igeY - ige._bounds2d.y2,\r\n\t\t\tself = this;\r\n\r\n\t\tthis._state[this.mouse.wheel] = event.wheelDelta;\r\n\r\n\t\tif (event.wheelDelta > 0) {\r\n\t\t\tthis._state[this.mouse.wheelUp] = true;\r\n\t\t} else {\r\n\t\t\tthis._state[this.mouse.wheelDown] = true;\r\n\t\t}\r\n\r\n\t\tthis.mouseWheel = event;\r\n\r\n\t\tif (!self.emit('preMouseWheel', [event, mx, my, event.button + 1])) {\r\n\t\t\tthis.queueEvent(this, function () {\r\n\t\t\t\tself.emit('mouseWheel', [event, mx, my, event.button + 1]);\r\n\t\t\t});\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Emits the \"keyDown\" event.\r\n\t * @param event\r\n\t * @private\r\n\t */\r\n\t_keyDown: function (event) {\r\n\t\tvar self = this;\r\n\r\n\t\tthis._state[event.keyCode] = true;\r\n\t\t\r\n\t\tif (this._debug) {\r\n\t\t\tconsole.log('Key Down', event);\r\n\t\t}\r\n\t\t\r\n\t\tif (!self.emit('preKeyDown', [event, event.keyCode])) {\r\n\t\t\tthis.queueEvent(this, function () {\r\n\t\t\t\tself.emit('keyDown', [event, event.keyCode]);\r\n\t\t\t});\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Emits the \"keyUp\" event.\r\n\t * @param event\r\n\t * @private\r\n\t */\r\n\t_keyUp: function (event) {\r\n\t\tvar self = this;\r\n\r\n\t\tthis._state[event.keyCode] = false;\r\n\t\t\r\n\t\tif (this._debug) {\r\n\t\t\tconsole.log('Key Up', event);\r\n\t\t}\r\n\t\t\r\n\t\tif (!self.emit('preKeyUp', [event, event.keyCode])) {\r\n\t\t\tthis.queueEvent(this, function () {\r\n\t\t\t\tself.emit('keyUp', [event, event.keyCode]);\r\n\t\t\t});\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Loops the mounted viewports and updates their respective mouse\r\n\t * co-ordinates so that mouse events can work out where on a viewport\r\n\t * they occurred.\r\n\t *\r\n\t * @param event\r\n\t * @return {*}\r\n\t * @private\r\n\t */\r\n\t_updateMouseData: function (event) {\r\n\t\t// Loop the viewports and check if the mouse is inside\r\n\t\tvar arr = ige._children,\r\n\t\t\tarrCount = arr.length,\r\n\t\t\tvp, vpUpdated,\r\n\t\t\tmx = (event.igeX - ige._bounds2d.x2) - ige._translate.x,\r\n\t\t\tmy = (event.igeY - ige._bounds2d.y2) - ige._translate.y;\r\n\r\n\t\tige._mousePos.x = mx;\r\n\t\tige._mousePos.y = my;\r\n\r\n\t\twhile (arrCount--) {\r\n\t\t\tvp = arr[arr.length - (arrCount + 1)];\r\n\t\t\t// Check if the mouse is inside this viewport's bounds\r\n\t\t\t// TODO: Update this code to take into account viewport rotation and camera rotation\r\n\t\t\tif (mx > vp._translate.x - vp._bounds2d.x / 2 && mx < vp._translate.x + vp._bounds2d.x / 2) {\r\n\t\t\t\tif (my > vp._translate.y - vp._bounds2d.y / 2 && my < vp._translate.y + vp._bounds2d.y / 2) {\r\n\t\t\t\t\t// Mouse is inside this viewport\r\n\t\t\t\t\tvp._mousePos = new IgePoint3d(\r\n\t\t\t\t\t\tMath.floor((mx - vp._translate.x) / vp.camera._scale.x + vp.camera._translate.x),\r\n\t\t\t\t\t\tMath.floor((my - vp._translate.y) / vp.camera._scale.y + vp.camera._translate.y),\r\n\t\t\t\t\t\t0\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t\tvpUpdated = vp;\r\n\r\n\t\t\t\t\t// Record the viewport that this event occurred on in the\r\n\t\t\t\t\t// event object\r\n\t\t\t\t\tevent.igeViewport = vp;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn vpUpdated;\r\n\t},\r\n\r\n\t/**\r\n\t * Defines an action that will be emitted when the specified event type\r\n\t * occurs.\r\n\t * @param actionName\r\n\t * @param eventCode\r\n\t */\r\n\tmapAction: function (actionName, eventCode) {\r\n\t\tthis._controlMap[actionName] = eventCode;\r\n\t},\r\n\r\n\t/**\r\n\t * Returns the passed action's input state value.\r\n\t * @param actionName\r\n\t */\r\n\tactionVal: function (actionName) {\r\n\t\treturn this._state[this._controlMap[actionName]];\r\n\t},\r\n\r\n\t/**\r\n\t * Returns true if the passed action's input is pressed or it's state\r\n\t * is not zero.\r\n\t * @param actionName\r\n\t */\r\n\tactionState: function (actionName) {\r\n\t\tvar val = this._state[this._controlMap[actionName]];\r\n\t\treturn !!val; // \"Not not\" to convert to boolean true/false\r\n\t},\r\n\r\n\t/**\r\n\t * Returns an input's current value.\r\n\t * @param actionName\r\n\t * @return {*}\r\n\t */\r\n\tval: function (inputId) {\r\n\t\treturn this._state[inputId];\r\n\t},\r\n\r\n\t/**\r\n\t * Returns an input's current state as a boolean.\r\n\t * @param stateId\r\n\t * @return {Boolean}\r\n\t */\r\n\tstate: function (inputId) {\r\n\t\treturn !!this._state[inputId];\r\n\t},\r\n\r\n\t/**\r\n\t * Stops further event propagation for this tick.\r\n\t * @return {*}\r\n\t */\r\n\tstopPropagation: function () {\r\n\t\tthis._eventControl._cancelled = true;\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * Adds an event method to the eventQueue array. The array is\r\n\t * processed during each tick after the scenegraph has been\r\n\t * rendered.\r\n\t * @param context\r\n\t * @param ev\r\n\t */\r\n\tqueueEvent: function (context, ev, data) {\r\n\t\tif (ev !== undefined) {\r\n\t\t\tthis._eventQueue.push([context, ev, data]);\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * Called by the engine after ALL other tick methods have processed.\r\n\t * Call originates in IgeEngine.js. Allows us to reset any flags etc.\r\n\t */\r\n\ttick: function () {\r\n\t\t// If we have an event queue, process it\r\n\t\tvar arr = this._eventQueue,\r\n\t\t\tarrCount = arr.length,\r\n\t\t\tevc = this._eventControl;\r\n\r\n\t\twhile (arrCount--) {\r\n\t\t\tarr[arrCount][1].apply(arr[arrCount][0], [evc, arr[arrCount][2]]);\r\n\t\t\tif (evc._cancelled) {\r\n\t\t\t\t// The last event queue method stopped propagation so cancel all further\r\n\t\t\t\t// event processing (the last event took control of the input)\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Reset all the flags and variables for the next tick\r\n\t\tthis._eventQueue = [];\r\n\t\tthis._eventControl._cancelled = false;\r\n\t\tthis.dblClick = false; // TODO: Add double-click event handling\r\n\t\tthis.mouseMove = false;\r\n\t\tthis.mouseDown = false;\r\n\t\tthis.mouseUp = false;\r\n\t\tthis.mouseWheel = false;\r\n\t},\r\n\r\n\t/**\r\n\t * Emit an event by name. Overrides the IgeEventingClass emit method and\r\n\t * checks for propagation stopped by calling ige.input.stopPropagation().\r\n\t * @param {Object} eventName The name of the event to emit.\r\n\t * @param {Object || Array} args The arguments to send to any listening methods.\r\n\t * If you are sending multiple arguments, use an array containing each argument.\r\n\t * @return {Number}\r\n\t */\r\n\temit: function (eventName, args) {\r\n\t\tif (this._eventListeners) {\r\n\t\t\t// Check if the event has any listeners\r\n\t\t\tif (this._eventListeners[eventName]) {\r\n\r\n\t\t\t\t// Fire the listeners for this event\r\n\t\t\t\tvar eventCount = this._eventListeners[eventName].length,\r\n\t\t\t\t\teventCount2 = this._eventListeners[eventName].length - 1,\r\n\t\t\t\t\tevc = this._eventControl,\r\n\t\t\t\t\tfinalArgs, i, cancelFlag, eventIndex, tempEvt, retVal;\r\n\r\n\t\t\t\t// If there are some events, ensure that the args is ready to be used\r\n\t\t\t\tif (eventCount) {\r\n\t\t\t\t\tfinalArgs = [];\r\n\t\t\t\t\tif (typeof(args) === 'object' && args !== null && args[0] !== null) {\r\n\t\t\t\t\t\tfor (i in args) {\r\n\t\t\t\t\t\t\tif (args.hasOwnProperty(i)) {\r\n\t\t\t\t\t\t\t\tfinalArgs[i] = args[i];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tfinalArgs = [args];\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Loop and emit!\r\n\t\t\t\t\tcancelFlag = false;\r\n\r\n\t\t\t\t\tthis._eventListeners._processing = true;\r\n\t\t\t\t\twhile (eventCount--) {\r\n\t\t\t\t\t\tif (evc._cancelled) {\r\n\t\t\t\t\t\t\t// The stopPropagation() method was called, cancel all other event calls\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\teventIndex = eventCount2 - eventCount;\r\n\t\t\t\t\t\ttempEvt = this._eventListeners[eventName][eventIndex];\r\n\r\n\t\t\t\t\t\t// If the sendEventName flag is set, overwrite the arguments with the event name\r\n\t\t\t\t\t\tif (tempEvt.sendEventName) { finalArgs = [eventName]; }\r\n\r\n\t\t\t\t\t\t// Call the callback\r\n\t\t\t\t\t\tretVal = tempEvt.call.apply(tempEvt.context || this, finalArgs);\r\n\r\n\t\t\t\t\t\t// If the retVal === true then store the cancel flag and return to the emitting method\r\n\t\t\t\t\t\tif (retVal === true || evc._cancelled === true) {\r\n\t\t\t\t\t\t\t// The receiver method asked us to send a cancel request back to the emitter\r\n\t\t\t\t\t\t\tcancelFlag = true;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Check if we should now cancel the event\r\n\t\t\t\t\t\tif (tempEvt.oneShot) {\r\n\t\t\t\t\t\t\t// The event has a oneShot flag so since we have fired the event,\r\n\t\t\t\t\t\t\t// lets cancel the listener now\r\n\t\t\t\t\t\t\tthis.off(eventName, tempEvt);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis._eventListeners._processing = false;\r\n\r\n\t\t\t\t\t// Now process any event removal\r\n\t\t\t\t\tthis._processRemovals();\r\n\r\n\t\t\t\t\tif (cancelFlag) {\r\n\t\t\t\t\t\treturn 1;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n});\r\n\r\nif (typeof(module) !== 'undefined' && typeof(module.exports) !== 'undefined') { module.exports = IgeInputComponent; }","var IgeGamePadComponent = IgeEventingClass.extend({\r\n\tclassId: 'IgeGamePadComponent',\r\n\tcomponentId: 'gamePad',\r\n\t\r\n\tinit: function (entity, options) {\r\n\t\tvar self = this;\r\n\t\t\r\n\t\tthis._entity = entity;\r\n\t\tthis._options = options;\r\n\t\tthis.gamepadAvailable = null;\r\n\t\t\t\r\n\t\t// A number of typical buttons recognized by Gamepad API and mapped to\r\n\t\t// standard controls. Any extraneous buttons will have larger indexes.\r\n\t\tthis.TYPICAL_BUTTON_COUNT = 16;\r\n\r\n\t\t// A number of typical axes recognized by Gamepad API and mapped to\r\n\t\t// standard controls. Any extraneous buttons will have larger indexes.\r\n\t\tthis.TYPICAL_AXIS_COUNT = 4;\r\n\r\n\t\t// Whether we’re requestAnimationFrameing like it’s 1999.\r\n\t\tthis.ticking = false;\r\n\r\n\t\t// The canonical list of attached gamepads, without “holes” (always\r\n\t\t// starting at [0]) and unified between Firefox and Chrome.\r\n\t\tthis.gamepads = [];\r\n\r\n\t\t// Remembers the connected gamepads at the last check; used in Chrome\r\n\t\t// to figure out when gamepads get connected or disconnected, since no\r\n\t\t// events are fired.\r\n\t\tthis.prevRawGamepadTypes = [];\r\n\r\n\t\t// Previous timestamps for gamepad state; used in Chrome to not bother with\r\n\t\t// analyzing the polled data if nothing changed (timestamp is the same\r\n\t\t// as last time).\r\n\t\tthis.prevTimestamps = [];\r\n\t\t\r\n\t\tif (ige.isClient) {\r\n\t\t\t// As of writing, it seems impossible to detect Gamepad API support\r\n\t\t\t// in Firefox, hence we need to hardcode it in the third clause. \r\n\t\t\t// (The preceding two clauses are for Chrome.)\r\n\t\t\tthis.gamepadAvailable = !!navigator.webkitGetGamepads ||\r\n\t\t\t\t!!navigator.webkitGamepads ||\r\n\t\t\t\t(navigator.userAgent.indexOf('Firefox/') != -1);\r\n\t\r\n\t\t\tif (!this.gamepadAvailable) {\r\n\t\t\t\t// It doesn't seem Gamepad API is available – show a message telling\r\n\t\t\t\t// the visitor about it.\r\n\t\t\t\tthis.emit('notSupported');\r\n\t\t\t} else {\r\n\t\t\t\t// Firefox supports the connect/disconnect event, so we attach event\r\n\t\t\t\t// handlers to those.\r\n\t\t\t\twindow.addEventListener('MozGamepadConnected', function () { self.onGamepadConnect.apply(self, arguments); }, false);\r\n\t\t\t\twindow.addEventListener('MozGamepadDisconnected', function () { self.onGamepadDisconnect.apply(self, arguments); }, false);\r\n\t\r\n\t\t\t\t// Since Chrome only supports polling, we initiate polling loop straight\r\n\t\t\t\t// away. For Firefox, we will only do it if we get a connect event.\r\n\t\t\t\tif (!!navigator.webkitGamepads || !!navigator.webkitGetGamepads) {\r\n\t\t\t\t\tthis.startPolling();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tentity.addBehaviour('gamePadComponent', this._behaviour);\r\n\t\t}\r\n\t},\r\n\r\n\tonGamepadConnect: function(event) {\r\n\t\t// Add the new gamepad on the list of gamepads to look after.\r\n\t\tthis.gamepads.push(event.gamepad);\r\n\r\n\t\t// Start the polling loop to monitor button changes.\r\n\t\tthis.startPolling();\r\n\r\n\t\t// Ask the tester to update the screen to show more gamepads.\r\n\t\tthis.emit('change');\r\n\t},\r\n\r\n\t/**\r\n\t * React to the gamepad being disconnected.\r\n\t */\r\n\tonGamepadDisconnect: function(event) {\r\n\t\t// Remove the gamepad from the list of gamepads to monitor.\r\n\t\tfor (var i in this.gamepads) {\r\n\t\t\tif (this.gamepads[i].index == event.gamepad.index) {\r\n\t\t\t\tthis.gamepads.splice(i, 1);\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// If no gamepads are left, stop the polling loop.\r\n\t\tif (this.gamepads.length == 0) {\r\n\t\t\tthis.stopPolling();\r\n\t\t}\r\n\r\n\t\t// Ask the tester to update the screen to remove the gamepad.\r\n\t\tthis.emit('change');\r\n\t},\r\n\r\n\t/**\r\n\t * Starts a polling loop to check for gamepad state.\r\n\t */\r\n\tstartPolling: function() {\r\n\t\tthis.ticking = true;\r\n\t},\r\n\r\n\t/**\r\n\t * Stops a polling loop by setting a flag which will prevent the next\r\n\t * requestAnimationFrame() from being scheduled.\r\n\t */\r\n\tstopPolling: function() {\r\n\t\tthis.ticking = false;\r\n\t},\r\n\r\n\t/**\r\n\t * A function called with each requestAnimationFrame(). Polls the gamepad\r\n\t * status and schedules another poll.\r\n\t */\r\n\t_behaviour: function() {\r\n\t\tthis.gamePad.pollStatus();\r\n\t},\r\n\r\n\t/**\r\n\t * Checks for the gamepad status. Monitors the necessary data and notices\r\n\t * the differences from previous state (buttons for Chrome/Firefox,\r\n\t * new connects/disconnects for Chrome). If differences are noticed, asks\r\n\t * to update the display accordingly. Should run as close to 60 frames per\r\n\t * second as possible.\r\n\t */\r\n\tpollStatus: function() {\r\n\t\t// Poll to see if gamepads are connected or disconnected. Necessary\r\n\t\t// only on Chrome.\r\n\t\tthis.pollGamepads();\r\n\r\n\t\tfor (var i in this.gamepads) {\r\n\t\t\tvar gamepad = this.gamepads[i];\r\n\r\n\t\t\t// Don’t do anything if the current timestamp is the same as previous\r\n\t\t\t// one, which means that the state of the gamepad hasn’t changed.\r\n\t\t\t// This is only supported by Chrome right now, so the first check\r\n\t\t\t// makes sure we’re not doing anything if the timestamps are empty\r\n\t\t\t// or undefined.\r\n\t\t\tif (gamepad.timestamp && (gamepad.timestamp == this.prevTimestamps[i])) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tthis.prevTimestamps[i] = gamepad.timestamp;\r\n\t\t}\r\n\t},\r\n\r\n\t// This function is called only on Chrome, which does not yet support\r\n\t// connection/disconnection events, but requires you to monitor\r\n\t// an array for changes.\r\n\tpollGamepads: function() {\r\n\t\t// Get the array of gamepads – the first method (getGamepads)\r\n\t\t// is the most modern one and is supported by Firefox 28+ and\r\n\t\t// Chrome 35+. The second one (webkitGetGamepads) is a deprecated method\r\n\t\t// used by older Chrome builds.\r\n\t\tvar rawGamepads =\r\n\t\t\t(navigator.getGamepads && navigator.getGamepads()) ||\r\n\t\t\t\t(navigator.webkitGetGamepads && navigator.webkitGetGamepads());\r\n\r\n\t\tif (rawGamepads) {\r\n\t\t\t// We don’t want to use rawGamepads coming straight from the browser,\r\n\t\t\t// since it can have “holes” (e.g. if you plug two gamepads, and then\r\n\t\t\t// unplug the first one, the remaining one will be at index [1]).\r\n\t\t\tthis.gamepads = [];\r\n\r\n\t\t\t// We only refresh the display when we detect some gamepads are new\r\n\t\t\t// or removed; we do it by comparing raw gamepad table entries to\r\n\t\t\t// “undefined.”\r\n\t\t\tvar gamepadsChanged = false;\r\n\r\n\t\t\tfor (var i = 0; i < rawGamepads.length; i++) {\r\n\t\t\t\tif (typeof rawGamepads[i] != this.prevRawGamepadTypes[i]) {\r\n\t\t\t\t\tgamepadsChanged = true;\r\n\t\t\t\t\tthis.prevRawGamepadTypes[i] = typeof rawGamepads[i];\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (rawGamepads[i]) {\r\n\t\t\t\t\tthis.gamepads.push(rawGamepads[i]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Ask the tester to refresh the visual representations of gamepads\r\n\t\t\t// on the screen.\r\n\t\t\tif (gamepadsChanged) {\r\n\t\t\t\tthis.emit('change');\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n});\r\n\r\nif (typeof(module) !== 'undefined' && typeof(module.exports) !== 'undefined') { module.exports = IgeGamePadComponent; }","/**\r\n * When added to a viewport, automatically adds mouse panning\r\n * capabilities to the viewport's camera.\r\n */\r\nvar IgeMousePanComponent = IgeEventingClass.extend({\r\n\tclassId: 'IgeMousePanComponent',\r\n\tcomponentId: 'mousePan',\r\n\r\n\t/**\r\n\t * @constructor\r\n\t * @param {IgeObject} entity The object that the component is added to.\r\n\t * @param {Object=} options The options object that was passed to the component during\r\n\t * the call to addComponent.\r\n\t */\r\n\tinit: function (entity, options) {\r\n\t\tthis._entity = entity;\r\n\t\tthis._options = options;\r\n\r\n\t\t// Set the pan component to inactive to start with\r\n\t\tthis._enabled = false;\r\n\t\tthis._startThreshold = 5; // The number of pixels the mouse should move to activate a pan\r\n\t},\r\n\r\n\t/**\r\n\t * Gets / sets the number of pixels after a mouse down that the mouse\r\n\t * must move in order to activate a pan operation. Defaults to 5.\r\n\t * @param val\r\n\t * @return {*}\r\n\t */\r\n\tstartThreshold: function (val) {\r\n\t\tif (val !== undefined) {\r\n\t\t\tthis._startThreshold = val;\r\n\t\t\treturn this._entity;\r\n\t\t}\r\n\r\n\t\treturn this._startThreshold;\r\n\t},\r\n\r\n\t/**\r\n\t * Gets / sets the rectangle that the pan operation will be limited\r\n\t * to using an IgeRect instance.\r\n\t * @param {IgeRect=} rect\r\n\t * @return {*}\r\n\t */\r\n\tlimit: function (rect) {\r\n\t\tif (rect !== undefined) {\r\n\t\t\tthis._limit = rect;\r\n\t\t\treturn this._entity;\r\n\t\t}\r\n\r\n\t\treturn this._limit;\r\n\t},\r\n\r\n\t/**\r\n\t * Gets / sets the enabled flag. If set to true, pan\r\n\t * operations will be processed. If false, no panning will\r\n\t * occur.\r\n\t * @param {Boolean=} val\r\n\t * @return {*}\r\n\t */\r\n\tenabled: function (val) {\r\n\t\tvar self = this;\r\n\r\n\t\tif (val !== undefined) {\r\n\t\t\tthis._enabled = val;\r\n\r\n\t\t\t// Reset pan values.\r\n\t\t\t// This prevents problems if mouse pan is disabled mid-pan.\r\n\t\t\tthis._panPreStart = false;\r\n\t\t\tthis._panStarted  = false;\r\n\r\n\t\t\tif (this._enabled) {\r\n\t\t\t\t// Listen for the mouse events we need to operate a mouse pan\r\n\t\t\t\tthis._entity.mouseDown(function (event) { self._mouseDown(event); });\r\n\t\t\t\tthis._entity.mouseMove(function (event) { self._mouseMove(event); });\r\n\t\t\t\tthis._entity.mouseUp(function (event) { self._mouseUp(event); });\r\n\t\t\t} else {\r\n\t\t\t\t// Remove the pan start data\r\n\t\t\t\tdelete this._panStartMouse;\r\n\t\t\t\tdelete this._panStartCamera;\r\n\t\t\t}\r\n\r\n\t\t\treturn this._entity;\r\n\t\t}\r\n\r\n\t\treturn this._enabled;\r\n\t},\r\n\r\n\t/**\r\n\t * Handles the mouseDown event. Records the starting position of the\r\n\t * camera pan and the current camera translation.\r\n\t * @param event\r\n\t * @private\r\n\t */\r\n\t_mouseDown: function (event) {\r\n\t\tif (!this._panStarted && this._enabled && event.igeViewport.id() === this._entity.id()) {\r\n\t\t\t// Record the mouse down position - pan pre-start\r\n\t\t\tvar curMousePos = ige._mousePos;\r\n\t\t\tthis._panStartMouse = curMousePos.clone();\r\n\r\n\t\t\tthis._panStartCamera = {\r\n\t\t\t\tx: this._entity.camera._translate.x,\r\n\t\t\t\ty: this._entity.camera._translate.y\r\n\t\t\t};\r\n\r\n\t\t\tthis._panPreStart = true;\r\n\t\t\tthis._panStarted = false;\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Handles the mouse move event. Translates the camera as the mouse\r\n\t * moves across the screen.\r\n\t * @param event\r\n\t * @private\r\n\t */\r\n\t_mouseMove: function (event) {\r\n\t\tif (this._enabled) {\r\n\t\t\t// Pan the camera if the mouse is down\r\n\t\t\tif (this._panStartMouse) {\r\n\t\t\t\tvar curMousePos = ige._mousePos,\r\n\t\t\t\t\tpanCords = {\r\n\t\t\t\t\t\tx: this._panStartMouse.x - curMousePos.x,\r\n\t\t\t\t\t\ty: this._panStartMouse.y - curMousePos.y\r\n\t\t\t\t\t}, distX = Math.abs(panCords.x), distY = Math.abs(panCords.y),\r\n\t\t\t\t\tpanFinalX = (panCords.x / this._entity.camera._scale.x) + this._panStartCamera.x,\r\n\t\t\t\t\tpanFinalY = (panCords.y / this._entity.camera._scale.y) + this._panStartCamera.y;\r\n\r\n\t\t\t\t// Check if we have a limiter on the rectangle area\r\n\t\t\t\t// that we should allow panning inside.\r\n\t\t\t\tif (this._limit) {\r\n\t\t\t\t\t// Check the pan co-ordinates against\r\n\t\t\t\t\t// the limiter rectangle\r\n\t\t\t\t\tif (panFinalX < this._limit.x) {\r\n\t\t\t\t\t\tpanFinalX = this._limit.x;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (panFinalX > this._limit.x + this._limit.width) {\r\n\t\t\t\t\t\tpanFinalX = this._limit.x + this._limit.width;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (panFinalY < this._limit.y) {\r\n\t\t\t\t\t\tpanFinalY = this._limit.y;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (panFinalY > this._limit.y + this._limit.height) {\r\n\t\t\t\t\t\tpanFinalY = this._limit.y + this._limit.height;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (this._panPreStart) {\r\n\t\t\t\t\t// Check if we've reached the start threshold\r\n\t\t\t\t\tif (distX > this._startThreshold || distY > this._startThreshold) {\r\n\t\t\t\t\t\tthis._entity.camera.translateTo(\r\n\t\t\t\t\t\t\tpanFinalX,\r\n\t\t\t\t\t\t\tpanFinalY,\r\n\t\t\t\t\t\t\t0\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t\tthis.emit('panStart');\r\n\t\t\t\t\t\tthis._panPreStart = false;\r\n\t\t\t\t\t\tthis._panStarted = true;\r\n\r\n\t\t\t\t\t\tthis.emit('panMove');\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// Pan has already started\r\n\t\t\t\t\tthis._entity.camera.translateTo(\r\n\t\t\t\t\t\tpanFinalX,\r\n\t\t\t\t\t\tpanFinalY,\r\n\t\t\t\t\t\t0\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t\tthis.emit('panMove');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Handles the mouse up event. Finishes the camera translate and\r\n\t * removes the starting pan data.\r\n\t * @param event\r\n\t * @private\r\n\t */\r\n\t_mouseUp: function (event) {\r\n\t\tif (this._enabled) {\r\n\t\t\t// End the pan\r\n\t\t\tif (this._panStarted) {\r\n\t\t\t\tif (this._panStartMouse) {\r\n\t\t\t\t\tvar curMousePos = ige._mousePos,\r\n\t\t\t\t\t\tpanCords = {\r\n\t\t\t\t\t\t\tx: this._panStartMouse.x - curMousePos.x,\r\n\t\t\t\t\t\t\ty: this._panStartMouse.y - curMousePos.y\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tpanFinalX = (panCords.x / this._entity.camera._scale.x) + this._panStartCamera.x,\r\n\t\t\t\t\t\tpanFinalY = (panCords.y / this._entity.camera._scale.y) + this._panStartCamera.y;\r\n\r\n\t\t\t\t\t// Check if we have a limiter on the rectangle area\r\n\t\t\t\t\t// that we should allow panning inside.\r\n\t\t\t\t\tif (this._limit) {\r\n\t\t\t\t\t\t// Check the pan co-ordinates against\r\n\t\t\t\t\t\t// the limiter rectangle\r\n\t\t\t\t\t\tif (panFinalX < this._limit.x) {\r\n\t\t\t\t\t\t\tpanFinalX = this._limit.x;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (panFinalX > this._limit.x + this._limit.width) {\r\n\t\t\t\t\t\t\tpanFinalX = this._limit.x + this._limit.width;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (panFinalY < this._limit.y) {\r\n\t\t\t\t\t\t\tpanFinalY = this._limit.y;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (panFinalY > this._limit.y + this._limit.height) {\r\n\t\t\t\t\t\t\tpanFinalY = this._limit.y + this._limit.height;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis._entity.camera.translateTo(\r\n\t\t\t\t\t\tpanFinalX,\r\n\t\t\t\t\t\tpanFinalY,\r\n\t\t\t\t\t\t0\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t\t// Remove the pan start data to end the pan operation\r\n\t\t\t\t\tdelete this._panStartMouse;\r\n\t\t\t\t\tdelete this._panStartCamera;\r\n\r\n\t\t\t\t\tthis.emit('panEnd');\r\n\t\t\t\t\tthis._panStarted = false;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tdelete this._panStartMouse;\r\n\t\t\t\tdelete this._panStartCamera;\r\n\t\t\t\tthis._panStarted = false;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n});\r\n","/**\r\n * When added to a viewport, automatically adds mouse zooming\r\n * capabilities to the viewport's camera.\r\n */\r\nvar IgeMouseZoomComponent = IgeEventingClass.extend({\r\n\tclassId: 'IgeMouseZoomComponent',\r\n\tcomponentId: 'mouseZoom',\r\n\r\n\t/**\r\n\t * @constructor\r\n\t * @param {IgeObject} entity The object that the component is added to.\r\n\t * @param {Object=} options The options object that was passed to the component during\r\n\t * the call to addComponent.\r\n\t */\r\n\tinit: function (entity, options) {\r\n\t\tthis._entity = entity;\r\n\t\tthis._options = options;\r\n\r\n\t\t// Set the zoom component to inactive to start with\r\n\t\tthis._enabled = false;\r\n\t},\r\n\r\n\t/**\r\n\t * Sets / gets the enabled flag. If set to true, zoom\r\n\t * operations will be processed. If false, no zooming will\r\n\t * occur.\r\n\t * @param {Boolean=} val\r\n\t * @return {*}\r\n\t */\r\n\tenabled: function (val) {\r\n\t\tvar self = this;\r\n\r\n\t\tif (val !== undefined) {\r\n\t\t\tthis._enabled = val;\r\n\r\n\t\t\tif (this._enabled) {\r\n\t\t\t\t// Listen for the mouse events we need to operate a mouse pan\r\n\t\t\t\tthis._entity.mouseDown(function (event) { self._mouseDown(event); });\r\n\t\t\t\tthis._entity.mouseMove(function (event) { self._mouseMove(event); });\r\n\t\t\t\tthis._entity.mouseUp(function (event) { self._mouseUp(event); });\r\n\t\t\t} else {\r\n\t\t\t\t// Remove the zoom start data\r\n\t\t\t\tdelete this._zoomStartMouse;\r\n\t\t\t\tdelete this._zoomStartCamera;\r\n\t\t\t}\r\n\r\n\t\t\treturn this._entity;\r\n\t\t}\r\n\r\n\t\treturn this._enabled;\r\n\t},\r\n\r\n\t/**\r\n\t * Handles the mouseDown event. Records the starting position of the\r\n\t * camera zoom and the current camera translation.\r\n\t * @param event\r\n\t * @private\r\n\t */\r\n\t_mouseDown: function (event) {\r\n\t\tif (this._enabled && event.igeViewport.id() === this._entity.id()) {\r\n\t\t\t// Record the mouse down position - zoom starting\r\n\t\t\tvar curMousePos = ige._mousePos;\r\n\t\t\tthis._zoomStartMouse = {\r\n\t\t\t\tx: curMousePos.x,\r\n\t\t\t\ty: curMousePos.y\r\n\t\t\t};\r\n\r\n\t\t\tthis._zoomStartCamera = {\r\n\t\t\t\tx: this._entity.camera._scale.x,\r\n\t\t\t\ty: this._entity.camera._scale.y\r\n\t\t\t};\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Handles the mouse move event. Scales the camera as the mouse\r\n\t * moves across the screen.\r\n\t * @param event\r\n\t * @private\r\n\t */\r\n\t_mouseMove: function (event) {\r\n\t\tif (this._enabled) {\r\n\t\t\t// Zoom the camera if the mouse is down\r\n\t\t\tif (this._zoomStartMouse) {\r\n\t\t\t\tvar curMousePos = ige._mousePos,\r\n\t\t\t\t\tzoomCords = {\r\n\t\t\t\t\t\tx: -(this._zoomStartMouse.x - curMousePos.x) / 100,\r\n\t\t\t\t\t\ty: -(this._zoomStartMouse.y - curMousePos.y) / 100\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\tthis._entity.camera.scaleTo(\r\n\t\t\t\t\tzoomCords.x + this._zoomStartCamera.x > 0.02 ? zoomCords.x + this._zoomStartCamera.x : 0.02,\r\n\t\t\t\t\tzoomCords.x + this._zoomStartCamera.x > 0.02 ? zoomCords.x + this._zoomStartCamera.x : 0.02,\r\n\t\t\t\t\t0\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Handles the mouse up event. Finishes the camera scale and\r\n\t * removes the starting zoom data.\r\n\t * @param event\r\n\t * @private\r\n\t */\r\n\t_mouseUp: function (event) {\r\n\t\tif (this._enabled) {\r\n\t\t\t// End the zoom\r\n\t\t\tif (this._zoomStartMouse) {\r\n\t\t\t\tvar curMousePos = ige._mousePos,\r\n\t\t\t\t\tzoomCords = {\r\n\t\t\t\t\t\tx: -(this._zoomStartMouse.x - curMousePos.x) / 100,\r\n\t\t\t\t\t\ty: -(this._zoomStartMouse.y - curMousePos.y) / 100\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\tthis._entity.camera.scaleTo(\r\n\t\t\t\t\tzoomCords.x + this._zoomStartCamera.x > 0.02 ? zoomCords.x + this._zoomStartCamera.x : 0.02,\r\n\t\t\t\t\tzoomCords.x + this._zoomStartCamera.x > 0.02 ? zoomCords.x + this._zoomStartCamera.x : 0.02,\r\n\t\t\t\t\t0\r\n\t\t\t\t);\r\n\r\n\t\t\t\t// Remove the zoom start data to end the zoom operation\r\n\t\t\t\tdelete this._zoomStartMouse;\r\n\t\t\t\tdelete this._zoomStartCamera;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n});","/**\r\n * Loads slightly modified Tiled-format json map data into the Isogenic Engine.\r\n */\r\nvar IgeTiledComponent = IgeClass.extend({\r\n\tclassId: 'IgeTiledComponent',\r\n\tcomponentId: 'tiled',\r\n\r\n\t/**\r\n\t * @constructor\r\n\t * @param entity\r\n\t * @param options\r\n\t */\r\n\tinit: function (entity, options) {\r\n\t\tthis._entity = entity;\r\n\t\tthis._options = options;\r\n\t},\r\n\r\n\t/**\r\n\t * Loads a .js Tiled json-format file and converts to IGE format,\r\n\t * then calls the callback with the newly created scene and the\r\n\t * various layers as IgeTextureMap instances.\r\n\t * @param url\r\n\t * @param callback\r\n\t */\r\n\tloadJson: function (url, callback) {\r\n\t\tvar self = this,\r\n\t\t\tscriptElem;\r\n\r\n\t\tif (typeof(url) === 'string') {\r\n\t\t\tif (ige.isClient) {\r\n\t\t\t\tscriptElem = document.createElement('script');\r\n\t\t\t\tscriptElem.src = url;\r\n\t\t\t\tscriptElem.onload = function () {\r\n\t\t\t\t\tself.log('Tiled data loaded, processing...');\r\n\t\t\t\t\tself._processData(tiled, callback);\r\n\t\t\t\t};\r\n\t\t\t\tdocument.getElementsByTagName('head')[0].appendChild(scriptElem);\r\n\t\t\t} else {\r\n\t\t\t\tthis.log('URL-based Tiled data is only available client-side. If you want to load Tiled map data on the server please include the map file in your ServerConfig.js file and then specify the map\\'s data object instead of the URL.', 'error');\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tself._processData(url, callback);\r\n\t\t}\r\n\t},\r\n\r\n\t_processData: function (data, callback) {\r\n\t\tvar mapClass = ige.isServer === true ? IgeTileMap2d : IgeTextureMap,\r\n\t\t\tmapWidth = data.width,\r\n\t\t\tmapHeight = data.height,\r\n\t\t\tlayerArray = data.layers,\r\n\t\t\tlayerCount = layerArray.length,\r\n\t\t\tlayer,\r\n\t\t\tlayerType,\r\n\t\t\tlayerData,\r\n\t\t\tlayerDataCount,\r\n\t\t\tmaps = [],\r\n\t\t\tlayersById = {},\r\n\t\t\ttileSetArray = data.tilesets,\r\n\t\t\ttileSetCount = tileSetArray.length,\r\n\t\t\ttileSetItem,\r\n\t\t\ttileSetsTotal = tileSetCount,\r\n\t\t\ttileSetsLoaded = 0,\r\n\t\t\ttextureCellLookup = [],\r\n\t\t\tcurrentTexture,\r\n\t\t\tcurrentCell,\r\n\t\t\tonLoadFunc,\r\n\t\t\timage,\r\n\t\t\ttextures = [],\r\n\t\t\tallTexturesLoadedFunc,\r\n\t\t\ti, k, x, y, z,\r\n\t\t\tent;\r\n\r\n\t\t// Define the function to call when all textures have finished loading\r\n\t\tallTexturesLoadedFunc = function () {\r\n\t\t\t// Create a map for each layer\r\n\t\t\tfor (i = 0; i < layerCount; i++) {\r\n\t\t\t\tlayer = layerArray[i];\r\n\t\t\t\tlayerType = layer.type;\r\n\r\n\t\t\t\t// Check if the layer is a tile layer or an object layer\r\n\t\t\t\tif (layerType === 'tilelayer') {\r\n\t\t\t\t\tlayerData = layer.data;\r\n\r\n\t\t\t\t\tmaps[i] = new mapClass()\r\n\t\t\t\t\t\t.id(layer.name)\r\n\t\t\t\t\t\t.tileWidth(data.tilewidth)\r\n\t\t\t\t\t\t.tileHeight(data.tilewidth)\r\n\t\t\t\t\t\t.depth(i);\r\n\r\n\t\t\t\t\tmaps[i].type = layerType;\r\n\r\n\t\t\t\t\t// Check if the layer should be isometric mounts enabled\r\n\t\t\t\t\tif (data.orientation === 'isometric') {\r\n\t\t\t\t\t\tmaps[i].isometricMounts(true);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlayersById[layer.name] = maps[i];\r\n\t\t\t\t\ttileSetCount = tileSetArray.length;\r\n\r\n\t\t\t\t\tif (ige.isClient) {\r\n\t\t\t\t\t\tfor (k = 0; k < tileSetCount; k++) {\r\n\t\t\t\t\t\t\tmaps[i].addTexture(textures[k]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Loop through the layer data and paint the tiles\r\n\t\t\t\t\tlayerDataCount = layerData.length;\r\n\r\n\t\t\t\t\tfor (y = 0; y < mapHeight; y++) {\r\n\t\t\t\t\t\tfor (x = 0; x < mapWidth; x++) {\r\n\t\t\t\t\t\t\tz = x + (y * mapWidth);\r\n\r\n\t\t\t\t\t\t\tif (layerData[z] > 0 && layerData[z] !== 2147483712) {\r\n\t\t\t\t\t\t\t\tif (ige.isClient) {\r\n\t\t\t\t\t\t\t\t\t// Paint the tile\r\n\t\t\t\t\t\t\t\t\tcurrentTexture = textureCellLookup[layerData[z]];\r\n\t\t\t\t\t\t\t\t\tif (currentTexture) {\r\n\t\t\t\t\t\t\t\t\t\tcurrentCell = layerData[z] - (currentTexture._tiledStartingId - 1);\r\n\t\t\t\t\t\t\t\t\t\tmaps[i].paintTile(x, y, maps[i]._textureList.indexOf(currentTexture), currentCell);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t// Server-side we don't paint tiles on a texture map\r\n\t\t\t\t\t\t\t\t\t// we just mark the map data so that it can be used\r\n\t\t\t\t\t\t\t\t\t// to do things like path-finding and auto-creating\r\n\t\t\t\t\t\t\t\t\t// static physics objects.\r\n\t\t\t\t\t\t\t\t\tmaps[i].occupyTile(x, y, 1, 1, layerData[z]);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (layerType === 'objectgroup') {\r\n\t\t\t\t\tmaps[i] = layer;\r\n\t\t\t\t\tlayersById[layer.name] = maps[i];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tcallback(maps, layersById);\r\n\t\t};\r\n\r\n\t\tif (ige.isClient) {\r\n\t\t\tonLoadFunc = function (textures, tileSetCount, tileSetItem) {\r\n\t\t\t\treturn function () {\r\n\t\t\t\t\tvar i, cc,\r\n\t\t\t\t\t\tcs = new IgeCellSheet(tileSetItem.image, this.width / tileSetItem.tilewidth, this.height / tileSetItem.tileheight)\r\n\t\t\t\t\t\t\t.id(tileSetItem.name)\r\n\t\t\t\t\t\t\t.on('loaded', function () {\r\n\t\t\t\t\t\t\t\tcc = this.cellCount();\r\n\r\n\t\t\t\t\t\t\t\tthis._tiledStartingId = tileSetItem.firstgid;\r\n\t\t\t\t\t\t\t\t// Fill the lookup array\r\n\t\t\t\t\t\t\t\tfor (i = 0; i < cc; i++) {\r\n\t\t\t\t\t\t\t\t\ttextureCellLookup[this._tiledStartingId + i] = this;\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\ttextures.push(this);\r\n\r\n\t\t\t\t\t\t\t\ttileSetsLoaded++;\r\n\r\n\t\t\t\t\t\t\t\tif (tileSetsLoaded === tileSetsTotal) {\r\n\t\t\t\t\t\t\t\t\t// All textures loaded, fire processing function\r\n\t\t\t\t\t\t\t\t\tallTexturesLoadedFunc();\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t};\r\n\t\t\t};\r\n\r\n\t\t\t// Load the tile sets as textures\r\n\t\t\twhile (tileSetCount--) {\r\n\t\t\t\t// Load the image into memory first so we can read the total width and height\r\n\t\t\t\timage = new Image();\r\n\r\n\t\t\t\ttileSetItem = tileSetArray[tileSetCount];\r\n\t\t\t\timage.onload = onLoadFunc(textures, tileSetCount, tileSetItem);\r\n\t\t\t\timage.src = tileSetItem.image;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t// We're on the server so no textures are actually loaded\r\n\t\t\tallTexturesLoadedFunc();\r\n\t\t}\r\n\t}\r\n});\r\n\r\nif (typeof(module) !== 'undefined' && typeof(module.exports) !== 'undefined') { module.exports = IgeTiledComponent; }","var IgeUiManagerComponent = IgeClass.extend({\r\n\tclassId: 'IgeUiManagerComponent',\r\n\tcomponentId: 'ui',\r\n\t\r\n\tinit: function (entity, options) {\r\n\t\tvar self = this;\r\n\t\t\r\n\t\tthis._entity = entity;\r\n\t\tthis._options = options;\r\n\t\t\r\n\t\tthis._focus = null; // The element that currently has focus\r\n\t\tthis._caret = null; // The caret position within the focused element\r\n\t\tthis._register = [];\r\n\t\tthis._styles = {};\r\n\t\tthis._elementsByStyle = {};\r\n\t\t\r\n\t\tige.input.on('keyDown', function (event) { self._keyDown(event); });\r\n\t},\r\n\r\n\t/**\r\n\t * Get / set a style by name.\r\n\t * @param {String} name The unique name of the style. \r\n\t * @param {Object=} data The style properties and values to assign to the\r\n\t * style.\r\n\t * @returns {*}\r\n\t */\r\n\tstyle: function (name, data) {\r\n\t\tif (name !== undefined) {\r\n\t\t\tif (data !== undefined) {\r\n\t\t\t\t// Set the data against the name, update any elements using the style\r\n\t\t\t\tthis._styles[name] = data;\r\n\t\t\t\treturn this;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t// Get the data and return\r\n\t\t\treturn this._styles[name];\r\n\t\t}\r\n\t\t\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * Registers a UI element with the UI manager.\r\n\t * @param elem\r\n\t */\r\n\tregisterElement: function (elem) {\r\n\t\tthis._register.push(elem);\r\n\t},\r\n\r\n\t/**\r\n\t * Un-registers a UI element with the UI manager.\r\n\t * @param elem\r\n\t */\r\n\tunRegisterElement: function (elem) {\r\n\t\tthis._register.pull(elem);\r\n\t\t\r\n\t\t// Kill any styles defined for this element id\r\n\t\tdelete this._styles['#' + elem._id];\r\n\t\t\r\n\t\tdelete this._styles['#' + elem._id + ':active'];\r\n\t\tdelete this._styles['#' + elem._id + ':focus'];\r\n\t\tdelete this._styles['#' + elem._id + ':hover'];\r\n\t},\r\n\r\n\t/**\r\n\t * Registers a UI element against a style for quick lookup.\r\n\t * @param elem\r\n\t */\r\n\tregisterElementStyle: function (elem) {\r\n\t\tif (elem && elem._styleClass) {\r\n\t\t\tthis._elementsByStyle[elem._styleClass] = this._elementsByStyle[elem._styleClass] || [];\r\n\t\t\tthis._elementsByStyle[elem._styleClass].push(elem);\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Un-registers a UI element from a style.\r\n\t * @param elem\r\n\t */\r\n\tunRegisterElementStyle: function (elem) {\r\n\t\tif (elem && elem._styleClass) {\r\n\t\t\tthis._elementsByStyle[elem._styleClass] = this._elementsByStyle[elem._styleClass] || [];\r\n\t\t\tthis._elementsByStyle[elem._styleClass].push(elem);\r\n\t\t}\r\n\t},\r\n\t\r\n\tcanFocus: function (elem) {\r\n\t\treturn elem._allowFocus;\r\n\t},\r\n\t\r\n\tfocus: function (elem) {\r\n\t\tif (elem !== undefined) {\r\n\t\t\tif (elem !== this._focus) {\r\n\t\t\t\t// The element is not our current focus so focus to it\r\n\t\t\t\tvar previousFocus = this._focus;\r\n\t\t\t\t\r\n\t\t\t\t// Tell the current focused element that it is about to loose focus\r\n\t\t\t\tif (!previousFocus || !previousFocus.emit('blur', elem)) {\r\n\t\t\t\t\tif (previousFocus) {\r\n\t\t\t\t\t\tpreviousFocus._focused = false;\r\n\t\t\t\t\t\tpreviousFocus.blur();\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\t// The blur was not cancelled\r\n\t\t\t\t\tif (!elem.emit('focus', previousFocus)) {\r\n\t\t\t\t\t\t// The focus was not cancelled\r\n\t\t\t\t\t\tthis._focus = elem;\r\n\t\t\t\t\t\telem._focused = true;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\t// We are already focused\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\treturn false;\r\n\t},\r\n\t\r\n\tblur: function (elem) {\r\n\t\t//console.log('blur', elem._id, elem);\r\n\t\tif (elem !== undefined) {\r\n\t\t\tif (elem === this._focus) {\r\n\t\t\t\t// The element is currently focused\r\n\t\t\t\t// Tell the current focused element that it is about to loose focus\r\n\t\t\t\tif (!elem.emit('blur')) {\r\n\t\t\t\t\t// The blur was not cancelled\r\n\t\t\t\t\tthis._focus = null;\r\n\t\t\t\t\telem._focused = false;\r\n\t\t\t\t\telem._updateStyle();\r\n\t\t\t\t\t\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\treturn false;\r\n\t},\r\n\t\r\n\t_keyUp: function (event) {\r\n\t\t// Direct the key event to the focused element\r\n\t\tif (this._focus) {\r\n\t\t\tthis._focus.emit('keyUp', event);\r\n\t\t\tige.input.stopPropagation();\r\n\t\t}\r\n\t},\r\n\t\r\n\t_keyDown: function (event) {\r\n\t\t// Direct the key event to the focused element\r\n\t\tif (this._focus) {\r\n\t\t\tthis._focus.emit('keyDown', event);\r\n\t\t\tige.input.stopPropagation();\r\n\t\t}\r\n\t}\r\n});","var IgeEntityManager = IgeEventingClass.extend({\r\n\tclassId: 'IgeEntityManager',\r\n\tcomponentId: 'entityManager',\r\n\t\r\n\tinit: function (entity, options) {\r\n\t\tthis._entity = entity;\r\n\t\tthis._options = options;\r\n\t\t\r\n\t\t// Create queue arrays that will store entities waiting to\r\n\t\t// be mounted or unmounted\r\n\t\tthis._mountQueue = [];\r\n\t\tthis._unMountQueue = [];\r\n\t\tthis._maxMountsPerOp = 0;\r\n\t\tthis._maxUnMountsPerOp = 0;\r\n\t\t\t\r\n\t\t// Create the _orphans array on the entity\r\n\t\tentity._orphans = [];\r\n\t\t\r\n\t\t// Set a method (behaviour) that will be called on every update\r\n\t\tentity.addBehaviour('entManager', this._updateBehaviour, false);\r\n\t},\r\n\r\n\t/**\r\n\t * Called each update frame from the component parent and calls various private\r\n\t * methods to ensure that entities that should be mounted are mounted and those\r\n\t * that are to be unmounted are unmounted.\r\n\t * @private\r\n\t */\r\n\t_updateBehaviour: function (ctx) {\r\n\t\t// Draw visible area rect\r\n\t\tvar rect = ige._currentViewport.viewArea();\r\n\t\t\r\n\t\t/*new IgeEntity()\r\n\t\t\t.id('visArea')\r\n\t\t\t.texture(this.gameTexture.simpleBox)\r\n\t\t\t.opacity(0.5)\r\n\t\t\t.mount(ige.$('objectScene'));*/\r\n\t\t\r\n\t\t/*ige.$('visArea')\r\n\t\t\t.translateTo(rect.x + (rect.width / 2), rect.y + (rect.height / 2), 0)\r\n\t\t\t.height(rect.height)\r\n\t\t\t.width(rect.width);*/\r\n\t\t\r\n\t\t// Get our instance back\r\n\t\tvar self = this.entityManager;\r\n\t\t\r\n\t\tself._updateOrphans();\r\n\t\tself._updateChildren();\r\n\t\t\r\n\t\tself._processMountQueue();\r\n\t\tself._processUnMountQueue();\r\n\t},\r\n\r\n\t/**\r\n\t * Checks all the mounted entities of our component parent are still supposed\r\n\t * to be in the scenegraph and if not, adds them to the un-mount queue. Also\r\n\t * marks any entities that are non-managed but also off-screen as inView = false.\r\n\t * @private\r\n\t */\r\n\t_updateOrphans: function () {\r\n\t\tvar arr = this._entity._children,\r\n\t\t\tarrCount = arr.length,\r\n\t\t\tviewportArr = ige._children,\r\n\t\t\tvpCount = viewportArr.length,\r\n\t\t\titem,\r\n\t\t\titemAabb,\r\n\t\t\tvpIndex,\r\n\t\t\tinVisibleArea;\r\n\t\t\r\n\t\twhile (arrCount--) {\r\n\t\t\titem = arr[arrCount];\r\n\r\n\t\t\tif (item._managed) {\r\n\t\t\t\tif (item.aabb) {\r\n\t\t\t\t\tif (item._mode === 1 || (item._parent && item._parent._mountMode === 1)) {\r\n\t\t\t\t\t\titemAabb = item.bounds3dPolygon().aabb();\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\titemAabb = item.aabb();\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tinVisibleArea = false;\r\n\t\t\t\t\t\r\n\t\t\t\t\t// Check the entity to see if its bounds are \"inside\" any\r\n\t\t\t\t\t// viewport's visible area\r\n\t\t\t\t\tfor (vpIndex = 0; vpIndex < vpCount; vpIndex++) {\r\n\t\t\t\t\t\tif (viewportArr[vpIndex].viewArea().intersects(itemAabb)) {\r\n\t\t\t\t\t\t\tinVisibleArea = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (!inVisibleArea) {\r\n\t\t\t\t\t\t// Check for managed mode 1 (static entities that can be unmounted)\r\n\t\t\t\t\t\t// or managed mode 2 (dynamic and should just be marked as inView = false)\r\n\t\t\t\t\t\tif (item._managed === 1) {\r\n\t\t\t\t\t\t\t// The entity is not inside the viewport visible area\r\n\t\t\t\t\t\t\t// and is managed mode 1 (static) so unmount it\r\n\t\t\t\t\t\t\tthis._unMountQueue.push(item);\r\n\t\t\t\t\t\t} else if (item._managed === 2) {\r\n\t\t\t\t\t\t\t// The entity is dynamic so mark is as inView = false\r\n\t\t\t\t\t\t\titem._inView = false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else if (item._managed === 2) {\r\n\t\t\t\t\t\t// The entity is dynamic so mark is as inView = true\r\n\t\t\t\t\t\titem._inView = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._unMountQueue.push(item);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\t\r\n\t/**\r\n\t * Checks all the un-mounted entities of our component parent to see if they are\r\n\t * now inside the visible area of a viewport and if so, queues them for re-mounting.\r\n\t * @private\r\n\t */\r\n\t_updateChildren: function () {\r\n\t\tvar arr = this._entity._orphans,\r\n\t\t\tarrCount = arr.length,\r\n\t\t\tviewportArr = ige._children,\r\n\t\t\tvpCount = viewportArr.length,\r\n\t\t\titem,\r\n\t\t\titemAabb,\r\n\t\t\tvpIndex,\r\n\t\t\tinVisibleArea;\r\n\t\t\r\n\t\twhile (arrCount--) {\r\n\t\t\titem = arr[arrCount];\r\n\r\n\t\t\tif (item._managed) {\r\n\t\t\t\tif (item.aabb) {\r\n\t\t\t\t\tif (item._mode === 1 || (item._parent && item._parent._mountMode === 1)) {\r\n\t\t\t\t\t\titemAabb = item.bounds3dPolygon().aabb();\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\titemAabb = item.aabb();\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tinVisibleArea = false;\r\n\t\t\t\t\t\r\n\t\t\t\t\t// Check the entity to see if its bounds are \"inside\" any\r\n\t\t\t\t\t// viewport's visible area\r\n\t\t\t\t\tfor (vpIndex = 0; vpIndex < vpCount; vpIndex++) {\r\n\t\t\t\t\t\tif (viewportArr[vpIndex].viewArea().intersects(itemAabb)) {\r\n\t\t\t\t\t\t\tinVisibleArea = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (inVisibleArea) {\r\n\t\t\t\t\t\t// Check for managed mode 1 (static entities that can be mounted)\r\n\t\t\t\t\t\t// or managed mode 2 (dynamic and should just be marked as inView = true)\r\n\t\t\t\t\t\tif (item._managed === 1) {\r\n\t\t\t\t\t\t\t// The entity is inside the viewport visible area\r\n\t\t\t\t\t\t\t// and is managed mode 1 (static) so mount it\r\n\t\t\t\t\t\t\tthis._mountQueue.push(item);\r\n\t\t\t\t\t\t} else if (item._managed === 2) {\r\n\t\t\t\t\t\t\t// The entity is dynamic so mark is as inView = true\r\n\t\t\t\t\t\t\titem._inView = true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._mountQueue.push(item);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Loops any entities queued for mounting and mounts them.\r\n\t * @private\r\n\t */\r\n\t_processMountQueue: function () {\r\n\t\tvar arr = this._mountQueue,\r\n\t\t\tarrCount = arr.length,\r\n\t\t\titem;\r\n\t\t\r\n\t\twhile (arrCount--) {\r\n\t\t\titem = arr[arrCount];\r\n\t\t\t\r\n\t\t\tthis._entity._orphans.pull(item);\r\n\t\t\titem.mount(this._entity);\r\n\t\t}\r\n\t\t\r\n\t\tthis._mountQueue = [];\r\n\t},\r\n\r\n\t/**\r\n\t * Loops any entities queued for un-mounting and un-mounts them.\r\n\t * @private\r\n\t */\r\n\t_processUnMountQueue: function () {\r\n\t\tvar arr = this._unMountQueue,\r\n\t\t\tarrCount = arr.length,\r\n\t\t\titem;\r\n\t\t\r\n\t\twhile (arrCount--) {\r\n\t\t\titem = arr[arrCount];\r\n\t\t\titem.unMount();\r\n\t\t\t\r\n\t\t\tthis._entity._orphans.push(item);\r\n\t\t}\r\n\t\t\r\n\t\tthis._unMountQueue = [];\r\n\t}\r\n});","var IgeEntityManagerComponent = IgeClass.extend({\r\n\tclassId: 'IgeEntityManagerComponent',\r\n\tcomponentId: 'entityManager',\r\n\r\n\t/**\r\n\t * @constructor\r\n\t * @param {Object} entity The parent object that this component is being added to.\r\n\t * @param {Object=} options An optional object that is passed to the component when it is being initialised.\r\n\t */\r\n\tinit: function (entity, options) {\r\n\t\tthis._entity = entity;\r\n\t\tthis._options = options;\r\n\r\n\t\t// Check we are being added to a tile map\r\n\t\tif (!this._entity.pointToTile) {\r\n\t\t\tthis.log('Warning, IgeEntityManagerComponent is only meant to be added to a tile map!', 'warning');\r\n\t\t}\r\n\r\n\t\tthis._maps = [];\r\n\t\tthis._overwatchMode = 0;\r\n\t\tthis._removeMode = 0;\r\n\t\tthis._createArr = [];\r\n\t\tthis._removeArr = [];\r\n\r\n\t\tentity.addBehaviour('entityManager', this._behaviour);\r\n\t},\r\n\r\n\t/**\r\n\t * Adds a map that will be used to read data and convert\r\n\t * to entities as the visible map area is moved.\r\n\t * @param {IgeTileMap2d=} map\r\n\t * @return {*}\r\n\t */\r\n\taddMap: function (map) {\r\n\t\tif (map !== undefined) {\r\n\t\t\tthis._maps.push(map);\r\n\t\t}\r\n\r\n\t\treturn this._entity;\r\n\t},\r\n\r\n\t/**\r\n\t * Gets / sets the boolean flag determining if the entity\r\n\t * manager is enabled or not.\r\n\t * @param {Boolean=} val\r\n\t * @return {*}\r\n\t */\r\n\tactive: function (val) {\r\n\t\tif (val !== undefined) {\r\n\t\t\tthis._active = val;\r\n\t\t\treturn this._entity;\r\n\t\t}\r\n\r\n\t\treturn this._active;\r\n\t},\r\n\r\n\t/**\r\n\t * Gets / sets the number of entities the entity manager can\r\n\t * create per tick. If the number of entities that need to be\r\n\t * created is greater than this number they will be queued\r\n\t * and processed on the next tick.\r\n\t * @param val\r\n\t * @return {*}\r\n\t */\r\n\tmaxCreatePerTick: function (val) {\r\n\t\tif (val !== undefined) {\r\n\t\t\tthis._maxCreatePerTick = val;\r\n\t\t\treturn this._entity;\r\n\t\t}\r\n\r\n\t\treturn this._maxCreatePerTick;\r\n\t},\r\n\r\n\t/**\r\n\t * Gets / sets the number of entities the entity manager can\r\n\t * remove per tick. If the number of entities that need to be\r\n\t * removed is greater than this number they will be queued\r\n\t * and processed on the next tick.\r\n\t * @param val\r\n\t * @return {*}\r\n\t */\r\n\tmaxRemovePerTick: function (val) {\r\n\t\tif (val !== undefined) {\r\n\t\t\tthis._maxRemovePerTick = val;\r\n\t\t\treturn this._entity;\r\n\t\t}\r\n\r\n\t\treturn this._maxRemovePerTick;\r\n\t},\r\n\r\n\t/**\r\n\t * Gets / sets the overwatch mode for the entity manager. This\r\n\t * is the mode that the manager will use when monitoring the\r\n\t * entities under it's control to determine if any should be\r\n\t * removed or not.\r\n\t * @param {Number=} val Overwatch mode, defaults to 0.\r\n\t * @return {*}\r\n\t */\r\n\toverwatchMode: function (val) {\r\n\t\tif (val !== undefined) {\r\n\t\t\tthis._overwatchMode = val;\r\n\t\t\treturn this._entity;\r\n\t\t}\r\n\r\n\t\treturn this._overwatchMode;\r\n\t},\r\n\r\n\t/**\r\n\t * Adds a callback method that is called before an entity is\r\n\t * created and asks the callback to return true if the entity\r\n\t * should be allowed to be created, or false if not.\r\n\t * @param {Function=} val The callback method.\r\n\t * @return {*}\r\n\t */\r\n\tcreateCheck: function (val) {\r\n\t\tif (val !== undefined) {\r\n\t\t\tthis._createCheck = val;\r\n\t\t\treturn this._entity;\r\n\t\t}\r\n\r\n\t\treturn this._createCheck;\r\n\t},\r\n\r\n\t/**\r\n\t * Adds a callback method that is called to allow you to execute\r\n\t * the required code to create the desired entity from the map\r\n\t * data you are being passed.\r\n\t * @param {Function=} val The callback method.\r\n\t * @return {*}\r\n\t */\r\n\tcreateEntityFromMapData: function (val) {\r\n\t\tif (val !== undefined) {\r\n\t\t\tthis._createEntityFromMapData = val;\r\n\t\t\treturn this._entity;\r\n\t\t}\r\n\r\n\t\treturn this._createEntityFromMapData;\r\n\t},\r\n\r\n\t/**\r\n\t * Adds a callback method that is called before an entity is removed\r\n\t * and if the callback returns true then the entity will be removed\r\n\t * or if false, will not.\r\n\t * @param {Function=} val The callback method.\r\n\t * @return {*}\r\n\t */\r\n\tremoveCheck: function (val) {\r\n\t\tif (val !== undefined) {\r\n\t\t\tthis._removeCheck = val;\r\n\t\t\treturn this._entity;\r\n\t\t}\r\n\r\n\t\treturn this._removeCheck;\r\n\t},\r\n\r\n\t/**\r\n\t * Get / sets the entity that will be used to determine the\r\n\t * center point of the area to manage. This allows the\r\n\t * area to become dynamic based on this entity's position.\r\n\t * @param entity\r\n\t * @return {*}\r\n\t */\r\n\ttrackTranslate: function (entity) {\r\n\t\tif (entity !== undefined) {\r\n\t\t\tthis._trackTranslateTarget = entity;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\treturn this._trackTranslateTarget;\r\n\t},\r\n\r\n\t/**\r\n\t * Stops tracking the current tracking target's translation.\r\n\t */\r\n\tunTrackTranslate: function () {\r\n\t\tdelete this._trackTranslateTarget;\r\n\t},\r\n\r\n\t/**\r\n\t * Gets / sets the center position of the management area.\r\n\t * @param {Number=} x\r\n\t * @param {Number=} y\r\n\t * @return {*}\r\n\t */\r\n\tareaCenter: function (x, y) {\r\n\t\tif (x !== undefined && y !== undefined) {\r\n\t\t\t// Adjust the passed x, y to account for this\r\n\t\t\t// texture map's translation\r\n\t\t\tvar ent = this._entity,\r\n\t\t\t\toffset;\r\n\r\n\t\t\tif (ent._mode === 0) {\r\n\t\t\t\t// 2d mode\r\n\t\t\t\toffset = ent._translate;\r\n\t\t\t}\r\n\r\n\t\t\tif (ent._mode === 1) {\r\n\t\t\t\t// Iso mode\r\n\t\t\t\toffset = ent._translate.toIso();\r\n\t\t\t}\r\n\r\n\t\t\tx -= offset.x;\r\n\t\t\ty -= offset.y;\r\n\r\n\t\t\tthis._areaCenter = new IgePoint3d(x, y, 0);\r\n\t\t\treturn this._entity;\r\n\t\t}\r\n\r\n\t\treturn this._areaCenter;\r\n\t},\r\n\r\n\t/**\r\n\t * Gets / sets the area rectangle of the management area where\r\n\t * entities outside this area are considered for removal and map\r\n\t * data that falls inside this area is considered for entity\r\n\t * creation.\r\n\t * @param {Number=} x\r\n\t * @param {Number=} y\r\n\t * @param {Number=} width\r\n\t * @param {Number=} height\r\n\t * @return {*}\r\n\t */\r\n\tareaRect: function (x, y, width, height) {\r\n\t\tif (x !== undefined && y !== undefined && width !== undefined && height !== undefined) {\r\n\t\t\tthis._areaRect = new IgeRect(x, y, width, height);\r\n\t\t\treturn this._entity;\r\n\t\t}\r\n\r\n\t\treturn this._areaRect;\r\n\t},\r\n\r\n\tareaRectAutoSize: function (val, options) {\r\n\t\tif (val !== undefined) {\r\n\t\t\tthis._areaRectAutoSize = val;\r\n\t\t\tthis._areaRectAutoSizeOptions = options;\r\n\t\t\treturn this._entity;\r\n\t\t}\r\n\r\n\t\treturn this._areaRectAutoSize;\r\n\t},\r\n\r\n\t/**\r\n\t * Returns the current management area.\r\n\t * @return {IgeRect}\r\n\t */\r\n\tcurrentArea: function () {\r\n\t\t// Check if we are tracking an entity that is used to\r\n\t\t// set the center point of the area\r\n\t\tif (this._trackTranslateTarget) {\r\n\t\t\t// Calculate which tile our character is currently \"over\"\r\n\t\t\tif (this._trackTranslateTarget.isometric() === true) {\r\n\t\t\t\tentTranslate = this._trackTranslateTarget._translate.toIso();\r\n\t\t\t} else {\r\n\t\t\t\tentTranslate = this._trackTranslateTarget._translate;\r\n\t\t\t}\r\n\r\n\t\t\tthis.areaCenter(entTranslate.x, entTranslate.y);\r\n\t\t}\r\n\r\n\t\tvar areaRect = this._areaRect,\r\n\t\t\tareaCenter = this._areaCenter;\r\n\r\n\t\tif (areaRect && areaCenter) {\r\n\t\t\treturn new IgeRect(Math.floor(areaRect.x + areaCenter.x), Math.floor(areaRect.y + areaCenter.y), Math.floor(areaRect.width), Math.floor(areaRect.height));\r\n\t\t} else {\r\n\t\t\treturn new IgeRect(0, 0, 0, 0);\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Gets / sets the mode that entities will be removed with.\r\n\t * If set to 0 (default) the entities will be removed via a\r\n\t * call to their destroy() method. If set to 1, entities will\r\n\t * be unmounted via a call to unMount(). This means that their\r\n\t * associated box2d bodies will not be removed from the\r\n\t * simulation if in mode 1.\r\n\t * @param val\r\n\t * @return {*}\r\n\t */\r\n\tremoveMode: function (val) {\r\n\t\tif (val !== undefined) {\r\n\t\t\tthis._removeMode = val;\r\n\t\t\treturn this._entity;\r\n\t\t}\r\n\r\n\t\treturn this._removeMode;\r\n\t},\r\n\r\n\t/**\r\n\t * The behaviour method executed each tick.\r\n\t * @param ctx\r\n\t * @private\r\n\t */\r\n\t_behaviour: function (ctx) {\r\n\t\tvar self = this.entityManager,\r\n\t\t\tcurrentArea,\r\n\t\t\tcurrentAreaTiles,\r\n\t\t\tarr = this._children,\r\n\t\t\tarrCount = arr.length,\r\n\t\t\titem,\r\n\t\t\tmaps = self._maps,\r\n\t\t\tmap,\r\n\t\t\tmapIndex,\r\n\t\t\tmapData,\r\n\t\t\tcurrentTile,\r\n\t\t\trenderX, renderY,\r\n\t\t\trenderWidth, renderHeight,\r\n\t\t\tx, y,\r\n\t\t\ttileData,\r\n\t\t\trenderSize,\r\n\t\t\tratio;\r\n\r\n\t\tif ((!self._areaRect || ige._resized) && self._areaRectAutoSize) {\r\n\t\t\tself._resizeEvent();\r\n\t\t}\r\n\r\n\t\tcurrentArea = self.currentArea();\r\n\r\n\t\tif (self._areaCenter && self._areaRect && !currentArea.compare(self._lastArea)) {\r\n\t\t\t////////////////////////////////////\r\n\t\t\t// ENTITY REMOVAL CHECKS          //\r\n\t\t\t////////////////////////////////////\r\n\r\n\t\t\t/*// Check if the area metrics have changed\r\n\t\t\tif (this._overwatchMode === 0 && (!currentArea.compare(self._lastArea))) {\r\n\t\t\t\t// Overwatch mode is zero so only scan for entities to remove\r\n\t\t\t\t// if the area metrics have changed.\r\n\t\t\t}\r\n\r\n\t\t\tif (self._overwatchMode === 1) {\r\n\t\t\t\t// Actively scan every tick for entities to remove\r\n\t\t\t\twhile (arrCount--) {\r\n\t\t\t\t\titem = arr[arrCount];\r\n\r\n\t\t\t\t\t// Check if the item has an aabb method\r\n\t\t\t\t\tif (item.aabb) {\r\n\t\t\t\t\t\t// Check the entity to see if its bounds are \"inside\" the\r\n\t\t\t\t\t\t// manager's visible area\r\n\t\t\t\t\t\tif (!currentArea.intersects(item.aabb())) {\r\n\t\t\t\t\t\t\t// The item is outside the manager's area so\r\n\t\t\t\t\t\t\t// ask the removeCheck callback if we should\r\n\t\t\t\t\t\t\t// remove the entity\r\n\t\t\t\t\t\t\tif (!self._removeCheck || self._removeCheck(item)) {\r\n\t\t\t\t\t\t\t\t// Queue the entity for removal\r\n\t\t\t\t\t\t\t\tself._removeArr.push(item);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}*/\r\n\r\n\t\t\tcurrentTile = this.pointToTile(self._areaCenter);\r\n\t\t\trenderX = currentTile.x;\r\n\t\t\trenderY = currentTile.y;\r\n\t\t\trenderWidth = Math.ceil(currentArea.width / this._tileWidth);\r\n\t\t\trenderHeight = Math.ceil(currentArea.height / this._tileHeight);\r\n\r\n\t\t\tcurrentArea.x -= (this._tileWidth);\r\n\t\t\tcurrentArea.y -= (this._tileHeight / 2);\r\n\t\t\tcurrentArea.width += (this._tileWidth * 2);\r\n\t\t\tcurrentArea.height += (this._tileHeight);\r\n\r\n\t\t\t// Check if we are rendering in 2d or isometric mode\r\n\t\t\tif (this._mountMode === 0) {\r\n\t\t\t\t// 2d\r\n\t\t\t\tcurrentAreaTiles = new IgeRect(\r\n\t\t\t\t\trenderX - Math.floor(renderWidth / 2) - 1,\r\n\t\t\t\t\trenderY - Math.floor(renderHeight / 2) - 1,\r\n\t\t\t\t\trenderX + Math.floor(renderWidth / 2) + 1 - (renderX - Math.floor(renderWidth / 2) - 1),\r\n\t\t\t\t\trenderY + Math.floor(renderHeight / 2) + 1 - (renderY - Math.floor(renderHeight / 2) - 1)\r\n\t\t\t\t);\r\n\t\t\t}\r\n\r\n\t\t\tif (this._mountMode === 1) {\r\n\t\t\t\t// Isometric\r\n\t\t\t\trenderSize = Math.abs(renderWidth) > Math.abs(renderHeight) ? renderWidth : renderHeight;\r\n\t\t\t\tratio = 0.6;\r\n\t\t\t\tcurrentAreaTiles = new IgeRect(\r\n\t\t\t\t\trenderX - Math.floor(renderSize * ratio),\r\n\t\t\t\t\trenderY - Math.floor(renderSize * ratio),\r\n\t\t\t\t\trenderX + Math.floor(renderSize * ratio) + 1 - (renderX - Math.floor(renderSize * ratio)),\r\n\t\t\t\t\trenderY + Math.floor(renderSize * ratio) + 1 - (renderY - Math.floor(renderSize * ratio))\r\n\t\t\t\t);\r\n\t\t\t}\r\n\r\n\t\t\t// Generate the bounds rectangle\r\n\t\t\tif (this._drawBounds) {\r\n\t\t\t\tctx.strokeStyle = '#ff0000';\r\n\t\t\t\tctx.strokeRect(currentArea.x, currentArea.y, currentArea.width, currentArea.height);\r\n\r\n\t\t\t\tthis._highlightTileRect = currentAreaTiles;\r\n\t\t\t}\r\n\r\n\t\t\t////////////////////////////////////\r\n\t\t\t// ENTITY REMOVAL CHECKS          //\r\n\t\t\t////////////////////////////////////\r\n\t\t\t//this._highlightTileRect = currentAreaTiles;\r\n\r\n\t\t\tmap = this.map;\r\n\t\t\twhile (arrCount--) {\r\n\t\t\t\titem = arr[arrCount];\r\n\r\n\t\t\t\tif (!self._removeCheck || self._removeCheck(item)) {\r\n\t\t\t\t\tif (!currentAreaTiles.intersects(item._occupiedRect)) {\r\n\t\t\t\t\t\t// The item is outside the manager's area so\r\n\t\t\t\t\t\t// ask the removeCheck callback if we should\r\n\t\t\t\t\t\t// remove the entity\r\n\r\n\t\t\t\t\t\t// Queue the entity for removal\r\n\t\t\t\t\t\tself._removeArr.push(item);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t////////////////////////////////////\r\n\t\t\t// ENTITY CREATION CHECKS         //\r\n\t\t\t////////////////////////////////////\r\n\t\t\tfor (mapIndex in maps) {\r\n\t\t\t\tif (maps.hasOwnProperty(mapIndex)) {\r\n\t\t\t\t\tmap = maps[mapIndex];\r\n\t\t\t\t\tmapData = map.map._mapData;\r\n\t\t\t\t\t// TODO: This can be optimised further by only checking the area that has changed\r\n\r\n\t\t\t\t\tfor (y = currentAreaTiles.y; y < currentAreaTiles.y + currentAreaTiles.height; y++) {\r\n\t\t\t\t\t\tif (mapData[y]) {\r\n\t\t\t\t\t\t\tfor (x = currentAreaTiles.x; x < currentAreaTiles.x + currentAreaTiles.width; x++) {\r\n\t\t\t\t\t\t\t\t// Grab the tile data to paint\r\n\t\t\t\t\t\t\t\ttileData = mapData[y][x];\r\n\r\n\t\t\t\t\t\t\t\tif (tileData) {\r\n\t\t\t\t\t\t\t\t\tif (!self._createCheck || self._createCheck(map, x, y, tileData)) {\r\n\t\t\t\t\t\t\t\t\t\t// Queue the entity for creation\r\n\t\t\t\t\t\t\t\t\t\tself._createArr.push([map, x, y, tileData]);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tself._lastArea = currentArea;\r\n\r\n\t\t\t// Process the entity queues\r\n\t\t\tself.processQueues();\r\n\t\t}\r\n\t},\r\n\r\n\tprocessQueues: function () {\r\n\t\tvar createArr = this._createArr,\r\n\t\t\tcreateCount = createArr.length,\r\n\t\t\tcreateLimit = this._maxCreatePerTick !== undefined ? this._maxCreatePerTick : 0,\r\n\t\t\tcreateEntityFunc = this._createEntityFromMapData,\r\n\t\t\tremoveArr = this._removeArr,\r\n\t\t\tremoveCount = removeArr.length,\r\n\t\t\tremoveLimit = this._maxRemovePerTick !== undefined ? this._maxRemovePerTick : 0,\r\n\t\t\ti;\r\n\r\n\t\tif (createLimit && createCount > createLimit) { createCount = createLimit; }\r\n\t\tif (removeLimit && removeCount > removeLimit) { removeCount = removeLimit; }\r\n\r\n\t\t// Process remove queue\r\n\t\tfor (i = 0; i < removeCount; i++) {\r\n\t\t\tif (this._removeMode === 0) {\r\n\t\t\t\t// Pop the first item off the array and destroy it\r\n\t\t\t\tremoveArr.shift().destroy();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Process creation\r\n\t\tfor (i = 0; i < createCount; i++) {\r\n\t\t\t// Pop the first item off the array and pass it as arguments\r\n\t\t\t// to the entity creation method assigned to this manager\r\n\t\t\tcreateEntityFunc.apply(this, createArr.shift());\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Handles screen resize events.\r\n\t * @param event\r\n\t * @private\r\n\t */\r\n\t_resizeEvent: function (event) {\r\n\t\t// Set width / height of scene to match parent\r\n\t\tif (this._areaRectAutoSize) {\r\n\t\t\tvar geom = this._entity._parent._bounds2d,\r\n\t\t\t\tadditionX = 0, additionY = 0;\r\n\r\n\t\t\tif (this._areaRectAutoSizeOptions) {\r\n\t\t\t\tif (this._areaRectAutoSizeOptions.bufferMultiple) {\r\n\t\t\t\t\tadditionX = (geom.x * this._areaRectAutoSizeOptions.bufferMultiple.x) - geom.x;\r\n\t\t\t\t\tadditionY = (geom.y * this._areaRectAutoSizeOptions.bufferMultiple.y) - geom.y;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (this._areaRectAutoSizeOptions.bufferPixels) {\r\n\t\t\t\t\tadditionX = this._areaRectAutoSizeOptions.bufferPixels.x;\r\n\t\t\t\t\tadditionY = this._areaRectAutoSizeOptions.bufferPixels.y;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.areaRect(-Math.floor((geom.x + additionX) / 2), -Math.floor((geom.y + additionY) / 2), geom.x + additionX, geom.y + additionY);\r\n\r\n\t\t\t// Check if caching is enabled\r\n\t\t\tif (this._caching > 0) {\r\n\t\t\t\tthis._resizeCacheCanvas();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n});","/**\r\n * When added to a viewport, automatically adds entity rotate\r\n * capabilities to the selected entity in the scenegraph viewer.\r\n */\r\nvar IgeEditorComponent = IgeEventingClass.extend({\r\n\tclassId: 'IgeEditorComponent',\r\n\tcomponentId: 'editor',\r\n\r\n\t/**\r\n\t * @constructor\r\n\t * @param {IgeObject} entity The object that the component is added to.\r\n\t * @param {Object=} options The options object that was passed to the component during\r\n\t * the call to addComponent.\r\n\t */\r\n\tinit: function (entity, options) {\r\n\t\tvar self = this;\r\n\t\t\r\n\t\tthis._entity = entity;\r\n\t\tthis._options = options;\r\n\t\tthis._showStats = 0;\r\n\t\t\r\n\t\tthis._templateCache = {};\r\n\t\tthis._cacheTemplates = true;\r\n\t\t\r\n\t\tthis.ui = {};\r\n\t\t\r\n\t\tthis._interceptMouse = false;\r\n\t\t\r\n\t\t// Hook the input component's keyUp and check for the = symbol... if there, toggle editor\r\n\t\tthis._activateKeyHandle = ige.input.on('keyUp', function (event) {\r\n\t\t\tif (event.keyIdentifier === \"U+00BB\") {\r\n\t\t\t\t// = key pressed, toggle the editor\r\n\t\t\t\tself.toggle();\r\n\t\t\t\t\r\n\t\t\t\t// Return true to stop this event from being emitted by the engine to the scenegraph\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t});\r\n\t\t\r\n\t\t// Hook the input component's keyUp and check for the - symbol... if there, toggle stats\r\n\t\tthis._activateKeyHandle = ige.input.on('keyUp', function (event) {\r\n\t\t\tif (event.keyIdentifier === \"U+00BD\") {\r\n\t\t\t\t// Toggle the stats\r\n\t\t\t\tself.toggleStats();\r\n\t\t\t\t\r\n\t\t\t\t// Return true to stop this event from being emitted by the engine to the scenegraph\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t});\r\n\t\t\r\n\t\t// Hook the engine's input system and take over mouse interaction\r\n\t\tthis._mouseUpHandle = ige.input.on('preMouseUp', function (event) {\r\n\t\t\tif (self._enabled && self._interceptMouse) {\r\n\t\t\t\tself.emit('mouseUp', event);\r\n\t\t\t\t\r\n\t\t\t\t// Return true to stop this event from being emitted by the engine to the scenegraph\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t});\r\n\t\t\r\n\t\tthis._mouseDownHandle = ige.input.on('preMouseDown', function (event) {\r\n\t\t\tif (self._enabled && self._interceptMouse) {\r\n\t\t\t\tself.emit('mouseDown', event);\r\n\t\t\t\t\r\n\t\t\t\t// Return true to stop this event from being emitted by the engine to the scenegraph\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t});\r\n\t\t\r\n\t\tthis._mouseMoveHandle = ige.input.on('preMouseMove', function (event) {\r\n\t\t\tif (self._enabled && self._interceptMouse) {\r\n\t\t\t\tself.emit('mouseMove', event);\r\n\t\t\t\t\r\n\t\t\t\t// Return true to stop this event from being emitted by the engine to the scenegraph\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t});\r\n\t\t\r\n\t\tthis._contextMenuHandle = ige.input.on('preContextMenu', function (event) {\r\n\t\t\tif (self._enabled && self._interceptMouse) {\r\n\t\t\t\tself.emit('contextMenu', event);\r\n\t\t\t\t\r\n\t\t\t\t// Return true to stop this event from being emitted by the engine to the scenegraph\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t});\r\n\t\t\r\n\t\t// Load jsRender for HTML template support\r\n\t\tige.requireScript(igeRoot + 'components/editor/vendor/jsRender.js');\r\n\t\t\r\n\t\t// Load jQuery, the editor will use it for DOM manipulation simplicity\r\n\t\tige.requireScript(igeRoot + 'components/editor/vendor/jquery.2.0.3.min.js');\r\n\t\t\r\n\t\tige.on('allRequireScriptsLoaded', function () {\r\n\t\t\t// Stop drag-drop of files over the page from doing a redirect and leaving the page\r\n\t\t\t$(function () {\r\n\t\t\t\t$('body')\r\n\t\t\t\t\t.on('dragover', function (e) {\r\n\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.on('drop', function (e) {\r\n\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t});\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\t// Load editor html into the DOM\r\n\t\t\tself.loadHtml(igeRoot + 'components/editor/root.html', function (html) {\r\n\t\t\t\t// Add the html\r\n\t\t\t\t$('body').append($(html));\r\n\t\t\t\t\r\n\t\t\t\tige.requireScript(igeRoot + 'components/editor/vendor/jsrender-helpers.js');\r\n\t\t\t\t\r\n\t\t\t\t// Object mutation observer polyfill\r\n\t\t\t\tige.requireScript(igeRoot + 'components/editor/vendor/observe.js');\r\n\t\t\t\t\r\n\t\t\t\t// Load plugin styles\r\n\t\t\t\tige.requireStylesheet(igeRoot + 'components/editor/vendor/glyphicons/css/halflings.css');\r\n\t\t\t\tige.requireStylesheet(igeRoot + 'components/editor/vendor/glyphicons/css/glyphicons.css');\r\n\t\t\t\tige.requireStylesheet(igeRoot + 'components/editor/vendor/treeview_simple/css/style.css');\r\n\t\t\t\t\r\n\t\t\t\t// Load the editor stylesheet\r\n\t\t\t\tige.requireStylesheet(igeRoot + 'components/editor/css/editor.css');\r\n\t\t\t\t\r\n\t\t\t\t// Listen for scenegraph tree selection updates\r\n\t\t\t\tige.on('sgTreeSelectionChanged', function (objectId) {\r\n\t\t\t\t\tself._objectSelected(ige.$(objectId));\r\n\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t\t// Wait for all required files to finish loading\r\n\t\t\t\tige.on('allRequireScriptsLoaded', function () {\r\n\t\t\t\t\t// Load UI scripts\r\n\t\t\t\t\tige.sync(ige.requireScript, igeRoot + 'components/editor/ui/dialogs/dialogs.js');\r\n\t\t\t\t\tige.sync(ige.requireScript, igeRoot + 'components/editor/ui/scenegraph/scenegraph.js');\r\n\t\t\t\t\tige.sync(ige.requireScript, igeRoot + 'components/editor/ui/menu/menu.js');\r\n\t\t\t\t\tige.sync(ige.requireScript, igeRoot + 'components/editor/ui/toolbox/toolbox.js');\r\n\t\t\t\t\tige.sync(ige.requireScript, igeRoot + 'components/editor/ui/panels/panels.js');\r\n\t\t\t\t\tige.sync(ige.requireScript, igeRoot + 'components/editor/ui/textures/textures.js');\r\n\t\t\t\t\tige.sync(ige.requireScript, igeRoot + 'components/editor/ui/textureEditor/textureEditor.js');\r\n\t\t\t\t\tige.sync(ige.requireScript, igeRoot + 'components/editor/ui/animationEditor/animationEditor.js');\r\n\t\t\t\t\t\r\n\t\t\t\t\t// Load jquery plugins\r\n\t\t\t\t\tige.sync(ige.requireScript, igeRoot + 'components/editor/vendor/autoback.jquery.js');\r\n\t\t\t\t\tige.sync(ige.requireScript, igeRoot + 'components/editor/vendor/tree/tree.jquery.js');\r\n\t\t\t\t\tige.sync(ige.requireScript, igeRoot + 'components/editor/vendor/tabs/tabs.jquery.js');\r\n\t\t\t\t\tige.sync(ige.requireScript, igeRoot + 'components/editor/vendor/treeview_simple/treeview_simple.jquery.js');\r\n\t\t\t\t\t\r\n\t\t\t\t\tige.on('syncComplete', function () {\r\n\t\t\t\t\t\t// Observe changes to the engine to update our display\r\n\t\t\t\t\t\tsetInterval(function () {\r\n\t\t\t\t\t\t\t// Update the stats counters\r\n\t\t\t\t\t\t\t$('#editorFps').html(ige._fps + ' fps');\r\n\t\t\t\t\t\t\t$('#editorDps').html(ige._dps + ' dps');\r\n\t\t\t\t\t\t\t$('#editorDpf').html(ige._dpf + ' dpf');\r\n\t\t\t\t\t\t\t$('#editorUd').html(ige._updateTime + ' ud/ms');\r\n\t\t\t\t\t\t\t$('#editorRd').html(ige._renderTime + ' rd/ms');\r\n\t\t\t\t\t\t\t$('#editorTd').html(ige._tickTime + ' td/ms');\r\n\t\t\t\t\t\t}, 1000);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t// Add auto-backing\r\n\t\t\t\t\t\t$('.backed').autoback();\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t// Call finished on all ui instances\r\n\t\t\t\t\t\tfor (var i in self.ui) {\r\n\t\t\t\t\t\t\tif (self.ui.hasOwnProperty(i)) {\r\n\t\t\t\t\t\t\t\tif (self.ui[i].ready) {\r\n\t\t\t\t\t\t\t\t\tself.ui[i].ready();\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t// Enable tabs\r\n\t\t\t\t\t\t$('.tabGroup').tabs();\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t// Enable the stats toggle button\r\n\t\t\t\t\t\t$('#statsToggle').on('click', function () {\r\n\t\t\t\t\t\t\tige.editor.toggleStats();\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t// Enable the editor toggle button\r\n\t\t\t\t\t\t$('#editorToggle').on('click', function () {\r\n\t\t\t\t\t\t\tige.editor.toggle();\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}, null, true);\r\n\t\t\t\t}, null, true);\r\n\t\t\t});\r\n\t\t}, null, true);\r\n\t\t\r\n\t\t// Set the component to inactive to start with\r\n\t\tthis._enabled = false;\r\n\t\tthis._show = false;\r\n\t\t\r\n\t\t// Set object create defaults\r\n\t\tthis.objectDefault = {\r\n\t\t\t'IgeTextureMap': {\r\n\t\t\t\tdrawGrid: 100\r\n\t\t\t}\r\n\t\t};\r\n\t\t\r\n\t\tthis.log('Init complete');\r\n\t},\r\n\t\r\n\tinterceptMouse: function (val) {\r\n\t\tthis._interceptMouse = val;\r\n\t},\r\n\t\r\n\t/**\r\n\t * Gets / sets the enabled flag. If set to true, \r\n\t * operations will be processed. If false, no operations will\r\n\t * occur.\r\n\t * @param {Boolean=} val\r\n\t * @return {*}\r\n\t */\r\n\tenabled: function (val) {\r\n\t\tvar self = this;\r\n\r\n\t\tif (val !== undefined) {\r\n\t\t\tthis._enabled = val;\r\n\t\t\treturn this._entity;\r\n\t\t}\r\n\r\n\t\treturn this._enabled;\r\n\t},\r\n\t\r\n\ttoggle: function () {\r\n\t\tvar elem = $('#editorToggle');\r\n\t\t\r\n\t\tif (elem.hasClass('active')) {\r\n\t\t\tige.editor.hide();\r\n\t\t} else {\r\n\t\t\tige.editor.show();\r\n\t\t}\r\n\t},\r\n\t\r\n\tshow: function () {\r\n\t\tthis.enabled(true);\r\n\t\tthis._show = true;\r\n\t\t\r\n\t\t$('#editorToggle')\r\n\t\t\t.html('Editor On')\r\n\t\t\t.removeClass('active')\r\n\t\t\t.addClass('active');\r\n\t\t\r\n\t\t$('.editorElem.toggleHide').addClass('shown');\r\n\t},\r\n\t\r\n\thide: function () {\r\n\t\tthis.enabled(false);\r\n\t\tthis._show = false;\r\n\t\t\r\n\t\t$('#editorToggle')\r\n\t\t\t.html('Editor Off')\r\n\t\t\t.removeClass('active');\r\n\t\t\r\n\t\t$('.editorElem.toggleHide').removeClass('shown');\r\n\t},\r\n\t\r\n\ttoggleStats: function () {\r\n\t\tvar elem = $('#statsToggle');\r\n\t\t\t\t\t\t\t\r\n\t\tif (elem.hasClass('active')) {\r\n\t\t\tige.editor.hideStats();\r\n\t\t} else {\r\n\t\t\tige.editor.showStats();\r\n\t\t}\r\n\t},\r\n\t\r\n\tshowStats: function () {\r\n\t\t$('#statsToggle')\r\n\t\t\t.html('Stats On')\r\n\t\t\t.removeClass('active')\r\n\t\t\t.addClass('active');\r\n\t\t\r\n\t\t$('.counter').show();\r\n\t},\r\n\t\r\n\thideStats: function () {\r\n\t\t$('#statsToggle')\r\n\t\t\t.html('Stats Off')\r\n\t\t\t.removeClass('active');\r\n\t\t\r\n\t\t$('.counter').hide();\r\n\t},\r\n\t\r\n\tloadHtml: function (url, callback) {\r\n\t\t$.ajax({\r\n\t\t\turl: url,\r\n\t\t\tsuccess: callback,\r\n\t\t\tdataType: 'html'\r\n\t\t});\r\n\t},\r\n\t\r\n\ttemplate: function (url, callback) {\r\n\t\tvar self = this;\r\n\t\t\r\n\t\tif (!this._cacheTemplates || !this._templateCache[url]) {\r\n\t\t\tthis.log('Loading template data from: ' + url);\r\n\t\t\t$.ajax(url, {\r\n\t\t\t\tasync: true,\r\n\t\t\t\tdataType: 'text',\r\n\t\t\t\tcomplete: function (xhr, status) {\r\n\t\t\t\t\tif (status === 'success') {\r\n\t\t\t\t\t\t// Convert the text into a jsRender template object\r\n\t\t\t\t\t\tvar template = jsviews.templates(xhr.responseText);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif (self._cacheTemplates) {\r\n\t\t\t\t\t\t\tself._templateCache[url] = template;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif (callback) { callback(false, template); }\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tif (callback) { callback(true, status); }\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tif (callback) { callback(false, this._templateCache[url]); }\r\n\t\t}\r\n\t},\r\n\t\r\n\trenderTemplate: function (url, data, callback) {\r\n\t\tthis.template(url, function (err, template) {\r\n\t\t\tif (!err) {\r\n\t\t\t\tcallback(err, $($.parseHTML(template.render(data))));\r\n\t\t\t} else {\r\n\t\t\t\tcallback(err);\r\n\t\t\t}\r\n\t\t});\r\n\t},\r\n\t\r\n\tselectObject: function (id) {\r\n\t\tif (id !== undefined) {\r\n\t\t\tif (id) {\r\n\t\t\t\tthis._selectedObject = ige.$(id);\r\n\t\t\t\tthis._objectSelected(this._selectedObject);\r\n\t\t\t} else {\r\n\t\t\t\tdelete this._selectedObject;\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\t\r\n\t_objectSelected: function (obj) {\r\n\t\tif (obj) {\r\n\t\t\tige.editor.ui.panels.showPanelByInstance(obj);\r\n\t\t\tthis._selectedObjectClassList = ige.getClassDerivedList(obj);\r\n\t\t\t\r\n\t\t\t// Update active-for selectors\r\n\t\t\t$('[data-active-for]')\r\n\t\t\t\t.removeClass('disabled')\r\n\t\t\t\t.addClass('disabled');\r\n\t\t\t\r\n\t\t\tvar classArr = this._selectedObjectClassList,\r\n\t\t\t\ti;\r\n\t\t\t\r\n\t\t\tfor (i = 0; i < classArr.length; i++) {\r\n\t\t\t\t$('[data-active-for~=\"' + classArr[i] + '\"]')\r\n\t\t\t\t\t.removeClass('disabled');\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis.emit('selectedObject', obj.id());\r\n\t\t}\r\n\t},\r\n\t\r\n\tdestroySelected: function () {\r\n\t\tif (this._selectedObject) {\r\n\t\t\tthis._selectedObject.destroy();\r\n\t\t\tthis.selectObject(null);\r\n\t\t}\r\n\t},\r\n\t\r\n\tcreateObject: function (classId, select) {\r\n\t\tif (this._selectedObject) {\r\n\t\t\tvar newObj = ige.newClassInstance(classId);\r\n\t\t\tnewObj.mount(this._selectedObject);\r\n\t\t\tthis.ui.scenegraph.updateSceneGraph();\r\n\t\t\t\r\n\t\t\tif (select) {\r\n\t\t\t\tthis.selectObject(newObj.id());\r\n\t\t\t\tthis.ui.toolbox.select('toolSelect');\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t// Set some object defaults if there are any\r\n\t\t\tif (this.objectDefault[classId]) {\r\n\t\t\t\tfor (var i in this.objectDefault[classId]) {\r\n\t\t\t\t\tif (this.objectDefault[classId].hasOwnProperty(i)) {\r\n\t\t\t\t\t\tif (this.objectDefault[classId][i] instanceof Array) {\r\n\t\t\t\t\t\t\tnewObj[i].apply(newObj, this.objectDefault[classId][i]);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tnewObj[i].call(newObj, this.objectDefault[classId][i]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\t\r\n\t/**\r\n\t * Updates the stats HTML overlay with the latest data.\r\n\t * @private\r\n\t */\r\n\t_statsTick: function () {\r\n\t\tvar self = ige.editor,\r\n\t\t\ti,\r\n\t\t\twatchCount,\r\n\t\t\twatchItem,\r\n\t\t\titemName,\r\n\t\t\tres,\r\n\t\t\thtml = '';\r\n\r\n\t\t// Check if the stats output is enabled\r\n\t\tif (self._showStats && !self._statsPauseUpdate) {\r\n\t\t\tswitch (self._showStats) {\r\n\t\t\t\tcase 1:\r\n\t\t\t\t\t/*if (self._watch && self._watch.length) {\r\n\t\t\t\t\t\twatchCount = self._watch.length;\r\n\r\n\t\t\t\t\t\tfor (i = 0; i < watchCount; i++) {\r\n\t\t\t\t\t\t\twatchItem = self._watch[i];\r\n\r\n\t\t\t\t\t\t\tif (typeof(watchItem) === 'string') {\r\n\t\t\t\t\t\t\t\titemName = watchItem;\r\n\t\t\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\t\t\teval('res = ' + watchItem);\r\n\t\t\t\t\t\t\t\t} catch (err) {\r\n\t\t\t\t\t\t\t\t\tres = '<span style=\"color:#ff0000;\">' + err + '</span>';\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\titemName = watchItem.name;\r\n\t\t\t\t\t\t\t\tres = watchItem.value;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\thtml += i + ' (<a href=\"javascript:ige.watchStop(' + i + '); ige._statsPauseUpdate = false;\" style=\"color:#cccccc;\" onmouseover=\"ige._statsPauseUpdate = true;\" onmouseout=\"ige._statsPauseUpdate = false;\">Remove</a>): <span style=\"color:#7aff80\">' + itemName + '</span>: <span style=\"color:#00c6ff\">' + res + '</span><br />';\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\thtml += '<br />';\r\n\t\t\t\t\t}*/\r\n\t\t\t\t\t/*html += '<div class=\"sgButton\" title=\"Show / Hide SceneGraph Tree\" onmouseup=\"ige.toggleShowEditor();\">Scene</div> <span class=\"met\" title=\"Frames Per Second\">' + self._fps + ' fps</span> <span class=\"met\" title=\"Draws Per Second\">' + self._dps + ' dps</span> <span class=\"met\" title=\"Draws Per Frame\">' + self._dpf + ' dpt</span> <span class=\"met\" title=\"Update Delta (How Long the Last Update Took)\">' + self._updateTime + ' ms\\/ud</span> <span class=\"met\" title=\"Render Delta (How Long the Last Render Took)\">' + self._renderTime + ' ms\\/rd</span> <span class=\"met\" title=\"Tick Delta (How Long the Last Tick Took)\">' + self._tickTime + ' ms\\/pt</span>';\r\n\r\n\t\t\t\t\tif (self.network) {\r\n\t\t\t\t\t\t// Add the network latency too\r\n\t\t\t\t\t\thtml += ' <span class=\"met\" title=\"Network Latency (Time From Server to This Client)\">' + self.network._latency + ' ms\\/net</span>';\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tself._statsDiv.innerHTML = html;*/\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\t\r\n\taddToSgTree: function (item) {\r\n\t\tvar elem = document.createElement('li'),\r\n\t\t\tarr,\r\n\t\t\tarrCount,\r\n\t\t\ti,\r\n\t\t\tmouseUp,\r\n\t\t\tdblClick,\r\n\t\t\ttimingString;\r\n\r\n\t\tmouseUp = function (event) {\r\n\t\t\tevent.stopPropagation();\r\n\r\n\t\t\tvar elems = document.getElementsByClassName('sgItem selected');\r\n\t\t\tfor (i = 0; i < elems.length; i++) {\r\n\t\t\t\telems[i].className = 'sgItem';\r\n\t\t\t}\r\n\r\n\t\t\tthis.className += ' selected';\r\n\t\t\tige._sgTreeSelected = this.id;\r\n\r\n\t\t\tige._currentViewport.drawBounds(true);\r\n\t\t\tif (this.id !== 'ige') {\r\n\t\t\t\tige._currentViewport.drawBoundsLimitId(this.id);\r\n\t\t\t} else {\r\n\t\t\t\tige._currentViewport.drawBoundsLimitId('');\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tige.emit('sgTreeSelectionChanged', ige._sgTreeSelected);\r\n\t\t};\r\n\r\n\t\tdblClick = function (event) {\r\n\t\t\tevent.stopPropagation();\r\n\t\t};\r\n\r\n\t\t//elem.addEventListener('mouseover', mouseOver, false);\r\n\t\t//elem.addEventListener('mouseout', mouseOut, false);\r\n\t\telem.addEventListener('mouseup', mouseUp, false);\r\n\t\telem.addEventListener('dblclick', dblClick, false);\r\n\r\n\t\telem.id = item.id;\r\n\t\telem.innerHTML = item.text;\r\n\t\telem.className = 'sgItem';\r\n\r\n\t\tif (ige._sgTreeSelected === item.id) {\r\n\t\t\telem.className += ' selected';\r\n\t\t}\r\n\r\n\t\tif (igeConfig.debug._timing) {\r\n\t\t\tif (ige._timeSpentInTick[item.id]) {\r\n\t\t\t\ttimingString = '<span>' + ige._timeSpentInTick[item.id] + 'ms</span>';\r\n\t\t\t\t/*if (ige._timeSpentLastTick[item.id]) {\r\n\t\t\t\t\tif (typeof(ige._timeSpentLastTick[item.id].ms) === 'number') {\r\n\t\t\t\t\t\ttimingString += ' | LastTick: ' + ige._timeSpentLastTick[item.id].ms;\r\n\t\t\t\t\t}\r\n\t\t\t\t}*/\r\n\r\n\t\t\t\telem.innerHTML += ' ' + timingString;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tdocument.getElementById(item.parentId + '_items').appendChild(elem);\r\n\r\n\t\tif (item.items) {\r\n\t\t\t// Create a ul inside the li\r\n\t\t\telem = document.createElement('ul');\r\n\t\t\telem.id = item.id + '_items';\r\n\t\t\tdocument.getElementById(item.id).appendChild(elem);\r\n\r\n\t\t\tarr = item.items;\r\n\t\t\tarrCount = arr.length;\r\n\r\n\t\t\tfor (i = 0; i < arrCount; i++) {\r\n\t\t\t\tige.addToSgTree(arr[i]);\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\t\r\n\ttoggleShowEditor: function () {\r\n\t\tthis._showSgTree = !this._showSgTree;\r\n\r\n\t\tif (this._showSgTree) {\r\n\t\t\t// Create the scenegraph tree\r\n\t\t\tvar self = this,\r\n\t\t\t\telem1 = document.createElement('div'),\r\n\t\t\t\telem2,\r\n\t\t\t\tcanvasBoundingRect;\r\n\t\t\t\r\n\t\t\tcanvasBoundingRect = ige._canvasPosition();\r\n\r\n\t\t\telem1.id = 'igeSgTree';\r\n\t\t\telem1.style.top = (parseInt(canvasBoundingRect.top) + 5) + 'px';\r\n\t\t\telem1.style.left = (parseInt(canvasBoundingRect.left) + 5) + 'px';\r\n\t\t\telem1.style.height = (ige._bounds2d.y - 30) + 'px';\r\n\t\t\telem1.style.overflow = 'auto';\r\n\t\t\telem1.addEventListener('mousemove', function (event) {\r\n\t\t\t\tevent.stopPropagation();\r\n\t\t\t});\r\n\t\t\telem1.addEventListener('mouseup', function (event) {\r\n\t\t\t\tevent.stopPropagation();\r\n\t\t\t});\r\n\t\t\telem1.addEventListener('mousedown', function (event) {\r\n\t\t\t\tevent.stopPropagation();\r\n\t\t\t});\r\n\r\n\t\t\telem2 = document.createElement('ul');\r\n\t\t\telem2.id = 'sceneGraph_items';\r\n\t\t\telem1.appendChild(elem2);\r\n\r\n\t\t\tdocument.body.appendChild(elem1);\r\n\t\t\t\r\n\t\t\t// Create the IGE console\r\n\t\t\tvar consoleHolderElem = document.createElement('div'),\r\n\t\t\t\tconsoleElem = document.createElement('input'),\r\n\t\t\t\tclassChainElem = document.createElement('div'),\r\n\t\t\t\tdociFrame = document.createElement('iframe');\r\n\r\n\t\t\tconsoleHolderElem.id = 'igeSgConsoleHolder';\r\n\t\t\tconsoleHolderElem.innerHTML = '<div><b>Console</b>: Double-Click a SceneGraph Object to Script it Here</div>';\r\n\t\t\t\r\n\t\t\tconsoleElem.type = 'text';\r\n\t\t\tconsoleElem.id = 'igeSgConsole';\r\n\t\t\t\r\n\t\t\tclassChainElem.id = 'igeSgItemClassChain';\r\n\r\n\t\t\tdociFrame.id = 'igeSgDocPage';\r\n\t\t\tdociFrame.name = 'igeSgDocPage';\r\n\r\n\t\t\tconsoleHolderElem.appendChild(consoleElem);\r\n\t\t\tconsoleHolderElem.appendChild(classChainElem);\r\n\t\t\tconsoleHolderElem.appendChild(dociFrame);\r\n\t\t\t\r\n\t\t\tdocument.body.appendChild(consoleHolderElem);\r\n\r\n\t\t\tthis.sgTreeUpdate();\r\n\t\t\t\r\n\t\t\t// Now add a refresh button to the scene button\r\n\t\t\tvar button = document.createElement('input');\r\n\t\t\tbutton.type = 'button';\r\n\t\t\tbutton.id = 'igeSgRefreshTree'\r\n\t\t\tbutton.style.position = 'absolute';\r\n\t\t\tbutton.style.top = '0px';\r\n\t\t\tbutton.style.right = '0px'\r\n\t\t\tbutton.value = 'Refresh';\r\n\t\t\t\r\n\t\t\tbutton.addEventListener('click', function () {\r\n\t\t\t\tself.sgTreeUpdate();\r\n\t\t\t}, false);\r\n\t\t\t\r\n\t\t\tdocument.getElementById('igeSgTree').appendChild(button);\r\n\t\t\t\r\n\t\t\t// Add basic editor controls\r\n\t\t\tvar editorRoot = document.createElement('div'),\r\n\t\t\t\teditorModeTranslate = document.createElement('input'),\r\n\t\t\t\teditorModeRotate = document.createElement('input'),\r\n\t\t\t\teditorModeScale = document.createElement('input'),\r\n\t\t\t\teditorStatus = document.createElement('span');\r\n\t\t\t\r\n\t\t\teditorRoot.id = 'igeSgEditorRoot';\r\n\t\t\teditorStatus.id = 'igeSgEditorStatus';\r\n\t\t\t\r\n\t\t\teditorModeTranslate.type = 'button';\r\n\t\t\teditorModeTranslate.id = 'igeSgEditorTranslate';\r\n\t\t\teditorModeTranslate.value = 'Translate';\r\n\t\t\teditorModeTranslate.addEventListener('click', function () {\r\n\t\t\t\t// Disable other modes\r\n\t\t\t\tige.editorRotate.enabled(false);\r\n\t\t\t\t\r\n\t\t\t\tif (ige.editorTranslate.enabled()) {\r\n\t\t\t\t\tige.editorTranslate.enabled(false);\r\n\t\t\t\t\tself.log('Editor: Translate mode disabled');\r\n\t\t\t\t} else {\r\n\t\t\t\t\tige.editorTranslate.enabled(true);\r\n\t\t\t\t\tself.log('Editor: Translate mode enabled');\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\teditorModeRotate.type = 'button';\r\n\t\t\teditorModeRotate.id = 'igeSgEditorRotate';\r\n\t\t\teditorModeRotate.value = 'Rotate';\r\n\t\t\teditorModeRotate.addEventListener('click', function () {\r\n\t\t\t\t// Disable other modes\r\n\t\t\t\tige.editorTranslate.enabled(false);\r\n\t\t\t\t\r\n\t\t\t\tif (ige.editorRotate.enabled()) {\r\n\t\t\t\t\tige.editorRotate.enabled(false);\r\n\t\t\t\t\tself.log('Editor: Rotate mode disabled');\r\n\t\t\t\t} else {\r\n\t\t\t\t\tige.editorRotate.enabled(true);\r\n\t\t\t\t\tself.log('Editor: Rotate mode enabled');\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\teditorModeScale.type = 'button';\r\n\t\t\teditorModeScale.id = 'igeSgEditorScale';\r\n\t\t\teditorModeScale.value = 'Scale';\r\n\t\t\t\r\n\t\t\teditorRoot.appendChild(editorModeTranslate);\r\n\t\t\teditorRoot.appendChild(editorModeRotate);\r\n\t\t\teditorRoot.appendChild(editorModeScale);\r\n\t\t\teditorRoot.appendChild(editorStatus);\r\n\t\t\t\r\n\t\t\tdocument.body.appendChild(editorRoot);\r\n\t\t\t\r\n\t\t\t// Add the translate component to the ige instance\r\n\t\t\tige.addComponent(IgeEditorTranslateComponent);\r\n\t\t\tige.addComponent(IgeEditorRotateComponent);\r\n\t\t\t\r\n\t\t\t// Schedule tree updates every second\r\n\t\t\tige._sgTreeUpdateInterval = setInterval(function () { self.sgTreeUpdate(); }, 1000);\r\n\t\t} else {\r\n\t\t\t// Kill interval\r\n\t\t\tclearInterval(ige._sgTreeUpdateInterval);\r\n\t\t\t\r\n\t\t\tvar child = document.getElementById('igeSgTree');\r\n\t\t\tchild.parentNode.removeChild(child);\r\n\r\n\t\t\tchild = document.getElementById('igeSgConsoleHolder');\r\n\t\t\tchild.parentNode.removeChild(child);\r\n\t\t\t\r\n\t\t\tchild = document.getElementById('igeSgEditorRoot');\r\n\t\t\tchild.parentNode.removeChild(child);\r\n\t\t\t\r\n\t\t\tige.removeComponent('editorTranslate');\r\n\t\t\tige.removeComponent('editorRotate');\r\n\t\t}\r\n\t},\r\n\t\r\n\tsgTreeUpdate: function () {\r\n\t\t// Update the scenegraph tree\r\n\t\tdocument.getElementById('sceneGraph_items').innerHTML = '';\r\n\r\n\t\t// Get the scenegraph data\r\n\t\tthis.addToSgTree(this.getSceneGraphData(this, true));\r\n\t},\r\n});\r\n","/*\r\n* Copyright (c) 2006-2007 Erin Catto http://www.gphysics.com\r\n*\r\n* This software is provided 'as-is', without any express or implied\r\n* warranty.  In no event will the authors be held liable for any damages\r\n* arising from the use of this software.\r\n* Permission is granted to anyone to use this software for any purpose,\r\n* including commercial applications, and to alter it and redistribute it\r\n* freely, subject to the following restrictions:\r\n* 1. The origin of this software must not be misrepresented; you must not\r\n* claim that you wrote the original software. If you use this software\r\n* in a product, an acknowledgment in the product documentation would be\r\n* appreciated but is not required.\r\n* 2. Altered source versions must be plainly marked as such, and must not be\r\n* misrepresented as being the original software.\r\n* 3. This notice may not be removed or altered from any source distribution.\r\n*/\r\nvar Box2D = {};\r\n\r\n(function (a2j, undefined) {\r\n   if(!(Object.defineProperty instanceof Function)\r\n      && Object.__defineGetter__ instanceof Function\r\n      && Object.__defineSetter__ instanceof Function)\r\n   {\r\n      Object.defineProperty = function(obj, p, cfg) {\r\n         if(cfg.get instanceof Function)\r\n            obj.__defineGetter__(p, cfg.get);\r\n         if(cfg.set instanceof Function)\r\n            obj.__defineSetter__(p, cfg.set);\r\n      }\r\n   }\r\n   \r\n   function emptyFn() {};\r\n   a2j.inherit = function(cls, base) {\r\n      var tmpCtr = cls;\r\n      emptyFn.prototype = base.prototype;\r\n      cls.prototype = new emptyFn;\r\n      cls.prototype.constructor = tmpCtr;\r\n   };\r\n   \r\n   a2j.generateCallback = function generateCallback(context, cb) {\r\n      return function () {\r\n         cb.apply(context, arguments);\r\n      };\r\n   };\r\n   \r\n   a2j.NVector = function NVector(length) {\r\n      if (length === undefined) length = 0;\r\n      var tmp = new Array(length || 0);\r\n      for (var i = 0; i < length; ++i)\r\n      tmp[i] = 0;\r\n      return tmp;\r\n   };\r\n   \r\n   a2j.is = function is(o1, o2) {\r\n      if (o1 === null) return false;\r\n      if ((o2 instanceof Function) && (o1 instanceof o2)) return true;\r\n      if ((o1.constructor.__implements != undefined) && (o1.constructor.__implements[o2])) return true;\r\n      return false;\r\n   };\r\n   \r\n   a2j.parseUInt = function(v) {\r\n      return Math.abs(parseInt(v));\r\n   }\r\n   \r\n})(Box2D);\r\n\r\n//#TODO remove assignments from global namespace\r\nvar Vector = Array;\r\nvar Vector_a2j_Number = Box2D.NVector;\r\n//package structure\r\nif (typeof(Box2D) === \"undefined\") Box2D = {};\r\nif (typeof(Box2D.Collision) === \"undefined\") Box2D.Collision = {};\r\nif (typeof(Box2D.Collision.Shapes) === \"undefined\") Box2D.Collision.Shapes = {};\r\nif (typeof(Box2D.Common) === \"undefined\") Box2D.Common = {};\r\nif (typeof(Box2D.Common.Math) === \"undefined\") Box2D.Common.Math = {};\r\nif (typeof(Box2D.Dynamics) === \"undefined\") Box2D.Dynamics = {};\r\nif (typeof(Box2D.Dynamics.Contacts) === \"undefined\") Box2D.Dynamics.Contacts = {};\r\nif (typeof(Box2D.Dynamics.Controllers) === \"undefined\") Box2D.Dynamics.Controllers = {};\r\nif (typeof(Box2D.Dynamics.Joints) === \"undefined\") Box2D.Dynamics.Joints = {};\r\n//pre-definitions\r\n(function () {\r\n   Box2D.Collision.IBroadPhase = 'Box2D.Collision.IBroadPhase';\r\n\r\n   function b2AABB() {\r\n      b2AABB.b2AABB.apply(this, arguments);\r\n   };\r\n   Box2D.Collision.b2AABB = b2AABB;\r\n\r\n   function b2Bound() {\r\n      b2Bound.b2Bound.apply(this, arguments);\r\n   };\r\n   Box2D.Collision.b2Bound = b2Bound;\r\n\r\n   function b2BoundValues() {\r\n      b2BoundValues.b2BoundValues.apply(this, arguments);\r\n      if (this.constructor === b2BoundValues) this.b2BoundValues.apply(this, arguments);\r\n   };\r\n   Box2D.Collision.b2BoundValues = b2BoundValues;\r\n\r\n   function b2Collision() {\r\n      b2Collision.b2Collision.apply(this, arguments);\r\n   };\r\n   Box2D.Collision.b2Collision = b2Collision;\r\n\r\n   function b2ContactID() {\r\n      b2ContactID.b2ContactID.apply(this, arguments);\r\n      if (this.constructor === b2ContactID) this.b2ContactID.apply(this, arguments);\r\n   };\r\n   Box2D.Collision.b2ContactID = b2ContactID;\r\n\r\n   function b2ContactPoint() {\r\n      b2ContactPoint.b2ContactPoint.apply(this, arguments);\r\n   };\r\n   Box2D.Collision.b2ContactPoint = b2ContactPoint;\r\n\r\n   function b2Distance() {\r\n      b2Distance.b2Distance.apply(this, arguments);\r\n   };\r\n   Box2D.Collision.b2Distance = b2Distance;\r\n\r\n   function b2DistanceInput() {\r\n      b2DistanceInput.b2DistanceInput.apply(this, arguments);\r\n   };\r\n   Box2D.Collision.b2DistanceInput = b2DistanceInput;\r\n\r\n   function b2DistanceOutput() {\r\n      b2DistanceOutput.b2DistanceOutput.apply(this, arguments);\r\n   };\r\n   Box2D.Collision.b2DistanceOutput = b2DistanceOutput;\r\n\r\n   function b2DistanceProxy() {\r\n      b2DistanceProxy.b2DistanceProxy.apply(this, arguments);\r\n   };\r\n   Box2D.Collision.b2DistanceProxy = b2DistanceProxy;\r\n\r\n   function b2DynamicTree() {\r\n      b2DynamicTree.b2DynamicTree.apply(this, arguments);\r\n      if (this.constructor === b2DynamicTree) this.b2DynamicTree.apply(this, arguments);\r\n   };\r\n   Box2D.Collision.b2DynamicTree = b2DynamicTree;\r\n\r\n   function b2DynamicTreeBroadPhase() {\r\n      b2DynamicTreeBroadPhase.b2DynamicTreeBroadPhase.apply(this, arguments);\r\n   };\r\n   Box2D.Collision.b2DynamicTreeBroadPhase = b2DynamicTreeBroadPhase;\r\n\r\n   function b2DynamicTreeNode() {\r\n      b2DynamicTreeNode.b2DynamicTreeNode.apply(this, arguments);\r\n   };\r\n   Box2D.Collision.b2DynamicTreeNode = b2DynamicTreeNode;\r\n\r\n   function b2DynamicTreePair() {\r\n      b2DynamicTreePair.b2DynamicTreePair.apply(this, arguments);\r\n   };\r\n   Box2D.Collision.b2DynamicTreePair = b2DynamicTreePair;\r\n\r\n   function b2Manifold() {\r\n      b2Manifold.b2Manifold.apply(this, arguments);\r\n      if (this.constructor === b2Manifold) this.b2Manifold.apply(this, arguments);\r\n   };\r\n   Box2D.Collision.b2Manifold = b2Manifold;\r\n\r\n   function b2ManifoldPoint() {\r\n      b2ManifoldPoint.b2ManifoldPoint.apply(this, arguments);\r\n      if (this.constructor === b2ManifoldPoint) this.b2ManifoldPoint.apply(this, arguments);\r\n   };\r\n   Box2D.Collision.b2ManifoldPoint = b2ManifoldPoint;\r\n\r\n   function b2Point() {\r\n      b2Point.b2Point.apply(this, arguments);\r\n   };\r\n   Box2D.Collision.b2Point = b2Point;\r\n\r\n   function b2RayCastInput() {\r\n      b2RayCastInput.b2RayCastInput.apply(this, arguments);\r\n      if (this.constructor === b2RayCastInput) this.b2RayCastInput.apply(this, arguments);\r\n   };\r\n   Box2D.Collision.b2RayCastInput = b2RayCastInput;\r\n\r\n   function b2RayCastOutput() {\r\n      b2RayCastOutput.b2RayCastOutput.apply(this, arguments);\r\n   };\r\n   Box2D.Collision.b2RayCastOutput = b2RayCastOutput;\r\n\r\n   function b2Segment() {\r\n      b2Segment.b2Segment.apply(this, arguments);\r\n   };\r\n   Box2D.Collision.b2Segment = b2Segment;\r\n\r\n   function b2SeparationFunction() {\r\n      b2SeparationFunction.b2SeparationFunction.apply(this, arguments);\r\n   };\r\n   Box2D.Collision.b2SeparationFunction = b2SeparationFunction;\r\n\r\n   function b2Simplex() {\r\n      b2Simplex.b2Simplex.apply(this, arguments);\r\n      if (this.constructor === b2Simplex) this.b2Simplex.apply(this, arguments);\r\n   };\r\n   Box2D.Collision.b2Simplex = b2Simplex;\r\n\r\n   function b2SimplexCache() {\r\n      b2SimplexCache.b2SimplexCache.apply(this, arguments);\r\n   };\r\n   Box2D.Collision.b2SimplexCache = b2SimplexCache;\r\n\r\n   function b2SimplexVertex() {\r\n      b2SimplexVertex.b2SimplexVertex.apply(this, arguments);\r\n   };\r\n   Box2D.Collision.b2SimplexVertex = b2SimplexVertex;\r\n\r\n   function b2TimeOfImpact() {\r\n      b2TimeOfImpact.b2TimeOfImpact.apply(this, arguments);\r\n   };\r\n   Box2D.Collision.b2TimeOfImpact = b2TimeOfImpact;\r\n\r\n   function b2TOIInput() {\r\n      b2TOIInput.b2TOIInput.apply(this, arguments);\r\n   };\r\n   Box2D.Collision.b2TOIInput = b2TOIInput;\r\n\r\n   function b2WorldManifold() {\r\n      b2WorldManifold.b2WorldManifold.apply(this, arguments);\r\n      if (this.constructor === b2WorldManifold) this.b2WorldManifold.apply(this, arguments);\r\n   };\r\n   Box2D.Collision.b2WorldManifold = b2WorldManifold;\r\n\r\n   function ClipVertex() {\r\n      ClipVertex.ClipVertex.apply(this, arguments);\r\n   };\r\n   Box2D.Collision.ClipVertex = ClipVertex;\r\n\r\n   function Features() {\r\n      Features.Features.apply(this, arguments);\r\n   };\r\n   Box2D.Collision.Features = Features;\r\n\r\n   function b2CircleShape() {\r\n      b2CircleShape.b2CircleShape.apply(this, arguments);\r\n      if (this.constructor === b2CircleShape) this.b2CircleShape.apply(this, arguments);\r\n   };\r\n   Box2D.Collision.Shapes.b2CircleShape = b2CircleShape;\r\n\r\n   function b2EdgeChainDef() {\r\n      b2EdgeChainDef.b2EdgeChainDef.apply(this, arguments);\r\n      if (this.constructor === b2EdgeChainDef) this.b2EdgeChainDef.apply(this, arguments);\r\n   };\r\n   Box2D.Collision.Shapes.b2EdgeChainDef = b2EdgeChainDef;\r\n\r\n   function b2EdgeShape() {\r\n      b2EdgeShape.b2EdgeShape.apply(this, arguments);\r\n      if (this.constructor === b2EdgeShape) this.b2EdgeShape.apply(this, arguments);\r\n   };\r\n   Box2D.Collision.Shapes.b2EdgeShape = b2EdgeShape;\r\n\r\n   function b2MassData() {\r\n      b2MassData.b2MassData.apply(this, arguments);\r\n   };\r\n   Box2D.Collision.Shapes.b2MassData = b2MassData;\r\n\r\n   function b2PolygonShape() {\r\n      b2PolygonShape.b2PolygonShape.apply(this, arguments);\r\n      if (this.constructor === b2PolygonShape) this.b2PolygonShape.apply(this, arguments);\r\n   };\r\n   Box2D.Collision.Shapes.b2PolygonShape = b2PolygonShape;\r\n\r\n   function b2Shape() {\r\n      b2Shape.b2Shape.apply(this, arguments);\r\n      if (this.constructor === b2Shape) this.b2Shape.apply(this, arguments);\r\n   };\r\n   Box2D.Collision.Shapes.b2Shape = b2Shape;\r\n   Box2D.Common.b2internal = 'Box2D.Common.b2internal';\r\n\r\n   function b2Color() {\r\n      b2Color.b2Color.apply(this, arguments);\r\n      if (this.constructor === b2Color) this.b2Color.apply(this, arguments);\r\n   };\r\n   Box2D.Common.b2Color = b2Color;\r\n\r\n   function b2Settings() {\r\n      b2Settings.b2Settings.apply(this, arguments);\r\n   };\r\n   Box2D.Common.b2Settings = b2Settings;\r\n\r\n   function b2Mat22() {\r\n      b2Mat22.b2Mat22.apply(this, arguments);\r\n      if (this.constructor === b2Mat22) this.b2Mat22.apply(this, arguments);\r\n   };\r\n   Box2D.Common.Math.b2Mat22 = b2Mat22;\r\n\r\n   function b2Mat33() {\r\n      b2Mat33.b2Mat33.apply(this, arguments);\r\n      if (this.constructor === b2Mat33) this.b2Mat33.apply(this, arguments);\r\n   };\r\n   Box2D.Common.Math.b2Mat33 = b2Mat33;\r\n\r\n   function b2Math() {\r\n      b2Math.b2Math.apply(this, arguments);\r\n   };\r\n   Box2D.Common.Math.b2Math = b2Math;\r\n\r\n   function b2Sweep() {\r\n      b2Sweep.b2Sweep.apply(this, arguments);\r\n   };\r\n   Box2D.Common.Math.b2Sweep = b2Sweep;\r\n\r\n   function b2Transform() {\r\n      b2Transform.b2Transform.apply(this, arguments);\r\n      if (this.constructor === b2Transform) this.b2Transform.apply(this, arguments);\r\n   };\r\n   Box2D.Common.Math.b2Transform = b2Transform;\r\n\r\n   function b2Vec2() {\r\n      b2Vec2.b2Vec2.apply(this, arguments);\r\n      if (this.constructor === b2Vec2) this.b2Vec2.apply(this, arguments);\r\n   };\r\n   Box2D.Common.Math.b2Vec2 = b2Vec2;\r\n\r\n   function b2Vec3() {\r\n      b2Vec3.b2Vec3.apply(this, arguments);\r\n      if (this.constructor === b2Vec3) this.b2Vec3.apply(this, arguments);\r\n   };\r\n   Box2D.Common.Math.b2Vec3 = b2Vec3;\r\n\r\n   function b2Body() {\r\n      b2Body.b2Body.apply(this, arguments);\r\n      if (this.constructor === b2Body) this.b2Body.apply(this, arguments);\r\n   };\r\n   Box2D.Dynamics.b2Body = b2Body;\r\n\r\n   function b2BodyDef() {\r\n      b2BodyDef.b2BodyDef.apply(this, arguments);\r\n      if (this.constructor === b2BodyDef) this.b2BodyDef.apply(this, arguments);\r\n   };\r\n   Box2D.Dynamics.b2BodyDef = b2BodyDef;\r\n\r\n   function b2ContactFilter() {\r\n      b2ContactFilter.b2ContactFilter.apply(this, arguments);\r\n   };\r\n   Box2D.Dynamics.b2ContactFilter = b2ContactFilter;\r\n\r\n   function b2ContactImpulse() {\r\n      b2ContactImpulse.b2ContactImpulse.apply(this, arguments);\r\n   };\r\n   Box2D.Dynamics.b2ContactImpulse = b2ContactImpulse;\r\n\r\n   function b2ContactListener() {\r\n      b2ContactListener.b2ContactListener.apply(this, arguments);\r\n   };\r\n   Box2D.Dynamics.b2ContactListener = b2ContactListener;\r\n\r\n   function b2ContactManager() {\r\n      b2ContactManager.b2ContactManager.apply(this, arguments);\r\n      if (this.constructor === b2ContactManager) this.b2ContactManager.apply(this, arguments);\r\n   };\r\n   Box2D.Dynamics.b2ContactManager = b2ContactManager;\r\n\r\n   function b2DebugDraw() {\r\n      b2DebugDraw.b2DebugDraw.apply(this, arguments);\r\n      if (this.constructor === b2DebugDraw) this.b2DebugDraw.apply(this, arguments);\r\n   };\r\n   Box2D.Dynamics.b2DebugDraw = b2DebugDraw;\r\n\r\n   function b2DestructionListener() {\r\n      b2DestructionListener.b2DestructionListener.apply(this, arguments);\r\n   };\r\n   Box2D.Dynamics.b2DestructionListener = b2DestructionListener;\r\n\r\n   function b2FilterData() {\r\n      b2FilterData.b2FilterData.apply(this, arguments);\r\n   };\r\n   Box2D.Dynamics.b2FilterData = b2FilterData;\r\n\r\n   function b2Fixture() {\r\n      b2Fixture.b2Fixture.apply(this, arguments);\r\n      if (this.constructor === b2Fixture) this.b2Fixture.apply(this, arguments);\r\n   };\r\n   Box2D.Dynamics.b2Fixture = b2Fixture;\r\n\r\n   function b2FixtureDef() {\r\n      b2FixtureDef.b2FixtureDef.apply(this, arguments);\r\n      if (this.constructor === b2FixtureDef) this.b2FixtureDef.apply(this, arguments);\r\n   };\r\n   Box2D.Dynamics.b2FixtureDef = b2FixtureDef;\r\n\r\n   function b2Island() {\r\n      b2Island.b2Island.apply(this, arguments);\r\n      if (this.constructor === b2Island) this.b2Island.apply(this, arguments);\r\n   };\r\n   Box2D.Dynamics.b2Island = b2Island;\r\n\r\n   function b2TimeStep() {\r\n      b2TimeStep.b2TimeStep.apply(this, arguments);\r\n   };\r\n   Box2D.Dynamics.b2TimeStep = b2TimeStep;\r\n\r\n   function b2World() {\r\n      b2World.b2World.apply(this, arguments);\r\n      if (this.constructor === b2World) this.b2World.apply(this, arguments);\r\n   };\r\n   Box2D.Dynamics.b2World = b2World;\r\n\r\n   function b2CircleContact() {\r\n      b2CircleContact.b2CircleContact.apply(this, arguments);\r\n   };\r\n   Box2D.Dynamics.Contacts.b2CircleContact = b2CircleContact;\r\n\r\n   function b2Contact() {\r\n      b2Contact.b2Contact.apply(this, arguments);\r\n      if (this.constructor === b2Contact) this.b2Contact.apply(this, arguments);\r\n   };\r\n   Box2D.Dynamics.Contacts.b2Contact = b2Contact;\r\n\r\n   function b2ContactConstraint() {\r\n      b2ContactConstraint.b2ContactConstraint.apply(this, arguments);\r\n      if (this.constructor === b2ContactConstraint) this.b2ContactConstraint.apply(this, arguments);\r\n   };\r\n   Box2D.Dynamics.Contacts.b2ContactConstraint = b2ContactConstraint;\r\n\r\n   function b2ContactConstraintPoint() {\r\n      b2ContactConstraintPoint.b2ContactConstraintPoint.apply(this, arguments);\r\n   };\r\n   Box2D.Dynamics.Contacts.b2ContactConstraintPoint = b2ContactConstraintPoint;\r\n\r\n   function b2ContactEdge() {\r\n      b2ContactEdge.b2ContactEdge.apply(this, arguments);\r\n   };\r\n   Box2D.Dynamics.Contacts.b2ContactEdge = b2ContactEdge;\r\n\r\n   function b2ContactFactory() {\r\n      b2ContactFactory.b2ContactFactory.apply(this, arguments);\r\n      if (this.constructor === b2ContactFactory) this.b2ContactFactory.apply(this, arguments);\r\n   };\r\n   Box2D.Dynamics.Contacts.b2ContactFactory = b2ContactFactory;\r\n\r\n   function b2ContactRegister() {\r\n      b2ContactRegister.b2ContactRegister.apply(this, arguments);\r\n   };\r\n   Box2D.Dynamics.Contacts.b2ContactRegister = b2ContactRegister;\r\n\r\n   function b2ContactResult() {\r\n      b2ContactResult.b2ContactResult.apply(this, arguments);\r\n   };\r\n   Box2D.Dynamics.Contacts.b2ContactResult = b2ContactResult;\r\n\r\n   function b2ContactSolver() {\r\n      b2ContactSolver.b2ContactSolver.apply(this, arguments);\r\n      if (this.constructor === b2ContactSolver) this.b2ContactSolver.apply(this, arguments);\r\n   };\r\n   Box2D.Dynamics.Contacts.b2ContactSolver = b2ContactSolver;\r\n\r\n   function b2EdgeAndCircleContact() {\r\n      b2EdgeAndCircleContact.b2EdgeAndCircleContact.apply(this, arguments);\r\n   };\r\n   Box2D.Dynamics.Contacts.b2EdgeAndCircleContact = b2EdgeAndCircleContact;\r\n\r\n   function b2NullContact() {\r\n      b2NullContact.b2NullContact.apply(this, arguments);\r\n      if (this.constructor === b2NullContact) this.b2NullContact.apply(this, arguments);\r\n   };\r\n   Box2D.Dynamics.Contacts.b2NullContact = b2NullContact;\r\n\r\n   function b2PolyAndCircleContact() {\r\n      b2PolyAndCircleContact.b2PolyAndCircleContact.apply(this, arguments);\r\n   };\r\n   Box2D.Dynamics.Contacts.b2PolyAndCircleContact = b2PolyAndCircleContact;\r\n\r\n   function b2PolyAndEdgeContact() {\r\n      b2PolyAndEdgeContact.b2PolyAndEdgeContact.apply(this, arguments);\r\n   };\r\n   Box2D.Dynamics.Contacts.b2PolyAndEdgeContact = b2PolyAndEdgeContact;\r\n\r\n   function b2PolygonContact() {\r\n      b2PolygonContact.b2PolygonContact.apply(this, arguments);\r\n   };\r\n   Box2D.Dynamics.Contacts.b2PolygonContact = b2PolygonContact;\r\n\r\n   function b2PositionSolverManifold() {\r\n      b2PositionSolverManifold.b2PositionSolverManifold.apply(this, arguments);\r\n      if (this.constructor === b2PositionSolverManifold) this.b2PositionSolverManifold.apply(this, arguments);\r\n   };\r\n   Box2D.Dynamics.Contacts.b2PositionSolverManifold = b2PositionSolverManifold;\r\n\r\n   function b2BuoyancyController() {\r\n      b2BuoyancyController.b2BuoyancyController.apply(this, arguments);\r\n   };\r\n   Box2D.Dynamics.Controllers.b2BuoyancyController = b2BuoyancyController;\r\n\r\n   function b2ConstantAccelController() {\r\n      b2ConstantAccelController.b2ConstantAccelController.apply(this, arguments);\r\n   };\r\n   Box2D.Dynamics.Controllers.b2ConstantAccelController = b2ConstantAccelController;\r\n\r\n   function b2ConstantForceController() {\r\n      b2ConstantForceController.b2ConstantForceController.apply(this, arguments);\r\n   };\r\n   Box2D.Dynamics.Controllers.b2ConstantForceController = b2ConstantForceController;\r\n\r\n   function b2Controller() {\r\n      b2Controller.b2Controller.apply(this, arguments);\r\n   };\r\n   Box2D.Dynamics.Controllers.b2Controller = b2Controller;\r\n\r\n   function b2ControllerEdge() {\r\n      b2ControllerEdge.b2ControllerEdge.apply(this, arguments);\r\n   };\r\n   Box2D.Dynamics.Controllers.b2ControllerEdge = b2ControllerEdge;\r\n\r\n   function b2GravityController() {\r\n      b2GravityController.b2GravityController.apply(this, arguments);\r\n   };\r\n   Box2D.Dynamics.Controllers.b2GravityController = b2GravityController;\r\n\r\n   function b2TensorDampingController() {\r\n      b2TensorDampingController.b2TensorDampingController.apply(this, arguments);\r\n   };\r\n   Box2D.Dynamics.Controllers.b2TensorDampingController = b2TensorDampingController;\r\n\r\n   function b2DistanceJoint() {\r\n      b2DistanceJoint.b2DistanceJoint.apply(this, arguments);\r\n      if (this.constructor === b2DistanceJoint) this.b2DistanceJoint.apply(this, arguments);\r\n   };\r\n   Box2D.Dynamics.Joints.b2DistanceJoint = b2DistanceJoint;\r\n\r\n   function b2DistanceJointDef() {\r\n      b2DistanceJointDef.b2DistanceJointDef.apply(this, arguments);\r\n      if (this.constructor === b2DistanceJointDef) this.b2DistanceJointDef.apply(this, arguments);\r\n   };\r\n   Box2D.Dynamics.Joints.b2DistanceJointDef = b2DistanceJointDef;\r\n\r\n   function b2FrictionJoint() {\r\n      b2FrictionJoint.b2FrictionJoint.apply(this, arguments);\r\n      if (this.constructor === b2FrictionJoint) this.b2FrictionJoint.apply(this, arguments);\r\n   };\r\n   Box2D.Dynamics.Joints.b2FrictionJoint = b2FrictionJoint;\r\n\r\n   function b2FrictionJointDef() {\r\n      b2FrictionJointDef.b2FrictionJointDef.apply(this, arguments);\r\n      if (this.constructor === b2FrictionJointDef) this.b2FrictionJointDef.apply(this, arguments);\r\n   };\r\n   Box2D.Dynamics.Joints.b2FrictionJointDef = b2FrictionJointDef;\r\n\r\n   function b2GearJoint() {\r\n      b2GearJoint.b2GearJoint.apply(this, arguments);\r\n      if (this.constructor === b2GearJoint) this.b2GearJoint.apply(this, arguments);\r\n   };\r\n   Box2D.Dynamics.Joints.b2GearJoint = b2GearJoint;\r\n\r\n   function b2GearJointDef() {\r\n      b2GearJointDef.b2GearJointDef.apply(this, arguments);\r\n      if (this.constructor === b2GearJointDef) this.b2GearJointDef.apply(this, arguments);\r\n   };\r\n   Box2D.Dynamics.Joints.b2GearJointDef = b2GearJointDef;\r\n\r\n   function b2Jacobian() {\r\n      b2Jacobian.b2Jacobian.apply(this, arguments);\r\n   };\r\n   Box2D.Dynamics.Joints.b2Jacobian = b2Jacobian;\r\n\r\n   function b2Joint() {\r\n      b2Joint.b2Joint.apply(this, arguments);\r\n      if (this.constructor === b2Joint) this.b2Joint.apply(this, arguments);\r\n   };\r\n   Box2D.Dynamics.Joints.b2Joint = b2Joint;\r\n\r\n   function b2JointDef() {\r\n      b2JointDef.b2JointDef.apply(this, arguments);\r\n      if (this.constructor === b2JointDef) this.b2JointDef.apply(this, arguments);\r\n   };\r\n   Box2D.Dynamics.Joints.b2JointDef = b2JointDef;\r\n\r\n   function b2JointEdge() {\r\n      b2JointEdge.b2JointEdge.apply(this, arguments);\r\n   };\r\n   Box2D.Dynamics.Joints.b2JointEdge = b2JointEdge;\r\n\r\n   function b2LineJoint() {\r\n      b2LineJoint.b2LineJoint.apply(this, arguments);\r\n      if (this.constructor === b2LineJoint) this.b2LineJoint.apply(this, arguments);\r\n   };\r\n   Box2D.Dynamics.Joints.b2LineJoint = b2LineJoint;\r\n\r\n   function b2LineJointDef() {\r\n      b2LineJointDef.b2LineJointDef.apply(this, arguments);\r\n      if (this.constructor === b2LineJointDef) this.b2LineJointDef.apply(this, arguments);\r\n   };\r\n   Box2D.Dynamics.Joints.b2LineJointDef = b2LineJointDef;\r\n\r\n   function b2MouseJoint() {\r\n      b2MouseJoint.b2MouseJoint.apply(this, arguments);\r\n      if (this.constructor === b2MouseJoint) this.b2MouseJoint.apply(this, arguments);\r\n   };\r\n   Box2D.Dynamics.Joints.b2MouseJoint = b2MouseJoint;\r\n\r\n   function b2MouseJointDef() {\r\n      b2MouseJointDef.b2MouseJointDef.apply(this, arguments);\r\n      if (this.constructor === b2MouseJointDef) this.b2MouseJointDef.apply(this, arguments);\r\n   };\r\n   Box2D.Dynamics.Joints.b2MouseJointDef = b2MouseJointDef;\r\n\r\n   function b2PrismaticJoint() {\r\n      b2PrismaticJoint.b2PrismaticJoint.apply(this, arguments);\r\n      if (this.constructor === b2PrismaticJoint) this.b2PrismaticJoint.apply(this, arguments);\r\n   };\r\n   Box2D.Dynamics.Joints.b2PrismaticJoint = b2PrismaticJoint;\r\n\r\n   function b2PrismaticJointDef() {\r\n      b2PrismaticJointDef.b2PrismaticJointDef.apply(this, arguments);\r\n      if (this.constructor === b2PrismaticJointDef) this.b2PrismaticJointDef.apply(this, arguments);\r\n   };\r\n   Box2D.Dynamics.Joints.b2PrismaticJointDef = b2PrismaticJointDef;\r\n\r\n   function b2PulleyJoint() {\r\n      b2PulleyJoint.b2PulleyJoint.apply(this, arguments);\r\n      if (this.constructor === b2PulleyJoint) this.b2PulleyJoint.apply(this, arguments);\r\n   };\r\n   Box2D.Dynamics.Joints.b2PulleyJoint = b2PulleyJoint;\r\n\r\n   function b2PulleyJointDef() {\r\n      b2PulleyJointDef.b2PulleyJointDef.apply(this, arguments);\r\n      if (this.constructor === b2PulleyJointDef) this.b2PulleyJointDef.apply(this, arguments);\r\n   };\r\n   Box2D.Dynamics.Joints.b2PulleyJointDef = b2PulleyJointDef;\r\n\r\n   function b2RevoluteJoint() {\r\n      b2RevoluteJoint.b2RevoluteJoint.apply(this, arguments);\r\n      if (this.constructor === b2RevoluteJoint) this.b2RevoluteJoint.apply(this, arguments);\r\n   };\r\n   Box2D.Dynamics.Joints.b2RevoluteJoint = b2RevoluteJoint;\r\n\r\n   function b2RevoluteJointDef() {\r\n      b2RevoluteJointDef.b2RevoluteJointDef.apply(this, arguments);\r\n      if (this.constructor === b2RevoluteJointDef) this.b2RevoluteJointDef.apply(this, arguments);\r\n   };\r\n   Box2D.Dynamics.Joints.b2RevoluteJointDef = b2RevoluteJointDef;\r\n\r\n   function b2WeldJoint() {\r\n      b2WeldJoint.b2WeldJoint.apply(this, arguments);\r\n      if (this.constructor === b2WeldJoint) this.b2WeldJoint.apply(this, arguments);\r\n   };\r\n   Box2D.Dynamics.Joints.b2WeldJoint = b2WeldJoint;\r\n\r\n   function b2WeldJointDef() {\r\n      b2WeldJointDef.b2WeldJointDef.apply(this, arguments);\r\n      if (this.constructor === b2WeldJointDef) this.b2WeldJointDef.apply(this, arguments);\r\n   };\r\n   Box2D.Dynamics.Joints.b2WeldJointDef = b2WeldJointDef;\r\n})(); //definitions\r\nBox2D.postDefs = [];\r\n(function () {\r\n   var b2CircleShape = Box2D.Collision.Shapes.b2CircleShape,\r\n      b2EdgeChainDef = Box2D.Collision.Shapes.b2EdgeChainDef,\r\n      b2EdgeShape = Box2D.Collision.Shapes.b2EdgeShape,\r\n      b2MassData = Box2D.Collision.Shapes.b2MassData,\r\n      b2PolygonShape = Box2D.Collision.Shapes.b2PolygonShape,\r\n      b2Shape = Box2D.Collision.Shapes.b2Shape,\r\n      b2Color = Box2D.Common.b2Color,\r\n      b2internal = Box2D.Common.b2internal,\r\n      b2Settings = Box2D.Common.b2Settings,\r\n      b2Mat22 = Box2D.Common.Math.b2Mat22,\r\n      b2Mat33 = Box2D.Common.Math.b2Mat33,\r\n      b2Math = Box2D.Common.Math.b2Math,\r\n      b2Sweep = Box2D.Common.Math.b2Sweep,\r\n      b2Transform = Box2D.Common.Math.b2Transform,\r\n      b2Vec2 = Box2D.Common.Math.b2Vec2,\r\n      b2Vec3 = Box2D.Common.Math.b2Vec3,\r\n      b2AABB = Box2D.Collision.b2AABB,\r\n      b2Bound = Box2D.Collision.b2Bound,\r\n      b2BoundValues = Box2D.Collision.b2BoundValues,\r\n      b2Collision = Box2D.Collision.b2Collision,\r\n      b2ContactID = Box2D.Collision.b2ContactID,\r\n      b2ContactPoint = Box2D.Collision.b2ContactPoint,\r\n      b2Distance = Box2D.Collision.b2Distance,\r\n      b2DistanceInput = Box2D.Collision.b2DistanceInput,\r\n      b2DistanceOutput = Box2D.Collision.b2DistanceOutput,\r\n      b2DistanceProxy = Box2D.Collision.b2DistanceProxy,\r\n      b2DynamicTree = Box2D.Collision.b2DynamicTree,\r\n      b2DynamicTreeBroadPhase = Box2D.Collision.b2DynamicTreeBroadPhase,\r\n      b2DynamicTreeNode = Box2D.Collision.b2DynamicTreeNode,\r\n      b2DynamicTreePair = Box2D.Collision.b2DynamicTreePair,\r\n      b2Manifold = Box2D.Collision.b2Manifold,\r\n      b2ManifoldPoint = Box2D.Collision.b2ManifoldPoint,\r\n      b2Point = Box2D.Collision.b2Point,\r\n      b2RayCastInput = Box2D.Collision.b2RayCastInput,\r\n      b2RayCastOutput = Box2D.Collision.b2RayCastOutput,\r\n      b2Segment = Box2D.Collision.b2Segment,\r\n      b2SeparationFunction = Box2D.Collision.b2SeparationFunction,\r\n      b2Simplex = Box2D.Collision.b2Simplex,\r\n      b2SimplexCache = Box2D.Collision.b2SimplexCache,\r\n      b2SimplexVertex = Box2D.Collision.b2SimplexVertex,\r\n      b2TimeOfImpact = Box2D.Collision.b2TimeOfImpact,\r\n      b2TOIInput = Box2D.Collision.b2TOIInput,\r\n      b2WorldManifold = Box2D.Collision.b2WorldManifold,\r\n      ClipVertex = Box2D.Collision.ClipVertex,\r\n      Features = Box2D.Collision.Features,\r\n      IBroadPhase = Box2D.Collision.IBroadPhase;\r\n\r\n   b2AABB.b2AABB = function () {\r\n      this.lowerBound = new b2Vec2();\r\n      this.upperBound = new b2Vec2();\r\n   };\r\n   b2AABB.prototype.IsValid = function () {\r\n      var dX = this.upperBound.x - this.lowerBound.x;\r\n      var dY = this.upperBound.y - this.lowerBound.y;\r\n      var valid = dX >= 0.0 && dY >= 0.0;\r\n      valid = valid && this.lowerBound.IsValid() && this.upperBound.IsValid();\r\n      return valid;\r\n   }\r\n   b2AABB.prototype.GetCenter = function () {\r\n      return new b2Vec2((this.lowerBound.x + this.upperBound.x) / 2, (this.lowerBound.y + this.upperBound.y) / 2);\r\n   }\r\n   b2AABB.prototype.GetExtents = function () {\r\n      return new b2Vec2((this.upperBound.x - this.lowerBound.x) / 2, (this.upperBound.y - this.lowerBound.y) / 2);\r\n   }\r\n   b2AABB.prototype.Contains = function (aabb) {\r\n      var result = true;\r\n      result = result && this.lowerBound.x <= aabb.lowerBound.x;\r\n      result = result && this.lowerBound.y <= aabb.lowerBound.y;\r\n      result = result && aabb.upperBound.x <= this.upperBound.x;\r\n      result = result && aabb.upperBound.y <= this.upperBound.y;\r\n      return result;\r\n   }\r\n   b2AABB.prototype.RayCast = function (output, input) {\r\n      var tmin = (-Number.MAX_VALUE);\r\n      var tmax = Number.MAX_VALUE;\r\n      var pX = input.p1.x;\r\n      var pY = input.p1.y;\r\n      var dX = input.p2.x - input.p1.x;\r\n      var dY = input.p2.y - input.p1.y;\r\n      var absDX = Math.abs(dX);\r\n      var absDY = Math.abs(dY);\r\n      var normal = output.normal;\r\n      var inv_d = 0;\r\n      var t1 = 0;\r\n      var t2 = 0;\r\n      var t3 = 0;\r\n      var s = 0; {\r\n         if (absDX < Number.MIN_VALUE) {\r\n            if (pX < this.lowerBound.x || this.upperBound.x < pX) return false;\r\n         }\r\n         else {\r\n            inv_d = 1.0 / dX;\r\n            t1 = (this.lowerBound.x - pX) * inv_d;\r\n            t2 = (this.upperBound.x - pX) * inv_d;\r\n            s = (-1.0);\r\n            if (t1 > t2) {\r\n               t3 = t1;\r\n               t1 = t2;\r\n               t2 = t3;\r\n               s = 1.0;\r\n            }\r\n            if (t1 > tmin) {\r\n               normal.x = s;\r\n               normal.y = 0;\r\n               tmin = t1;\r\n            }\r\n            tmax = Math.min(tmax, t2);\r\n            if (tmin > tmax) return false;\r\n         }\r\n      } {\r\n         if (absDY < Number.MIN_VALUE) {\r\n            if (pY < this.lowerBound.y || this.upperBound.y < pY) return false;\r\n         }\r\n         else {\r\n            inv_d = 1.0 / dY;\r\n            t1 = (this.lowerBound.y - pY) * inv_d;\r\n            t2 = (this.upperBound.y - pY) * inv_d;\r\n            s = (-1.0);\r\n            if (t1 > t2) {\r\n               t3 = t1;\r\n               t1 = t2;\r\n               t2 = t3;\r\n               s = 1.0;\r\n            }\r\n            if (t1 > tmin) {\r\n               normal.y = s;\r\n               normal.x = 0;\r\n               tmin = t1;\r\n            }\r\n            tmax = Math.min(tmax, t2);\r\n            if (tmin > tmax) return false;\r\n         }\r\n      }\r\n      output.fraction = tmin;\r\n      return true;\r\n   }\r\n   b2AABB.prototype.TestOverlap = function (other) {\r\n      var d1X = other.lowerBound.x - this.upperBound.x;\r\n      var d1Y = other.lowerBound.y - this.upperBound.y;\r\n      var d2X = this.lowerBound.x - other.upperBound.x;\r\n      var d2Y = this.lowerBound.y - other.upperBound.y;\r\n      if (d1X > 0.0 || d1Y > 0.0) return false;\r\n      if (d2X > 0.0 || d2Y > 0.0) return false;\r\n      return true;\r\n   }\r\n   b2AABB.Combine = function (aabb1, aabb2) {\r\n      var aabb = new b2AABB();\r\n      aabb.Combine(aabb1, aabb2);\r\n      return aabb;\r\n   }\r\n   b2AABB.prototype.Combine = function (aabb1, aabb2) {\r\n      this.lowerBound.x = Math.min(aabb1.lowerBound.x, aabb2.lowerBound.x);\r\n      this.lowerBound.y = Math.min(aabb1.lowerBound.y, aabb2.lowerBound.y);\r\n      this.upperBound.x = Math.max(aabb1.upperBound.x, aabb2.upperBound.x);\r\n      this.upperBound.y = Math.max(aabb1.upperBound.y, aabb2.upperBound.y);\r\n   }\r\n   b2Bound.b2Bound = function () {};\r\n   b2Bound.prototype.IsLower = function () {\r\n      return (this.value & 1) == 0;\r\n   }\r\n   b2Bound.prototype.IsUpper = function () {\r\n      return (this.value & 1) == 1;\r\n   }\r\n   b2Bound.prototype.Swap = function (b) {\r\n      var tempValue = this.value;\r\n      var tempProxy = this.proxy;\r\n      var tempStabbingCount = this.stabbingCount;\r\n      this.value = b.value;\r\n      this.proxy = b.proxy;\r\n      this.stabbingCount = b.stabbingCount;\r\n      b.value = tempValue;\r\n      b.proxy = tempProxy;\r\n      b.stabbingCount = tempStabbingCount;\r\n   }\r\n   b2BoundValues.b2BoundValues = function () {};\r\n   b2BoundValues.prototype.b2BoundValues = function () {\r\n      this.lowerValues = new Vector_a2j_Number();\r\n      this.lowerValues[0] = 0.0;\r\n      this.lowerValues[1] = 0.0;\r\n      this.upperValues = new Vector_a2j_Number();\r\n      this.upperValues[0] = 0.0;\r\n      this.upperValues[1] = 0.0;\r\n   }\r\n   b2Collision.b2Collision = function () {};\r\n   b2Collision.ClipSegmentToLine = function (vOut, vIn, normal, offset) {\r\n      if (offset === undefined) offset = 0;\r\n      var cv;\r\n      var numOut = 0;\r\n      cv = vIn[0];\r\n      var vIn0 = cv.v;\r\n      cv = vIn[1];\r\n      var vIn1 = cv.v;\r\n      var distance0 = normal.x * vIn0.x + normal.y * vIn0.y - offset;\r\n      var distance1 = normal.x * vIn1.x + normal.y * vIn1.y - offset;\r\n      if (distance0 <= 0.0) vOut[numOut++].Set(vIn[0]);\r\n      if (distance1 <= 0.0) vOut[numOut++].Set(vIn[1]);\r\n      if (distance0 * distance1 < 0.0) {\r\n         var interp = distance0 / (distance0 - distance1);\r\n         cv = vOut[numOut];\r\n         var tVec = cv.v;\r\n         tVec.x = vIn0.x + interp * (vIn1.x - vIn0.x);\r\n         tVec.y = vIn0.y + interp * (vIn1.y - vIn0.y);\r\n         cv = vOut[numOut];\r\n         var cv2;\r\n         if (distance0 > 0.0) {\r\n            cv2 = vIn[0];\r\n            cv.id = cv2.id;\r\n         }\r\n         else {\r\n            cv2 = vIn[1];\r\n            cv.id = cv2.id;\r\n         }++numOut;\r\n      }\r\n      return numOut;\r\n   }\r\n   b2Collision.EdgeSeparation = function (poly1, xf1, edge1, poly2, xf2) {\r\n      if (edge1 === undefined) edge1 = 0;\r\n      var count1 = parseInt(poly1.m_vertexCount);\r\n      var vertices1 = poly1.m_vertices;\r\n      var normals1 = poly1.m_normals;\r\n      var count2 = parseInt(poly2.m_vertexCount);\r\n      var vertices2 = poly2.m_vertices;\r\n      var tMat;\r\n      var tVec;\r\n      tMat = xf1.R;\r\n      tVec = normals1[edge1];\r\n      var normal1WorldX = (tMat.col1.x * tVec.x + tMat.col2.x * tVec.y);\r\n      var normal1WorldY = (tMat.col1.y * tVec.x + tMat.col2.y * tVec.y);\r\n      tMat = xf2.R;\r\n      var normal1X = (tMat.col1.x * normal1WorldX + tMat.col1.y * normal1WorldY);\r\n      var normal1Y = (tMat.col2.x * normal1WorldX + tMat.col2.y * normal1WorldY);\r\n      var index = 0;\r\n      var minDot = Number.MAX_VALUE;\r\n      for (var i = 0; i < count2; ++i) {\r\n         tVec = vertices2[i];\r\n         var dot = tVec.x * normal1X + tVec.y * normal1Y;\r\n         if (dot < minDot) {\r\n            minDot = dot;\r\n            index = i;\r\n         }\r\n      }\r\n      tVec = vertices1[edge1];\r\n      tMat = xf1.R;\r\n      var v1X = xf1.position.x + (tMat.col1.x * tVec.x + tMat.col2.x * tVec.y);\r\n      var v1Y = xf1.position.y + (tMat.col1.y * tVec.x + tMat.col2.y * tVec.y);\r\n      tVec = vertices2[index];\r\n      tMat = xf2.R;\r\n      var v2X = xf2.position.x + (tMat.col1.x * tVec.x + tMat.col2.x * tVec.y);\r\n      var v2Y = xf2.position.y + (tMat.col1.y * tVec.x + tMat.col2.y * tVec.y);\r\n      v2X -= v1X;\r\n      v2Y -= v1Y;\r\n      var separation = v2X * normal1WorldX + v2Y * normal1WorldY;\r\n      return separation;\r\n   }\r\n   b2Collision.FindMaxSeparation = function (edgeIndex, poly1, xf1, poly2, xf2) {\r\n      var count1 = parseInt(poly1.m_vertexCount);\r\n      var normals1 = poly1.m_normals;\r\n      var tVec;\r\n      var tMat;\r\n      tMat = xf2.R;\r\n      tVec = poly2.m_centroid;\r\n      var dX = xf2.position.x + (tMat.col1.x * tVec.x + tMat.col2.x * tVec.y);\r\n      var dY = xf2.position.y + (tMat.col1.y * tVec.x + tMat.col2.y * tVec.y);\r\n      tMat = xf1.R;\r\n      tVec = poly1.m_centroid;\r\n      dX -= xf1.position.x + (tMat.col1.x * tVec.x + tMat.col2.x * tVec.y);\r\n      dY -= xf1.position.y + (tMat.col1.y * tVec.x + tMat.col2.y * tVec.y);\r\n      var dLocal1X = (dX * xf1.R.col1.x + dY * xf1.R.col1.y);\r\n      var dLocal1Y = (dX * xf1.R.col2.x + dY * xf1.R.col2.y);\r\n      var edge = 0;\r\n      var maxDot = (-Number.MAX_VALUE);\r\n      for (var i = 0; i < count1; ++i) {\r\n         tVec = normals1[i];\r\n         var dot = (tVec.x * dLocal1X + tVec.y * dLocal1Y);\r\n         if (dot > maxDot) {\r\n            maxDot = dot;\r\n            edge = i;\r\n         }\r\n      }\r\n      var s = b2Collision.EdgeSeparation(poly1, xf1, edge, poly2, xf2);\r\n      var prevEdge = parseInt(edge - 1 >= 0 ? edge - 1 : count1 - 1);\r\n      var sPrev = b2Collision.EdgeSeparation(poly1, xf1, prevEdge, poly2, xf2);\r\n      var nextEdge = parseInt(edge + 1 < count1 ? edge + 1 : 0);\r\n      var sNext = b2Collision.EdgeSeparation(poly1, xf1, nextEdge, poly2, xf2);\r\n      var bestEdge = 0;\r\n      var bestSeparation = 0;\r\n      var increment = 0;\r\n      if (sPrev > s && sPrev > sNext) {\r\n         increment = (-1);\r\n         bestEdge = prevEdge;\r\n         bestSeparation = sPrev;\r\n      }\r\n      else if (sNext > s) {\r\n         increment = 1;\r\n         bestEdge = nextEdge;\r\n         bestSeparation = sNext;\r\n      }\r\n      else {\r\n         edgeIndex[0] = edge;\r\n         return s;\r\n      }\r\n      while (true) {\r\n         if (increment == (-1)) edge = bestEdge - 1 >= 0 ? bestEdge - 1 : count1 - 1;\r\n         else edge = bestEdge + 1 < count1 ? bestEdge + 1 : 0;s = b2Collision.EdgeSeparation(poly1, xf1, edge, poly2, xf2);\r\n         if (s > bestSeparation) {\r\n            bestEdge = edge;\r\n            bestSeparation = s;\r\n         }\r\n         else {\r\n            break;\r\n         }\r\n      }\r\n      edgeIndex[0] = bestEdge;\r\n      return bestSeparation;\r\n   }\r\n   b2Collision.FindIncidentEdge = function (c, poly1, xf1, edge1, poly2, xf2) {\r\n      if (edge1 === undefined) edge1 = 0;\r\n      var count1 = parseInt(poly1.m_vertexCount);\r\n      var normals1 = poly1.m_normals;\r\n      var count2 = parseInt(poly2.m_vertexCount);\r\n      var vertices2 = poly2.m_vertices;\r\n      var normals2 = poly2.m_normals;\r\n      var tMat;\r\n      var tVec;\r\n      tMat = xf1.R;\r\n      tVec = normals1[edge1];\r\n      var normal1X = (tMat.col1.x * tVec.x + tMat.col2.x * tVec.y);\r\n      var normal1Y = (tMat.col1.y * tVec.x + tMat.col2.y * tVec.y);\r\n      tMat = xf2.R;\r\n      var tX = (tMat.col1.x * normal1X + tMat.col1.y * normal1Y);\r\n      normal1Y = (tMat.col2.x * normal1X + tMat.col2.y * normal1Y);\r\n      normal1X = tX;\r\n      var index = 0;\r\n      var minDot = Number.MAX_VALUE;\r\n      for (var i = 0; i < count2; ++i) {\r\n         tVec = normals2[i];\r\n         var dot = (normal1X * tVec.x + normal1Y * tVec.y);\r\n         if (dot < minDot) {\r\n            minDot = dot;\r\n            index = i;\r\n         }\r\n      }\r\n      var tClip;\r\n      var i1 = parseInt(index);\r\n      var i2 = parseInt(i1 + 1 < count2 ? i1 + 1 : 0);\r\n      tClip = c[0];\r\n      tVec = vertices2[i1];\r\n      tMat = xf2.R;\r\n      tClip.v.x = xf2.position.x + (tMat.col1.x * tVec.x + tMat.col2.x * tVec.y);\r\n      tClip.v.y = xf2.position.y + (tMat.col1.y * tVec.x + tMat.col2.y * tVec.y);\r\n      tClip.id.features.referenceEdge = edge1;\r\n      tClip.id.features.incidentEdge = i1;\r\n      tClip.id.features.incidentVertex = 0;\r\n      tClip = c[1];\r\n      tVec = vertices2[i2];\r\n      tMat = xf2.R;\r\n      tClip.v.x = xf2.position.x + (tMat.col1.x * tVec.x + tMat.col2.x * tVec.y);\r\n      tClip.v.y = xf2.position.y + (tMat.col1.y * tVec.x + tMat.col2.y * tVec.y);\r\n      tClip.id.features.referenceEdge = edge1;\r\n      tClip.id.features.incidentEdge = i2;\r\n      tClip.id.features.incidentVertex = 1;\r\n   }\r\n   b2Collision.MakeClipPointVector = function () {\r\n      var r = new Vector(2);\r\n      r[0] = new ClipVertex();\r\n      r[1] = new ClipVertex();\r\n      return r;\r\n   }\r\n   b2Collision.CollidePolygons = function (manifold, polyA, xfA, polyB, xfB) {\r\n      var cv;\r\n      manifold.m_pointCount = 0;\r\n      var totalRadius = polyA.m_radius + polyB.m_radius;\r\n      var edgeA = 0;\r\n      b2Collision.s_edgeAO[0] = edgeA;\r\n      var separationA = b2Collision.FindMaxSeparation(b2Collision.s_edgeAO, polyA, xfA, polyB, xfB);\r\n      edgeA = b2Collision.s_edgeAO[0];\r\n      if (separationA > totalRadius) return;\r\n      var edgeB = 0;\r\n      b2Collision.s_edgeBO[0] = edgeB;\r\n      var separationB = b2Collision.FindMaxSeparation(b2Collision.s_edgeBO, polyB, xfB, polyA, xfA);\r\n      edgeB = b2Collision.s_edgeBO[0];\r\n      if (separationB > totalRadius) return;\r\n      var poly1;\r\n      var poly2;\r\n      var xf1;\r\n      var xf2;\r\n      var edge1 = 0;\r\n      var flip = 0;\r\n      var k_relativeTol = 0.98;\r\n      var k_absoluteTol = 0.001;\r\n      var tMat;\r\n      if (separationB > k_relativeTol * separationA + k_absoluteTol) {\r\n         poly1 = polyB;\r\n         poly2 = polyA;\r\n         xf1 = xfB;\r\n         xf2 = xfA;\r\n         edge1 = edgeB;\r\n         manifold.m_type = b2Manifold.e_faceB;\r\n         flip = 1;\r\n      }\r\n      else {\r\n         poly1 = polyA;\r\n         poly2 = polyB;\r\n         xf1 = xfA;\r\n         xf2 = xfB;\r\n         edge1 = edgeA;\r\n         manifold.m_type = b2Manifold.e_faceA;\r\n         flip = 0;\r\n      }\r\n      var incidentEdge = b2Collision.s_incidentEdge;\r\n      b2Collision.FindIncidentEdge(incidentEdge, poly1, xf1, edge1, poly2, xf2);\r\n      var count1 = parseInt(poly1.m_vertexCount);\r\n      var vertices1 = poly1.m_vertices;\r\n      var local_v11 = vertices1[edge1];\r\n      var local_v12;\r\n      if (edge1 + 1 < count1) {\r\n         local_v12 = vertices1[parseInt(edge1 + 1)];\r\n      }\r\n      else {\r\n         local_v12 = vertices1[0];\r\n      }\r\n      var localTangent = b2Collision.s_localTangent;\r\n      localTangent.Set(local_v12.x - local_v11.x, local_v12.y - local_v11.y);\r\n      localTangent.Normalize();\r\n      var localNormal = b2Collision.s_localNormal;\r\n      localNormal.x = localTangent.y;\r\n      localNormal.y = (-localTangent.x);\r\n      var planePoint = b2Collision.s_planePoint;\r\n      planePoint.Set(0.5 * (local_v11.x + local_v12.x), 0.5 * (local_v11.y + local_v12.y));\r\n      var tangent = b2Collision.s_tangent;\r\n      tMat = xf1.R;\r\n      tangent.x = (tMat.col1.x * localTangent.x + tMat.col2.x * localTangent.y);\r\n      tangent.y = (tMat.col1.y * localTangent.x + tMat.col2.y * localTangent.y);\r\n      var tangent2 = b2Collision.s_tangent2;\r\n      tangent2.x = (-tangent.x);\r\n      tangent2.y = (-tangent.y);\r\n      var normal = b2Collision.s_normal;\r\n      normal.x = tangent.y;\r\n      normal.y = (-tangent.x);\r\n      var v11 = b2Collision.s_v11;\r\n      var v12 = b2Collision.s_v12;\r\n      v11.x = xf1.position.x + (tMat.col1.x * local_v11.x + tMat.col2.x * local_v11.y);\r\n      v11.y = xf1.position.y + (tMat.col1.y * local_v11.x + tMat.col2.y * local_v11.y);\r\n      v12.x = xf1.position.x + (tMat.col1.x * local_v12.x + tMat.col2.x * local_v12.y);\r\n      v12.y = xf1.position.y + (tMat.col1.y * local_v12.x + tMat.col2.y * local_v12.y);\r\n      var frontOffset = normal.x * v11.x + normal.y * v11.y;\r\n      var sideOffset1 = (-tangent.x * v11.x) - tangent.y * v11.y + totalRadius;\r\n      var sideOffset2 = tangent.x * v12.x + tangent.y * v12.y + totalRadius;\r\n      var clipPoints1 = b2Collision.s_clipPoints1;\r\n      var clipPoints2 = b2Collision.s_clipPoints2;\r\n      var np = 0;\r\n      np = b2Collision.ClipSegmentToLine(clipPoints1, incidentEdge, tangent2, sideOffset1);\r\n      if (np < 2) return;\r\n      np = b2Collision.ClipSegmentToLine(clipPoints2, clipPoints1, tangent, sideOffset2);\r\n      if (np < 2) return;\r\n      manifold.m_localPlaneNormal.SetV(localNormal);\r\n      manifold.m_localPoint.SetV(planePoint);\r\n      var pointCount = 0;\r\n      for (var i = 0; i < b2Settings.b2_maxManifoldPoints; ++i) {\r\n         cv = clipPoints2[i];\r\n         var separation = normal.x * cv.v.x + normal.y * cv.v.y - frontOffset;\r\n         if (separation <= totalRadius) {\r\n            var cp = manifold.m_points[pointCount];\r\n            tMat = xf2.R;\r\n            var tX = cv.v.x - xf2.position.x;\r\n            var tY = cv.v.y - xf2.position.y;\r\n            cp.m_localPoint.x = (tX * tMat.col1.x + tY * tMat.col1.y);\r\n            cp.m_localPoint.y = (tX * tMat.col2.x + tY * tMat.col2.y);\r\n            cp.m_id.Set(cv.id);\r\n            cp.m_id.features.flip = flip;\r\n            ++pointCount;\r\n         }\r\n      }\r\n      manifold.m_pointCount = pointCount;\r\n   }\r\n   b2Collision.CollideCircles = function (manifold, circle1, xf1, circle2, xf2) {\r\n      manifold.m_pointCount = 0;\r\n      var tMat;\r\n      var tVec;\r\n      tMat = xf1.R;\r\n      tVec = circle1.m_p;\r\n      var p1X = xf1.position.x + (tMat.col1.x * tVec.x + tMat.col2.x * tVec.y);\r\n      var p1Y = xf1.position.y + (tMat.col1.y * tVec.x + tMat.col2.y * tVec.y);\r\n      tMat = xf2.R;\r\n      tVec = circle2.m_p;\r\n      var p2X = xf2.position.x + (tMat.col1.x * tVec.x + tMat.col2.x * tVec.y);\r\n      var p2Y = xf2.position.y + (tMat.col1.y * tVec.x + tMat.col2.y * tVec.y);\r\n      var dX = p2X - p1X;\r\n      var dY = p2Y - p1Y;\r\n      var distSqr = dX * dX + dY * dY;\r\n      var radius = circle1.m_radius + circle2.m_radius;\r\n      if (distSqr > radius * radius) {\r\n         return;\r\n      }\r\n      manifold.m_type = b2Manifold.e_circles;\r\n      manifold.m_localPoint.SetV(circle1.m_p);\r\n      manifold.m_localPlaneNormal.SetZero();\r\n      manifold.m_pointCount = 1;\r\n      manifold.m_points[0].m_localPoint.SetV(circle2.m_p);\r\n      manifold.m_points[0].m_id.key = 0;\r\n   }\r\n   b2Collision.CollidePolygonAndCircle = function (manifold, polygon, xf1, circle, xf2) {\r\n      manifold.m_pointCount = 0;\r\n      var tPoint;\r\n      var dX = 0;\r\n      var dY = 0;\r\n      var positionX = 0;\r\n      var positionY = 0;\r\n      var tVec;\r\n      var tMat;\r\n      tMat = xf2.R;\r\n      tVec = circle.m_p;\r\n      var cX = xf2.position.x + (tMat.col1.x * tVec.x + tMat.col2.x * tVec.y);\r\n      var cY = xf2.position.y + (tMat.col1.y * tVec.x + tMat.col2.y * tVec.y);\r\n      dX = cX - xf1.position.x;\r\n      dY = cY - xf1.position.y;\r\n      tMat = xf1.R;\r\n      var cLocalX = (dX * tMat.col1.x + dY * tMat.col1.y);\r\n      var cLocalY = (dX * tMat.col2.x + dY * tMat.col2.y);\r\n      var dist = 0;\r\n      var normalIndex = 0;\r\n      var separation = (-Number.MAX_VALUE);\r\n      var radius = polygon.m_radius + circle.m_radius;\r\n      var vertexCount = parseInt(polygon.m_vertexCount);\r\n      var vertices = polygon.m_vertices;\r\n      var normals = polygon.m_normals;\r\n      for (var i = 0; i < vertexCount; ++i) {\r\n         tVec = vertices[i];\r\n         dX = cLocalX - tVec.x;\r\n         dY = cLocalY - tVec.y;\r\n         tVec = normals[i];\r\n         var s = tVec.x * dX + tVec.y * dY;\r\n         if (s > radius) {\r\n            return;\r\n         }\r\n         if (s > separation) {\r\n            separation = s;\r\n            normalIndex = i;\r\n         }\r\n      }\r\n      var vertIndex1 = parseInt(normalIndex);\r\n      var vertIndex2 = parseInt(vertIndex1 + 1 < vertexCount ? vertIndex1 + 1 : 0);\r\n      var v1 = vertices[vertIndex1];\r\n      var v2 = vertices[vertIndex2];\r\n      if (separation < Number.MIN_VALUE) {\r\n         manifold.m_pointCount = 1;\r\n         manifold.m_type = b2Manifold.e_faceA;\r\n         manifold.m_localPlaneNormal.SetV(normals[normalIndex]);\r\n         manifold.m_localPoint.x = 0.5 * (v1.x + v2.x);\r\n         manifold.m_localPoint.y = 0.5 * (v1.y + v2.y);\r\n         manifold.m_points[0].m_localPoint.SetV(circle.m_p);\r\n         manifold.m_points[0].m_id.key = 0;\r\n         return;\r\n      }\r\n      var u1 = (cLocalX - v1.x) * (v2.x - v1.x) + (cLocalY - v1.y) * (v2.y - v1.y);\r\n      var u2 = (cLocalX - v2.x) * (v1.x - v2.x) + (cLocalY - v2.y) * (v1.y - v2.y);\r\n      if (u1 <= 0.0) {\r\n         if ((cLocalX - v1.x) * (cLocalX - v1.x) + (cLocalY - v1.y) * (cLocalY - v1.y) > radius * radius) return;\r\n         manifold.m_pointCount = 1;\r\n         manifold.m_type = b2Manifold.e_faceA;\r\n         manifold.m_localPlaneNormal.x = cLocalX - v1.x;\r\n         manifold.m_localPlaneNormal.y = cLocalY - v1.y;\r\n         manifold.m_localPlaneNormal.Normalize();\r\n         manifold.m_localPoint.SetV(v1);\r\n         manifold.m_points[0].m_localPoint.SetV(circle.m_p);\r\n         manifold.m_points[0].m_id.key = 0;\r\n      }\r\n      else if (u2 <= 0) {\r\n         if ((cLocalX - v2.x) * (cLocalX - v2.x) + (cLocalY - v2.y) * (cLocalY - v2.y) > radius * radius) return;\r\n         manifold.m_pointCount = 1;\r\n         manifold.m_type = b2Manifold.e_faceA;\r\n         manifold.m_localPlaneNormal.x = cLocalX - v2.x;\r\n         manifold.m_localPlaneNormal.y = cLocalY - v2.y;\r\n         manifold.m_localPlaneNormal.Normalize();\r\n         manifold.m_localPoint.SetV(v2);\r\n         manifold.m_points[0].m_localPoint.SetV(circle.m_p);\r\n         manifold.m_points[0].m_id.key = 0;\r\n      }\r\n      else {\r\n         var faceCenterX = 0.5 * (v1.x + v2.x);\r\n         var faceCenterY = 0.5 * (v1.y + v2.y);\r\n         separation = (cLocalX - faceCenterX) * normals[vertIndex1].x + (cLocalY - faceCenterY) * normals[vertIndex1].y;\r\n         if (separation > radius) return;\r\n         manifold.m_pointCount = 1;\r\n         manifold.m_type = b2Manifold.e_faceA;\r\n         manifold.m_localPlaneNormal.x = normals[vertIndex1].x;\r\n         manifold.m_localPlaneNormal.y = normals[vertIndex1].y;\r\n         manifold.m_localPlaneNormal.Normalize();\r\n         manifold.m_localPoint.Set(faceCenterX, faceCenterY);\r\n         manifold.m_points[0].m_localPoint.SetV(circle.m_p);\r\n         manifold.m_points[0].m_id.key = 0;\r\n      }\r\n   }\r\n   b2Collision.TestOverlap = function (a, b) {\r\n      var t1 = b.lowerBound;\r\n      var t2 = a.upperBound;\r\n      var d1X = t1.x - t2.x;\r\n      var d1Y = t1.y - t2.y;\r\n      t1 = a.lowerBound;\r\n      t2 = b.upperBound;\r\n      var d2X = t1.x - t2.x;\r\n      var d2Y = t1.y - t2.y;\r\n      if (d1X > 0.0 || d1Y > 0.0) return false;\r\n      if (d2X > 0.0 || d2Y > 0.0) return false;\r\n      return true;\r\n   }\r\n   Box2D.postDefs.push(function () {\r\n      Box2D.Collision.b2Collision.s_incidentEdge = b2Collision.MakeClipPointVector();\r\n      Box2D.Collision.b2Collision.s_clipPoints1 = b2Collision.MakeClipPointVector();\r\n      Box2D.Collision.b2Collision.s_clipPoints2 = b2Collision.MakeClipPointVector();\r\n      Box2D.Collision.b2Collision.s_edgeAO = new Vector_a2j_Number(1);\r\n      Box2D.Collision.b2Collision.s_edgeBO = new Vector_a2j_Number(1);\r\n      Box2D.Collision.b2Collision.s_localTangent = new b2Vec2();\r\n      Box2D.Collision.b2Collision.s_localNormal = new b2Vec2();\r\n      Box2D.Collision.b2Collision.s_planePoint = new b2Vec2();\r\n      Box2D.Collision.b2Collision.s_normal = new b2Vec2();\r\n      Box2D.Collision.b2Collision.s_tangent = new b2Vec2();\r\n      Box2D.Collision.b2Collision.s_tangent2 = new b2Vec2();\r\n      Box2D.Collision.b2Collision.s_v11 = new b2Vec2();\r\n      Box2D.Collision.b2Collision.s_v12 = new b2Vec2();\r\n      Box2D.Collision.b2Collision.b2CollidePolyTempVec = new b2Vec2();\r\n      Box2D.Collision.b2Collision.b2_nullFeature = 0x000000ff;\r\n   });\r\n   b2ContactID.b2ContactID = function () {\r\n      this.features = new Features();\r\n   };\r\n   b2ContactID.prototype.b2ContactID = function () {\r\n      this.features._m_id = this;\r\n   }\r\n   b2ContactID.prototype.Set = function (id) {\r\n      this.key = id._key;\r\n   }\r\n   b2ContactID.prototype.Copy = function () {\r\n      var id = new b2ContactID();\r\n      id.key = this.key;\r\n      return id;\r\n   }\r\n   Object.defineProperty(b2ContactID.prototype, 'key', {\r\n      enumerable: false,\r\n      configurable: true,\r\n      get: function () {\r\n         return this._key;\r\n      }\r\n   });\r\n   Object.defineProperty(b2ContactID.prototype, 'key', {\r\n      enumerable: false,\r\n      configurable: true,\r\n      set: function (value) {\r\n         if (value === undefined) value = 0;\r\n         this._key = value;\r\n         this.features._referenceEdge = this._key & 0x000000ff;\r\n         this.features._incidentEdge = ((this._key & 0x0000ff00) >> 8) & 0x000000ff;\r\n         this.features._incidentVertex = ((this._key & 0x00ff0000) >> 16) & 0x000000ff;\r\n         this.features._flip = ((this._key & 0xff000000) >> 24) & 0x000000ff;\r\n      }\r\n   });\r\n   b2ContactPoint.b2ContactPoint = function () {\r\n      this.position = new b2Vec2();\r\n      this.velocity = new b2Vec2();\r\n      this.normal = new b2Vec2();\r\n      this.id = new b2ContactID();\r\n   };\r\n   b2Distance.b2Distance = function () {};\r\n   b2Distance.Distance = function (output, cache, input) {\r\n      ++b2Distance.b2_gjkCalls;\r\n      var proxyA = input.proxyA;\r\n      var proxyB = input.proxyB;\r\n      var transformA = input.transformA;\r\n      var transformB = input.transformB;\r\n      var simplex = b2Distance.s_simplex;\r\n      simplex.ReadCache(cache, proxyA, transformA, proxyB, transformB);\r\n      var vertices = simplex.m_vertices;\r\n      var k_maxIters = 20;\r\n      var saveA = b2Distance.s_saveA;\r\n      var saveB = b2Distance.s_saveB;\r\n      var saveCount = 0;\r\n      var closestPoint = simplex.GetClosestPoint();\r\n      var distanceSqr1 = closestPoint.LengthSquared();\r\n      var distanceSqr2 = distanceSqr1;\r\n      var i = 0;\r\n      var p;\r\n      var iter = 0;\r\n      while (iter < k_maxIters) {\r\n         saveCount = simplex.m_count;\r\n         for (i = 0;\r\n         i < saveCount; i++) {\r\n            saveA[i] = vertices[i].indexA;\r\n            saveB[i] = vertices[i].indexB;\r\n         }\r\n         switch (simplex.m_count) {\r\n         case 1:\r\n            break;\r\n         case 2:\r\n            simplex.Solve2();\r\n            break;\r\n         case 3:\r\n            simplex.Solve3();\r\n            break;\r\n         default:\r\n            b2Settings.b2Assert(false);\r\n         }\r\n         if (simplex.m_count == 3) {\r\n            break;\r\n         }\r\n         p = simplex.GetClosestPoint();\r\n         distanceSqr2 = p.LengthSquared();\r\n         if (distanceSqr2 > distanceSqr1) {}\r\n         distanceSqr1 = distanceSqr2;\r\n         var d = simplex.GetSearchDirection();\r\n         if (d.LengthSquared() < Number.MIN_VALUE * Number.MIN_VALUE) {\r\n            break;\r\n         }\r\n         var vertex = vertices[simplex.m_count];\r\n         vertex.indexA = proxyA.GetSupport(b2Math.MulTMV(transformA.R, d.GetNegative()));\r\n         vertex.wA = b2Math.MulX(transformA, proxyA.GetVertex(vertex.indexA));\r\n         vertex.indexB = proxyB.GetSupport(b2Math.MulTMV(transformB.R, d));\r\n         vertex.wB = b2Math.MulX(transformB, proxyB.GetVertex(vertex.indexB));\r\n         vertex.w = b2Math.SubtractVV(vertex.wB, vertex.wA);\r\n         ++iter;\r\n         ++b2Distance.b2_gjkIters;\r\n         var duplicate = false;\r\n         for (i = 0;\r\n         i < saveCount; i++) {\r\n            if (vertex.indexA == saveA[i] && vertex.indexB == saveB[i]) {\r\n               duplicate = true;\r\n               break;\r\n            }\r\n         }\r\n         if (duplicate) {\r\n            break;\r\n         }++simplex.m_count;\r\n      }\r\n      b2Distance.b2_gjkMaxIters = b2Math.Max(b2Distance.b2_gjkMaxIters, iter);\r\n      simplex.GetWitnessPoints(output.pointA, output.pointB);\r\n      output.distance = b2Math.SubtractVV(output.pointA, output.pointB).Length();\r\n      output.iterations = iter;\r\n      simplex.WriteCache(cache);\r\n      if (input.useRadii) {\r\n         var rA = proxyA.m_radius;\r\n         var rB = proxyB.m_radius;\r\n         if (output.distance > rA + rB && output.distance > Number.MIN_VALUE) {\r\n            output.distance -= rA + rB;\r\n            var normal = b2Math.SubtractVV(output.pointB, output.pointA);\r\n            normal.Normalize();\r\n            output.pointA.x += rA * normal.x;\r\n            output.pointA.y += rA * normal.y;\r\n            output.pointB.x -= rB * normal.x;\r\n            output.pointB.y -= rB * normal.y;\r\n         }\r\n         else {\r\n            p = new b2Vec2();\r\n            p.x = .5 * (output.pointA.x + output.pointB.x);\r\n            p.y = .5 * (output.pointA.y + output.pointB.y);\r\n            output.pointA.x = output.pointB.x = p.x;\r\n            output.pointA.y = output.pointB.y = p.y;\r\n            output.distance = 0.0;\r\n         }\r\n      }\r\n   }\r\n   Box2D.postDefs.push(function () {\r\n      Box2D.Collision.b2Distance.s_simplex = new b2Simplex();\r\n      Box2D.Collision.b2Distance.s_saveA = new Vector_a2j_Number(3);\r\n      Box2D.Collision.b2Distance.s_saveB = new Vector_a2j_Number(3);\r\n   });\r\n   b2DistanceInput.b2DistanceInput = function () {};\r\n   b2DistanceOutput.b2DistanceOutput = function () {\r\n      this.pointA = new b2Vec2();\r\n      this.pointB = new b2Vec2();\r\n   };\r\n   b2DistanceProxy.b2DistanceProxy = function () {};\r\n   b2DistanceProxy.prototype.Set = function (shape) {\r\n      switch (shape.GetType()) {\r\n      case b2Shape.e_circleShape:\r\n         {\r\n            var circle = (shape instanceof b2CircleShape ? shape : null);\r\n            this.m_vertices = new Vector(1, true);\r\n            this.m_vertices[0] = circle.m_p;\r\n            this.m_count = 1;\r\n            this.m_radius = circle.m_radius;\r\n         }\r\n         break;\r\n      case b2Shape.e_polygonShape:\r\n         {\r\n            var polygon = (shape instanceof b2PolygonShape ? shape : null);\r\n            this.m_vertices = polygon.m_vertices;\r\n            this.m_count = polygon.m_vertexCount;\r\n            this.m_radius = polygon.m_radius;\r\n         }\r\n         break;\r\n      default:\r\n         b2Settings.b2Assert(false);\r\n      }\r\n   }\r\n   b2DistanceProxy.prototype.GetSupport = function (d) {\r\n      var bestIndex = 0;\r\n      var bestValue = this.m_vertices[0].x * d.x + this.m_vertices[0].y * d.y;\r\n      for (var i = 1; i < this.m_count; ++i) {\r\n         var value = this.m_vertices[i].x * d.x + this.m_vertices[i].y * d.y;\r\n         if (value > bestValue) {\r\n            bestIndex = i;\r\n            bestValue = value;\r\n         }\r\n      }\r\n      return bestIndex;\r\n   }\r\n   b2DistanceProxy.prototype.GetSupportVertex = function (d) {\r\n      var bestIndex = 0;\r\n      var bestValue = this.m_vertices[0].x * d.x + this.m_vertices[0].y * d.y;\r\n      for (var i = 1; i < this.m_count; ++i) {\r\n         var value = this.m_vertices[i].x * d.x + this.m_vertices[i].y * d.y;\r\n         if (value > bestValue) {\r\n            bestIndex = i;\r\n            bestValue = value;\r\n         }\r\n      }\r\n      return this.m_vertices[bestIndex];\r\n   }\r\n   b2DistanceProxy.prototype.GetVertexCount = function () {\r\n      return this.m_count;\r\n   }\r\n   b2DistanceProxy.prototype.GetVertex = function (index) {\r\n      if (index === undefined) index = 0;\r\n      b2Settings.b2Assert(0 <= index && index < this.m_count);\r\n      return this.m_vertices[index];\r\n   }\r\n   b2DynamicTree.b2DynamicTree = function () {};\r\n   b2DynamicTree.prototype.b2DynamicTree = function () {\r\n      this.m_root = null;\r\n      this.m_freeList = null;\r\n      this.m_path = 0;\r\n      this.m_insertionCount = 0;\r\n   }\r\n   b2DynamicTree.prototype.CreateProxy = function (aabb, userData) {\r\n      var node = this.AllocateNode();\r\n      var extendX = b2Settings.b2_aabbExtension;\r\n      var extendY = b2Settings.b2_aabbExtension;\r\n      node.aabb.lowerBound.x = aabb.lowerBound.x - extendX;\r\n      node.aabb.lowerBound.y = aabb.lowerBound.y - extendY;\r\n      node.aabb.upperBound.x = aabb.upperBound.x + extendX;\r\n      node.aabb.upperBound.y = aabb.upperBound.y + extendY;\r\n      node.userData = userData;\r\n      this.InsertLeaf(node);\r\n      return node;\r\n   }\r\n   b2DynamicTree.prototype.DestroyProxy = function (proxy) {\r\n      this.RemoveLeaf(proxy);\r\n      this.FreeNode(proxy);\r\n   }\r\n   b2DynamicTree.prototype.MoveProxy = function (proxy, aabb, displacement) {\r\n      b2Settings.b2Assert(proxy.IsLeaf());\r\n      if (proxy.aabb.Contains(aabb)) {\r\n         return false;\r\n      }\r\n      this.RemoveLeaf(proxy);\r\n      var extendX = b2Settings.b2_aabbExtension + b2Settings.b2_aabbMultiplier * (displacement.x > 0 ? displacement.x : (-displacement.x));\r\n      var extendY = b2Settings.b2_aabbExtension + b2Settings.b2_aabbMultiplier * (displacement.y > 0 ? displacement.y : (-displacement.y));\r\n      proxy.aabb.lowerBound.x = aabb.lowerBound.x - extendX;\r\n      proxy.aabb.lowerBound.y = aabb.lowerBound.y - extendY;\r\n      proxy.aabb.upperBound.x = aabb.upperBound.x + extendX;\r\n      proxy.aabb.upperBound.y = aabb.upperBound.y + extendY;\r\n      this.InsertLeaf(proxy);\r\n      return true;\r\n   }\r\n   b2DynamicTree.prototype.Rebalance = function (iterations) {\r\n      if (iterations === undefined) iterations = 0;\r\n      if (this.m_root == null) return;\r\n      for (var i = 0; i < iterations; i++) {\r\n         var node = this.m_root;\r\n         var bit = 0;\r\n         while (node.IsLeaf() == false) {\r\n            node = (this.m_path >> bit) & 1 ? node.child2 : node.child1;\r\n            bit = (bit + 1) & 31;\r\n         }++this.m_path;\r\n         this.RemoveLeaf(node);\r\n         this.InsertLeaf(node);\r\n      }\r\n   }\r\n   b2DynamicTree.prototype.GetFatAABB = function (proxy) {\r\n      return proxy.aabb;\r\n   }\r\n   b2DynamicTree.prototype.GetUserData = function (proxy) {\r\n      return proxy.userData;\r\n   }\r\n   b2DynamicTree.prototype.Query = function (callback, aabb) {\r\n      if (this.m_root == null) return;\r\n      var stack = new Vector();\r\n      var count = 0;\r\n      stack[count++] = this.m_root;\r\n      while (count > 0) {\r\n         var node = stack[--count];\r\n         if (node.aabb.TestOverlap(aabb)) {\r\n            if (node.IsLeaf()) {\r\n               var proceed = callback(node);\r\n               if (!proceed) return;\r\n            }\r\n            else {\r\n               stack[count++] = node.child1;\r\n               stack[count++] = node.child2;\r\n            }\r\n         }\r\n      }\r\n   }\r\n   b2DynamicTree.prototype.RayCast = function (callback, input) {\r\n      if (this.m_root == null) return;\r\n      var p1 = input.p1;\r\n      var p2 = input.p2;\r\n      var r = b2Math.SubtractVV(p1, p2);\r\n      r.Normalize();\r\n      var v = b2Math.CrossFV(1.0, r);\r\n      var abs_v = b2Math.AbsV(v);\r\n      var maxFraction = input.maxFraction;\r\n      var segmentAABB = new b2AABB();\r\n      var tX = 0;\r\n      var tY = 0; {\r\n         tX = p1.x + maxFraction * (p2.x - p1.x);\r\n         tY = p1.y + maxFraction * (p2.y - p1.y);\r\n         segmentAABB.lowerBound.x = Math.min(p1.x, tX);\r\n         segmentAABB.lowerBound.y = Math.min(p1.y, tY);\r\n         segmentAABB.upperBound.x = Math.max(p1.x, tX);\r\n         segmentAABB.upperBound.y = Math.max(p1.y, tY);\r\n      }\r\n      var stack = new Vector();\r\n      var count = 0;\r\n      stack[count++] = this.m_root;\r\n      while (count > 0) {\r\n         var node = stack[--count];\r\n         if (node.aabb.TestOverlap(segmentAABB) == false) {\r\n            continue;\r\n         }\r\n         var c = node.aabb.GetCenter();\r\n         var h = node.aabb.GetExtents();\r\n         var separation = Math.abs(v.x * (p1.x - c.x) + v.y * (p1.y - c.y)) - abs_v.x * h.x - abs_v.y * h.y;\r\n         if (separation > 0.0) continue;\r\n         if (node.IsLeaf()) {\r\n            var subInput = new b2RayCastInput();\r\n            subInput.p1 = input.p1;\r\n            subInput.p2 = input.p2;\r\n            subInput.maxFraction = input.maxFraction;\r\n            maxFraction = callback(subInput, node);\r\n            if (maxFraction == 0.0) return;\r\n            if (maxFraction > 0.0) {\r\n               tX = p1.x + maxFraction * (p2.x - p1.x);\r\n               tY = p1.y + maxFraction * (p2.y - p1.y);\r\n               segmentAABB.lowerBound.x = Math.min(p1.x, tX);\r\n               segmentAABB.lowerBound.y = Math.min(p1.y, tY);\r\n               segmentAABB.upperBound.x = Math.max(p1.x, tX);\r\n               segmentAABB.upperBound.y = Math.max(p1.y, tY);\r\n            }\r\n         }\r\n         else {\r\n            stack[count++] = node.child1;\r\n            stack[count++] = node.child2;\r\n         }\r\n      }\r\n   }\r\n   b2DynamicTree.prototype.AllocateNode = function () {\r\n      if (this.m_freeList) {\r\n         var node = this.m_freeList;\r\n         this.m_freeList = node.parent;\r\n         node.parent = null;\r\n         node.child1 = null;\r\n         node.child2 = null;\r\n         return node;\r\n      }\r\n      return new b2DynamicTreeNode();\r\n   }\r\n   b2DynamicTree.prototype.FreeNode = function (node) {\r\n      node.parent = this.m_freeList;\r\n      this.m_freeList = node;\r\n   }\r\n   b2DynamicTree.prototype.InsertLeaf = function (leaf) {\r\n      ++this.m_insertionCount;\r\n      if (this.m_root == null) {\r\n         this.m_root = leaf;\r\n         this.m_root.parent = null;\r\n         return;\r\n      }\r\n      var center = leaf.aabb.GetCenter();\r\n      var sibling = this.m_root;\r\n      if (sibling.IsLeaf() == false) {\r\n         do {\r\n            var child1 = sibling.child1;\r\n            var child2 = sibling.child2;\r\n            var norm1 = Math.abs((child1.aabb.lowerBound.x + child1.aabb.upperBound.x) / 2 - center.x) + Math.abs((child1.aabb.lowerBound.y + child1.aabb.upperBound.y) / 2 - center.y);\r\n            var norm2 = Math.abs((child2.aabb.lowerBound.x + child2.aabb.upperBound.x) / 2 - center.x) + Math.abs((child2.aabb.lowerBound.y + child2.aabb.upperBound.y) / 2 - center.y);\r\n            if (norm1 < norm2) {\r\n               sibling = child1;\r\n            }\r\n            else {\r\n               sibling = child2;\r\n            }\r\n         }\r\n         while (sibling.IsLeaf() == false)\r\n      }\r\n      var node1 = sibling.parent;\r\n      var node2 = this.AllocateNode();\r\n      node2.parent = node1;\r\n      node2.userData = null;\r\n      node2.aabb.Combine(leaf.aabb, sibling.aabb);\r\n      if (node1) {\r\n         if (sibling.parent.child1 == sibling) {\r\n            node1.child1 = node2;\r\n         }\r\n         else {\r\n            node1.child2 = node2;\r\n         }\r\n         node2.child1 = sibling;\r\n         node2.child2 = leaf;\r\n         sibling.parent = node2;\r\n         leaf.parent = node2;\r\n         do {\r\n            if (node1.aabb.Contains(node2.aabb)) break;\r\n            node1.aabb.Combine(node1.child1.aabb, node1.child2.aabb);\r\n            node2 = node1;\r\n            node1 = node1.parent;\r\n         }\r\n         while (node1)\r\n      }\r\n      else {\r\n         node2.child1 = sibling;\r\n         node2.child2 = leaf;\r\n         sibling.parent = node2;\r\n         leaf.parent = node2;\r\n         this.m_root = node2;\r\n      }\r\n   }\r\n   b2DynamicTree.prototype.RemoveLeaf = function (leaf) {\r\n      if (leaf == this.m_root) {\r\n         this.m_root = null;\r\n         return;\r\n      }\r\n      var node2 = leaf.parent;\r\n      var node1 = node2.parent;\r\n      var sibling;\r\n      if (node2.child1 == leaf) {\r\n         sibling = node2.child2;\r\n      }\r\n      else {\r\n         sibling = node2.child1;\r\n      }\r\n      if (node1) {\r\n         if (node1.child1 == node2) {\r\n            node1.child1 = sibling;\r\n         }\r\n         else {\r\n            node1.child2 = sibling;\r\n         }\r\n         sibling.parent = node1;\r\n         this.FreeNode(node2);\r\n         while (node1) {\r\n            var oldAABB = node1.aabb;\r\n            node1.aabb = b2AABB.Combine(node1.child1.aabb, node1.child2.aabb);\r\n            if (oldAABB.Contains(node1.aabb)) break;\r\n            node1 = node1.parent;\r\n         }\r\n      }\r\n      else {\r\n         this.m_root = sibling;\r\n         sibling.parent = null;\r\n         this.FreeNode(node2);\r\n      }\r\n   }\r\n   b2DynamicTreeBroadPhase.b2DynamicTreeBroadPhase = function () {\r\n      this.m_tree = new b2DynamicTree();\r\n      this.m_moveBuffer = new Vector();\r\n      this.m_pairBuffer = new Vector();\r\n      this.m_pairCount = 0;\r\n   };\r\n   b2DynamicTreeBroadPhase.prototype.CreateProxy = function (aabb, userData) {\r\n      var proxy = this.m_tree.CreateProxy(aabb, userData);\r\n      ++this.m_proxyCount;\r\n      this.BufferMove(proxy);\r\n      return proxy;\r\n   }\r\n   b2DynamicTreeBroadPhase.prototype.DestroyProxy = function (proxy) {\r\n      this.UnBufferMove(proxy);\r\n      --this.m_proxyCount;\r\n      this.m_tree.DestroyProxy(proxy);\r\n   }\r\n   b2DynamicTreeBroadPhase.prototype.MoveProxy = function (proxy, aabb, displacement) {\r\n      var buffer = this.m_tree.MoveProxy(proxy, aabb, displacement);\r\n      if (buffer) {\r\n         this.BufferMove(proxy);\r\n      }\r\n   }\r\n   b2DynamicTreeBroadPhase.prototype.TestOverlap = function (proxyA, proxyB) {\r\n      var aabbA = this.m_tree.GetFatAABB(proxyA);\r\n      var aabbB = this.m_tree.GetFatAABB(proxyB);\r\n      return aabbA.TestOverlap(aabbB);\r\n   }\r\n   b2DynamicTreeBroadPhase.prototype.GetUserData = function (proxy) {\r\n      return this.m_tree.GetUserData(proxy);\r\n   }\r\n   b2DynamicTreeBroadPhase.prototype.GetFatAABB = function (proxy) {\r\n      return this.m_tree.GetFatAABB(proxy);\r\n   }\r\n   b2DynamicTreeBroadPhase.prototype.GetProxyCount = function () {\r\n      return this.m_proxyCount;\r\n   }\r\n   b2DynamicTreeBroadPhase.prototype.UpdatePairs = function (callback) {\r\n      var __this = this;\r\n      __this.m_pairCount = 0;\r\n      var i = 0,\r\n         queryProxy;\r\n      for (i = 0;\r\n      i < __this.m_moveBuffer.length; ++i) {\r\n         queryProxy = __this.m_moveBuffer[i];\r\n\r\n         function QueryCallback(proxy) {\r\n            if (proxy == queryProxy) return true;\r\n            if (__this.m_pairCount == __this.m_pairBuffer.length) {\r\n               __this.m_pairBuffer[__this.m_pairCount] = new b2DynamicTreePair();\r\n            }\r\n            var pair = __this.m_pairBuffer[__this.m_pairCount];\r\n            pair.proxyA = proxy < queryProxy ? proxy : queryProxy;\r\n            pair.proxyB = proxy >= queryProxy ? proxy : queryProxy;++__this.m_pairCount;\r\n            return true;\r\n         };\r\n         var fatAABB = __this.m_tree.GetFatAABB(queryProxy);\r\n         __this.m_tree.Query(QueryCallback, fatAABB);\r\n      }\r\n      __this.m_moveBuffer.length = 0;\r\n      for (var i = 0; i < __this.m_pairCount;) {\r\n         var primaryPair = __this.m_pairBuffer[i];\r\n         var userDataA = __this.m_tree.GetUserData(primaryPair.proxyA);\r\n         var userDataB = __this.m_tree.GetUserData(primaryPair.proxyB);\r\n         callback(userDataA, userDataB);\r\n         ++i;\r\n         while (i < __this.m_pairCount) {\r\n            var pair = __this.m_pairBuffer[i];\r\n            if (pair.proxyA != primaryPair.proxyA || pair.proxyB != primaryPair.proxyB) {\r\n               break;\r\n            }++i;\r\n         }\r\n      }\r\n   }\r\n   b2DynamicTreeBroadPhase.prototype.Query = function (callback, aabb) {\r\n      this.m_tree.Query(callback, aabb);\r\n   }\r\n   b2DynamicTreeBroadPhase.prototype.RayCast = function (callback, input) {\r\n      this.m_tree.RayCast(callback, input);\r\n   }\r\n   b2DynamicTreeBroadPhase.prototype.Validate = function () {}\r\n   b2DynamicTreeBroadPhase.prototype.Rebalance = function (iterations) {\r\n      if (iterations === undefined) iterations = 0;\r\n      this.m_tree.Rebalance(iterations);\r\n   }\r\n   b2DynamicTreeBroadPhase.prototype.BufferMove = function (proxy) {\r\n      this.m_moveBuffer[this.m_moveBuffer.length] = proxy;\r\n   }\r\n   b2DynamicTreeBroadPhase.prototype.UnBufferMove = function (proxy) {\r\n      var i = parseInt(this.m_moveBuffer.indexOf(proxy));\r\n      this.m_moveBuffer.splice(i, 1);\r\n   }\r\n   b2DynamicTreeBroadPhase.prototype.ComparePairs = function (pair1, pair2) {\r\n      return 0;\r\n   }\r\n   b2DynamicTreeBroadPhase.__implements = {};\r\n   b2DynamicTreeBroadPhase.__implements[IBroadPhase] = true;\r\n   b2DynamicTreeNode.b2DynamicTreeNode = function () {\r\n      this.aabb = new b2AABB();\r\n   };\r\n   b2DynamicTreeNode.prototype.IsLeaf = function () {\r\n      return this.child1 == null;\r\n   }\r\n   b2DynamicTreePair.b2DynamicTreePair = function () {};\r\n   b2Manifold.b2Manifold = function () {\r\n      this.m_pointCount = 0;\r\n   };\r\n   b2Manifold.prototype.b2Manifold = function () {\r\n      this.m_points = new Vector(b2Settings.b2_maxManifoldPoints);\r\n      for (var i = 0; i < b2Settings.b2_maxManifoldPoints; i++) {\r\n         this.m_points[i] = new b2ManifoldPoint();\r\n      }\r\n      this.m_localPlaneNormal = new b2Vec2();\r\n      this.m_localPoint = new b2Vec2();\r\n   }\r\n   b2Manifold.prototype.Reset = function () {\r\n      for (var i = 0; i < b2Settings.b2_maxManifoldPoints; i++) {\r\n         ((this.m_points[i] instanceof b2ManifoldPoint ? this.m_points[i] : null)).Reset();\r\n      }\r\n      this.m_localPlaneNormal.SetZero();\r\n      this.m_localPoint.SetZero();\r\n      this.m_type = 0;\r\n      this.m_pointCount = 0;\r\n   }\r\n   b2Manifold.prototype.Set = function (m) {\r\n      this.m_pointCount = m.m_pointCount;\r\n      for (var i = 0; i < b2Settings.b2_maxManifoldPoints; i++) {\r\n         ((this.m_points[i] instanceof b2ManifoldPoint ? this.m_points[i] : null)).Set(m.m_points[i]);\r\n      }\r\n      this.m_localPlaneNormal.SetV(m.m_localPlaneNormal);\r\n      this.m_localPoint.SetV(m.m_localPoint);\r\n      this.m_type = m.m_type;\r\n   }\r\n   b2Manifold.prototype.Copy = function () {\r\n      var copy = new b2Manifold();\r\n      copy.Set(this);\r\n      return copy;\r\n   }\r\n   Box2D.postDefs.push(function () {\r\n      Box2D.Collision.b2Manifold.e_circles = 0x0001;\r\n      Box2D.Collision.b2Manifold.e_faceA = 0x0002;\r\n      Box2D.Collision.b2Manifold.e_faceB = 0x0004;\r\n   });\r\n   b2ManifoldPoint.b2ManifoldPoint = function () {\r\n      this.m_localPoint = new b2Vec2();\r\n      this.m_id = new b2ContactID();\r\n   };\r\n   b2ManifoldPoint.prototype.b2ManifoldPoint = function () {\r\n      this.Reset();\r\n   }\r\n   b2ManifoldPoint.prototype.Reset = function () {\r\n      this.m_localPoint.SetZero();\r\n      this.m_normalImpulse = 0.0;\r\n      this.m_tangentImpulse = 0.0;\r\n      this.m_id.key = 0;\r\n   }\r\n   b2ManifoldPoint.prototype.Set = function (m) {\r\n      this.m_localPoint.SetV(m.m_localPoint);\r\n      this.m_normalImpulse = m.m_normalImpulse;\r\n      this.m_tangentImpulse = m.m_tangentImpulse;\r\n      this.m_id.Set(m.m_id);\r\n   }\r\n   b2Point.b2Point = function () {\r\n      this.p = new b2Vec2();\r\n   };\r\n   b2Point.prototype.Support = function (xf, vX, vY) {\r\n      if (vX === undefined) vX = 0;\r\n      if (vY === undefined) vY = 0;\r\n      return this.p;\r\n   }\r\n   b2Point.prototype.GetFirstVertex = function (xf) {\r\n      return this.p;\r\n   }\r\n   b2RayCastInput.b2RayCastInput = function () {\r\n      this.p1 = new b2Vec2();\r\n      this.p2 = new b2Vec2();\r\n   };\r\n   b2RayCastInput.prototype.b2RayCastInput = function (p1, p2, maxFraction) {\r\n      if (p1 === undefined) p1 = null;\r\n      if (p2 === undefined) p2 = null;\r\n      if (maxFraction === undefined) maxFraction = 1;\r\n      if (p1) this.p1.SetV(p1);\r\n      if (p2) this.p2.SetV(p2);\r\n      this.maxFraction = maxFraction;\r\n   }\r\n   b2RayCastOutput.b2RayCastOutput = function () {\r\n      this.normal = new b2Vec2();\r\n   };\r\n   b2Segment.b2Segment = function () {\r\n      this.p1 = new b2Vec2();\r\n      this.p2 = new b2Vec2();\r\n   };\r\n   b2Segment.prototype.TestSegment = function (lambda, normal, segment, maxLambda) {\r\n      if (maxLambda === undefined) maxLambda = 0;\r\n      var s = segment.p1;\r\n      var rX = segment.p2.x - s.x;\r\n      var rY = segment.p2.y - s.y;\r\n      var dX = this.p2.x - this.p1.x;\r\n      var dY = this.p2.y - this.p1.y;\r\n      var nX = dY;\r\n      var nY = (-dX);\r\n      var k_slop = 100.0 * Number.MIN_VALUE;\r\n      var denom = (-(rX * nX + rY * nY));\r\n      if (denom > k_slop) {\r\n         var bX = s.x - this.p1.x;\r\n         var bY = s.y - this.p1.y;\r\n         var a = (bX * nX + bY * nY);\r\n         if (0.0 <= a && a <= maxLambda * denom) {\r\n            var mu2 = (-rX * bY) + rY * bX;\r\n            if ((-k_slop * denom) <= mu2 && mu2 <= denom * (1.0 + k_slop)) {\r\n               a /= denom;\r\n               var nLen = Math.sqrt(nX * nX + nY * nY);\r\n               nX /= nLen;\r\n               nY /= nLen;\r\n               lambda[0] = a;\r\n               normal.Set(nX, nY);\r\n               return true;\r\n            }\r\n         }\r\n      }\r\n      return false;\r\n   }\r\n   b2Segment.prototype.Extend = function (aabb) {\r\n      this.ExtendForward(aabb);\r\n      this.ExtendBackward(aabb);\r\n   }\r\n   b2Segment.prototype.ExtendForward = function (aabb) {\r\n      var dX = this.p2.x - this.p1.x;\r\n      var dY = this.p2.y - this.p1.y;\r\n      var lambda = Math.min(dX > 0 ? (aabb.upperBound.x - this.p1.x) / dX : dX < 0 ? (aabb.lowerBound.x - this.p1.x) / dX : Number.POSITIVE_INFINITY,\r\n      dY > 0 ? (aabb.upperBound.y - this.p1.y) / dY : dY < 0 ? (aabb.lowerBound.y - this.p1.y) / dY : Number.POSITIVE_INFINITY);\r\n      this.p2.x = this.p1.x + dX * lambda;\r\n      this.p2.y = this.p1.y + dY * lambda;\r\n   }\r\n   b2Segment.prototype.ExtendBackward = function (aabb) {\r\n      var dX = (-this.p2.x) + this.p1.x;\r\n      var dY = (-this.p2.y) + this.p1.y;\r\n      var lambda = Math.min(dX > 0 ? (aabb.upperBound.x - this.p2.x) / dX : dX < 0 ? (aabb.lowerBound.x - this.p2.x) / dX : Number.POSITIVE_INFINITY,\r\n      dY > 0 ? (aabb.upperBound.y - this.p2.y) / dY : dY < 0 ? (aabb.lowerBound.y - this.p2.y) / dY : Number.POSITIVE_INFINITY);\r\n      this.p1.x = this.p2.x + dX * lambda;\r\n      this.p1.y = this.p2.y + dY * lambda;\r\n   }\r\n   b2SeparationFunction.b2SeparationFunction = function () {\r\n      this.m_localPoint = new b2Vec2();\r\n      this.m_axis = new b2Vec2();\r\n   };\r\n   b2SeparationFunction.prototype.Initialize = function (cache, proxyA, transformA, proxyB, transformB) {\r\n      this.m_proxyA = proxyA;\r\n      this.m_proxyB = proxyB;\r\n      var count = parseInt(cache.count);\r\n      b2Settings.b2Assert(0 < count && count < 3);\r\n      var localPointA;\r\n      var localPointA1;\r\n      var localPointA2;\r\n      var localPointB;\r\n      var localPointB1;\r\n      var localPointB2;\r\n      var pointAX = 0;\r\n      var pointAY = 0;\r\n      var pointBX = 0;\r\n      var pointBY = 0;\r\n      var normalX = 0;\r\n      var normalY = 0;\r\n      var tMat;\r\n      var tVec;\r\n      var s = 0;\r\n      var sgn = 0;\r\n      if (count == 1) {\r\n         this.m_type = b2SeparationFunction.e_points;\r\n         localPointA = this.m_proxyA.GetVertex(cache.indexA[0]);\r\n         localPointB = this.m_proxyB.GetVertex(cache.indexB[0]);\r\n         tVec = localPointA;\r\n         tMat = transformA.R;\r\n         pointAX = transformA.position.x + (tMat.col1.x * tVec.x + tMat.col2.x * tVec.y);\r\n         pointAY = transformA.position.y + (tMat.col1.y * tVec.x + tMat.col2.y * tVec.y);\r\n         tVec = localPointB;\r\n         tMat = transformB.R;\r\n         pointBX = transformB.position.x + (tMat.col1.x * tVec.x + tMat.col2.x * tVec.y);\r\n         pointBY = transformB.position.y + (tMat.col1.y * tVec.x + tMat.col2.y * tVec.y);\r\n         this.m_axis.x = pointBX - pointAX;\r\n         this.m_axis.y = pointBY - pointAY;\r\n         this.m_axis.Normalize();\r\n      }\r\n      else if (cache.indexB[0] == cache.indexB[1]) {\r\n         this.m_type = b2SeparationFunction.e_faceA;\r\n         localPointA1 = this.m_proxyA.GetVertex(cache.indexA[0]);\r\n         localPointA2 = this.m_proxyA.GetVertex(cache.indexA[1]);\r\n         localPointB = this.m_proxyB.GetVertex(cache.indexB[0]);\r\n         this.m_localPoint.x = 0.5 * (localPointA1.x + localPointA2.x);\r\n         this.m_localPoint.y = 0.5 * (localPointA1.y + localPointA2.y);\r\n         this.m_axis = b2Math.CrossVF(b2Math.SubtractVV(localPointA2, localPointA1), 1.0);\r\n         this.m_axis.Normalize();\r\n         tVec = this.m_axis;\r\n         tMat = transformA.R;\r\n         normalX = tMat.col1.x * tVec.x + tMat.col2.x * tVec.y;\r\n         normalY = tMat.col1.y * tVec.x + tMat.col2.y * tVec.y;\r\n         tVec = this.m_localPoint;\r\n         tMat = transformA.R;\r\n         pointAX = transformA.position.x + (tMat.col1.x * tVec.x + tMat.col2.x * tVec.y);\r\n         pointAY = transformA.position.y + (tMat.col1.y * tVec.x + tMat.col2.y * tVec.y);\r\n         tVec = localPointB;\r\n         tMat = transformB.R;\r\n         pointBX = transformB.position.x + (tMat.col1.x * tVec.x + tMat.col2.x * tVec.y);\r\n         pointBY = transformB.position.y + (tMat.col1.y * tVec.x + tMat.col2.y * tVec.y);\r\n         s = (pointBX - pointAX) * normalX + (pointBY - pointAY) * normalY;\r\n         if (s < 0.0) {\r\n            this.m_axis.NegativeSelf();\r\n         }\r\n      }\r\n      else if (cache.indexA[0] == cache.indexA[0]) {\r\n         this.m_type = b2SeparationFunction.e_faceB;\r\n         localPointB1 = this.m_proxyB.GetVertex(cache.indexB[0]);\r\n         localPointB2 = this.m_proxyB.GetVertex(cache.indexB[1]);\r\n         localPointA = this.m_proxyA.GetVertex(cache.indexA[0]);\r\n         this.m_localPoint.x = 0.5 * (localPointB1.x + localPointB2.x);\r\n         this.m_localPoint.y = 0.5 * (localPointB1.y + localPointB2.y);\r\n         this.m_axis = b2Math.CrossVF(b2Math.SubtractVV(localPointB2, localPointB1), 1.0);\r\n         this.m_axis.Normalize();\r\n         tVec = this.m_axis;\r\n         tMat = transformB.R;\r\n         normalX = tMat.col1.x * tVec.x + tMat.col2.x * tVec.y;\r\n         normalY = tMat.col1.y * tVec.x + tMat.col2.y * tVec.y;\r\n         tVec = this.m_localPoint;\r\n         tMat = transformB.R;\r\n         pointBX = transformB.position.x + (tMat.col1.x * tVec.x + tMat.col2.x * tVec.y);\r\n         pointBY = transformB.position.y + (tMat.col1.y * tVec.x + tMat.col2.y * tVec.y);\r\n         tVec = localPointA;\r\n         tMat = transformA.R;\r\n         pointAX = transformA.position.x + (tMat.col1.x * tVec.x + tMat.col2.x * tVec.y);\r\n         pointAY = transformA.position.y + (tMat.col1.y * tVec.x + tMat.col2.y * tVec.y);\r\n         s = (pointAX - pointBX) * normalX + (pointAY - pointBY) * normalY;\r\n         if (s < 0.0) {\r\n            this.m_axis.NegativeSelf();\r\n         }\r\n      }\r\n      else {\r\n         localPointA1 = this.m_proxyA.GetVertex(cache.indexA[0]);\r\n         localPointA2 = this.m_proxyA.GetVertex(cache.indexA[1]);\r\n         localPointB1 = this.m_proxyB.GetVertex(cache.indexB[0]);\r\n         localPointB2 = this.m_proxyB.GetVertex(cache.indexB[1]);\r\n         var pA = b2Math.MulX(transformA, localPointA);\r\n         var dA = b2Math.MulMV(transformA.R, b2Math.SubtractVV(localPointA2, localPointA1));\r\n         var pB = b2Math.MulX(transformB, localPointB);\r\n         var dB = b2Math.MulMV(transformB.R, b2Math.SubtractVV(localPointB2, localPointB1));\r\n         var a = dA.x * dA.x + dA.y * dA.y;\r\n         var e = dB.x * dB.x + dB.y * dB.y;\r\n         var r = b2Math.SubtractVV(dB, dA);\r\n         var c = dA.x * r.x + dA.y * r.y;\r\n         var f = dB.x * r.x + dB.y * r.y;\r\n         var b = dA.x * dB.x + dA.y * dB.y;\r\n         var denom = a * e - b * b;\r\n         s = 0.0;\r\n         if (denom != 0.0) {\r\n            s = b2Math.Clamp((b * f - c * e) / denom, 0.0, 1.0);\r\n         }\r\n         var t = (b * s + f) / e;\r\n         if (t < 0.0) {\r\n            t = 0.0;\r\n            s = b2Math.Clamp((b - c) / a, 0.0, 1.0);\r\n         }\r\n         localPointA = new b2Vec2();\r\n         localPointA.x = localPointA1.x + s * (localPointA2.x - localPointA1.x);\r\n         localPointA.y = localPointA1.y + s * (localPointA2.y - localPointA1.y);\r\n         localPointB = new b2Vec2();\r\n         localPointB.x = localPointB1.x + s * (localPointB2.x - localPointB1.x);\r\n         localPointB.y = localPointB1.y + s * (localPointB2.y - localPointB1.y);\r\n         if (s == 0.0 || s == 1.0) {\r\n            this.m_type = b2SeparationFunction.e_faceB;\r\n            this.m_axis = b2Math.CrossVF(b2Math.SubtractVV(localPointB2, localPointB1), 1.0);\r\n            this.m_axis.Normalize();\r\n            this.m_localPoint = localPointB;\r\n            tVec = this.m_axis;\r\n            tMat = transformB.R;\r\n            normalX = tMat.col1.x * tVec.x + tMat.col2.x * tVec.y;\r\n            normalY = tMat.col1.y * tVec.x + tMat.col2.y * tVec.y;\r\n            tVec = this.m_localPoint;\r\n            tMat = transformB.R;\r\n            pointBX = transformB.position.x + (tMat.col1.x * tVec.x + tMat.col2.x * tVec.y);\r\n            pointBY = transformB.position.y + (tMat.col1.y * tVec.x + tMat.col2.y * tVec.y);\r\n            tVec = localPointA;\r\n            tMat = transformA.R;\r\n            pointAX = transformA.position.x + (tMat.col1.x * tVec.x + tMat.col2.x * tVec.y);\r\n            pointAY = transformA.position.y + (tMat.col1.y * tVec.x + tMat.col2.y * tVec.y);\r\n            sgn = (pointAX - pointBX) * normalX + (pointAY - pointBY) * normalY;\r\n            if (s < 0.0) {\r\n               this.m_axis.NegativeSelf();\r\n            }\r\n         }\r\n         else {\r\n            this.m_type = b2SeparationFunction.e_faceA;\r\n            this.m_axis = b2Math.CrossVF(b2Math.SubtractVV(localPointA2, localPointA1), 1.0);\r\n            this.m_localPoint = localPointA;\r\n            tVec = this.m_axis;\r\n            tMat = transformA.R;\r\n            normalX = tMat.col1.x * tVec.x + tMat.col2.x * tVec.y;\r\n            normalY = tMat.col1.y * tVec.x + tMat.col2.y * tVec.y;\r\n            tVec = this.m_localPoint;\r\n            tMat = transformA.R;\r\n            pointAX = transformA.position.x + (tMat.col1.x * tVec.x + tMat.col2.x * tVec.y);\r\n            pointAY = transformA.position.y + (tMat.col1.y * tVec.x + tMat.col2.y * tVec.y);\r\n            tVec = localPointB;\r\n            tMat = transformB.R;\r\n            pointBX = transformB.position.x + (tMat.col1.x * tVec.x + tMat.col2.x * tVec.y);\r\n            pointBY = transformB.position.y + (tMat.col1.y * tVec.x + tMat.col2.y * tVec.y);\r\n            sgn = (pointBX - pointAX) * normalX + (pointBY - pointAY) * normalY;\r\n            if (s < 0.0) {\r\n               this.m_axis.NegativeSelf();\r\n            }\r\n         }\r\n      }\r\n   }\r\n   b2SeparationFunction.prototype.Evaluate = function (transformA, transformB) {\r\n      var axisA;\r\n      var axisB;\r\n      var localPointA;\r\n      var localPointB;\r\n      var pointA;\r\n      var pointB;\r\n      var seperation = 0;\r\n      var normal;\r\n      switch (this.m_type) {\r\n      case b2SeparationFunction.e_points:\r\n         {\r\n            axisA = b2Math.MulTMV(transformA.R, this.m_axis);\r\n            axisB = b2Math.MulTMV(transformB.R, this.m_axis.GetNegative());\r\n            localPointA = this.m_proxyA.GetSupportVertex(axisA);\r\n            localPointB = this.m_proxyB.GetSupportVertex(axisB);\r\n            pointA = b2Math.MulX(transformA, localPointA);\r\n            pointB = b2Math.MulX(transformB, localPointB);\r\n            seperation = (pointB.x - pointA.x) * this.m_axis.x + (pointB.y - pointA.y) * this.m_axis.y;\r\n            return seperation;\r\n         }\r\n      case b2SeparationFunction.e_faceA:\r\n         {\r\n            normal = b2Math.MulMV(transformA.R, this.m_axis);\r\n            pointA = b2Math.MulX(transformA, this.m_localPoint);\r\n            axisB = b2Math.MulTMV(transformB.R, normal.GetNegative());\r\n            localPointB = this.m_proxyB.GetSupportVertex(axisB);\r\n            pointB = b2Math.MulX(transformB, localPointB);\r\n            seperation = (pointB.x - pointA.x) * normal.x + (pointB.y - pointA.y) * normal.y;\r\n            return seperation;\r\n         }\r\n      case b2SeparationFunction.e_faceB:\r\n         {\r\n            normal = b2Math.MulMV(transformB.R, this.m_axis);\r\n            pointB = b2Math.MulX(transformB, this.m_localPoint);\r\n            axisA = b2Math.MulTMV(transformA.R, normal.GetNegative());\r\n            localPointA = this.m_proxyA.GetSupportVertex(axisA);\r\n            pointA = b2Math.MulX(transformA, localPointA);\r\n            seperation = (pointA.x - pointB.x) * normal.x + (pointA.y - pointB.y) * normal.y;\r\n            return seperation;\r\n         }\r\n      default:\r\n         b2Settings.b2Assert(false);\r\n         return 0.0;\r\n      }\r\n   }\r\n   Box2D.postDefs.push(function () {\r\n      Box2D.Collision.b2SeparationFunction.e_points = 0x01;\r\n      Box2D.Collision.b2SeparationFunction.e_faceA = 0x02;\r\n      Box2D.Collision.b2SeparationFunction.e_faceB = 0x04;\r\n   });\r\n   b2Simplex.b2Simplex = function () {\r\n      this.m_v1 = new b2SimplexVertex();\r\n      this.m_v2 = new b2SimplexVertex();\r\n      this.m_v3 = new b2SimplexVertex();\r\n      this.m_vertices = new Vector(3);\r\n   };\r\n   b2Simplex.prototype.b2Simplex = function () {\r\n      this.m_vertices[0] = this.m_v1;\r\n      this.m_vertices[1] = this.m_v2;\r\n      this.m_vertices[2] = this.m_v3;\r\n   }\r\n   b2Simplex.prototype.ReadCache = function (cache, proxyA, transformA, proxyB, transformB) {\r\n      b2Settings.b2Assert(0 <= cache.count && cache.count <= 3);\r\n      var wALocal;\r\n      var wBLocal;\r\n      this.m_count = cache.count;\r\n      var vertices = this.m_vertices;\r\n      for (var i = 0; i < this.m_count; i++) {\r\n         var v = vertices[i];\r\n         v.indexA = cache.indexA[i];\r\n         v.indexB = cache.indexB[i];\r\n         wALocal = proxyA.GetVertex(v.indexA);\r\n         wBLocal = proxyB.GetVertex(v.indexB);\r\n         v.wA = b2Math.MulX(transformA, wALocal);\r\n         v.wB = b2Math.MulX(transformB, wBLocal);\r\n         v.w = b2Math.SubtractVV(v.wB, v.wA);\r\n         v.a = 0;\r\n      }\r\n      if (this.m_count > 1) {\r\n         var metric1 = cache.metric;\r\n         var metric2 = this.GetMetric();\r\n         if (metric2 < .5 * metric1 || 2.0 * metric1 < metric2 || metric2 < Number.MIN_VALUE) {\r\n            this.m_count = 0;\r\n         }\r\n      }\r\n      if (this.m_count == 0) {\r\n         v = vertices[0];\r\n         v.indexA = 0;\r\n         v.indexB = 0;\r\n         wALocal = proxyA.GetVertex(0);\r\n         wBLocal = proxyB.GetVertex(0);\r\n         v.wA = b2Math.MulX(transformA, wALocal);\r\n         v.wB = b2Math.MulX(transformB, wBLocal);\r\n         v.w = b2Math.SubtractVV(v.wB, v.wA);\r\n         this.m_count = 1;\r\n      }\r\n   }\r\n   b2Simplex.prototype.WriteCache = function (cache) {\r\n      cache.metric = this.GetMetric();\r\n      cache.count = Box2D.parseUInt(this.m_count);\r\n      var vertices = this.m_vertices;\r\n      for (var i = 0; i < this.m_count; i++) {\r\n         cache.indexA[i] = Box2D.parseUInt(vertices[i].indexA);\r\n         cache.indexB[i] = Box2D.parseUInt(vertices[i].indexB);\r\n      }\r\n   }\r\n   b2Simplex.prototype.GetSearchDirection = function () {\r\n      switch (this.m_count) {\r\n      case 1:\r\n         return this.m_v1.w.GetNegative();\r\n      case 2:\r\n         {\r\n            var e12 = b2Math.SubtractVV(this.m_v2.w, this.m_v1.w);\r\n            var sgn = b2Math.CrossVV(e12, this.m_v1.w.GetNegative());\r\n            if (sgn > 0.0) {\r\n               return b2Math.CrossFV(1.0, e12);\r\n            }\r\n            else {\r\n               return b2Math.CrossVF(e12, 1.0);\r\n            }\r\n         }\r\n      default:\r\n         b2Settings.b2Assert(false);\r\n         return new b2Vec2();\r\n      }\r\n   }\r\n   b2Simplex.prototype.GetClosestPoint = function () {\r\n      switch (this.m_count) {\r\n      case 0:\r\n         b2Settings.b2Assert(false);\r\n         return new b2Vec2();\r\n      case 1:\r\n         return this.m_v1.w;\r\n      case 2:\r\n         return new b2Vec2(this.m_v1.a * this.m_v1.w.x + this.m_v2.a * this.m_v2.w.x, this.m_v1.a * this.m_v1.w.y + this.m_v2.a * this.m_v2.w.y);\r\n      default:\r\n         b2Settings.b2Assert(false);\r\n         return new b2Vec2();\r\n      }\r\n   }\r\n   b2Simplex.prototype.GetWitnessPoints = function (pA, pB) {\r\n      switch (this.m_count) {\r\n      case 0:\r\n         b2Settings.b2Assert(false);\r\n         break;\r\n      case 1:\r\n         pA.SetV(this.m_v1.wA);\r\n         pB.SetV(this.m_v1.wB);\r\n         break;\r\n      case 2:\r\n         pA.x = this.m_v1.a * this.m_v1.wA.x + this.m_v2.a * this.m_v2.wA.x;\r\n         pA.y = this.m_v1.a * this.m_v1.wA.y + this.m_v2.a * this.m_v2.wA.y;\r\n         pB.x = this.m_v1.a * this.m_v1.wB.x + this.m_v2.a * this.m_v2.wB.x;\r\n         pB.y = this.m_v1.a * this.m_v1.wB.y + this.m_v2.a * this.m_v2.wB.y;\r\n         break;\r\n      case 3:\r\n         pB.x = pA.x = this.m_v1.a * this.m_v1.wA.x + this.m_v2.a * this.m_v2.wA.x + this.m_v3.a * this.m_v3.wA.x;\r\n         pB.y = pA.y = this.m_v1.a * this.m_v1.wA.y + this.m_v2.a * this.m_v2.wA.y + this.m_v3.a * this.m_v3.wA.y;\r\n         break;\r\n      default:\r\n         b2Settings.b2Assert(false);\r\n         break;\r\n      }\r\n   }\r\n   b2Simplex.prototype.GetMetric = function () {\r\n      switch (this.m_count) {\r\n      case 0:\r\n         b2Settings.b2Assert(false);\r\n         return 0.0;\r\n      case 1:\r\n         return 0.0;\r\n      case 2:\r\n         return b2Math.SubtractVV(this.m_v1.w, this.m_v2.w).Length();\r\n      case 3:\r\n         return b2Math.CrossVV(b2Math.SubtractVV(this.m_v2.w, this.m_v1.w), b2Math.SubtractVV(this.m_v3.w, this.m_v1.w));\r\n      default:\r\n         b2Settings.b2Assert(false);\r\n         return 0.0;\r\n      }\r\n   }\r\n   b2Simplex.prototype.Solve2 = function () {\r\n      var w1 = this.m_v1.w;\r\n      var w2 = this.m_v2.w;\r\n      var e12 = b2Math.SubtractVV(w2, w1);\r\n      var d12_2 = (-(w1.x * e12.x + w1.y * e12.y));\r\n      if (d12_2 <= 0.0) {\r\n         this.m_v1.a = 1.0;\r\n         this.m_count = 1;\r\n         return;\r\n      }\r\n      var d12_1 = (w2.x * e12.x + w2.y * e12.y);\r\n      if (d12_1 <= 0.0) {\r\n         this.m_v2.a = 1.0;\r\n         this.m_count = 1;\r\n         this.m_v1.Set(this.m_v2);\r\n         return;\r\n      }\r\n      var inv_d12 = 1.0 / (d12_1 + d12_2);\r\n      this.m_v1.a = d12_1 * inv_d12;\r\n      this.m_v2.a = d12_2 * inv_d12;\r\n      this.m_count = 2;\r\n   }\r\n   b2Simplex.prototype.Solve3 = function () {\r\n      var w1 = this.m_v1.w;\r\n      var w2 = this.m_v2.w;\r\n      var w3 = this.m_v3.w;\r\n      var e12 = b2Math.SubtractVV(w2, w1);\r\n      var w1e12 = b2Math.Dot(w1, e12);\r\n      var w2e12 = b2Math.Dot(w2, e12);\r\n      var d12_1 = w2e12;\r\n      var d12_2 = (-w1e12);\r\n      var e13 = b2Math.SubtractVV(w3, w1);\r\n      var w1e13 = b2Math.Dot(w1, e13);\r\n      var w3e13 = b2Math.Dot(w3, e13);\r\n      var d13_1 = w3e13;\r\n      var d13_2 = (-w1e13);\r\n      var e23 = b2Math.SubtractVV(w3, w2);\r\n      var w2e23 = b2Math.Dot(w2, e23);\r\n      var w3e23 = b2Math.Dot(w3, e23);\r\n      var d23_1 = w3e23;\r\n      var d23_2 = (-w2e23);\r\n      var n123 = b2Math.CrossVV(e12, e13);\r\n      var d123_1 = n123 * b2Math.CrossVV(w2, w3);\r\n      var d123_2 = n123 * b2Math.CrossVV(w3, w1);\r\n      var d123_3 = n123 * b2Math.CrossVV(w1, w2);\r\n      if (d12_2 <= 0.0 && d13_2 <= 0.0) {\r\n         this.m_v1.a = 1.0;\r\n         this.m_count = 1;\r\n         return;\r\n      }\r\n      if (d12_1 > 0.0 && d12_2 > 0.0 && d123_3 <= 0.0) {\r\n         var inv_d12 = 1.0 / (d12_1 + d12_2);\r\n         this.m_v1.a = d12_1 * inv_d12;\r\n         this.m_v2.a = d12_2 * inv_d12;\r\n         this.m_count = 2;\r\n         return;\r\n      }\r\n      if (d13_1 > 0.0 && d13_2 > 0.0 && d123_2 <= 0.0) {\r\n         var inv_d13 = 1.0 / (d13_1 + d13_2);\r\n         this.m_v1.a = d13_1 * inv_d13;\r\n         this.m_v3.a = d13_2 * inv_d13;\r\n         this.m_count = 2;\r\n         this.m_v2.Set(this.m_v3);\r\n         return;\r\n      }\r\n      if (d12_1 <= 0.0 && d23_2 <= 0.0) {\r\n         this.m_v2.a = 1.0;\r\n         this.m_count = 1;\r\n         this.m_v1.Set(this.m_v2);\r\n         return;\r\n      }\r\n      if (d13_1 <= 0.0 && d23_1 <= 0.0) {\r\n         this.m_v3.a = 1.0;\r\n         this.m_count = 1;\r\n         this.m_v1.Set(this.m_v3);\r\n         return;\r\n      }\r\n      if (d23_1 > 0.0 && d23_2 > 0.0 && d123_1 <= 0.0) {\r\n         var inv_d23 = 1.0 / (d23_1 + d23_2);\r\n         this.m_v2.a = d23_1 * inv_d23;\r\n         this.m_v3.a = d23_2 * inv_d23;\r\n         this.m_count = 2;\r\n         this.m_v1.Set(this.m_v3);\r\n         return;\r\n      }\r\n      var inv_d123 = 1.0 / (d123_1 + d123_2 + d123_3);\r\n      this.m_v1.a = d123_1 * inv_d123;\r\n      this.m_v2.a = d123_2 * inv_d123;\r\n      this.m_v3.a = d123_3 * inv_d123;\r\n      this.m_count = 3;\r\n   }\r\n   b2SimplexCache.b2SimplexCache = function () {\r\n      this.indexA = new Vector_a2j_Number(3);\r\n      this.indexB = new Vector_a2j_Number(3);\r\n   };\r\n   b2SimplexVertex.b2SimplexVertex = function () {};\r\n   b2SimplexVertex.prototype.Set = function (other) {\r\n      this.wA.SetV(other.wA);\r\n      this.wB.SetV(other.wB);\r\n      this.w.SetV(other.w);\r\n      this.a = other.a;\r\n      this.indexA = other.indexA;\r\n      this.indexB = other.indexB;\r\n   }\r\n   b2TimeOfImpact.b2TimeOfImpact = function () {};\r\n   b2TimeOfImpact.TimeOfImpact = function (input) {\r\n      ++b2TimeOfImpact.b2_toiCalls;\r\n      var proxyA = input.proxyA;\r\n      var proxyB = input.proxyB;\r\n      var sweepA = input.sweepA;\r\n      var sweepB = input.sweepB;\r\n      b2Settings.b2Assert(sweepA.t0 == sweepB.t0);\r\n      b2Settings.b2Assert(1.0 - sweepA.t0 > Number.MIN_VALUE);\r\n      var radius = proxyA.m_radius + proxyB.m_radius;\r\n      var tolerance = input.tolerance;\r\n      var alpha = 0.0;\r\n      var k_maxIterations = 1000;\r\n      var iter = 0;\r\n      var target = 0.0;\r\n      b2TimeOfImpact.s_cache.count = 0;\r\n      b2TimeOfImpact.s_distanceInput.useRadii = false;\r\n      for (;;) {\r\n         sweepA.GetTransform(b2TimeOfImpact.s_xfA, alpha);\r\n         sweepB.GetTransform(b2TimeOfImpact.s_xfB, alpha);\r\n         b2TimeOfImpact.s_distanceInput.proxyA = proxyA;\r\n         b2TimeOfImpact.s_distanceInput.proxyB = proxyB;\r\n         b2TimeOfImpact.s_distanceInput.transformA = b2TimeOfImpact.s_xfA;\r\n         b2TimeOfImpact.s_distanceInput.transformB = b2TimeOfImpact.s_xfB;\r\n         b2Distance.Distance(b2TimeOfImpact.s_distanceOutput, b2TimeOfImpact.s_cache, b2TimeOfImpact.s_distanceInput);\r\n         if (b2TimeOfImpact.s_distanceOutput.distance <= 0.0) {\r\n            alpha = 1.0;\r\n            break;\r\n         }\r\n         b2TimeOfImpact.s_fcn.Initialize(b2TimeOfImpact.s_cache, proxyA, b2TimeOfImpact.s_xfA, proxyB, b2TimeOfImpact.s_xfB);\r\n         var separation = b2TimeOfImpact.s_fcn.Evaluate(b2TimeOfImpact.s_xfA, b2TimeOfImpact.s_xfB);\r\n         if (separation <= 0.0) {\r\n            alpha = 1.0;\r\n            break;\r\n         }\r\n         if (iter == 0) {\r\n            if (separation > radius) {\r\n               target = b2Math.Max(radius - tolerance, 0.75 * radius);\r\n            }\r\n            else {\r\n               target = b2Math.Max(separation - tolerance, 0.02 * radius);\r\n            }\r\n         }\r\n         if (separation - target < 0.5 * tolerance) {\r\n            if (iter == 0) {\r\n               alpha = 1.0;\r\n               break;\r\n            }\r\n            break;\r\n         }\r\n         var newAlpha = alpha; {\r\n            var x1 = alpha;\r\n            var x2 = 1.0;\r\n            var f1 = separation;\r\n            sweepA.GetTransform(b2TimeOfImpact.s_xfA, x2);\r\n            sweepB.GetTransform(b2TimeOfImpact.s_xfB, x2);\r\n            var f2 = b2TimeOfImpact.s_fcn.Evaluate(b2TimeOfImpact.s_xfA, b2TimeOfImpact.s_xfB);\r\n            if (f2 >= target) {\r\n               alpha = 1.0;\r\n               break;\r\n            }\r\n            var rootIterCount = 0;\r\n            for (;;) {\r\n               var x = 0;\r\n               if (rootIterCount & 1) {\r\n                  x = x1 + (target - f1) * (x2 - x1) / (f2 - f1);\r\n               }\r\n               else {\r\n                  x = 0.5 * (x1 + x2);\r\n               }\r\n               sweepA.GetTransform(b2TimeOfImpact.s_xfA, x);\r\n               sweepB.GetTransform(b2TimeOfImpact.s_xfB, x);\r\n               var f = b2TimeOfImpact.s_fcn.Evaluate(b2TimeOfImpact.s_xfA, b2TimeOfImpact.s_xfB);\r\n               if (b2Math.Abs(f - target) < 0.025 * tolerance) {\r\n                  newAlpha = x;\r\n                  break;\r\n               }\r\n               if (f > target) {\r\n                  x1 = x;\r\n                  f1 = f;\r\n               }\r\n               else {\r\n                  x2 = x;\r\n                  f2 = f;\r\n               }++rootIterCount;\r\n               ++b2TimeOfImpact.b2_toiRootIters;\r\n               if (rootIterCount == 50) {\r\n                  break;\r\n               }\r\n            }\r\n            b2TimeOfImpact.b2_toiMaxRootIters = b2Math.Max(b2TimeOfImpact.b2_toiMaxRootIters, rootIterCount);\r\n         }\r\n         if (newAlpha < (1.0 + 100.0 * Number.MIN_VALUE) * alpha) {\r\n            break;\r\n         }\r\n         alpha = newAlpha;\r\n         iter++;\r\n         ++b2TimeOfImpact.b2_toiIters;\r\n         if (iter == k_maxIterations) {\r\n            break;\r\n         }\r\n      }\r\n      b2TimeOfImpact.b2_toiMaxIters = b2Math.Max(b2TimeOfImpact.b2_toiMaxIters, iter);\r\n      return alpha;\r\n   }\r\n   Box2D.postDefs.push(function () {\r\n      Box2D.Collision.b2TimeOfImpact.b2_toiCalls = 0;\r\n      Box2D.Collision.b2TimeOfImpact.b2_toiIters = 0;\r\n      Box2D.Collision.b2TimeOfImpact.b2_toiMaxIters = 0;\r\n      Box2D.Collision.b2TimeOfImpact.b2_toiRootIters = 0;\r\n      Box2D.Collision.b2TimeOfImpact.b2_toiMaxRootIters = 0;\r\n      Box2D.Collision.b2TimeOfImpact.s_cache = new b2SimplexCache();\r\n      Box2D.Collision.b2TimeOfImpact.s_distanceInput = new b2DistanceInput();\r\n      Box2D.Collision.b2TimeOfImpact.s_xfA = new b2Transform();\r\n      Box2D.Collision.b2TimeOfImpact.s_xfB = new b2Transform();\r\n      Box2D.Collision.b2TimeOfImpact.s_fcn = new b2SeparationFunction();\r\n      Box2D.Collision.b2TimeOfImpact.s_distanceOutput = new b2DistanceOutput();\r\n   });\r\n   b2TOIInput.b2TOIInput = function () {\r\n      this.proxyA = new b2DistanceProxy();\r\n      this.proxyB = new b2DistanceProxy();\r\n      this.sweepA = new b2Sweep();\r\n      this.sweepB = new b2Sweep();\r\n   };\r\n   b2WorldManifold.b2WorldManifold = function () {\r\n      this.m_normal = new b2Vec2();\r\n   };\r\n   b2WorldManifold.prototype.b2WorldManifold = function () {\r\n      this.m_points = new Vector(b2Settings.b2_maxManifoldPoints);\r\n      for (var i = 0; i < b2Settings.b2_maxManifoldPoints; i++) {\r\n         this.m_points[i] = new b2Vec2();\r\n      }\r\n   }\r\n   b2WorldManifold.prototype.Initialize = function (manifold, xfA, radiusA, xfB, radiusB) {\r\n      if (radiusA === undefined) radiusA = 0;\r\n      if (radiusB === undefined) radiusB = 0;\r\n      if (manifold.m_pointCount == 0) {\r\n         return;\r\n      }\r\n      var i = 0;\r\n      var tVec;\r\n      var tMat;\r\n      var normalX = 0;\r\n      var normalY = 0;\r\n      var planePointX = 0;\r\n      var planePointY = 0;\r\n      var clipPointX = 0;\r\n      var clipPointY = 0;\r\n      switch (manifold.m_type) {\r\n      case b2Manifold.e_circles:\r\n         {\r\n            tMat = xfA.R;\r\n            tVec = manifold.m_localPoint;\r\n            var pointAX = xfA.position.x + tMat.col1.x * tVec.x + tMat.col2.x * tVec.y;\r\n            var pointAY = xfA.position.y + tMat.col1.y * tVec.x + tMat.col2.y * tVec.y;\r\n            tMat = xfB.R;\r\n            tVec = manifold.m_points[0].m_localPoint;\r\n            var pointBX = xfB.position.x + tMat.col1.x * tVec.x + tMat.col2.x * tVec.y;\r\n            var pointBY = xfB.position.y + tMat.col1.y * tVec.x + tMat.col2.y * tVec.y;\r\n            var dX = pointBX - pointAX;\r\n            var dY = pointBY - pointAY;\r\n            var d2 = dX * dX + dY * dY;\r\n            if (d2 > Number.MIN_VALUE * Number.MIN_VALUE) {\r\n               var d = Math.sqrt(d2);\r\n               this.m_normal.x = dX / d;\r\n               this.m_normal.y = dY / d;\r\n            }\r\n            else {\r\n               this.m_normal.x = 1;\r\n               this.m_normal.y = 0;\r\n            }\r\n            var cAX = pointAX + radiusA * this.m_normal.x;\r\n            var cAY = pointAY + radiusA * this.m_normal.y;\r\n            var cBX = pointBX - radiusB * this.m_normal.x;\r\n            var cBY = pointBY - radiusB * this.m_normal.y;\r\n            this.m_points[0].x = 0.5 * (cAX + cBX);\r\n            this.m_points[0].y = 0.5 * (cAY + cBY);\r\n         }\r\n         break;\r\n      case b2Manifold.e_faceA:\r\n         {\r\n            tMat = xfA.R;\r\n            tVec = manifold.m_localPlaneNormal;\r\n            normalX = tMat.col1.x * tVec.x + tMat.col2.x * tVec.y;\r\n            normalY = tMat.col1.y * tVec.x + tMat.col2.y * tVec.y;\r\n            tMat = xfA.R;\r\n            tVec = manifold.m_localPoint;\r\n            planePointX = xfA.position.x + tMat.col1.x * tVec.x + tMat.col2.x * tVec.y;\r\n            planePointY = xfA.position.y + tMat.col1.y * tVec.x + tMat.col2.y * tVec.y;\r\n            this.m_normal.x = normalX;\r\n            this.m_normal.y = normalY;\r\n            for (i = 0;\r\n            i < manifold.m_pointCount; i++) {\r\n               tMat = xfB.R;\r\n               tVec = manifold.m_points[i].m_localPoint;\r\n               clipPointX = xfB.position.x + tMat.col1.x * tVec.x + tMat.col2.x * tVec.y;\r\n               clipPointY = xfB.position.y + tMat.col1.y * tVec.x + tMat.col2.y * tVec.y;\r\n               this.m_points[i].x = clipPointX + 0.5 * (radiusA - (clipPointX - planePointX) * normalX - (clipPointY - planePointY) * normalY - radiusB) * normalX;\r\n               this.m_points[i].y = clipPointY + 0.5 * (radiusA - (clipPointX - planePointX) * normalX - (clipPointY - planePointY) * normalY - radiusB) * normalY;\r\n            }\r\n         }\r\n         break;\r\n      case b2Manifold.e_faceB:\r\n         {\r\n            tMat = xfB.R;\r\n            tVec = manifold.m_localPlaneNormal;\r\n            normalX = tMat.col1.x * tVec.x + tMat.col2.x * tVec.y;\r\n            normalY = tMat.col1.y * tVec.x + tMat.col2.y * tVec.y;\r\n            tMat = xfB.R;\r\n            tVec = manifold.m_localPoint;\r\n            planePointX = xfB.position.x + tMat.col1.x * tVec.x + tMat.col2.x * tVec.y;\r\n            planePointY = xfB.position.y + tMat.col1.y * tVec.x + tMat.col2.y * tVec.y;\r\n            this.m_normal.x = (-normalX);\r\n            this.m_normal.y = (-normalY);\r\n            for (i = 0;\r\n            i < manifold.m_pointCount; i++) {\r\n               tMat = xfA.R;\r\n               tVec = manifold.m_points[i].m_localPoint;\r\n               clipPointX = xfA.position.x + tMat.col1.x * tVec.x + tMat.col2.x * tVec.y;\r\n               clipPointY = xfA.position.y + tMat.col1.y * tVec.x + tMat.col2.y * tVec.y;\r\n               this.m_points[i].x = clipPointX + 0.5 * (radiusB - (clipPointX - planePointX) * normalX - (clipPointY - planePointY) * normalY - radiusA) * normalX;\r\n               this.m_points[i].y = clipPointY + 0.5 * (radiusB - (clipPointX - planePointX) * normalX - (clipPointY - planePointY) * normalY - radiusA) * normalY;\r\n            }\r\n         }\r\n         break;\r\n      }\r\n   }\r\n   ClipVertex.ClipVertex = function () {\r\n      this.v = new b2Vec2();\r\n      this.id = new b2ContactID();\r\n   };\r\n   ClipVertex.prototype.Set = function (other) {\r\n      this.v.SetV(other.v);\r\n      this.id.Set(other.id);\r\n   }\r\n   Features.Features = function () {};\r\n   Object.defineProperty(Features.prototype, 'referenceEdge', {\r\n      enumerable: false,\r\n      configurable: true,\r\n      get: function () {\r\n         return this._referenceEdge;\r\n      }\r\n   });\r\n   Object.defineProperty(Features.prototype, 'referenceEdge', {\r\n      enumerable: false,\r\n      configurable: true,\r\n      set: function (value) {\r\n         if (value === undefined) value = 0;\r\n         this._referenceEdge = value;\r\n         this._m_id._key = (this._m_id._key & 0xffffff00) | (this._referenceEdge & 0x000000ff);\r\n      }\r\n   });\r\n   Object.defineProperty(Features.prototype, 'incidentEdge', {\r\n      enumerable: false,\r\n      configurable: true,\r\n      get: function () {\r\n         return this._incidentEdge;\r\n      }\r\n   });\r\n   Object.defineProperty(Features.prototype, 'incidentEdge', {\r\n      enumerable: false,\r\n      configurable: true,\r\n      set: function (value) {\r\n         if (value === undefined) value = 0;\r\n         this._incidentEdge = value;\r\n         this._m_id._key = (this._m_id._key & 0xffff00ff) | ((this._incidentEdge << 8) & 0x0000ff00);\r\n      }\r\n   });\r\n   Object.defineProperty(Features.prototype, 'incidentVertex', {\r\n      enumerable: false,\r\n      configurable: true,\r\n      get: function () {\r\n         return this._incidentVertex;\r\n      }\r\n   });\r\n   Object.defineProperty(Features.prototype, 'incidentVertex', {\r\n      enumerable: false,\r\n      configurable: true,\r\n      set: function (value) {\r\n         if (value === undefined) value = 0;\r\n         this._incidentVertex = value;\r\n         this._m_id._key = (this._m_id._key & 0xff00ffff) | ((this._incidentVertex << 16) & 0x00ff0000);\r\n      }\r\n   });\r\n   Object.defineProperty(Features.prototype, 'flip', {\r\n      enumerable: false,\r\n      configurable: true,\r\n      get: function () {\r\n         return this._flip;\r\n      }\r\n   });\r\n   Object.defineProperty(Features.prototype, 'flip', {\r\n      enumerable: false,\r\n      configurable: true,\r\n      set: function (value) {\r\n         if (value === undefined) value = 0;\r\n         this._flip = value;\r\n         this._m_id._key = (this._m_id._key & 0x00ffffff) | ((this._flip << 24) & 0xff000000);\r\n      }\r\n   });\r\n})();\r\n(function () {\r\n   var b2Color = Box2D.Common.b2Color,\r\n      b2internal = Box2D.Common.b2internal,\r\n      b2Settings = Box2D.Common.b2Settings,\r\n      b2CircleShape = Box2D.Collision.Shapes.b2CircleShape,\r\n      b2EdgeChainDef = Box2D.Collision.Shapes.b2EdgeChainDef,\r\n      b2EdgeShape = Box2D.Collision.Shapes.b2EdgeShape,\r\n      b2MassData = Box2D.Collision.Shapes.b2MassData,\r\n      b2PolygonShape = Box2D.Collision.Shapes.b2PolygonShape,\r\n      b2Shape = Box2D.Collision.Shapes.b2Shape,\r\n      b2Mat22 = Box2D.Common.Math.b2Mat22,\r\n      b2Mat33 = Box2D.Common.Math.b2Mat33,\r\n      b2Math = Box2D.Common.Math.b2Math,\r\n      b2Sweep = Box2D.Common.Math.b2Sweep,\r\n      b2Transform = Box2D.Common.Math.b2Transform,\r\n      b2Vec2 = Box2D.Common.Math.b2Vec2,\r\n      b2Vec3 = Box2D.Common.Math.b2Vec3,\r\n      b2Body = Box2D.Dynamics.b2Body,\r\n      b2BodyDef = Box2D.Dynamics.b2BodyDef,\r\n      b2ContactFilter = Box2D.Dynamics.b2ContactFilter,\r\n      b2ContactImpulse = Box2D.Dynamics.b2ContactImpulse,\r\n      b2ContactListener = Box2D.Dynamics.b2ContactListener,\r\n      b2ContactManager = Box2D.Dynamics.b2ContactManager,\r\n      b2DebugDraw = Box2D.Dynamics.b2DebugDraw,\r\n      b2DestructionListener = Box2D.Dynamics.b2DestructionListener,\r\n      b2FilterData = Box2D.Dynamics.b2FilterData,\r\n      b2Fixture = Box2D.Dynamics.b2Fixture,\r\n      b2FixtureDef = Box2D.Dynamics.b2FixtureDef,\r\n      b2Island = Box2D.Dynamics.b2Island,\r\n      b2TimeStep = Box2D.Dynamics.b2TimeStep,\r\n      b2World = Box2D.Dynamics.b2World,\r\n      b2AABB = Box2D.Collision.b2AABB,\r\n      b2Bound = Box2D.Collision.b2Bound,\r\n      b2BoundValues = Box2D.Collision.b2BoundValues,\r\n      b2Collision = Box2D.Collision.b2Collision,\r\n      b2ContactID = Box2D.Collision.b2ContactID,\r\n      b2ContactPoint = Box2D.Collision.b2ContactPoint,\r\n      b2Distance = Box2D.Collision.b2Distance,\r\n      b2DistanceInput = Box2D.Collision.b2DistanceInput,\r\n      b2DistanceOutput = Box2D.Collision.b2DistanceOutput,\r\n      b2DistanceProxy = Box2D.Collision.b2DistanceProxy,\r\n      b2DynamicTree = Box2D.Collision.b2DynamicTree,\r\n      b2DynamicTreeBroadPhase = Box2D.Collision.b2DynamicTreeBroadPhase,\r\n      b2DynamicTreeNode = Box2D.Collision.b2DynamicTreeNode,\r\n      b2DynamicTreePair = Box2D.Collision.b2DynamicTreePair,\r\n      b2Manifold = Box2D.Collision.b2Manifold,\r\n      b2ManifoldPoint = Box2D.Collision.b2ManifoldPoint,\r\n      b2Point = Box2D.Collision.b2Point,\r\n      b2RayCastInput = Box2D.Collision.b2RayCastInput,\r\n      b2RayCastOutput = Box2D.Collision.b2RayCastOutput,\r\n      b2Segment = Box2D.Collision.b2Segment,\r\n      b2SeparationFunction = Box2D.Collision.b2SeparationFunction,\r\n      b2Simplex = Box2D.Collision.b2Simplex,\r\n      b2SimplexCache = Box2D.Collision.b2SimplexCache,\r\n      b2SimplexVertex = Box2D.Collision.b2SimplexVertex,\r\n      b2TimeOfImpact = Box2D.Collision.b2TimeOfImpact,\r\n      b2TOIInput = Box2D.Collision.b2TOIInput,\r\n      b2WorldManifold = Box2D.Collision.b2WorldManifold,\r\n      ClipVertex = Box2D.Collision.ClipVertex,\r\n      Features = Box2D.Collision.Features,\r\n      IBroadPhase = Box2D.Collision.IBroadPhase;\r\n\r\n   Box2D.inherit(b2CircleShape, Box2D.Collision.Shapes.b2Shape);\r\n   b2CircleShape.prototype.__super = Box2D.Collision.Shapes.b2Shape.prototype;\r\n   b2CircleShape.b2CircleShape = function () {\r\n      Box2D.Collision.Shapes.b2Shape.b2Shape.apply(this, arguments);\r\n      this.m_p = new b2Vec2();\r\n   };\r\n   b2CircleShape.prototype.Copy = function () {\r\n      var s = new b2CircleShape();\r\n      s.Set(this);\r\n      return s;\r\n   }\r\n   b2CircleShape.prototype.Set = function (other) {\r\n      this.__super.Set.call(this, other);\r\n      if (Box2D.is(other, b2CircleShape)) {\r\n         var other2 = (other instanceof b2CircleShape ? other : null);\r\n         this.m_p.SetV(other2.m_p);\r\n      }\r\n   }\r\n   b2CircleShape.prototype.TestPoint = function (transform, p) {\r\n      var tMat = transform.R;\r\n      var dX = transform.position.x + (tMat.col1.x * this.m_p.x + tMat.col2.x * this.m_p.y);\r\n      var dY = transform.position.y + (tMat.col1.y * this.m_p.x + tMat.col2.y * this.m_p.y);\r\n      dX = p.x - dX;\r\n      dY = p.y - dY;\r\n      return (dX * dX + dY * dY) <= this.m_radius * this.m_radius;\r\n   }\r\n   b2CircleShape.prototype.RayCast = function (output, input, transform) {\r\n      var tMat = transform.R;\r\n      var positionX = transform.position.x + (tMat.col1.x * this.m_p.x + tMat.col2.x * this.m_p.y);\r\n      var positionY = transform.position.y + (tMat.col1.y * this.m_p.x + tMat.col2.y * this.m_p.y);\r\n      var sX = input.p1.x - positionX;\r\n      var sY = input.p1.y - positionY;\r\n      var b = (sX * sX + sY * sY) - this.m_radius * this.m_radius;\r\n      var rX = input.p2.x - input.p1.x;\r\n      var rY = input.p2.y - input.p1.y;\r\n      var c = (sX * rX + sY * rY);\r\n      var rr = (rX * rX + rY * rY);\r\n      var sigma = c * c - rr * b;\r\n      if (sigma < 0.0 || rr < Number.MIN_VALUE) {\r\n         return false;\r\n      }\r\n      var a = (-(c + Math.sqrt(sigma)));\r\n      if (0.0 <= a && a <= input.maxFraction * rr) {\r\n         a /= rr;\r\n         output.fraction = a;\r\n         output.normal.x = sX + a * rX;\r\n         output.normal.y = sY + a * rY;\r\n         output.normal.Normalize();\r\n         return true;\r\n      }\r\n      return false;\r\n   }\r\n   b2CircleShape.prototype.ComputeAABB = function (aabb, transform) {\r\n      var tMat = transform.R;\r\n      var pX = transform.position.x + (tMat.col1.x * this.m_p.x + tMat.col2.x * this.m_p.y);\r\n      var pY = transform.position.y + (tMat.col1.y * this.m_p.x + tMat.col2.y * this.m_p.y);\r\n      aabb.lowerBound.Set(pX - this.m_radius, pY - this.m_radius);\r\n      aabb.upperBound.Set(pX + this.m_radius, pY + this.m_radius);\r\n   }\r\n   b2CircleShape.prototype.ComputeMass = function (massData, density) {\r\n      if (density === undefined) density = 0;\r\n      massData.mass = density * b2Settings.b2_pi * this.m_radius * this.m_radius;\r\n      massData.center.SetV(this.m_p);\r\n      massData.I = massData.mass * (0.5 * this.m_radius * this.m_radius + (this.m_p.x * this.m_p.x + this.m_p.y * this.m_p.y));\r\n   }\r\n   b2CircleShape.prototype.ComputeSubmergedArea = function (normal, offset, xf, c) {\r\n      if (offset === undefined) offset = 0;\r\n      var p = b2Math.MulX(xf, this.m_p);\r\n      var l = (-(b2Math.Dot(normal, p) - offset));\r\n      if (l < (-this.m_radius) + Number.MIN_VALUE) {\r\n         return 0;\r\n      }\r\n      if (l > this.m_radius) {\r\n         c.SetV(p);\r\n         return Math.PI * this.m_radius * this.m_radius;\r\n      }\r\n      var r2 = this.m_radius * this.m_radius;\r\n      var l2 = l * l;\r\n      var area = r2 * (Math.asin(l / this.m_radius) + Math.PI / 2) + l * Math.sqrt(r2 - l2);\r\n      var com = (-2 / 3 * Math.pow(r2 - l2, 1.5) / area);\r\n      c.x = p.x + normal.x * com;\r\n      c.y = p.y + normal.y * com;\r\n      return area;\r\n   }\r\n   b2CircleShape.prototype.GetLocalPosition = function () {\r\n      return this.m_p;\r\n   }\r\n   b2CircleShape.prototype.SetLocalPosition = function (position) {\r\n      this.m_p.SetV(position);\r\n   }\r\n   b2CircleShape.prototype.GetRadius = function () {\r\n      return this.m_radius;\r\n   }\r\n   b2CircleShape.prototype.SetRadius = function (radius) {\r\n      if (radius === undefined) radius = 0;\r\n      this.m_radius = radius;\r\n   }\r\n   b2CircleShape.prototype.b2CircleShape = function (radius) {\r\n      if (radius === undefined) radius = 0;\r\n      this.__super.b2Shape.call(this);\r\n      this.m_type = b2Shape.e_circleShape;\r\n      this.m_radius = radius;\r\n   }\r\n   b2EdgeChainDef.b2EdgeChainDef = function () {};\r\n   b2EdgeChainDef.prototype.b2EdgeChainDef = function () {\r\n      this.vertexCount = 0;\r\n      this.isALoop = true;\r\n      this.vertices = [];\r\n   }\r\n   Box2D.inherit(b2EdgeShape, Box2D.Collision.Shapes.b2Shape);\r\n   b2EdgeShape.prototype.__super = Box2D.Collision.Shapes.b2Shape.prototype;\r\n   b2EdgeShape.b2EdgeShape = function () {\r\n      Box2D.Collision.Shapes.b2Shape.b2Shape.apply(this, arguments);\r\n      this.s_supportVec = new b2Vec2();\r\n      this.m_v1 = new b2Vec2();\r\n      this.m_v2 = new b2Vec2();\r\n      this.m_coreV1 = new b2Vec2();\r\n      this.m_coreV2 = new b2Vec2();\r\n      this.m_normal = new b2Vec2();\r\n      this.m_direction = new b2Vec2();\r\n      this.m_cornerDir1 = new b2Vec2();\r\n      this.m_cornerDir2 = new b2Vec2();\r\n   };\r\n   b2EdgeShape.prototype.TestPoint = function (transform, p) {\r\n      return false;\r\n   }\r\n   b2EdgeShape.prototype.RayCast = function (output, input, transform) {\r\n      var tMat;\r\n      var rX = input.p2.x - input.p1.x;\r\n      var rY = input.p2.y - input.p1.y;\r\n      tMat = transform.R;\r\n      var v1X = transform.position.x + (tMat.col1.x * this.m_v1.x + tMat.col2.x * this.m_v1.y);\r\n      var v1Y = transform.position.y + (tMat.col1.y * this.m_v1.x + tMat.col2.y * this.m_v1.y);\r\n      var nX = transform.position.y + (tMat.col1.y * this.m_v2.x + tMat.col2.y * this.m_v2.y) - v1Y;\r\n      var nY = (-(transform.position.x + (tMat.col1.x * this.m_v2.x + tMat.col2.x * this.m_v2.y) - v1X));\r\n      var k_slop = 100.0 * Number.MIN_VALUE;\r\n      var denom = (-(rX * nX + rY * nY));\r\n      if (denom > k_slop) {\r\n         var bX = input.p1.x - v1X;\r\n         var bY = input.p1.y - v1Y;\r\n         var a = (bX * nX + bY * nY);\r\n         if (0.0 <= a && a <= input.maxFraction * denom) {\r\n            var mu2 = (-rX * bY) + rY * bX;\r\n            if ((-k_slop * denom) <= mu2 && mu2 <= denom * (1.0 + k_slop)) {\r\n               a /= denom;\r\n               output.fraction = a;\r\n               var nLen = Math.sqrt(nX * nX + nY * nY);\r\n               output.normal.x = nX / nLen;\r\n               output.normal.y = nY / nLen;\r\n               return true;\r\n            }\r\n         }\r\n      }\r\n      return false;\r\n   }\r\n   b2EdgeShape.prototype.ComputeAABB = function (aabb, transform) {\r\n      var tMat = transform.R;\r\n      var v1X = transform.position.x + (tMat.col1.x * this.m_v1.x + tMat.col2.x * this.m_v1.y);\r\n      var v1Y = transform.position.y + (tMat.col1.y * this.m_v1.x + tMat.col2.y * this.m_v1.y);\r\n      var v2X = transform.position.x + (tMat.col1.x * this.m_v2.x + tMat.col2.x * this.m_v2.y);\r\n      var v2Y = transform.position.y + (tMat.col1.y * this.m_v2.x + tMat.col2.y * this.m_v2.y);\r\n      if (v1X < v2X) {\r\n         aabb.lowerBound.x = v1X;\r\n         aabb.upperBound.x = v2X;\r\n      }\r\n      else {\r\n         aabb.lowerBound.x = v2X;\r\n         aabb.upperBound.x = v1X;\r\n      }\r\n      if (v1Y < v2Y) {\r\n         aabb.lowerBound.y = v1Y;\r\n         aabb.upperBound.y = v2Y;\r\n      }\r\n      else {\r\n         aabb.lowerBound.y = v2Y;\r\n         aabb.upperBound.y = v1Y;\r\n      }\r\n   }\r\n   b2EdgeShape.prototype.ComputeMass = function (massData, density) {\r\n      if (density === undefined) density = 0;\r\n      massData.mass = 0;\r\n      massData.center.SetV(this.m_v1);\r\n      massData.I = 0;\r\n   }\r\n   b2EdgeShape.prototype.ComputeSubmergedArea = function (normal, offset, xf, c) {\r\n      if (offset === undefined) offset = 0;\r\n      var v0 = new b2Vec2(normal.x * offset, normal.y * offset);\r\n      var v1 = b2Math.MulX(xf, this.m_v1);\r\n      var v2 = b2Math.MulX(xf, this.m_v2);\r\n      var d1 = b2Math.Dot(normal, v1) - offset;\r\n      var d2 = b2Math.Dot(normal, v2) - offset;\r\n      if (d1 > 0) {\r\n         if (d2 > 0) {\r\n            return 0;\r\n         }\r\n         else {\r\n            v1.x = (-d2 / (d1 - d2) * v1.x) + d1 / (d1 - d2) * v2.x;\r\n            v1.y = (-d2 / (d1 - d2) * v1.y) + d1 / (d1 - d2) * v2.y;\r\n         }\r\n      }\r\n      else {\r\n         if (d2 > 0) {\r\n            v2.x = (-d2 / (d1 - d2) * v1.x) + d1 / (d1 - d2) * v2.x;\r\n            v2.y = (-d2 / (d1 - d2) * v1.y) + d1 / (d1 - d2) * v2.y;\r\n         }\r\n         else {}\r\n      }\r\n      c.x = (v0.x + v1.x + v2.x) / 3;\r\n      c.y = (v0.y + v1.y + v2.y) / 3;\r\n      return 0.5 * ((v1.x - v0.x) * (v2.y - v0.y) - (v1.y - v0.y) * (v2.x - v0.x));\r\n   }\r\n   b2EdgeShape.prototype.GetLength = function () {\r\n      return this.m_length;\r\n   }\r\n   b2EdgeShape.prototype.GetVertex1 = function () {\r\n      return this.m_v1;\r\n   }\r\n   b2EdgeShape.prototype.GetVertex2 = function () {\r\n      return this.m_v2;\r\n   }\r\n   b2EdgeShape.prototype.GetCoreVertex1 = function () {\r\n      return this.m_coreV1;\r\n   }\r\n   b2EdgeShape.prototype.GetCoreVertex2 = function () {\r\n      return this.m_coreV2;\r\n   }\r\n   b2EdgeShape.prototype.GetNormalVector = function () {\r\n      return this.m_normal;\r\n   }\r\n   b2EdgeShape.prototype.GetDirectionVector = function () {\r\n      return this.m_direction;\r\n   }\r\n   b2EdgeShape.prototype.GetCorner1Vector = function () {\r\n      return this.m_cornerDir1;\r\n   }\r\n   b2EdgeShape.prototype.GetCorner2Vector = function () {\r\n      return this.m_cornerDir2;\r\n   }\r\n   b2EdgeShape.prototype.Corner1IsConvex = function () {\r\n      return this.m_cornerConvex1;\r\n   }\r\n   b2EdgeShape.prototype.Corner2IsConvex = function () {\r\n      return this.m_cornerConvex2;\r\n   }\r\n   b2EdgeShape.prototype.GetFirstVertex = function (xf) {\r\n      var tMat = xf.R;\r\n      return new b2Vec2(xf.position.x + (tMat.col1.x * this.m_coreV1.x + tMat.col2.x * this.m_coreV1.y), xf.position.y + (tMat.col1.y * this.m_coreV1.x + tMat.col2.y * this.m_coreV1.y));\r\n   }\r\n   b2EdgeShape.prototype.GetNextEdge = function () {\r\n      return this.m_nextEdge;\r\n   }\r\n   b2EdgeShape.prototype.GetPrevEdge = function () {\r\n      return this.m_prevEdge;\r\n   }\r\n   b2EdgeShape.prototype.Support = function (xf, dX, dY) {\r\n      if (dX === undefined) dX = 0;\r\n      if (dY === undefined) dY = 0;\r\n      var tMat = xf.R;\r\n      var v1X = xf.position.x + (tMat.col1.x * this.m_coreV1.x + tMat.col2.x * this.m_coreV1.y);\r\n      var v1Y = xf.position.y + (tMat.col1.y * this.m_coreV1.x + tMat.col2.y * this.m_coreV1.y);\r\n      var v2X = xf.position.x + (tMat.col1.x * this.m_coreV2.x + tMat.col2.x * this.m_coreV2.y);\r\n      var v2Y = xf.position.y + (tMat.col1.y * this.m_coreV2.x + tMat.col2.y * this.m_coreV2.y);\r\n      if ((v1X * dX + v1Y * dY) > (v2X * dX + v2Y * dY)) {\r\n         this.s_supportVec.x = v1X;\r\n         this.s_supportVec.y = v1Y;\r\n      }\r\n      else {\r\n         this.s_supportVec.x = v2X;\r\n         this.s_supportVec.y = v2Y;\r\n      }\r\n      return this.s_supportVec;\r\n   }\r\n   b2EdgeShape.prototype.b2EdgeShape = function (v1, v2) {\r\n      this.__super.b2Shape.call(this);\r\n      this.m_type = b2Shape.e_edgeShape;\r\n      this.m_prevEdge = null;\r\n      this.m_nextEdge = null;\r\n      this.m_v1 = v1;\r\n      this.m_v2 = v2;\r\n      this.m_direction.Set(this.m_v2.x - this.m_v1.x, this.m_v2.y - this.m_v1.y);\r\n      this.m_length = this.m_direction.Normalize();\r\n      this.m_normal.Set(this.m_direction.y, (-this.m_direction.x));\r\n      this.m_coreV1.Set((-b2Settings.b2_toiSlop * (this.m_normal.x - this.m_direction.x)) + this.m_v1.x, (-b2Settings.b2_toiSlop * (this.m_normal.y - this.m_direction.y)) + this.m_v1.y);\r\n      this.m_coreV2.Set((-b2Settings.b2_toiSlop * (this.m_normal.x + this.m_direction.x)) + this.m_v2.x, (-b2Settings.b2_toiSlop * (this.m_normal.y + this.m_direction.y)) + this.m_v2.y);\r\n      this.m_cornerDir1 = this.m_normal;\r\n      this.m_cornerDir2.Set((-this.m_normal.x), (-this.m_normal.y));\r\n   }\r\n   b2EdgeShape.prototype.SetPrevEdge = function (edge, core, cornerDir, convex) {\r\n      this.m_prevEdge = edge;\r\n      this.m_coreV1 = core;\r\n      this.m_cornerDir1 = cornerDir;\r\n      this.m_cornerConvex1 = convex;\r\n   }\r\n   b2EdgeShape.prototype.SetNextEdge = function (edge, core, cornerDir, convex) {\r\n      this.m_nextEdge = edge;\r\n      this.m_coreV2 = core;\r\n      this.m_cornerDir2 = cornerDir;\r\n      this.m_cornerConvex2 = convex;\r\n   }\r\n   b2MassData.b2MassData = function () {\r\n      this.mass = 0.0;\r\n      this.center = new b2Vec2(0, 0);\r\n      this.I = 0.0;\r\n   };\r\n   Box2D.inherit(b2PolygonShape, Box2D.Collision.Shapes.b2Shape);\r\n   b2PolygonShape.prototype.__super = Box2D.Collision.Shapes.b2Shape.prototype;\r\n   b2PolygonShape.b2PolygonShape = function () {\r\n      Box2D.Collision.Shapes.b2Shape.b2Shape.apply(this, arguments);\r\n   };\r\n   b2PolygonShape.prototype.Copy = function () {\r\n      var s = new b2PolygonShape();\r\n      s.Set(this);\r\n      return s;\r\n   }\r\n   b2PolygonShape.prototype.Set = function (other) {\r\n      this.__super.Set.call(this, other);\r\n      if (Box2D.is(other, b2PolygonShape)) {\r\n         var other2 = (other instanceof b2PolygonShape ? other : null);\r\n         this.m_centroid.SetV(other2.m_centroid);\r\n         this.m_vertexCount = other2.m_vertexCount;\r\n         this.Reserve(this.m_vertexCount);\r\n         for (var i = 0; i < this.m_vertexCount; i++) {\r\n            this.m_vertices[i].SetV(other2.m_vertices[i]);\r\n            this.m_normals[i].SetV(other2.m_normals[i]);\r\n         }\r\n      }\r\n   }\r\n   b2PolygonShape.prototype.SetAsArray = function (vertices, vertexCount) {\r\n      if (vertexCount === undefined) vertexCount = 0;\r\n      var v = new Vector();\r\n      var i = 0,\r\n         tVec;\r\n      for (i = 0;\r\n      i < vertices.length; ++i) {\r\n         tVec = vertices[i];\r\n         v.push(tVec);\r\n      }\r\n      this.SetAsVector(v, vertexCount);\r\n   }\r\n   b2PolygonShape.AsArray = function (vertices, vertexCount) {\r\n      if (vertexCount === undefined) vertexCount = 0;\r\n      var polygonShape = new b2PolygonShape();\r\n      polygonShape.SetAsArray(vertices, vertexCount);\r\n      return polygonShape;\r\n   }\r\n   b2PolygonShape.prototype.SetAsVector = function (vertices, vertexCount) {\r\n      if (vertexCount === undefined) vertexCount = 0;\r\n      if (vertexCount == 0) vertexCount = vertices.length;\r\n      b2Settings.b2Assert(2 <= vertexCount);\r\n      this.m_vertexCount = vertexCount;\r\n      this.Reserve(vertexCount);\r\n      var i = 0;\r\n      for (i = 0;\r\n      i < this.m_vertexCount; i++) {\r\n         this.m_vertices[i].SetV(vertices[i]);\r\n      }\r\n      for (i = 0;\r\n      i < this.m_vertexCount; ++i) {\r\n         var i1 = parseInt(i);\r\n         var i2 = parseInt(i + 1 < this.m_vertexCount ? i + 1 : 0);\r\n         var edge = b2Math.SubtractVV(this.m_vertices[i2], this.m_vertices[i1]);\r\n         b2Settings.b2Assert(edge.LengthSquared() > Number.MIN_VALUE);\r\n         this.m_normals[i].SetV(b2Math.CrossVF(edge, 1.0));\r\n         this.m_normals[i].Normalize();\r\n      }\r\n      this.m_centroid = b2PolygonShape.ComputeCentroid(this.m_vertices, this.m_vertexCount);\r\n   }\r\n   b2PolygonShape.AsVector = function (vertices, vertexCount) {\r\n      if (vertexCount === undefined) vertexCount = 0;\r\n      var polygonShape = new b2PolygonShape();\r\n      polygonShape.SetAsVector(vertices, vertexCount);\r\n      return polygonShape;\r\n   }\r\n   b2PolygonShape.prototype.SetAsBox = function (hx, hy) {\r\n\t  if (hx === undefined) hx = 0;\r\n      if (hy === undefined) hy = 0;\r\n      this.m_vertexCount = 4;\r\n      this.Reserve(4);\r\n      this.m_vertices[0].Set((-hx), (-hy));\r\n      this.m_vertices[1].Set(hx, (-hy));\r\n      this.m_vertices[2].Set(hx, hy);\r\n      this.m_vertices[3].Set((-hx), hy);\r\n      this.m_normals[0].Set(0.0, (-1.0));\r\n      this.m_normals[1].Set(1.0, 0.0);\r\n      this.m_normals[2].Set(0.0, 1.0);\r\n      this.m_normals[3].Set((-1.0), 0.0);\r\n\t  this.m_centroid.SetZero();\r\n   }\r\n   b2PolygonShape.AsBox = function (hx, hy) {\r\n      if (hx === undefined) hx = 0;\r\n      if (hy === undefined) hy = 0;\r\n      var polygonShape = new b2PolygonShape();\r\n      polygonShape.SetAsBox(hx, hy);\r\n      return polygonShape;\r\n   }\r\n   b2PolygonShape.prototype.SetAsOrientedBox = function (hx, hy, center, angle) {\r\n      if (hx === undefined) hx = 0;\r\n      if (hy === undefined) hy = 0;\r\n      if (center === undefined) center = null;\r\n      if (angle === undefined) angle = 0.0;\r\n      this.m_vertexCount = 4;\r\n      this.Reserve(4);\r\n      this.m_vertices[0].Set((-hx), (-hy));\r\n      this.m_vertices[1].Set(hx, (-hy));\r\n      this.m_vertices[2].Set(hx, hy);\r\n      this.m_vertices[3].Set((-hx), hy);\r\n      this.m_normals[0].Set(0.0, (-1.0));\r\n      this.m_normals[1].Set(1.0, 0.0);\r\n      this.m_normals[2].Set(0.0, 1.0);\r\n      this.m_normals[3].Set((-1.0), 0.0);\r\n      this.m_centroid = center;\r\n      var xf = new b2Transform();\r\n      xf.position = center;\r\n      xf.R.Set(angle);\r\n      for (var i = 0; i < this.m_vertexCount; ++i) {\r\n         this.m_vertices[i] = b2Math.MulX(xf, this.m_vertices[i]);\r\n         this.m_normals[i] = b2Math.MulMV(xf.R, this.m_normals[i]);\r\n      }\r\n   }\r\n   b2PolygonShape.AsOrientedBox = function (hx, hy, center, angle) {\r\n      if (hx === undefined) hx = 0;\r\n      if (hy === undefined) hy = 0;\r\n      if (center === undefined) center = null;\r\n      if (angle === undefined) angle = 0.0;\r\n      var polygonShape = new b2PolygonShape();\r\n      polygonShape.SetAsOrientedBox(hx, hy, center, angle);\r\n      return polygonShape;\r\n   }\r\n   b2PolygonShape.prototype.SetAsEdge = function (v1, v2) {\r\n      this.m_vertexCount = 2;\r\n      this.Reserve(2);\r\n      this.m_vertices[0].SetV(v1);\r\n      this.m_vertices[1].SetV(v2);\r\n      this.m_centroid.x = 0.5 * (v1.x + v2.x);\r\n      this.m_centroid.y = 0.5 * (v1.y + v2.y);\r\n      this.m_normals[0] = b2Math.CrossVF(b2Math.SubtractVV(v2, v1), 1.0);\r\n      this.m_normals[0].Normalize();\r\n      this.m_normals[1].x = (-this.m_normals[0].x);\r\n      this.m_normals[1].y = (-this.m_normals[0].y);\r\n   }\r\n   b2PolygonShape.AsEdge = function (v1, v2) {\r\n      var polygonShape = new b2PolygonShape();\r\n      polygonShape.SetAsEdge(v1, v2);\r\n      return polygonShape;\r\n   }\r\n   b2PolygonShape.prototype.TestPoint = function (xf, p) {\r\n      var tVec;\r\n      var tMat = xf.R;\r\n      var tX = p.x - xf.position.x;\r\n      var tY = p.y - xf.position.y;\r\n      var pLocalX = (tX * tMat.col1.x + tY * tMat.col1.y);\r\n      var pLocalY = (tX * tMat.col2.x + tY * tMat.col2.y);\r\n      for (var i = 0; i < this.m_vertexCount; ++i) {\r\n         tVec = this.m_vertices[i];\r\n         tX = pLocalX - tVec.x;\r\n         tY = pLocalY - tVec.y;\r\n         tVec = this.m_normals[i];\r\n         var dot = (tVec.x * tX + tVec.y * tY);\r\n         if (dot > 0.0) {\r\n            return false;\r\n         }\r\n      }\r\n      return true;\r\n   }\r\n   b2PolygonShape.prototype.RayCast = function (output, input, transform) {\r\n      var lower = 0.0;\r\n      var upper = input.maxFraction;\r\n      var tX = 0;\r\n      var tY = 0;\r\n      var tMat;\r\n      var tVec;\r\n      tX = input.p1.x - transform.position.x;\r\n      tY = input.p1.y - transform.position.y;\r\n      tMat = transform.R;\r\n      var p1X = (tX * tMat.col1.x + tY * tMat.col1.y);\r\n      var p1Y = (tX * tMat.col2.x + tY * tMat.col2.y);\r\n      tX = input.p2.x - transform.position.x;\r\n      tY = input.p2.y - transform.position.y;\r\n      tMat = transform.R;\r\n      var p2X = (tX * tMat.col1.x + tY * tMat.col1.y);\r\n      var p2Y = (tX * tMat.col2.x + tY * tMat.col2.y);\r\n      var dX = p2X - p1X;\r\n      var dY = p2Y - p1Y;\r\n      var index = parseInt((-1));\r\n      for (var i = 0; i < this.m_vertexCount; ++i) {\r\n         tVec = this.m_vertices[i];\r\n         tX = tVec.x - p1X;\r\n         tY = tVec.y - p1Y;\r\n         tVec = this.m_normals[i];\r\n         var numerator = (tVec.x * tX + tVec.y * tY);\r\n         var denominator = (tVec.x * dX + tVec.y * dY);\r\n         if (denominator == 0.0) {\r\n            if (numerator < 0.0) {\r\n               return false;\r\n            }\r\n         }\r\n         else {\r\n            if (denominator < 0.0 && numerator < lower * denominator) {\r\n               lower = numerator / denominator;\r\n               index = i;\r\n            }\r\n            else if (denominator > 0.0 && numerator < upper * denominator) {\r\n               upper = numerator / denominator;\r\n            }\r\n         }\r\n         if (upper < lower - Number.MIN_VALUE) {\r\n            return false;\r\n         }\r\n      }\r\n      if (index >= 0) {\r\n         output.fraction = lower;\r\n         tMat = transform.R;\r\n         tVec = this.m_normals[index];\r\n         output.normal.x = (tMat.col1.x * tVec.x + tMat.col2.x * tVec.y);\r\n         output.normal.y = (tMat.col1.y * tVec.x + tMat.col2.y * tVec.y);\r\n         return true;\r\n      }\r\n      return false;\r\n   }\r\n   b2PolygonShape.prototype.ComputeAABB = function (aabb, xf) {\r\n      var tMat = xf.R;\r\n      var tVec = this.m_vertices[0];\r\n      var lowerX = xf.position.x + (tMat.col1.x * tVec.x + tMat.col2.x * tVec.y);\r\n      var lowerY = xf.position.y + (tMat.col1.y * tVec.x + tMat.col2.y * tVec.y);\r\n      var upperX = lowerX;\r\n      var upperY = lowerY;\r\n      for (var i = 1; i < this.m_vertexCount; ++i) {\r\n         tVec = this.m_vertices[i];\r\n         var vX = xf.position.x + (tMat.col1.x * tVec.x + tMat.col2.x * tVec.y);\r\n         var vY = xf.position.y + (tMat.col1.y * tVec.x + tMat.col2.y * tVec.y);\r\n         lowerX = lowerX < vX ? lowerX : vX;\r\n         lowerY = lowerY < vY ? lowerY : vY;\r\n         upperX = upperX > vX ? upperX : vX;\r\n         upperY = upperY > vY ? upperY : vY;\r\n      }\r\n      aabb.lowerBound.x = lowerX - this.m_radius;\r\n      aabb.lowerBound.y = lowerY - this.m_radius;\r\n      aabb.upperBound.x = upperX + this.m_radius;\r\n      aabb.upperBound.y = upperY + this.m_radius;\r\n   }\r\n   b2PolygonShape.prototype.ComputeMass = function (massData, density) {\r\n      if (density === undefined) density = 0;\r\n      if (this.m_vertexCount == 2) {\r\n         massData.center.x = 0.5 * (this.m_vertices[0].x + this.m_vertices[1].x);\r\n         massData.center.y = 0.5 * (this.m_vertices[0].y + this.m_vertices[1].y);\r\n         massData.mass = 0.0;\r\n         massData.I = 0.0;\r\n         return;\r\n      }\r\n      var centerX = 0.0;\r\n      var centerY = 0.0;\r\n      var area = 0.0;\r\n      var I = 0.0;\r\n      var p1X = 0.0;\r\n      var p1Y = 0.0;\r\n      var k_inv3 = 1.0 / 3.0;\r\n      for (var i = 0; i < this.m_vertexCount; ++i) {\r\n         var p2 = this.m_vertices[i];\r\n         var p3 = i + 1 < this.m_vertexCount ? this.m_vertices[parseInt(i + 1)] : this.m_vertices[0];\r\n         var e1X = p2.x - p1X;\r\n         var e1Y = p2.y - p1Y;\r\n         var e2X = p3.x - p1X;\r\n         var e2Y = p3.y - p1Y;\r\n         var D = e1X * e2Y - e1Y * e2X;\r\n         var triangleArea = 0.5 * D;area += triangleArea;\r\n         centerX += triangleArea * k_inv3 * (p1X + p2.x + p3.x);\r\n         centerY += triangleArea * k_inv3 * (p1Y + p2.y + p3.y);\r\n         var px = p1X;\r\n         var py = p1Y;\r\n         var ex1 = e1X;\r\n         var ey1 = e1Y;\r\n         var ex2 = e2X;\r\n         var ey2 = e2Y;\r\n         var intx2 = k_inv3 * (0.25 * (ex1 * ex1 + ex2 * ex1 + ex2 * ex2) + (px * ex1 + px * ex2)) + 0.5 * px * px;\r\n         var inty2 = k_inv3 * (0.25 * (ey1 * ey1 + ey2 * ey1 + ey2 * ey2) + (py * ey1 + py * ey2)) + 0.5 * py * py;I += D * (intx2 + inty2);\r\n      }\r\n      massData.mass = density * area;\r\n      centerX *= 1.0 / area;\r\n      centerY *= 1.0 / area;\r\n      massData.center.Set(centerX, centerY);\r\n      massData.I = density * I;\r\n   }\r\n   b2PolygonShape.prototype.ComputeSubmergedArea = function (normal, offset, xf, c) {\r\n      if (offset === undefined) offset = 0;\r\n      var normalL = b2Math.MulTMV(xf.R, normal);\r\n      var offsetL = offset - b2Math.Dot(normal, xf.position);\r\n      var depths = new Vector_a2j_Number();\r\n      var diveCount = 0;\r\n      var intoIndex = parseInt((-1));\r\n      var outoIndex = parseInt((-1));\r\n      var lastSubmerged = false;\r\n      var i = 0;\r\n      for (i = 0;\r\n      i < this.m_vertexCount; ++i) {\r\n         depths[i] = b2Math.Dot(normalL, this.m_vertices[i]) - offsetL;\r\n         var isSubmerged = depths[i] < (-Number.MIN_VALUE);\r\n         if (i > 0) {\r\n            if (isSubmerged) {\r\n               if (!lastSubmerged) {\r\n                  intoIndex = i - 1;\r\n                  diveCount++;\r\n               }\r\n            }\r\n            else {\r\n               if (lastSubmerged) {\r\n                  outoIndex = i - 1;\r\n                  diveCount++;\r\n               }\r\n            }\r\n         }\r\n         lastSubmerged = isSubmerged;\r\n      }\r\n      switch (diveCount) {\r\n      case 0:\r\n         if (lastSubmerged) {\r\n            var md = new b2MassData();\r\n            this.ComputeMass(md, 1);\r\n            c.SetV(b2Math.MulX(xf, md.center));\r\n            return md.mass;\r\n         }\r\n         else {\r\n            return 0;\r\n         }\r\n         break;\r\n      case 1:\r\n         if (intoIndex == (-1)) {\r\n            intoIndex = this.m_vertexCount - 1;\r\n         }\r\n         else {\r\n            outoIndex = this.m_vertexCount - 1;\r\n         }\r\n         break;\r\n      }\r\n      var intoIndex2 = parseInt((intoIndex + 1) % this.m_vertexCount);\r\n      var outoIndex2 = parseInt((outoIndex + 1) % this.m_vertexCount);\r\n      var intoLamdda = (0 - depths[intoIndex]) / (depths[intoIndex2] - depths[intoIndex]);\r\n      var outoLamdda = (0 - depths[outoIndex]) / (depths[outoIndex2] - depths[outoIndex]);\r\n      var intoVec = new b2Vec2(this.m_vertices[intoIndex].x * (1 - intoLamdda) + this.m_vertices[intoIndex2].x * intoLamdda, this.m_vertices[intoIndex].y * (1 - intoLamdda) + this.m_vertices[intoIndex2].y * intoLamdda);\r\n      var outoVec = new b2Vec2(this.m_vertices[outoIndex].x * (1 - outoLamdda) + this.m_vertices[outoIndex2].x * outoLamdda, this.m_vertices[outoIndex].y * (1 - outoLamdda) + this.m_vertices[outoIndex2].y * outoLamdda);\r\n      var area = 0;\r\n      var center = new b2Vec2();\r\n      var p2 = this.m_vertices[intoIndex2];\r\n      var p3;\r\n      i = intoIndex2;\r\n      while (i != outoIndex2) {\r\n         i = (i + 1) % this.m_vertexCount;\r\n         if (i == outoIndex2) p3 = outoVec;\r\n         else p3 = this.m_vertices[i];\r\n         var triangleArea = 0.5 * ((p2.x - intoVec.x) * (p3.y - intoVec.y) - (p2.y - intoVec.y) * (p3.x - intoVec.x));\r\n         area += triangleArea;\r\n         center.x += triangleArea * (intoVec.x + p2.x + p3.x) / 3;\r\n         center.y += triangleArea * (intoVec.y + p2.y + p3.y) / 3;\r\n         p2 = p3;\r\n      }\r\n      center.Multiply(1 / area);\r\n      c.SetV(b2Math.MulX(xf, center));\r\n      return area;\r\n   }\r\n   b2PolygonShape.prototype.GetVertexCount = function () {\r\n      return this.m_vertexCount;\r\n   }\r\n   b2PolygonShape.prototype.GetVertices = function () {\r\n      return this.m_vertices;\r\n   }\r\n   b2PolygonShape.prototype.GetNormals = function () {\r\n      return this.m_normals;\r\n   }\r\n   b2PolygonShape.prototype.GetSupport = function (d) {\r\n      var bestIndex = 0;\r\n      var bestValue = this.m_vertices[0].x * d.x + this.m_vertices[0].y * d.y;\r\n      for (var i = 1; i < this.m_vertexCount; ++i) {\r\n         var value = this.m_vertices[i].x * d.x + this.m_vertices[i].y * d.y;\r\n         if (value > bestValue) {\r\n            bestIndex = i;\r\n            bestValue = value;\r\n         }\r\n      }\r\n      return bestIndex;\r\n   }\r\n   b2PolygonShape.prototype.GetSupportVertex = function (d) {\r\n      var bestIndex = 0;\r\n      var bestValue = this.m_vertices[0].x * d.x + this.m_vertices[0].y * d.y;\r\n      for (var i = 1; i < this.m_vertexCount; ++i) {\r\n         var value = this.m_vertices[i].x * d.x + this.m_vertices[i].y * d.y;\r\n         if (value > bestValue) {\r\n            bestIndex = i;\r\n            bestValue = value;\r\n         }\r\n      }\r\n      return this.m_vertices[bestIndex];\r\n   }\r\n   b2PolygonShape.prototype.Validate = function () {\r\n      return false;\r\n   }\r\n   b2PolygonShape.prototype.b2PolygonShape = function () {\r\n      this.__super.b2Shape.call(this);\r\n      this.m_type = b2Shape.e_polygonShape;\r\n      this.m_centroid = new b2Vec2();\r\n      this.m_vertices = new Vector();\r\n      this.m_normals = new Vector();\r\n   }\r\n   b2PolygonShape.prototype.Reserve = function (count) {\r\n      if (count === undefined) count = 0;\r\n      for (var i = parseInt(this.m_vertices.length); i < count; i++) {\r\n         this.m_vertices[i] = new b2Vec2();\r\n         this.m_normals[i] = new b2Vec2();\r\n      }\r\n   }\r\n   b2PolygonShape.ComputeCentroid = function (vs, count) {\r\n      if (count === undefined) count = 0;\r\n      var c = new b2Vec2();\r\n      var area = 0.0;\r\n      var p1X = 0.0;\r\n      var p1Y = 0.0;\r\n      var inv3 = 1.0 / 3.0;\r\n      for (var i = 0; i < count; ++i) {\r\n         var p2 = vs[i];\r\n         var p3 = i + 1 < count ? vs[parseInt(i + 1)] : vs[0];\r\n         var e1X = p2.x - p1X;\r\n         var e1Y = p2.y - p1Y;\r\n         var e2X = p3.x - p1X;\r\n         var e2Y = p3.y - p1Y;\r\n         var D = (e1X * e2Y - e1Y * e2X);\r\n         var triangleArea = 0.5 * D;area += triangleArea;\r\n         c.x += triangleArea * inv3 * (p1X + p2.x + p3.x);\r\n         c.y += triangleArea * inv3 * (p1Y + p2.y + p3.y);\r\n      }\r\n      c.x *= 1.0 / area;\r\n      c.y *= 1.0 / area;\r\n      return c;\r\n   }\r\n   b2PolygonShape.ComputeOBB = function (obb, vs, count) {\r\n      if (count === undefined) count = 0;\r\n      var i = 0;\r\n      var p = new Vector(count + 1);\r\n      for (i = 0;\r\n      i < count; ++i) {\r\n         p[i] = vs[i];\r\n      }\r\n      p[count] = p[0];\r\n      var minArea = Number.MAX_VALUE;\r\n      for (i = 1;\r\n      i <= count; ++i) {\r\n         var root = p[parseInt(i - 1)];\r\n         var uxX = p[i].x - root.x;\r\n         var uxY = p[i].y - root.y;\r\n         var length = Math.sqrt(uxX * uxX + uxY * uxY);\r\n         uxX /= length;\r\n         uxY /= length;\r\n         var uyX = (-uxY);\r\n         var uyY = uxX;\r\n         var lowerX = Number.MAX_VALUE;\r\n         var lowerY = Number.MAX_VALUE;\r\n         var upperX = (-Number.MAX_VALUE);\r\n         var upperY = (-Number.MAX_VALUE);\r\n         for (var j = 0; j < count; ++j) {\r\n            var dX = p[j].x - root.x;\r\n            var dY = p[j].y - root.y;\r\n            var rX = (uxX * dX + uxY * dY);\r\n            var rY = (uyX * dX + uyY * dY);\r\n            if (rX < lowerX) lowerX = rX;\r\n            if (rY < lowerY) lowerY = rY;\r\n            if (rX > upperX) upperX = rX;\r\n            if (rY > upperY) upperY = rY;\r\n         }\r\n         var area = (upperX - lowerX) * (upperY - lowerY);\r\n         if (area < 0.95 * minArea) {\r\n            minArea = area;\r\n            obb.R.col1.x = uxX;\r\n            obb.R.col1.y = uxY;\r\n            obb.R.col2.x = uyX;\r\n            obb.R.col2.y = uyY;\r\n            var centerX = 0.5 * (lowerX + upperX);\r\n            var centerY = 0.5 * (lowerY + upperY);\r\n            var tMat = obb.R;\r\n            obb.center.x = root.x + (tMat.col1.x * centerX + tMat.col2.x * centerY);\r\n            obb.center.y = root.y + (tMat.col1.y * centerX + tMat.col2.y * centerY);\r\n            obb.extents.x = 0.5 * (upperX - lowerX);\r\n            obb.extents.y = 0.5 * (upperY - lowerY);\r\n         }\r\n      }\r\n   }\r\n   Box2D.postDefs.push(function () {\r\n      Box2D.Collision.Shapes.b2PolygonShape.s_mat = new b2Mat22();\r\n   });\r\n   b2Shape.b2Shape = function () {};\r\n   b2Shape.prototype.Copy = function () {\r\n      return null;\r\n   }\r\n   b2Shape.prototype.Set = function (other) {\r\n      this.m_radius = other.m_radius;\r\n   }\r\n   b2Shape.prototype.GetType = function () {\r\n      return this.m_type;\r\n   }\r\n   b2Shape.prototype.TestPoint = function (xf, p) {\r\n      return false;\r\n   }\r\n   b2Shape.prototype.RayCast = function (output, input, transform) {\r\n      return false;\r\n   }\r\n   b2Shape.prototype.ComputeAABB = function (aabb, xf) {}\r\n   b2Shape.prototype.ComputeMass = function (massData, density) {\r\n      if (density === undefined) density = 0;\r\n   }\r\n   b2Shape.prototype.ComputeSubmergedArea = function (normal, offset, xf, c) {\r\n      if (offset === undefined) offset = 0;\r\n      return 0;\r\n   }\r\n   b2Shape.TestOverlap = function (shape1, transform1, shape2, transform2) {\r\n      var input = new b2DistanceInput();\r\n      input.proxyA = new b2DistanceProxy();\r\n      input.proxyA.Set(shape1);\r\n      input.proxyB = new b2DistanceProxy();\r\n      input.proxyB.Set(shape2);\r\n      input.transformA = transform1;\r\n      input.transformB = transform2;\r\n      input.useRadii = true;\r\n      var simplexCache = new b2SimplexCache();\r\n      simplexCache.count = 0;\r\n      var output = new b2DistanceOutput();\r\n      b2Distance.Distance(output, simplexCache, input);\r\n      return output.distance < 10.0 * Number.MIN_VALUE;\r\n   }\r\n   b2Shape.prototype.b2Shape = function () {\r\n      this.m_type = b2Shape.e_unknownShape;\r\n      this.m_radius = b2Settings.b2_linearSlop;\r\n   }\r\n   Box2D.postDefs.push(function () {\r\n      Box2D.Collision.Shapes.b2Shape.e_unknownShape = parseInt((-1));\r\n      Box2D.Collision.Shapes.b2Shape.e_circleShape = 0;\r\n      Box2D.Collision.Shapes.b2Shape.e_polygonShape = 1;\r\n      Box2D.Collision.Shapes.b2Shape.e_edgeShape = 2;\r\n      Box2D.Collision.Shapes.b2Shape.e_shapeTypeCount = 3;\r\n      Box2D.Collision.Shapes.b2Shape.e_hitCollide = 1;\r\n      Box2D.Collision.Shapes.b2Shape.e_missCollide = 0;\r\n      Box2D.Collision.Shapes.b2Shape.e_startsInsideCollide = parseInt((-1));\r\n   });\r\n})();\r\n(function () {\r\n   var b2Color = Box2D.Common.b2Color,\r\n      b2internal = Box2D.Common.b2internal,\r\n      b2Settings = Box2D.Common.b2Settings,\r\n      b2Mat22 = Box2D.Common.Math.b2Mat22,\r\n      b2Mat33 = Box2D.Common.Math.b2Mat33,\r\n      b2Math = Box2D.Common.Math.b2Math,\r\n      b2Sweep = Box2D.Common.Math.b2Sweep,\r\n      b2Transform = Box2D.Common.Math.b2Transform,\r\n      b2Vec2 = Box2D.Common.Math.b2Vec2,\r\n      b2Vec3 = Box2D.Common.Math.b2Vec3;\r\n\r\n   b2Color.b2Color = function () {\r\n      this._r = 0;\r\n      this._g = 0;\r\n      this._b = 0;\r\n   };\r\n   b2Color.prototype.b2Color = function (rr, gg, bb) {\r\n      if (rr === undefined) rr = 0;\r\n      if (gg === undefined) gg = 0;\r\n      if (bb === undefined) bb = 0;\r\n      this._r = Box2D.parseUInt(255 * b2Math.Clamp(rr, 0.0, 1.0));\r\n      this._g = Box2D.parseUInt(255 * b2Math.Clamp(gg, 0.0, 1.0));\r\n      this._b = Box2D.parseUInt(255 * b2Math.Clamp(bb, 0.0, 1.0));\r\n   }\r\n   b2Color.prototype.Set = function (rr, gg, bb) {\r\n      if (rr === undefined) rr = 0;\r\n      if (gg === undefined) gg = 0;\r\n      if (bb === undefined) bb = 0;\r\n      this._r = Box2D.parseUInt(255 * b2Math.Clamp(rr, 0.0, 1.0));\r\n      this._g = Box2D.parseUInt(255 * b2Math.Clamp(gg, 0.0, 1.0));\r\n      this._b = Box2D.parseUInt(255 * b2Math.Clamp(bb, 0.0, 1.0));\r\n   }\r\n   Object.defineProperty(b2Color.prototype, 'r', {\r\n      enumerable: false,\r\n      configurable: true,\r\n      set: function (rr) {\r\n         if (rr === undefined) rr = 0;\r\n         this._r = Box2D.parseUInt(255 * b2Math.Clamp(rr, 0.0, 1.0));\r\n      }\r\n   });\r\n   Object.defineProperty(b2Color.prototype, 'g', {\r\n      enumerable: false,\r\n      configurable: true,\r\n      set: function (gg) {\r\n         if (gg === undefined) gg = 0;\r\n         this._g = Box2D.parseUInt(255 * b2Math.Clamp(gg, 0.0, 1.0));\r\n      }\r\n   });\r\n   Object.defineProperty(b2Color.prototype, 'b', {\r\n      enumerable: false,\r\n      configurable: true,\r\n      set: function (bb) {\r\n         if (bb === undefined) bb = 0;\r\n         this._b = Box2D.parseUInt(255 * b2Math.Clamp(bb, 0.0, 1.0));\r\n      }\r\n   });\r\n   Object.defineProperty(b2Color.prototype, 'color', {\r\n      enumerable: false,\r\n      configurable: true,\r\n      get: function () {\r\n         return (this._r << 16) | (this._g << 8) | (this._b);\r\n      }\r\n   });\r\n   b2Settings.b2Settings = function () {};\r\n   b2Settings.b2MixFriction = function (friction1, friction2) {\r\n      if (friction1 === undefined) friction1 = 0;\r\n      if (friction2 === undefined) friction2 = 0;\r\n      return Math.sqrt(friction1 * friction2);\r\n   }\r\n   b2Settings.b2MixRestitution = function (restitution1, restitution2) {\r\n      if (restitution1 === undefined) restitution1 = 0;\r\n      if (restitution2 === undefined) restitution2 = 0;\r\n      return restitution1 > restitution2 ? restitution1 : restitution2;\r\n   }\r\n   b2Settings.b2Assert = function (a) {\r\n      if (!a) {\r\n         throw \"Assertion Failed\";\r\n      }\r\n   }\r\n   Box2D.postDefs.push(function () {\r\n      Box2D.Common.b2Settings.VERSION = \"2.1alpha\";\r\n      Box2D.Common.b2Settings.USHRT_MAX = 0x0000ffff;\r\n      Box2D.Common.b2Settings.b2_pi = Math.PI;\r\n      Box2D.Common.b2Settings.b2_maxManifoldPoints = 2;\r\n      Box2D.Common.b2Settings.b2_aabbExtension = 0.1;\r\n      Box2D.Common.b2Settings.b2_aabbMultiplier = 2.0;\r\n      Box2D.Common.b2Settings.b2_polygonRadius = 2.0 * b2Settings.b2_linearSlop;\r\n      Box2D.Common.b2Settings.b2_linearSlop = 0.005;\r\n      Box2D.Common.b2Settings.b2_angularSlop = 2.0 / 180.0 * b2Settings.b2_pi;\r\n      Box2D.Common.b2Settings.b2_toiSlop = 8.0 * b2Settings.b2_linearSlop;\r\n      Box2D.Common.b2Settings.b2_maxTOIContactsPerIsland = 32;\r\n      Box2D.Common.b2Settings.b2_maxTOIJointsPerIsland = 32;\r\n      Box2D.Common.b2Settings.b2_velocityThreshold = 1.0;\r\n      Box2D.Common.b2Settings.b2_maxLinearCorrection = 0.2;\r\n      Box2D.Common.b2Settings.b2_maxAngularCorrection = 8.0 / 180.0 * b2Settings.b2_pi;\r\n      Box2D.Common.b2Settings.b2_maxTranslation = 2.0;\r\n      Box2D.Common.b2Settings.b2_maxTranslationSquared = b2Settings.b2_maxTranslation * b2Settings.b2_maxTranslation;\r\n      Box2D.Common.b2Settings.b2_maxRotation = 0.5 * b2Settings.b2_pi;\r\n      Box2D.Common.b2Settings.b2_maxRotationSquared = b2Settings.b2_maxRotation * b2Settings.b2_maxRotation;\r\n      Box2D.Common.b2Settings.b2_contactBaumgarte = 0.2;\r\n      Box2D.Common.b2Settings.b2_timeToSleep = 0.5;\r\n      Box2D.Common.b2Settings.b2_linearSleepTolerance = 0.01;\r\n      Box2D.Common.b2Settings.b2_angularSleepTolerance = 2.0 / 180.0 * b2Settings.b2_pi;\r\n   });\r\n})();\r\n(function () {\r\n   var b2AABB = Box2D.Collision.b2AABB,\r\n      b2Color = Box2D.Common.b2Color,\r\n      b2internal = Box2D.Common.b2internal,\r\n      b2Settings = Box2D.Common.b2Settings,\r\n      b2Mat22 = Box2D.Common.Math.b2Mat22,\r\n      b2Mat33 = Box2D.Common.Math.b2Mat33,\r\n      b2Math = Box2D.Common.Math.b2Math,\r\n      b2Sweep = Box2D.Common.Math.b2Sweep,\r\n      b2Transform = Box2D.Common.Math.b2Transform,\r\n      b2Vec2 = Box2D.Common.Math.b2Vec2,\r\n      b2Vec3 = Box2D.Common.Math.b2Vec3;\r\n\r\n   b2Mat22.b2Mat22 = function () {\r\n      this.col1 = new b2Vec2();\r\n      this.col2 = new b2Vec2();\r\n   };\r\n   b2Mat22.prototype.b2Mat22 = function () {\r\n      this.SetIdentity();\r\n   }\r\n   b2Mat22.FromAngle = function (angle) {\r\n      if (angle === undefined) angle = 0;\r\n      var mat = new b2Mat22();\r\n      mat.Set(angle);\r\n      return mat;\r\n   }\r\n   b2Mat22.FromVV = function (c1, c2) {\r\n      var mat = new b2Mat22();\r\n      mat.SetVV(c1, c2);\r\n      return mat;\r\n   }\r\n   b2Mat22.prototype.Set = function (angle) {\r\n      if (angle === undefined) angle = 0;\r\n      var c = Math.cos(angle);\r\n      var s = Math.sin(angle);\r\n      this.col1.x = c;\r\n      this.col2.x = (-s);\r\n      this.col1.y = s;\r\n      this.col2.y = c;\r\n   }\r\n   b2Mat22.prototype.SetVV = function (c1, c2) {\r\n      this.col1.SetV(c1);\r\n      this.col2.SetV(c2);\r\n   }\r\n   b2Mat22.prototype.Copy = function () {\r\n      var mat = new b2Mat22();\r\n      mat.SetM(this);\r\n      return mat;\r\n   }\r\n   b2Mat22.prototype.SetM = function (m) {\r\n      this.col1.SetV(m.col1);\r\n      this.col2.SetV(m.col2);\r\n   }\r\n   b2Mat22.prototype.AddM = function (m) {\r\n      this.col1.x += m.col1.x;\r\n      this.col1.y += m.col1.y;\r\n      this.col2.x += m.col2.x;\r\n      this.col2.y += m.col2.y;\r\n   }\r\n   b2Mat22.prototype.SetIdentity = function () {\r\n      this.col1.x = 1.0;\r\n      this.col2.x = 0.0;\r\n      this.col1.y = 0.0;\r\n      this.col2.y = 1.0;\r\n   }\r\n   b2Mat22.prototype.SetZero = function () {\r\n      this.col1.x = 0.0;\r\n      this.col2.x = 0.0;\r\n      this.col1.y = 0.0;\r\n      this.col2.y = 0.0;\r\n   }\r\n   b2Mat22.prototype.GetAngle = function () {\r\n      return Math.atan2(this.col1.y, this.col1.x);\r\n   }\r\n   b2Mat22.prototype.GetInverse = function (out) {\r\n      var a = this.col1.x;\r\n      var b = this.col2.x;\r\n      var c = this.col1.y;\r\n      var d = this.col2.y;\r\n      var det = a * d - b * c;\r\n      if (det != 0.0) {\r\n         det = 1.0 / det;\r\n      }\r\n      out.col1.x = det * d;\r\n      out.col2.x = (-det * b);\r\n      out.col1.y = (-det * c);\r\n      out.col2.y = det * a;\r\n      return out;\r\n   }\r\n   b2Mat22.prototype.Solve = function (out, bX, bY) {\r\n      if (bX === undefined) bX = 0;\r\n      if (bY === undefined) bY = 0;\r\n      var a11 = this.col1.x;\r\n      var a12 = this.col2.x;\r\n      var a21 = this.col1.y;\r\n      var a22 = this.col2.y;\r\n      var det = a11 * a22 - a12 * a21;\r\n      if (det != 0.0) {\r\n         det = 1.0 / det;\r\n      }\r\n      out.x = det * (a22 * bX - a12 * bY);\r\n      out.y = det * (a11 * bY - a21 * bX);\r\n      return out;\r\n   }\r\n   b2Mat22.prototype.Abs = function () {\r\n      this.col1.Abs();\r\n      this.col2.Abs();\r\n   }\r\n   b2Mat33.b2Mat33 = function () {\r\n      this.col1 = new b2Vec3();\r\n      this.col2 = new b2Vec3();\r\n      this.col3 = new b2Vec3();\r\n   };\r\n   b2Mat33.prototype.b2Mat33 = function (c1, c2, c3) {\r\n      if (c1 === undefined) c1 = null;\r\n      if (c2 === undefined) c2 = null;\r\n      if (c3 === undefined) c3 = null;\r\n      if (!c1 && !c2 && !c3) {\r\n         this.col1.SetZero();\r\n         this.col2.SetZero();\r\n         this.col3.SetZero();\r\n      }\r\n      else {\r\n         this.col1.SetV(c1);\r\n         this.col2.SetV(c2);\r\n         this.col3.SetV(c3);\r\n      }\r\n   }\r\n   b2Mat33.prototype.SetVVV = function (c1, c2, c3) {\r\n      this.col1.SetV(c1);\r\n      this.col2.SetV(c2);\r\n      this.col3.SetV(c3);\r\n   }\r\n   b2Mat33.prototype.Copy = function () {\r\n      return new b2Mat33(this.col1, this.col2, this.col3);\r\n   }\r\n   b2Mat33.prototype.SetM = function (m) {\r\n      this.col1.SetV(m.col1);\r\n      this.col2.SetV(m.col2);\r\n      this.col3.SetV(m.col3);\r\n   }\r\n   b2Mat33.prototype.AddM = function (m) {\r\n      this.col1.x += m.col1.x;\r\n      this.col1.y += m.col1.y;\r\n      this.col1.z += m.col1.z;\r\n      this.col2.x += m.col2.x;\r\n      this.col2.y += m.col2.y;\r\n      this.col2.z += m.col2.z;\r\n      this.col3.x += m.col3.x;\r\n      this.col3.y += m.col3.y;\r\n      this.col3.z += m.col3.z;\r\n   }\r\n   b2Mat33.prototype.SetIdentity = function () {\r\n      this.col1.x = 1.0;\r\n      this.col2.x = 0.0;\r\n      this.col3.x = 0.0;\r\n      this.col1.y = 0.0;\r\n      this.col2.y = 1.0;\r\n      this.col3.y = 0.0;\r\n      this.col1.z = 0.0;\r\n      this.col2.z = 0.0;\r\n      this.col3.z = 1.0;\r\n   }\r\n   b2Mat33.prototype.SetZero = function () {\r\n      this.col1.x = 0.0;\r\n      this.col2.x = 0.0;\r\n      this.col3.x = 0.0;\r\n      this.col1.y = 0.0;\r\n      this.col2.y = 0.0;\r\n      this.col3.y = 0.0;\r\n      this.col1.z = 0.0;\r\n      this.col2.z = 0.0;\r\n      this.col3.z = 0.0;\r\n   }\r\n   b2Mat33.prototype.Solve22 = function (out, bX, bY) {\r\n      if (bX === undefined) bX = 0;\r\n      if (bY === undefined) bY = 0;\r\n      var a11 = this.col1.x;\r\n      var a12 = this.col2.x;\r\n      var a21 = this.col1.y;\r\n      var a22 = this.col2.y;\r\n      var det = a11 * a22 - a12 * a21;\r\n      if (det != 0.0) {\r\n         det = 1.0 / det;\r\n      }\r\n      out.x = det * (a22 * bX - a12 * bY);\r\n      out.y = det * (a11 * bY - a21 * bX);\r\n      return out;\r\n   }\r\n   b2Mat33.prototype.Solve33 = function (out, bX, bY, bZ) {\r\n      if (bX === undefined) bX = 0;\r\n      if (bY === undefined) bY = 0;\r\n      if (bZ === undefined) bZ = 0;\r\n      var a11 = this.col1.x;\r\n      var a21 = this.col1.y;\r\n      var a31 = this.col1.z;\r\n      var a12 = this.col2.x;\r\n      var a22 = this.col2.y;\r\n      var a32 = this.col2.z;\r\n      var a13 = this.col3.x;\r\n      var a23 = this.col3.y;\r\n      var a33 = this.col3.z;\r\n      var det = a11 * (a22 * a33 - a32 * a23) + a21 * (a32 * a13 - a12 * a33) + a31 * (a12 * a23 - a22 * a13);\r\n      if (det != 0.0) {\r\n         det = 1.0 / det;\r\n      }\r\n      out.x = det * (bX * (a22 * a33 - a32 * a23) + bY * (a32 * a13 - a12 * a33) + bZ * (a12 * a23 - a22 * a13));\r\n      out.y = det * (a11 * (bY * a33 - bZ * a23) + a21 * (bZ * a13 - bX * a33) + a31 * (bX * a23 - bY * a13));\r\n      out.z = det * (a11 * (a22 * bZ - a32 * bY) + a21 * (a32 * bX - a12 * bZ) + a31 * (a12 * bY - a22 * bX));\r\n      return out;\r\n   }\r\n   b2Math.b2Math = function () {};\r\n   b2Math.IsValid = function (x) {\r\n      if (x === undefined) x = 0;\r\n      return isFinite(x);\r\n   }\r\n   b2Math.Dot = function (a, b) {\r\n      return a.x * b.x + a.y * b.y;\r\n   }\r\n   b2Math.CrossVV = function (a, b) {\r\n      return a.x * b.y - a.y * b.x;\r\n   }\r\n   b2Math.CrossVF = function (a, s) {\r\n      if (s === undefined) s = 0;\r\n      var v = new b2Vec2(s * a.y, (-s * a.x));\r\n      return v;\r\n   }\r\n   b2Math.CrossFV = function (s, a) {\r\n      if (s === undefined) s = 0;\r\n      var v = new b2Vec2((-s * a.y), s * a.x);\r\n      return v;\r\n   }\r\n   b2Math.MulMV = function (A, v) {\r\n      var u = new b2Vec2(A.col1.x * v.x + A.col2.x * v.y, A.col1.y * v.x + A.col2.y * v.y);\r\n      return u;\r\n   }\r\n   b2Math.MulTMV = function (A, v) {\r\n      var u = new b2Vec2(b2Math.Dot(v, A.col1), b2Math.Dot(v, A.col2));\r\n      return u;\r\n   }\r\n   b2Math.MulX = function (T, v) {\r\n      var a = b2Math.MulMV(T.R, v);\r\n      a.x += T.position.x;\r\n      a.y += T.position.y;\r\n      return a;\r\n   }\r\n   b2Math.MulXT = function (T, v) {\r\n      var a = b2Math.SubtractVV(v, T.position);\r\n      var tX = (a.x * T.R.col1.x + a.y * T.R.col1.y);\r\n      a.y = (a.x * T.R.col2.x + a.y * T.R.col2.y);\r\n      a.x = tX;\r\n      return a;\r\n   }\r\n   b2Math.AddVV = function (a, b) {\r\n      var v = new b2Vec2(a.x + b.x, a.y + b.y);\r\n      return v;\r\n   }\r\n   b2Math.SubtractVV = function (a, b) {\r\n      var v = new b2Vec2(a.x - b.x, a.y - b.y);\r\n      return v;\r\n   }\r\n   b2Math.Distance = function (a, b) {\r\n      var cX = a.x - b.x;\r\n      var cY = a.y - b.y;\r\n      return Math.sqrt(cX * cX + cY * cY);\r\n   }\r\n   b2Math.DistanceSquared = function (a, b) {\r\n      var cX = a.x - b.x;\r\n      var cY = a.y - b.y;\r\n      return (cX * cX + cY * cY);\r\n   }\r\n   b2Math.MulFV = function (s, a) {\r\n      if (s === undefined) s = 0;\r\n      var v = new b2Vec2(s * a.x, s * a.y);\r\n      return v;\r\n   }\r\n   b2Math.AddMM = function (A, B) {\r\n      var C = b2Mat22.FromVV(b2Math.AddVV(A.col1, B.col1), b2Math.AddVV(A.col2, B.col2));\r\n      return C;\r\n   }\r\n   b2Math.MulMM = function (A, B) {\r\n      var C = b2Mat22.FromVV(b2Math.MulMV(A, B.col1), b2Math.MulMV(A, B.col2));\r\n      return C;\r\n   }\r\n   b2Math.MulTMM = function (A, B) {\r\n      var c1 = new b2Vec2(b2Math.Dot(A.col1, B.col1), b2Math.Dot(A.col2, B.col1));\r\n      var c2 = new b2Vec2(b2Math.Dot(A.col1, B.col2), b2Math.Dot(A.col2, B.col2));\r\n      var C = b2Mat22.FromVV(c1, c2);\r\n      return C;\r\n   }\r\n   b2Math.Abs = function (a) {\r\n      if (a === undefined) a = 0;\r\n      return a > 0.0 ? a : (-a);\r\n   }\r\n   b2Math.AbsV = function (a) {\r\n      var b = new b2Vec2(b2Math.Abs(a.x), b2Math.Abs(a.y));\r\n      return b;\r\n   }\r\n   b2Math.AbsM = function (A) {\r\n      var B = b2Mat22.FromVV(b2Math.AbsV(A.col1), b2Math.AbsV(A.col2));\r\n      return B;\r\n   }\r\n   b2Math.Min = function (a, b) {\r\n      if (a === undefined) a = 0;\r\n      if (b === undefined) b = 0;\r\n      return a < b ? a : b;\r\n   }\r\n   b2Math.MinV = function (a, b) {\r\n      var c = new b2Vec2(b2Math.Min(a.x, b.x), b2Math.Min(a.y, b.y));\r\n      return c;\r\n   }\r\n   b2Math.Max = function (a, b) {\r\n      if (a === undefined) a = 0;\r\n      if (b === undefined) b = 0;\r\n      return a > b ? a : b;\r\n   }\r\n   b2Math.MaxV = function (a, b) {\r\n      var c = new b2Vec2(b2Math.Max(a.x, b.x), b2Math.Max(a.y, b.y));\r\n      return c;\r\n   }\r\n   b2Math.Clamp = function (a, low, high) {\r\n      if (a === undefined) a = 0;\r\n      if (low === undefined) low = 0;\r\n      if (high === undefined) high = 0;\r\n      return a < low ? low : a > high ? high : a;\r\n   }\r\n   b2Math.ClampV = function (a, low, high) {\r\n      return b2Math.MaxV(low, b2Math.MinV(a, high));\r\n   }\r\n   b2Math.Swap = function (a, b) {\r\n      var tmp = a[0];\r\n      a[0] = b[0];\r\n      b[0] = tmp;\r\n   }\r\n   b2Math.Random = function () {\r\n      return Math.random() * 2 - 1;\r\n   }\r\n   b2Math.RandomRange = function (lo, hi) {\r\n      if (lo === undefined) lo = 0;\r\n      if (hi === undefined) hi = 0;\r\n      var r = Math.random();\r\n      r = (hi - lo) * r + lo;\r\n      return r;\r\n   }\r\n   b2Math.NextPowerOfTwo = function (x) {\r\n      if (x === undefined) x = 0;\r\n      x |= (x >> 1) & 0x7FFFFFFF;\r\n      x |= (x >> 2) & 0x3FFFFFFF;\r\n      x |= (x >> 4) & 0x0FFFFFFF;\r\n      x |= (x >> 8) & 0x00FFFFFF;\r\n      x |= (x >> 16) & 0x0000FFFF;\r\n      return x + 1;\r\n   }\r\n   b2Math.IsPowerOfTwo = function (x) {\r\n      if (x === undefined) x = 0;\r\n      var result = x > 0 && (x & (x - 1)) == 0;\r\n      return result;\r\n   }\r\n   Box2D.postDefs.push(function () {\r\n      Box2D.Common.Math.b2Math.b2Vec2_zero = new b2Vec2(0.0, 0.0);\r\n      Box2D.Common.Math.b2Math.b2Mat22_identity = b2Mat22.FromVV(new b2Vec2(1.0, 0.0), new b2Vec2(0.0, 1.0));\r\n      Box2D.Common.Math.b2Math.b2Transform_identity = new b2Transform(b2Math.b2Vec2_zero, b2Math.b2Mat22_identity);\r\n   });\r\n   b2Sweep.b2Sweep = function () {\r\n      this.localCenter = new b2Vec2();\r\n      this.c0 = new b2Vec2;\r\n      this.c = new b2Vec2();\r\n   };\r\n   b2Sweep.prototype.Set = function (other) {\r\n      this.localCenter.SetV(other.localCenter);\r\n      this.c0.SetV(other.c0);\r\n      this.c.SetV(other.c);\r\n      this.a0 = other.a0;\r\n      this.a = other.a;\r\n      this.t0 = other.t0;\r\n   }\r\n   b2Sweep.prototype.Copy = function () {\r\n      var copy = new b2Sweep();\r\n      copy.localCenter.SetV(this.localCenter);\r\n      copy.c0.SetV(this.c0);\r\n      copy.c.SetV(this.c);\r\n      copy.a0 = this.a0;\r\n      copy.a = this.a;\r\n      copy.t0 = this.t0;\r\n      return copy;\r\n   }\r\n   b2Sweep.prototype.GetTransform = function (xf, alpha) {\r\n      if (alpha === undefined) alpha = 0;\r\n      xf.position.x = (1.0 - alpha) * this.c0.x + alpha * this.c.x;\r\n      xf.position.y = (1.0 - alpha) * this.c0.y + alpha * this.c.y;\r\n      var angle = (1.0 - alpha) * this.a0 + alpha * this.a;\r\n      xf.R.Set(angle);\r\n      var tMat = xf.R;\r\n      xf.position.x -= (tMat.col1.x * this.localCenter.x + tMat.col2.x * this.localCenter.y);\r\n      xf.position.y -= (tMat.col1.y * this.localCenter.x + tMat.col2.y * this.localCenter.y);\r\n   }\r\n   b2Sweep.prototype.Advance = function (t) {\r\n      if (t === undefined) t = 0;\r\n      if (this.t0 < t && 1.0 - this.t0 > Number.MIN_VALUE) {\r\n         var alpha = (t - this.t0) / (1.0 - this.t0);\r\n         this.c0.x = (1.0 - alpha) * this.c0.x + alpha * this.c.x;\r\n         this.c0.y = (1.0 - alpha) * this.c0.y + alpha * this.c.y;\r\n         this.a0 = (1.0 - alpha) * this.a0 + alpha * this.a;\r\n         this.t0 = t;\r\n      }\r\n   }\r\n   b2Transform.b2Transform = function () {\r\n      this.position = new b2Vec2;\r\n      this.R = new b2Mat22();\r\n   };\r\n   b2Transform.prototype.b2Transform = function (pos, r) {\r\n      if (pos === undefined) pos = null;\r\n      if (r === undefined) r = null;\r\n      if (pos) {\r\n         this.position.SetV(pos);\r\n         this.R.SetM(r);\r\n      }\r\n   }\r\n   b2Transform.prototype.Initialize = function (pos, r) {\r\n      this.position.SetV(pos);\r\n      this.R.SetM(r);\r\n   }\r\n   b2Transform.prototype.SetIdentity = function () {\r\n      this.position.SetZero();\r\n      this.R.SetIdentity();\r\n   }\r\n   b2Transform.prototype.Set = function (x) {\r\n      this.position.SetV(x.position);\r\n      this.R.SetM(x.R);\r\n   }\r\n   b2Transform.prototype.GetAngle = function () {\r\n      return Math.atan2(this.R.col1.y, this.R.col1.x);\r\n   }\r\n   b2Vec2.b2Vec2 = function () {};\r\n   b2Vec2.prototype.b2Vec2 = function (x_, y_) {\r\n      if (x_ === undefined) x_ = 0;\r\n      if (y_ === undefined) y_ = 0;\r\n      this.x = x_;\r\n      this.y = y_;\r\n   }\r\n   b2Vec2.prototype.SetZero = function () {\r\n      this.x = 0.0;\r\n      this.y = 0.0;\r\n   }\r\n   b2Vec2.prototype.Set = function (x_, y_) {\r\n      if (x_ === undefined) x_ = 0;\r\n      if (y_ === undefined) y_ = 0;\r\n      this.x = x_;\r\n      this.y = y_;\r\n   }\r\n   b2Vec2.prototype.SetV = function (v) {\r\n      this.x = v.x;\r\n      this.y = v.y;\r\n   }\r\n   b2Vec2.prototype.GetNegative = function () {\r\n      return new b2Vec2((-this.x), (-this.y));\r\n   }\r\n   b2Vec2.prototype.NegativeSelf = function () {\r\n      this.x = (-this.x);\r\n      this.y = (-this.y);\r\n   }\r\n   b2Vec2.Make = function (x_, y_) {\r\n      if (x_ === undefined) x_ = 0;\r\n      if (y_ === undefined) y_ = 0;\r\n      return new b2Vec2(x_, y_);\r\n   }\r\n   b2Vec2.prototype.Copy = function () {\r\n      return new b2Vec2(this.x, this.y);\r\n   }\r\n   b2Vec2.prototype.Add = function (v) {\r\n      this.x += v.x;\r\n      this.y += v.y;\r\n   }\r\n   b2Vec2.prototype.Subtract = function (v) {\r\n      this.x -= v.x;\r\n      this.y -= v.y;\r\n   }\r\n   b2Vec2.prototype.Multiply = function (a) {\r\n      if (a === undefined) a = 0;\r\n      this.x *= a;\r\n      this.y *= a;\r\n   }\r\n   b2Vec2.prototype.MulM = function (A) {\r\n      var tX = this.x;\r\n      this.x = A.col1.x * tX + A.col2.x * this.y;\r\n      this.y = A.col1.y * tX + A.col2.y * this.y;\r\n   }\r\n   b2Vec2.prototype.MulTM = function (A) {\r\n      var tX = b2Math.Dot(this, A.col1);\r\n      this.y = b2Math.Dot(this, A.col2);\r\n      this.x = tX;\r\n   }\r\n   b2Vec2.prototype.CrossVF = function (s) {\r\n      if (s === undefined) s = 0;\r\n      var tX = this.x;\r\n      this.x = s * this.y;\r\n      this.y = (-s * tX);\r\n   }\r\n   b2Vec2.prototype.CrossFV = function (s) {\r\n      if (s === undefined) s = 0;\r\n      var tX = this.x;\r\n      this.x = (-s * this.y);\r\n      this.y = s * tX;\r\n   }\r\n   b2Vec2.prototype.MinV = function (b) {\r\n      this.x = this.x < b.x ? this.x : b.x;\r\n      this.y = this.y < b.y ? this.y : b.y;\r\n   }\r\n   b2Vec2.prototype.MaxV = function (b) {\r\n      this.x = this.x > b.x ? this.x : b.x;\r\n      this.y = this.y > b.y ? this.y : b.y;\r\n   }\r\n   b2Vec2.prototype.Abs = function () {\r\n      if (this.x < 0) this.x = (-this.x);\r\n      if (this.y < 0) this.y = (-this.y);\r\n   }\r\n   b2Vec2.prototype.Length = function () {\r\n      return Math.sqrt(this.x * this.x + this.y * this.y);\r\n   }\r\n   b2Vec2.prototype.LengthSquared = function () {\r\n      return (this.x * this.x + this.y * this.y);\r\n   }\r\n   b2Vec2.prototype.Normalize = function () {\r\n      var length = Math.sqrt(this.x * this.x + this.y * this.y);\r\n      if (length < Number.MIN_VALUE) {\r\n         return 0.0;\r\n      }\r\n      var invLength = 1.0 / length;\r\n      this.x *= invLength;\r\n      this.y *= invLength;\r\n      return length;\r\n   }\r\n   b2Vec2.prototype.IsValid = function () {\r\n      return b2Math.IsValid(this.x) && b2Math.IsValid(this.y);\r\n   }\r\n   b2Vec3.b2Vec3 = function () {};\r\n   b2Vec3.prototype.b2Vec3 = function (x, y, z) {\r\n      if (x === undefined) x = 0;\r\n      if (y === undefined) y = 0;\r\n      if (z === undefined) z = 0;\r\n      this.x = x;\r\n      this.y = y;\r\n      this.z = z;\r\n   }\r\n   b2Vec3.prototype.SetZero = function () {\r\n      this.x = this.y = this.z = 0.0;\r\n   }\r\n   b2Vec3.prototype.Set = function (x, y, z) {\r\n      if (x === undefined) x = 0;\r\n      if (y === undefined) y = 0;\r\n      if (z === undefined) z = 0;\r\n      this.x = x;\r\n      this.y = y;\r\n      this.z = z;\r\n   }\r\n   b2Vec3.prototype.SetV = function (v) {\r\n      this.x = v.x;\r\n      this.y = v.y;\r\n      this.z = v.z;\r\n   }\r\n   b2Vec3.prototype.GetNegative = function () {\r\n      return new b2Vec3((-this.x), (-this.y), (-this.z));\r\n   }\r\n   b2Vec3.prototype.NegativeSelf = function () {\r\n      this.x = (-this.x);\r\n      this.y = (-this.y);\r\n      this.z = (-this.z);\r\n   }\r\n   b2Vec3.prototype.Copy = function () {\r\n      return new b2Vec3(this.x, this.y, this.z);\r\n   }\r\n   b2Vec3.prototype.Add = function (v) {\r\n      this.x += v.x;\r\n      this.y += v.y;\r\n      this.z += v.z;\r\n   }\r\n   b2Vec3.prototype.Subtract = function (v) {\r\n      this.x -= v.x;\r\n      this.y -= v.y;\r\n      this.z -= v.z;\r\n   }\r\n   b2Vec3.prototype.Multiply = function (a) {\r\n      if (a === undefined) a = 0;\r\n      this.x *= a;\r\n      this.y *= a;\r\n      this.z *= a;\r\n   }\r\n})();\r\n(function () {\r\n   var b2ControllerEdge = Box2D.Dynamics.Controllers.b2ControllerEdge,\r\n      b2Mat22 = Box2D.Common.Math.b2Mat22,\r\n      b2Mat33 = Box2D.Common.Math.b2Mat33,\r\n      b2Math = Box2D.Common.Math.b2Math,\r\n      b2Sweep = Box2D.Common.Math.b2Sweep,\r\n      b2Transform = Box2D.Common.Math.b2Transform,\r\n      b2Vec2 = Box2D.Common.Math.b2Vec2,\r\n      b2Vec3 = Box2D.Common.Math.b2Vec3,\r\n      b2Color = Box2D.Common.b2Color,\r\n      b2internal = Box2D.Common.b2internal,\r\n      b2Settings = Box2D.Common.b2Settings,\r\n      b2AABB = Box2D.Collision.b2AABB,\r\n      b2Bound = Box2D.Collision.b2Bound,\r\n      b2BoundValues = Box2D.Collision.b2BoundValues,\r\n      b2Collision = Box2D.Collision.b2Collision,\r\n      b2ContactID = Box2D.Collision.b2ContactID,\r\n      b2ContactPoint = Box2D.Collision.b2ContactPoint,\r\n      b2Distance = Box2D.Collision.b2Distance,\r\n      b2DistanceInput = Box2D.Collision.b2DistanceInput,\r\n      b2DistanceOutput = Box2D.Collision.b2DistanceOutput,\r\n      b2DistanceProxy = Box2D.Collision.b2DistanceProxy,\r\n      b2DynamicTree = Box2D.Collision.b2DynamicTree,\r\n      b2DynamicTreeBroadPhase = Box2D.Collision.b2DynamicTreeBroadPhase,\r\n      b2DynamicTreeNode = Box2D.Collision.b2DynamicTreeNode,\r\n      b2DynamicTreePair = Box2D.Collision.b2DynamicTreePair,\r\n      b2Manifold = Box2D.Collision.b2Manifold,\r\n      b2ManifoldPoint = Box2D.Collision.b2ManifoldPoint,\r\n      b2Point = Box2D.Collision.b2Point,\r\n      b2RayCastInput = Box2D.Collision.b2RayCastInput,\r\n      b2RayCastOutput = Box2D.Collision.b2RayCastOutput,\r\n      b2Segment = Box2D.Collision.b2Segment,\r\n      b2SeparationFunction = Box2D.Collision.b2SeparationFunction,\r\n      b2Simplex = Box2D.Collision.b2Simplex,\r\n      b2SimplexCache = Box2D.Collision.b2SimplexCache,\r\n      b2SimplexVertex = Box2D.Collision.b2SimplexVertex,\r\n      b2TimeOfImpact = Box2D.Collision.b2TimeOfImpact,\r\n      b2TOIInput = Box2D.Collision.b2TOIInput,\r\n      b2WorldManifold = Box2D.Collision.b2WorldManifold,\r\n      ClipVertex = Box2D.Collision.ClipVertex,\r\n      Features = Box2D.Collision.Features,\r\n      IBroadPhase = Box2D.Collision.IBroadPhase,\r\n      b2CircleShape = Box2D.Collision.Shapes.b2CircleShape,\r\n      b2EdgeChainDef = Box2D.Collision.Shapes.b2EdgeChainDef,\r\n      b2EdgeShape = Box2D.Collision.Shapes.b2EdgeShape,\r\n      b2MassData = Box2D.Collision.Shapes.b2MassData,\r\n      b2PolygonShape = Box2D.Collision.Shapes.b2PolygonShape,\r\n      b2Shape = Box2D.Collision.Shapes.b2Shape,\r\n      b2Body = Box2D.Dynamics.b2Body,\r\n      b2BodyDef = Box2D.Dynamics.b2BodyDef,\r\n      b2ContactFilter = Box2D.Dynamics.b2ContactFilter,\r\n      b2ContactImpulse = Box2D.Dynamics.b2ContactImpulse,\r\n      b2ContactListener = Box2D.Dynamics.b2ContactListener,\r\n      b2ContactManager = Box2D.Dynamics.b2ContactManager,\r\n      b2DebugDraw = Box2D.Dynamics.b2DebugDraw,\r\n      b2DestructionListener = Box2D.Dynamics.b2DestructionListener,\r\n      b2FilterData = Box2D.Dynamics.b2FilterData,\r\n      b2Fixture = Box2D.Dynamics.b2Fixture,\r\n      b2FixtureDef = Box2D.Dynamics.b2FixtureDef,\r\n      b2Island = Box2D.Dynamics.b2Island,\r\n      b2TimeStep = Box2D.Dynamics.b2TimeStep,\r\n      b2World = Box2D.Dynamics.b2World,\r\n      b2CircleContact = Box2D.Dynamics.Contacts.b2CircleContact,\r\n      b2Contact = Box2D.Dynamics.Contacts.b2Contact,\r\n      b2ContactConstraint = Box2D.Dynamics.Contacts.b2ContactConstraint,\r\n      b2ContactConstraintPoint = Box2D.Dynamics.Contacts.b2ContactConstraintPoint,\r\n      b2ContactEdge = Box2D.Dynamics.Contacts.b2ContactEdge,\r\n      b2ContactFactory = Box2D.Dynamics.Contacts.b2ContactFactory,\r\n      b2ContactRegister = Box2D.Dynamics.Contacts.b2ContactRegister,\r\n      b2ContactResult = Box2D.Dynamics.Contacts.b2ContactResult,\r\n      b2ContactSolver = Box2D.Dynamics.Contacts.b2ContactSolver,\r\n      b2EdgeAndCircleContact = Box2D.Dynamics.Contacts.b2EdgeAndCircleContact,\r\n      b2NullContact = Box2D.Dynamics.Contacts.b2NullContact,\r\n      b2PolyAndCircleContact = Box2D.Dynamics.Contacts.b2PolyAndCircleContact,\r\n      b2PolyAndEdgeContact = Box2D.Dynamics.Contacts.b2PolyAndEdgeContact,\r\n      b2PolygonContact = Box2D.Dynamics.Contacts.b2PolygonContact,\r\n      b2PositionSolverManifold = Box2D.Dynamics.Contacts.b2PositionSolverManifold,\r\n      b2Controller = Box2D.Dynamics.Controllers.b2Controller,\r\n      b2DistanceJoint = Box2D.Dynamics.Joints.b2DistanceJoint,\r\n      b2DistanceJointDef = Box2D.Dynamics.Joints.b2DistanceJointDef,\r\n      b2FrictionJoint = Box2D.Dynamics.Joints.b2FrictionJoint,\r\n      b2FrictionJointDef = Box2D.Dynamics.Joints.b2FrictionJointDef,\r\n      b2GearJoint = Box2D.Dynamics.Joints.b2GearJoint,\r\n      b2GearJointDef = Box2D.Dynamics.Joints.b2GearJointDef,\r\n      b2Jacobian = Box2D.Dynamics.Joints.b2Jacobian,\r\n      b2Joint = Box2D.Dynamics.Joints.b2Joint,\r\n      b2JointDef = Box2D.Dynamics.Joints.b2JointDef,\r\n      b2JointEdge = Box2D.Dynamics.Joints.b2JointEdge,\r\n      b2LineJoint = Box2D.Dynamics.Joints.b2LineJoint,\r\n      b2LineJointDef = Box2D.Dynamics.Joints.b2LineJointDef,\r\n      b2MouseJoint = Box2D.Dynamics.Joints.b2MouseJoint,\r\n      b2MouseJointDef = Box2D.Dynamics.Joints.b2MouseJointDef,\r\n      b2PrismaticJoint = Box2D.Dynamics.Joints.b2PrismaticJoint,\r\n      b2PrismaticJointDef = Box2D.Dynamics.Joints.b2PrismaticJointDef,\r\n      b2PulleyJoint = Box2D.Dynamics.Joints.b2PulleyJoint,\r\n      b2PulleyJointDef = Box2D.Dynamics.Joints.b2PulleyJointDef,\r\n      b2RevoluteJoint = Box2D.Dynamics.Joints.b2RevoluteJoint,\r\n      b2RevoluteJointDef = Box2D.Dynamics.Joints.b2RevoluteJointDef,\r\n      b2WeldJoint = Box2D.Dynamics.Joints.b2WeldJoint,\r\n      b2WeldJointDef = Box2D.Dynamics.Joints.b2WeldJointDef;\r\n\r\n   b2Body.b2Body = function () {\r\n      this.m_xf = new b2Transform();\r\n      this.m_sweep = new b2Sweep();\r\n      this.m_linearVelocity = new b2Vec2();\r\n      this.m_force = new b2Vec2();\r\n   };\r\n   b2Body.prototype.connectEdges = function (s1, s2, angle1) {\r\n      if (angle1 === undefined) angle1 = 0;\r\n      var angle2 = Math.atan2(s2.GetDirectionVector().y, s2.GetDirectionVector().x);\r\n      var coreOffset = Math.tan((angle2 - angle1) * 0.5);\r\n      var core = b2Math.MulFV(coreOffset, s2.GetDirectionVector());\r\n      core = b2Math.SubtractVV(core, s2.GetNormalVector());\r\n      core = b2Math.MulFV(b2Settings.b2_toiSlop, core);\r\n      core = b2Math.AddVV(core, s2.GetVertex1());\r\n      var cornerDir = b2Math.AddVV(s1.GetDirectionVector(), s2.GetDirectionVector());\r\n      cornerDir.Normalize();\r\n      var convex = b2Math.Dot(s1.GetDirectionVector(), s2.GetNormalVector()) > 0.0;\r\n      s1.SetNextEdge(s2, core, cornerDir, convex);\r\n      s2.SetPrevEdge(s1, core, cornerDir, convex);\r\n      return angle2;\r\n   }\r\n   b2Body.prototype.CreateFixture = function (def) {\r\n      if (this.m_world.IsLocked() == true) {\r\n         return null;\r\n      }\r\n      var fixture = new b2Fixture();\r\n      fixture.Create(this, this.m_xf, def);\r\n      if (this.m_flags & b2Body.e_activeFlag) {\r\n         var broadPhase = this.m_world.m_contactManager.m_broadPhase;\r\n         fixture.CreateProxy(broadPhase, this.m_xf);\r\n      }\r\n      fixture.m_next = this.m_fixtureList;\r\n      this.m_fixtureList = fixture;\r\n      ++this.m_fixtureCount;\r\n      fixture.m_body = this;\r\n      if (fixture.m_density > 0.0) {\r\n         this.ResetMassData();\r\n      }\r\n      this.m_world.m_flags |= b2World.e_newFixture;\r\n      return fixture;\r\n   }\r\n   b2Body.prototype.CreateFixture2 = function (shape, density) {\r\n      if (density === undefined) density = 0.0;\r\n      var def = new b2FixtureDef();\r\n      def.shape = shape;\r\n      def.density = density;\r\n      return this.CreateFixture(def);\r\n   }\r\n   b2Body.prototype.DestroyFixture = function (fixture) {\r\n      if (this.m_world.IsLocked() == true) {\r\n         return;\r\n      }\r\n      var node = this.m_fixtureList;\r\n      var ppF = null;\r\n      var found = false;\r\n      while (node != null) {\r\n         if (node == fixture) {\r\n            if (ppF) ppF.m_next = fixture.m_next;\r\n            else this.m_fixtureList = fixture.m_next;\r\n            found = true;\r\n            break;\r\n         }\r\n         ppF = node;\r\n         node = node.m_next;\r\n      }\r\n      var edge = this.m_contactList;\r\n      while (edge) {\r\n         var c = edge.contact;\r\n         edge = edge.next;\r\n         var fixtureA = c.GetFixtureA();\r\n         var fixtureB = c.GetFixtureB();\r\n         if (fixture == fixtureA || fixture == fixtureB) {\r\n            this.m_world.m_contactManager.Destroy(c);\r\n         }\r\n      }\r\n      if (this.m_flags & b2Body.e_activeFlag) {\r\n         var broadPhase = this.m_world.m_contactManager.m_broadPhase;\r\n         fixture.DestroyProxy(broadPhase);\r\n      }\r\n      else {}\r\n      fixture.Destroy();\r\n      fixture.m_body = null;\r\n      fixture.m_next = null;\r\n      --this.m_fixtureCount;\r\n      this.ResetMassData();\r\n   }\r\n   b2Body.prototype.SetPositionAndAngle = function (position, angle) {\r\n      if (angle === undefined) angle = 0;\r\n      var f;\r\n      if (this.m_world.IsLocked() == true) {\r\n         return;\r\n      }\r\n      this.m_xf.R.Set(angle);\r\n      this.m_xf.position.SetV(position);\r\n      var tMat = this.m_xf.R;\r\n      var tVec = this.m_sweep.localCenter;\r\n      this.m_sweep.c.x = (tMat.col1.x * tVec.x + tMat.col2.x * tVec.y);\r\n      this.m_sweep.c.y = (tMat.col1.y * tVec.x + tMat.col2.y * tVec.y);\r\n      this.m_sweep.c.x += this.m_xf.position.x;\r\n      this.m_sweep.c.y += this.m_xf.position.y;\r\n      this.m_sweep.c0.SetV(this.m_sweep.c);\r\n      this.m_sweep.a0 = this.m_sweep.a = angle;\r\n      var broadPhase = this.m_world.m_contactManager.m_broadPhase;\r\n      for (f = this.m_fixtureList;\r\n      f; f = f.m_next) {\r\n         f.Synchronize(broadPhase, this.m_xf, this.m_xf);\r\n      }\r\n      this.m_world.m_contactManager.FindNewContacts();\r\n   }\r\n   b2Body.prototype.SetTransform = function (xf) {\r\n      this.SetPositionAndAngle(xf.position, xf.GetAngle());\r\n   }\r\n   b2Body.prototype.GetTransform = function () {\r\n      return this.m_xf;\r\n   }\r\n   b2Body.prototype.GetPosition = function () {\r\n      return this.m_xf.position;\r\n   }\r\n   b2Body.prototype.SetPosition = function (position) {\r\n      this.SetPositionAndAngle(position, this.GetAngle());\r\n   }\r\n   b2Body.prototype.GetAngle = function () {\r\n      return this.m_sweep.a;\r\n   }\r\n   b2Body.prototype.SetAngle = function (angle) {\r\n      if (angle === undefined) angle = 0;\r\n      this.SetPositionAndAngle(this.GetPosition(), angle);\r\n   }\r\n   b2Body.prototype.GetWorldCenter = function () {\r\n      return this.m_sweep.c;\r\n   }\r\n   b2Body.prototype.GetLocalCenter = function () {\r\n      return this.m_sweep.localCenter;\r\n   }\r\n   b2Body.prototype.SetLinearVelocity = function (v) {\r\n      if (this.m_type == b2Body.b2_staticBody) {\r\n         return;\r\n      }\r\n      this.m_linearVelocity.SetV(v);\r\n   }\r\n   b2Body.prototype.GetLinearVelocity = function () {\r\n      return this.m_linearVelocity;\r\n   }\r\n   b2Body.prototype.SetAngularVelocity = function (omega) {\r\n      if (omega === undefined) omega = 0;\r\n      if (this.m_type == b2Body.b2_staticBody) {\r\n         return;\r\n      }\r\n      this.m_angularVelocity = omega;\r\n   }\r\n   b2Body.prototype.GetAngularVelocity = function () {\r\n      return this.m_angularVelocity;\r\n   }\r\n   b2Body.prototype.GetDefinition = function () {\r\n      var bd = new b2BodyDef();\r\n      bd.type = this.GetType();\r\n      bd.allowSleep = (this.m_flags & b2Body.e_allowSleepFlag) == b2Body.e_allowSleepFlag;\r\n      bd.angle = this.GetAngle();\r\n      bd.angularDamping = this.m_angularDamping;\r\n      bd.angularVelocity = this.m_angularVelocity;\r\n      bd.fixedRotation = (this.m_flags & b2Body.e_fixedRotationFlag) == b2Body.e_fixedRotationFlag;\r\n      bd.bullet = (this.m_flags & b2Body.e_bulletFlag) == b2Body.e_bulletFlag;\r\n      bd.awake = (this.m_flags & b2Body.e_awakeFlag) == b2Body.e_awakeFlag;\r\n      bd.linearDamping = this.m_linearDamping;\r\n      bd.linearVelocity.SetV(this.GetLinearVelocity());\r\n      bd.position = this.GetPosition();\r\n      bd.userData = this.GetUserData();\r\n      return bd;\r\n   }\r\n   b2Body.prototype.ApplyForce = function (force, point) {\r\n      if (this.m_type != b2Body.b2_dynamicBody) {\r\n         return;\r\n      }\r\n      if (this.IsAwake() == false) {\r\n         this.SetAwake(true);\r\n      }\r\n      this.m_force.x += force.x;\r\n      this.m_force.y += force.y;\r\n      this.m_torque += ((point.x - this.m_sweep.c.x) * force.y - (point.y - this.m_sweep.c.y) * force.x);\r\n   }\r\n   b2Body.prototype.ApplyTorque = function (torque) {\r\n      if (torque === undefined) torque = 0;\r\n      if (this.m_type != b2Body.b2_dynamicBody) {\r\n         return;\r\n      }\r\n      if (this.IsAwake() == false) {\r\n         this.SetAwake(true);\r\n      }\r\n      this.m_torque += torque;\r\n   }\r\n   b2Body.prototype.ApplyImpulse = function (impulse, point) {\r\n      if (this.m_type != b2Body.b2_dynamicBody) {\r\n         return;\r\n      }\r\n      if (this.IsAwake() == false) {\r\n         this.SetAwake(true);\r\n      }\r\n      this.m_linearVelocity.x += this.m_invMass * impulse.x;\r\n      this.m_linearVelocity.y += this.m_invMass * impulse.y;\r\n      this.m_angularVelocity += this.m_invI * ((point.x - this.m_sweep.c.x) * impulse.y - (point.y - this.m_sweep.c.y) * impulse.x);\r\n   }\r\n   b2Body.prototype.Split = function (callback) {\r\n      var linearVelocity = this.GetLinearVelocity().Copy();\r\n      var angularVelocity = this.GetAngularVelocity();\r\n      var center = this.GetWorldCenter();\r\n      var body1 = this;\r\n      var body2 = this.m_world.CreateBody(this.GetDefinition());\r\n      var prev;\r\n      for (var f = body1.m_fixtureList; f;) {\r\n         if (callback(f)) {\r\n            var next = f.m_next;\r\n            if (prev) {\r\n               prev.m_next = next;\r\n            }\r\n            else {\r\n               body1.m_fixtureList = next;\r\n            }\r\n            body1.m_fixtureCount--;\r\n            f.m_next = body2.m_fixtureList;\r\n            body2.m_fixtureList = f;\r\n            body2.m_fixtureCount++;\r\n            f.m_body = body2;\r\n            f = next;\r\n         }\r\n         else {\r\n            prev = f;\r\n            f = f.m_next;\r\n         }\r\n      }\r\n      body1.ResetMassData();\r\n      body2.ResetMassData();\r\n      var center1 = body1.GetWorldCenter();\r\n      var center2 = body2.GetWorldCenter();\r\n      var velocity1 = b2Math.AddVV(linearVelocity, b2Math.CrossFV(angularVelocity, b2Math.SubtractVV(center1, center)));\r\n      var velocity2 = b2Math.AddVV(linearVelocity, b2Math.CrossFV(angularVelocity, b2Math.SubtractVV(center2, center)));\r\n      body1.SetLinearVelocity(velocity1);\r\n      body2.SetLinearVelocity(velocity2);\r\n      body1.SetAngularVelocity(angularVelocity);\r\n      body2.SetAngularVelocity(angularVelocity);\r\n      body1.SynchronizeFixtures();\r\n      body2.SynchronizeFixtures();\r\n      return body2;\r\n   }\r\n   b2Body.prototype.Merge = function (other) {\r\n      var f;\r\n      for (f = other.m_fixtureList;\r\n      f;) {\r\n         var next = f.m_next;\r\n         other.m_fixtureCount--;\r\n         f.m_next = this.m_fixtureList;\r\n         this.m_fixtureList = f;\r\n         this.m_fixtureCount++;\r\n         f.m_body = body2;\r\n         f = next;\r\n      }\r\n      body1.m_fixtureCount = 0;\r\n      var body1 = this;\r\n      var body2 = other;\r\n      var center1 = body1.GetWorldCenter();\r\n      var center2 = body2.GetWorldCenter();\r\n      var velocity1 = body1.GetLinearVelocity().Copy();\r\n      var velocity2 = body2.GetLinearVelocity().Copy();\r\n      var angular1 = body1.GetAngularVelocity();\r\n      var angular = body2.GetAngularVelocity();\r\n      body1.ResetMassData();\r\n      this.SynchronizeFixtures();\r\n   }\r\n   b2Body.prototype.GetMass = function () {\r\n      return this.m_mass;\r\n   }\r\n   b2Body.prototype.GetInertia = function () {\r\n      return this.m_I;\r\n   }\r\n   b2Body.prototype.GetMassData = function (data) {\r\n      data.mass = this.m_mass;\r\n      data.I = this.m_I;\r\n      data.center.SetV(this.m_sweep.localCenter);\r\n   }\r\n   b2Body.prototype.SetMassData = function (massData) {\r\n      b2Settings.b2Assert(this.m_world.IsLocked() == false);\r\n      if (this.m_world.IsLocked() == true) {\r\n         return;\r\n      }\r\n      if (this.m_type != b2Body.b2_dynamicBody) {\r\n         return;\r\n      }\r\n      this.m_invMass = 0.0;\r\n      this.m_I = 0.0;\r\n      this.m_invI = 0.0;\r\n      this.m_mass = massData.mass;\r\n      if (this.m_mass <= 0.0) {\r\n         this.m_mass = 1.0;\r\n      }\r\n      this.m_invMass = 1.0 / this.m_mass;\r\n      if (massData.I > 0.0 && (this.m_flags & b2Body.e_fixedRotationFlag) == 0) {\r\n         this.m_I = massData.I - this.m_mass * (massData.center.x * massData.center.x + massData.center.y * massData.center.y);\r\n         this.m_invI = 1.0 / this.m_I;\r\n      }\r\n      var oldCenter = this.m_sweep.c.Copy();\r\n      this.m_sweep.localCenter.SetV(massData.center);\r\n      this.m_sweep.c0.SetV(b2Math.MulX(this.m_xf, this.m_sweep.localCenter));\r\n      this.m_sweep.c.SetV(this.m_sweep.c0);\r\n      this.m_linearVelocity.x += this.m_angularVelocity * (-(this.m_sweep.c.y - oldCenter.y));\r\n      this.m_linearVelocity.y += this.m_angularVelocity * (+(this.m_sweep.c.x - oldCenter.x));\r\n   }\r\n   b2Body.prototype.ResetMassData = function () {\r\n      this.m_mass = 0.0;\r\n      this.m_invMass = 0.0;\r\n      this.m_I = 0.0;\r\n      this.m_invI = 0.0;\r\n      this.m_sweep.localCenter.SetZero();\r\n      if (this.m_type == b2Body.b2_staticBody || this.m_type == b2Body.b2_kinematicBody) {\r\n         return;\r\n      }\r\n      var center = b2Vec2.Make(0, 0);\r\n      for (var f = this.m_fixtureList; f; f = f.m_next) {\r\n         if (f.m_density == 0.0) {\r\n            continue;\r\n         }\r\n         var massData = f.GetMassData();\r\n         this.m_mass += massData.mass;\r\n         center.x += massData.center.x * massData.mass;\r\n         center.y += massData.center.y * massData.mass;\r\n         this.m_I += massData.I;\r\n      }\r\n      if (this.m_mass > 0.0) {\r\n         this.m_invMass = 1.0 / this.m_mass;\r\n         center.x *= this.m_invMass;\r\n         center.y *= this.m_invMass;\r\n      }\r\n      else {\r\n         this.m_mass = 1.0;\r\n         this.m_invMass = 1.0;\r\n      }\r\n      if (this.m_I > 0.0 && (this.m_flags & b2Body.e_fixedRotationFlag) == 0) {\r\n         this.m_I -= this.m_mass * (center.x * center.x + center.y * center.y);\r\n         this.m_I *= this.m_inertiaScale;\r\n         b2Settings.b2Assert(this.m_I > 0);\r\n         this.m_invI = 1.0 / this.m_I;\r\n      }\r\n      else {\r\n         this.m_I = 0.0;\r\n         this.m_invI = 0.0;\r\n      }\r\n      var oldCenter = this.m_sweep.c.Copy();\r\n      this.m_sweep.localCenter.SetV(center);\r\n      this.m_sweep.c0.SetV(b2Math.MulX(this.m_xf, this.m_sweep.localCenter));\r\n      this.m_sweep.c.SetV(this.m_sweep.c0);\r\n      this.m_linearVelocity.x += this.m_angularVelocity * (-(this.m_sweep.c.y - oldCenter.y));\r\n      this.m_linearVelocity.y += this.m_angularVelocity * (+(this.m_sweep.c.x - oldCenter.x));\r\n   }\r\n   b2Body.prototype.GetWorldPoint = function (localPoint) {\r\n      var A = this.m_xf.R;\r\n      var u = new b2Vec2(A.col1.x * localPoint.x + A.col2.x * localPoint.y, A.col1.y * localPoint.x + A.col2.y * localPoint.y);\r\n      u.x += this.m_xf.position.x;\r\n      u.y += this.m_xf.position.y;\r\n      return u;\r\n   }\r\n   b2Body.prototype.GetWorldVector = function (localVector) {\r\n      return b2Math.MulMV(this.m_xf.R, localVector);\r\n   }\r\n   b2Body.prototype.GetLocalPoint = function (worldPoint) {\r\n      return b2Math.MulXT(this.m_xf, worldPoint);\r\n   }\r\n   b2Body.prototype.GetLocalVector = function (worldVector) {\r\n      return b2Math.MulTMV(this.m_xf.R, worldVector);\r\n   }\r\n   b2Body.prototype.GetLinearVelocityFromWorldPoint = function (worldPoint) {\r\n      return new b2Vec2(this.m_linearVelocity.x - this.m_angularVelocity * (worldPoint.y - this.m_sweep.c.y), this.m_linearVelocity.y + this.m_angularVelocity * (worldPoint.x - this.m_sweep.c.x));\r\n   }\r\n   b2Body.prototype.GetLinearVelocityFromLocalPoint = function (localPoint) {\r\n      var A = this.m_xf.R;\r\n      var worldPoint = new b2Vec2(A.col1.x * localPoint.x + A.col2.x * localPoint.y, A.col1.y * localPoint.x + A.col2.y * localPoint.y);\r\n      worldPoint.x += this.m_xf.position.x;\r\n      worldPoint.y += this.m_xf.position.y;\r\n      return new b2Vec2(this.m_linearVelocity.x - this.m_angularVelocity * (worldPoint.y - this.m_sweep.c.y), this.m_linearVelocity.y + this.m_angularVelocity * (worldPoint.x - this.m_sweep.c.x));\r\n   }\r\n   b2Body.prototype.GetLinearDamping = function () {\r\n      return this.m_linearDamping;\r\n   }\r\n   b2Body.prototype.SetLinearDamping = function (linearDamping) {\r\n      if (linearDamping === undefined) linearDamping = 0;\r\n      this.m_linearDamping = linearDamping;\r\n   }\r\n   b2Body.prototype.GetAngularDamping = function () {\r\n      return this.m_angularDamping;\r\n   }\r\n   b2Body.prototype.SetAngularDamping = function (angularDamping) {\r\n      if (angularDamping === undefined) angularDamping = 0;\r\n      this.m_angularDamping = angularDamping;\r\n   }\r\n   b2Body.prototype.SetType = function (type) {\r\n      if (type === undefined) type = 0;\r\n      if (this.m_type == type) {\r\n         return;\r\n      }\r\n      this.m_type = type;\r\n      this.ResetMassData();\r\n      if (this.m_type == b2Body.b2_staticBody) {\r\n         this.m_linearVelocity.SetZero();\r\n         this.m_angularVelocity = 0.0;\r\n      }\r\n      this.SetAwake(true);\r\n      this.m_force.SetZero();\r\n      this.m_torque = 0.0;\r\n      for (var ce = this.m_contactList; ce; ce = ce.next) {\r\n         ce.contact.FlagForFiltering();\r\n      }\r\n   }\r\n   b2Body.prototype.GetType = function () {\r\n      return this.m_type;\r\n   }\r\n   b2Body.prototype.SetBullet = function (flag) {\r\n      if (flag) {\r\n         this.m_flags |= b2Body.e_bulletFlag;\r\n      }\r\n      else {\r\n         this.m_flags &= ~b2Body.e_bulletFlag;\r\n      }\r\n   }\r\n   b2Body.prototype.IsBullet = function () {\r\n      return (this.m_flags & b2Body.e_bulletFlag) == b2Body.e_bulletFlag;\r\n   }\r\n   b2Body.prototype.SetSleepingAllowed = function (flag) {\r\n      if (flag) {\r\n         this.m_flags |= b2Body.e_allowSleepFlag;\r\n      }\r\n      else {\r\n         this.m_flags &= ~b2Body.e_allowSleepFlag;\r\n         this.SetAwake(true);\r\n      }\r\n   }\r\n   b2Body.prototype.SetAwake = function (flag) {\r\n      if (flag) {\r\n         this.m_flags |= b2Body.e_awakeFlag;\r\n         this.m_sleepTime = 0.0;\r\n      }\r\n      else {\r\n         this.m_flags &= ~b2Body.e_awakeFlag;\r\n         this.m_sleepTime = 0.0;\r\n         this.m_linearVelocity.SetZero();\r\n         this.m_angularVelocity = 0.0;\r\n         this.m_force.SetZero();\r\n         this.m_torque = 0.0;\r\n      }\r\n   }\r\n   b2Body.prototype.IsAwake = function () {\r\n      return (this.m_flags & b2Body.e_awakeFlag) == b2Body.e_awakeFlag;\r\n   }\r\n   b2Body.prototype.SetFixedRotation = function (fixed) {\r\n      if (fixed) {\r\n         this.m_flags |= b2Body.e_fixedRotationFlag;\r\n      }\r\n      else {\r\n         this.m_flags &= ~b2Body.e_fixedRotationFlag;\r\n      }\r\n      this.ResetMassData();\r\n   }\r\n   b2Body.prototype.IsFixedRotation = function () {\r\n      return (this.m_flags & b2Body.e_fixedRotationFlag) == b2Body.e_fixedRotationFlag;\r\n   }\r\n   b2Body.prototype.SetActive = function (flag) {\r\n      if (flag == this.IsActive()) {\r\n         return;\r\n      }\r\n      var broadPhase;\r\n      var f;\r\n      if (flag) {\r\n         this.m_flags |= b2Body.e_activeFlag;\r\n         broadPhase = this.m_world.m_contactManager.m_broadPhase;\r\n         for (f = this.m_fixtureList;\r\n         f; f = f.m_next) {\r\n            f.CreateProxy(broadPhase, this.m_xf);\r\n         }\r\n      }\r\n      else {\r\n         this.m_flags &= ~b2Body.e_activeFlag;\r\n         broadPhase = this.m_world.m_contactManager.m_broadPhase;\r\n         for (f = this.m_fixtureList;\r\n         f; f = f.m_next) {\r\n            f.DestroyProxy(broadPhase);\r\n         }\r\n         var ce = this.m_contactList;\r\n         while (ce) {\r\n            var ce0 = ce;\r\n            ce = ce.next;\r\n            this.m_world.m_contactManager.Destroy(ce0.contact);\r\n         }\r\n         this.m_contactList = null;\r\n      }\r\n   }\r\n   b2Body.prototype.IsActive = function () {\r\n      return (this.m_flags & b2Body.e_activeFlag) == b2Body.e_activeFlag;\r\n   }\r\n   b2Body.prototype.IsSleepingAllowed = function () {\r\n      return (this.m_flags & b2Body.e_allowSleepFlag) == b2Body.e_allowSleepFlag;\r\n   }\r\n   b2Body.prototype.GetFixtureList = function () {\r\n      return this.m_fixtureList;\r\n   }\r\n   b2Body.prototype.GetJointList = function () {\r\n      return this.m_jointList;\r\n   }\r\n   b2Body.prototype.GetControllerList = function () {\r\n      return this.m_controllerList;\r\n   }\r\n   b2Body.prototype.GetContactList = function () {\r\n      return this.m_contactList;\r\n   }\r\n   b2Body.prototype.GetNext = function () {\r\n      return this.m_next;\r\n   }\r\n   b2Body.prototype.GetUserData = function () {\r\n      return this.m_userData;\r\n   }\r\n   b2Body.prototype.SetUserData = function (data) {\r\n      this.m_userData = data;\r\n   }\r\n   b2Body.prototype.GetWorld = function () {\r\n      return this.m_world;\r\n   }\r\n   b2Body.prototype.b2Body = function (bd, world) {\r\n      this.m_flags = 0;\r\n      if (bd.bullet) {\r\n         this.m_flags |= b2Body.e_bulletFlag;\r\n      }\r\n      if (bd.fixedRotation) {\r\n         this.m_flags |= b2Body.e_fixedRotationFlag;\r\n      }\r\n      if (bd.allowSleep) {\r\n         this.m_flags |= b2Body.e_allowSleepFlag;\r\n      }\r\n      if (bd.awake) {\r\n         this.m_flags |= b2Body.e_awakeFlag;\r\n      }\r\n      if (bd.active) {\r\n         this.m_flags |= b2Body.e_activeFlag;\r\n      }\r\n      this.m_world = world;\r\n      this.m_xf.position.SetV(bd.position);\r\n      this.m_xf.R.Set(bd.angle);\r\n      this.m_sweep.localCenter.SetZero();\r\n      this.m_sweep.t0 = 1.0;\r\n      this.m_sweep.a0 = this.m_sweep.a = bd.angle;\r\n      var tMat = this.m_xf.R;\r\n      var tVec = this.m_sweep.localCenter;\r\n      this.m_sweep.c.x = (tMat.col1.x * tVec.x + tMat.col2.x * tVec.y);\r\n      this.m_sweep.c.y = (tMat.col1.y * tVec.x + tMat.col2.y * tVec.y);\r\n      this.m_sweep.c.x += this.m_xf.position.x;\r\n      this.m_sweep.c.y += this.m_xf.position.y;\r\n      this.m_sweep.c0.SetV(this.m_sweep.c);\r\n      this.m_jointList = null;\r\n      this.m_controllerList = null;\r\n      this.m_contactList = null;\r\n      this.m_controllerCount = 0;\r\n      this.m_prev = null;\r\n      this.m_next = null;\r\n      this.m_linearVelocity.SetV(bd.linearVelocity);\r\n      this.m_angularVelocity = bd.angularVelocity;\r\n      this.m_linearDamping = bd.linearDamping;\r\n      this.m_angularDamping = bd.angularDamping;\r\n      this.m_force.Set(0.0, 0.0);\r\n      this.m_torque = 0.0;\r\n      this.m_sleepTime = 0.0;\r\n      this.m_type = bd.type;\r\n      if (this.m_type == b2Body.b2_dynamicBody) {\r\n         this.m_mass = 1.0;\r\n         this.m_invMass = 1.0;\r\n      }\r\n      else {\r\n         this.m_mass = 0.0;\r\n         this.m_invMass = 0.0;\r\n      }\r\n      this.m_I = 0.0;\r\n      this.m_invI = 0.0;\r\n      this.m_inertiaScale = bd.inertiaScale;\r\n      this.m_userData = bd.userData;\r\n      this.m_fixtureList = null;\r\n      this.m_fixtureCount = 0;\r\n   }\r\n   b2Body.prototype.SynchronizeFixtures = function () {\r\n      var xf1 = b2Body.s_xf1;\r\n      xf1.R.Set(this.m_sweep.a0);\r\n      var tMat = xf1.R;\r\n      var tVec = this.m_sweep.localCenter;\r\n      xf1.position.x = this.m_sweep.c0.x - (tMat.col1.x * tVec.x + tMat.col2.x * tVec.y);\r\n      xf1.position.y = this.m_sweep.c0.y - (tMat.col1.y * tVec.x + tMat.col2.y * tVec.y);\r\n      var f;\r\n      var broadPhase = this.m_world.m_contactManager.m_broadPhase;\r\n      for (f = this.m_fixtureList;\r\n      f; f = f.m_next) {\r\n         f.Synchronize(broadPhase, xf1, this.m_xf);\r\n      }\r\n   }\r\n   b2Body.prototype.SynchronizeTransform = function () {\r\n      this.m_xf.R.Set(this.m_sweep.a);\r\n      var tMat = this.m_xf.R;\r\n      var tVec = this.m_sweep.localCenter;\r\n      this.m_xf.position.x = this.m_sweep.c.x - (tMat.col1.x * tVec.x + tMat.col2.x * tVec.y);\r\n      this.m_xf.position.y = this.m_sweep.c.y - (tMat.col1.y * tVec.x + tMat.col2.y * tVec.y);\r\n   }\r\n   b2Body.prototype.ShouldCollide = function (other) {\r\n      if (this.m_type != b2Body.b2_dynamicBody && other.m_type != b2Body.b2_dynamicBody) {\r\n         return false;\r\n      }\r\n      for (var jn = this.m_jointList; jn; jn = jn.next) {\r\n         if (jn.other == other) if (jn.joint.m_collideConnected == false) {\r\n            return false;\r\n         }\r\n      }\r\n      return true;\r\n   }\r\n   b2Body.prototype.Advance = function (t) {\r\n      if (t === undefined) t = 0;\r\n      this.m_sweep.Advance(t);\r\n      this.m_sweep.c.SetV(this.m_sweep.c0);\r\n      this.m_sweep.a = this.m_sweep.a0;\r\n      this.SynchronizeTransform();\r\n   }\r\n   Box2D.postDefs.push(function () {\r\n      Box2D.Dynamics.b2Body.s_xf1 = new b2Transform();\r\n      Box2D.Dynamics.b2Body.e_islandFlag = 0x0001;\r\n      Box2D.Dynamics.b2Body.e_awakeFlag = 0x0002;\r\n      Box2D.Dynamics.b2Body.e_allowSleepFlag = 0x0004;\r\n      Box2D.Dynamics.b2Body.e_bulletFlag = 0x0008;\r\n      Box2D.Dynamics.b2Body.e_fixedRotationFlag = 0x0010;\r\n      Box2D.Dynamics.b2Body.e_activeFlag = 0x0020;\r\n      Box2D.Dynamics.b2Body.b2_staticBody = 0;\r\n      Box2D.Dynamics.b2Body.b2_kinematicBody = 1;\r\n      Box2D.Dynamics.b2Body.b2_dynamicBody = 2;\r\n   });\r\n   b2BodyDef.b2BodyDef = function () {\r\n      this.position = new b2Vec2();\r\n      this.linearVelocity = new b2Vec2();\r\n   };\r\n   b2BodyDef.prototype.b2BodyDef = function () {\r\n      this.userData = null;\r\n      this.position.Set(0.0, 0.0);\r\n      this.angle = 0.0;\r\n      this.linearVelocity.Set(0, 0);\r\n      this.angularVelocity = 0.0;\r\n      this.linearDamping = 0.0;\r\n      this.angularDamping = 0.0;\r\n      this.allowSleep = true;\r\n      this.awake = true;\r\n      this.fixedRotation = false;\r\n      this.bullet = false;\r\n      this.type = b2Body.b2_staticBody;\r\n      this.active = true;\r\n      this.inertiaScale = 1.0;\r\n   }\r\n   b2ContactFilter.b2ContactFilter = function () {};\r\n   b2ContactFilter.prototype.ShouldCollide = function (fixtureA, fixtureB) {\r\n      var filter1 = fixtureA.GetFilterData();\r\n      var filter2 = fixtureB.GetFilterData();\r\n      if (filter1.groupIndex == filter2.groupIndex && filter1.groupIndex != 0) {\r\n         return filter1.groupIndex > 0;\r\n      }\r\n      var collide = (filter1.maskBits & filter2.categoryBits) != 0 && (filter1.categoryBits & filter2.maskBits) != 0;\r\n      return collide;\r\n   }\r\n   b2ContactFilter.prototype.RayCollide = function (userData, fixture) {\r\n      if (!userData) return true;\r\n      return this.ShouldCollide((userData instanceof b2Fixture ? userData : null), fixture);\r\n   }\r\n   Box2D.postDefs.push(function () {\r\n      Box2D.Dynamics.b2ContactFilter.b2_defaultFilter = new b2ContactFilter();\r\n   });\r\n   b2ContactImpulse.b2ContactImpulse = function () {\r\n      this.normalImpulses = new Vector_a2j_Number(b2Settings.b2_maxManifoldPoints);\r\n      this.tangentImpulses = new Vector_a2j_Number(b2Settings.b2_maxManifoldPoints);\r\n   };\r\n   b2ContactListener.b2ContactListener = function () {};\r\n   b2ContactListener.prototype.BeginContact = function (contact) {}\r\n   b2ContactListener.prototype.EndContact = function (contact) {}\r\n   b2ContactListener.prototype.PreSolve = function (contact, oldManifold) {}\r\n   b2ContactListener.prototype.PostSolve = function (contact, impulse) {}\r\n   Box2D.postDefs.push(function () {\r\n      Box2D.Dynamics.b2ContactListener.b2_defaultListener = new b2ContactListener();\r\n   });\r\n   b2ContactManager.b2ContactManager = function () {};\r\n   b2ContactManager.prototype.b2ContactManager = function () {\r\n      this.m_world = null;\r\n      this.m_contactCount = 0;\r\n      this.m_contactFilter = b2ContactFilter.b2_defaultFilter;\r\n      this.m_contactListener = b2ContactListener.b2_defaultListener;\r\n      this.m_contactFactory = new b2ContactFactory(this.m_allocator);\r\n      this.m_broadPhase = new b2DynamicTreeBroadPhase();\r\n   }\r\n   b2ContactManager.prototype.AddPair = function (proxyUserDataA, proxyUserDataB) {\r\n      var fixtureA = (proxyUserDataA instanceof b2Fixture ? proxyUserDataA : null);\r\n      var fixtureB = (proxyUserDataB instanceof b2Fixture ? proxyUserDataB : null);\r\n      var bodyA = fixtureA.GetBody();\r\n      var bodyB = fixtureB.GetBody();\r\n      if (bodyA == bodyB) return;\r\n      var edge = bodyB.GetContactList();\r\n      while (edge) {\r\n         if (edge.other == bodyA) {\r\n            var fA = edge.contact.GetFixtureA();\r\n            var fB = edge.contact.GetFixtureB();\r\n            if (fA == fixtureA && fB == fixtureB) return;\r\n            if (fA == fixtureB && fB == fixtureA) return;\r\n         }\r\n         edge = edge.next;\r\n      }\r\n      if (bodyB.ShouldCollide(bodyA) == false) {\r\n         return;\r\n      }\r\n      if (this.m_contactFilter.ShouldCollide(fixtureA, fixtureB) == false) {\r\n         return;\r\n      }\r\n      var c = this.m_contactFactory.Create(fixtureA, fixtureB);\r\n      fixtureA = c.GetFixtureA();\r\n      fixtureB = c.GetFixtureB();\r\n      bodyA = fixtureA.m_body;\r\n      bodyB = fixtureB.m_body;\r\n      c.m_prev = null;\r\n      c.m_next = this.m_world.m_contactList;\r\n      if (this.m_world.m_contactList != null) {\r\n         this.m_world.m_contactList.m_prev = c;\r\n      }\r\n      this.m_world.m_contactList = c;\r\n      c.m_nodeA.contact = c;\r\n      c.m_nodeA.other = bodyB;\r\n      c.m_nodeA.prev = null;\r\n      c.m_nodeA.next = bodyA.m_contactList;\r\n      if (bodyA.m_contactList != null) {\r\n         bodyA.m_contactList.prev = c.m_nodeA;\r\n      }\r\n      bodyA.m_contactList = c.m_nodeA;\r\n      c.m_nodeB.contact = c;\r\n      c.m_nodeB.other = bodyA;\r\n      c.m_nodeB.prev = null;\r\n      c.m_nodeB.next = bodyB.m_contactList;\r\n      if (bodyB.m_contactList != null) {\r\n         bodyB.m_contactList.prev = c.m_nodeB;\r\n      }\r\n      bodyB.m_contactList = c.m_nodeB;\r\n      ++this.m_world.m_contactCount;\r\n      return;\r\n   }\r\n   b2ContactManager.prototype.FindNewContacts = function () {\r\n      this.m_broadPhase.UpdatePairs(Box2D.generateCallback(this, this.AddPair));\r\n   }\r\n   b2ContactManager.prototype.Destroy = function (c) {\r\n      var fixtureA = c.GetFixtureA();\r\n      var fixtureB = c.GetFixtureB();\r\n      var bodyA = fixtureA.GetBody();\r\n      var bodyB = fixtureB.GetBody();\r\n      if (c.IsTouching()) {\r\n         this.m_contactListener.EndContact(c);\r\n      }\r\n      if (c.m_prev) {\r\n         c.m_prev.m_next = c.m_next;\r\n      }\r\n      if (c.m_next) {\r\n         c.m_next.m_prev = c.m_prev;\r\n      }\r\n      if (c == this.m_world.m_contactList) {\r\n         this.m_world.m_contactList = c.m_next;\r\n      }\r\n      if (c.m_nodeA.prev) {\r\n         c.m_nodeA.prev.next = c.m_nodeA.next;\r\n      }\r\n      if (c.m_nodeA.next) {\r\n         c.m_nodeA.next.prev = c.m_nodeA.prev;\r\n      }\r\n      if (c.m_nodeA == bodyA.m_contactList) {\r\n         bodyA.m_contactList = c.m_nodeA.next;\r\n      }\r\n      if (c.m_nodeB.prev) {\r\n         c.m_nodeB.prev.next = c.m_nodeB.next;\r\n      }\r\n      if (c.m_nodeB.next) {\r\n         c.m_nodeB.next.prev = c.m_nodeB.prev;\r\n      }\r\n      if (c.m_nodeB == bodyB.m_contactList) {\r\n         bodyB.m_contactList = c.m_nodeB.next;\r\n      }\r\n      this.m_contactFactory.Destroy(c);\r\n      --this.m_contactCount;\r\n   }\r\n   b2ContactManager.prototype.Collide = function () {\r\n      var c = this.m_world.m_contactList;\r\n      while (c) {\r\n         var fixtureA = c.GetFixtureA();\r\n         var fixtureB = c.GetFixtureB();\r\n         var bodyA = fixtureA.GetBody();\r\n         var bodyB = fixtureB.GetBody();\r\n         if (bodyA.IsAwake() == false && bodyB.IsAwake() == false) {\r\n            c = c.GetNext();\r\n            continue;\r\n         }\r\n         if (c.m_flags & b2Contact.e_filterFlag) {\r\n            if (bodyB.ShouldCollide(bodyA) == false) {\r\n               var cNuke = c;\r\n               c = cNuke.GetNext();\r\n               this.Destroy(cNuke);\r\n               continue;\r\n            }\r\n            if (this.m_contactFilter.ShouldCollide(fixtureA, fixtureB) == false) {\r\n               cNuke = c;\r\n               c = cNuke.GetNext();\r\n               this.Destroy(cNuke);\r\n               continue;\r\n            }\r\n            c.m_flags &= ~b2Contact.e_filterFlag;\r\n         }\r\n         var proxyA = fixtureA.m_proxy;\r\n         var proxyB = fixtureB.m_proxy;\r\n\t\t if (proxyA && proxyB) {\r\n\t\t\t var overlap = this.m_broadPhase.TestOverlap(proxyA, proxyB);\r\n\t\t\t if (overlap == false) {\r\n\t\t\t\tcNuke = c;\r\n\t\t\t\tc = cNuke.GetNext();\r\n\t\t\t\tthis.Destroy(cNuke);\r\n\t\t\t\tcontinue;\r\n\t\t\t }\r\n\t  \t }\r\n         c.Update(this.m_contactListener);\r\n         c = c.GetNext();\r\n      }\r\n   }\r\n   Box2D.postDefs.push(function () {\r\n      Box2D.Dynamics.b2ContactManager.s_evalCP = new b2ContactPoint();\r\n   });\r\n   b2DebugDraw.b2DebugDraw = function () {};\r\n   b2DebugDraw.prototype.b2DebugDraw = function () {}\r\n   b2DebugDraw.prototype.SetFlags = function (flags) {\r\n      if (flags === undefined) flags = 0;\r\n   }\r\n   b2DebugDraw.prototype.GetFlags = function () {}\r\n   b2DebugDraw.prototype.AppendFlags = function (flags) {\r\n      if (flags === undefined) flags = 0;\r\n   }\r\n   b2DebugDraw.prototype.ClearFlags = function (flags) {\r\n      if (flags === undefined) flags = 0;\r\n   }\r\n   b2DebugDraw.prototype.SetSprite = function (sprite) {}\r\n   b2DebugDraw.prototype.GetSprite = function () {}\r\n   b2DebugDraw.prototype.SetDrawScale = function (drawScale) {\r\n      if (drawScale === undefined) drawScale = 0;\r\n   }\r\n   b2DebugDraw.prototype.GetDrawScale = function () {}\r\n   b2DebugDraw.prototype.SetLineThickness = function (lineThickness) {\r\n      if (lineThickness === undefined) lineThickness = 0;\r\n   }\r\n   b2DebugDraw.prototype.GetLineThickness = function () {}\r\n   b2DebugDraw.prototype.SetAlpha = function (alpha) {\r\n      if (alpha === undefined) alpha = 0;\r\n   }\r\n   b2DebugDraw.prototype.GetAlpha = function () {}\r\n   b2DebugDraw.prototype.SetFillAlpha = function (alpha) {\r\n      if (alpha === undefined) alpha = 0;\r\n   }\r\n   b2DebugDraw.prototype.GetFillAlpha = function () {}\r\n   b2DebugDraw.prototype.SetXFormScale = function (xformScale) {\r\n      if (xformScale === undefined) xformScale = 0;\r\n   }\r\n   b2DebugDraw.prototype.GetXFormScale = function () {}\r\n   b2DebugDraw.prototype.DrawPolygon = function (vertices, vertexCount, color) {\r\n      if (vertexCount === undefined) vertexCount = 0;\r\n   }\r\n   b2DebugDraw.prototype.DrawSolidPolygon = function (vertices, vertexCount, color) {\r\n      if (vertexCount === undefined) vertexCount = 0;\r\n   }\r\n   b2DebugDraw.prototype.DrawCircle = function (center, radius, color) {\r\n      if (radius === undefined) radius = 0;\r\n   }\r\n   b2DebugDraw.prototype.DrawSolidCircle = function (center, radius, axis, color) {\r\n      if (radius === undefined) radius = 0;\r\n   }\r\n   b2DebugDraw.prototype.DrawSegment = function (p1, p2, color) {}\r\n   b2DebugDraw.prototype.DrawTransform = function (xf) {}\r\n   Box2D.postDefs.push(function () {\r\n      Box2D.Dynamics.b2DebugDraw.e_shapeBit = 0x0001;\r\n      Box2D.Dynamics.b2DebugDraw.e_jointBit = 0x0002;\r\n      Box2D.Dynamics.b2DebugDraw.e_aabbBit = 0x0004;\r\n      Box2D.Dynamics.b2DebugDraw.e_pairBit = 0x0008;\r\n      Box2D.Dynamics.b2DebugDraw.e_centerOfMassBit = 0x0010;\r\n      Box2D.Dynamics.b2DebugDraw.e_controllerBit = 0x0020;\r\n   });\r\n   b2DestructionListener.b2DestructionListener = function () {};\r\n   b2DestructionListener.prototype.SayGoodbyeJoint = function (joint) {}\r\n   b2DestructionListener.prototype.SayGoodbyeFixture = function (fixture) {}\r\n   b2FilterData.b2FilterData = function () {\r\n      this.categoryBits = 0x0001;\r\n      this.maskBits = 0xFFFF;\r\n      this.groupIndex = 0;\r\n   };\r\n   b2FilterData.prototype.Copy = function () {\r\n      var copy = new b2FilterData();\r\n      copy.categoryBits = this.categoryBits;\r\n      copy.maskBits = this.maskBits;\r\n      copy.groupIndex = this.groupIndex;\r\n      return copy;\r\n   }\r\n   b2Fixture.b2Fixture = function () {\r\n      this.m_filter = new b2FilterData();\r\n   };\r\n   b2Fixture.prototype.GetType = function () {\r\n      return this.m_shape.GetType();\r\n   }\r\n   b2Fixture.prototype.GetShape = function () {\r\n      return this.m_shape;\r\n   }\r\n   b2Fixture.prototype.SetSensor = function (sensor) {\r\n      if (this.m_isSensor == sensor) return;\r\n      this.m_isSensor = sensor;\r\n      if (this.m_body == null) return;\r\n      var edge = this.m_body.GetContactList();\r\n      while (edge) {\r\n         var contact = edge.contact;\r\n         var fixtureA = contact.GetFixtureA();\r\n         var fixtureB = contact.GetFixtureB();\r\n         if (fixtureA == this || fixtureB == this) contact.SetSensor(fixtureA.IsSensor() || fixtureB.IsSensor());\r\n         edge = edge.next;\r\n      }\r\n   }\r\n   b2Fixture.prototype.IsSensor = function () {\r\n      return this.m_isSensor;\r\n   }\r\n   b2Fixture.prototype.SetFilterData = function (filter) {\r\n      this.m_filter = filter.Copy();\r\n      if (this.m_body) return;\r\n      var edge = this.m_body.GetContactList();\r\n      while (edge) {\r\n         var contact = edge.contact;\r\n         var fixtureA = contact.GetFixtureA();\r\n         var fixtureB = contact.GetFixtureB();\r\n         if (fixtureA == this || fixtureB == this) contact.FlagForFiltering();\r\n         edge = edge.next;\r\n      }\r\n   }\r\n   b2Fixture.prototype.GetFilterData = function () {\r\n      return this.m_filter.Copy();\r\n   }\r\n   b2Fixture.prototype.GetBody = function () {\r\n      return this.m_body;\r\n   }\r\n   b2Fixture.prototype.GetNext = function () {\r\n      return this.m_next;\r\n   }\r\n   b2Fixture.prototype.GetUserData = function () {\r\n      return this.m_userData;\r\n   }\r\n   b2Fixture.prototype.SetUserData = function (data) {\r\n      this.m_userData = data;\r\n   }\r\n   b2Fixture.prototype.TestPoint = function (p) {\r\n      return this.m_shape.TestPoint(this.m_body.GetTransform(), p);\r\n   }\r\n   b2Fixture.prototype.RayCast = function (output, input) {\r\n      return this.m_shape.RayCast(output, input, this.m_body.GetTransform());\r\n   }\r\n   b2Fixture.prototype.GetMassData = function (massData) {\r\n      if (massData === undefined) massData = null;\r\n      if (massData == null) {\r\n         massData = new b2MassData();\r\n      }\r\n      this.m_shape.ComputeMass(massData, this.m_density);\r\n      return massData;\r\n   }\r\n   b2Fixture.prototype.SetDensity = function (density) {\r\n      if (density === undefined) density = 0;\r\n      this.m_density = density;\r\n   }\r\n   b2Fixture.prototype.GetDensity = function () {\r\n      return this.m_density;\r\n   }\r\n   b2Fixture.prototype.GetFriction = function () {\r\n      return this.m_friction;\r\n   }\r\n   b2Fixture.prototype.SetFriction = function (friction) {\r\n      if (friction === undefined) friction = 0;\r\n      this.m_friction = friction;\r\n   }\r\n   b2Fixture.prototype.GetRestitution = function () {\r\n      return this.m_restitution;\r\n   }\r\n   b2Fixture.prototype.SetRestitution = function (restitution) {\r\n      if (restitution === undefined) restitution = 0;\r\n      this.m_restitution = restitution;\r\n   }\r\n   b2Fixture.prototype.GetAABB = function () {\r\n      return this.m_aabb;\r\n   }\r\n   b2Fixture.prototype.b2Fixture = function () {\r\n      this.m_aabb = new b2AABB();\r\n      this.m_userData = null;\r\n      this.m_body = null;\r\n      this.m_next = null;\r\n      this.m_shape = null;\r\n      this.m_density = 0.0;\r\n      this.m_friction = 0.0;\r\n      this.m_restitution = 0.0;\r\n   }\r\n   b2Fixture.prototype.Create = function (body, xf, def) {\r\n      this.m_userData = def.userData;\r\n      this.m_friction = def.friction;\r\n      this.m_restitution = def.restitution;\r\n      this.m_body = body;\r\n      this.m_next = null;\r\n      this.m_filter = def.filter.Copy();\r\n      this.m_isSensor = def.isSensor;\r\n      this.m_shape = def.shape.Copy();\r\n      this.m_density = def.density;\r\n   }\r\n   b2Fixture.prototype.Destroy = function () {\r\n      this.m_shape = null;\r\n   }\r\n   b2Fixture.prototype.CreateProxy = function (broadPhase, xf) {\r\n      this.m_shape.ComputeAABB(this.m_aabb, xf);\r\n      this.m_proxy = broadPhase.CreateProxy(this.m_aabb, this);\r\n   }\r\n   b2Fixture.prototype.DestroyProxy = function (broadPhase) {\r\n      if (this.m_proxy == null) {\r\n         return;\r\n      }\r\n      broadPhase.DestroyProxy(this.m_proxy);\r\n      this.m_proxy = null;\r\n   }\r\n   b2Fixture.prototype.Synchronize = function (broadPhase, transform1, transform2) {\r\n      if (!this.m_proxy) return;\r\n      var aabb1 = new b2AABB();\r\n      var aabb2 = new b2AABB();\r\n      this.m_shape.ComputeAABB(aabb1, transform1);\r\n      this.m_shape.ComputeAABB(aabb2, transform2);\r\n      this.m_aabb.Combine(aabb1, aabb2);\r\n      var displacement = b2Math.SubtractVV(transform2.position, transform1.position);\r\n      broadPhase.MoveProxy(this.m_proxy, this.m_aabb, displacement);\r\n   }\r\n   b2FixtureDef.b2FixtureDef = function () {\r\n      this.filter = new b2FilterData();\r\n   };\r\n   b2FixtureDef.prototype.b2FixtureDef = function () {\r\n      this.shape = null;\r\n      this.userData = null;\r\n      this.friction = 0.2;\r\n      this.restitution = 0.0;\r\n      this.density = 0.0;\r\n      this.filter.categoryBits = 0x0001;\r\n      this.filter.maskBits = 0xFFFF;\r\n      this.filter.groupIndex = 0;\r\n      this.isSensor = false;\r\n   }\r\n   b2Island.b2Island = function () {};\r\n   b2Island.prototype.b2Island = function () {\r\n      this.m_bodies = new Vector();\r\n      this.m_contacts = new Vector();\r\n      this.m_joints = new Vector();\r\n   }\r\n   b2Island.prototype.Initialize = function (bodyCapacity, contactCapacity, jointCapacity, allocator, listener, contactSolver) {\r\n      if (bodyCapacity === undefined) bodyCapacity = 0;\r\n      if (contactCapacity === undefined) contactCapacity = 0;\r\n      if (jointCapacity === undefined) jointCapacity = 0;\r\n      var i = 0;\r\n      this.m_bodyCapacity = bodyCapacity;\r\n      this.m_contactCapacity = contactCapacity;\r\n      this.m_jointCapacity = jointCapacity;\r\n      this.m_bodyCount = 0;\r\n      this.m_contactCount = 0;\r\n      this.m_jointCount = 0;\r\n      this.m_allocator = allocator;\r\n      this.m_listener = listener;\r\n      this.m_contactSolver = contactSolver;\r\n      for (i = this.m_bodies.length;\r\n      i < bodyCapacity; i++)\r\n      this.m_bodies[i] = null;\r\n      for (i = this.m_contacts.length;\r\n      i < contactCapacity; i++)\r\n      this.m_contacts[i] = null;\r\n      for (i = this.m_joints.length;\r\n      i < jointCapacity; i++)\r\n      this.m_joints[i] = null;\r\n   }\r\n   b2Island.prototype.Clear = function () {\r\n      this.m_bodyCount = 0;\r\n      this.m_contactCount = 0;\r\n      this.m_jointCount = 0;\r\n   }\r\n   b2Island.prototype.Solve = function (step, gravity, allowSleep) {\r\n      var i = 0;\r\n      var j = 0;\r\n      var b;\r\n      var joint;\r\n\t  var gravityX = gravity.x;\r\n\t  var gravityY = gravity.y;\r\n\t  \r\n      for (i = 0;\r\n      i < this.m_bodyCount; ++i) {\r\n         b = this.m_bodies[i];\r\n         if (b.GetType() != b2Body.b2_dynamicBody) continue;\r\n\t\t if (b.m_nonGravitic) {\r\n\t\t\t // Don't apply gravity to this body\r\n\t\t\t b.m_linearVelocity.x += step.dt * (b.m_invMass * b.m_force.x);\r\n\t\t\t b.m_linearVelocity.y += step.dt * (b.m_invMass * b.m_force.y);\r\n\t\t } else {\r\n\t\t\t // Apply gravity to this body\r\n\t\t\t b.m_linearVelocity.x += step.dt * (gravityX + b.m_invMass * b.m_force.x);\r\n\t\t\t b.m_linearVelocity.y += step.dt * (gravityY + b.m_invMass * b.m_force.y);\r\n\t\t }\r\n         b.m_angularVelocity += step.dt * b.m_invI * b.m_torque;\r\n         b.m_linearVelocity.Multiply(b2Math.Clamp(1.0 - step.dt * b.m_linearDamping, 0.0, 1.0));\r\n         b.m_angularVelocity *= b2Math.Clamp(1.0 - step.dt * b.m_angularDamping, 0.0, 1.0);\r\n      }\r\n      this.m_contactSolver.Initialize(step, this.m_contacts, this.m_contactCount, this.m_allocator);\r\n      var contactSolver = this.m_contactSolver;\r\n      contactSolver.InitVelocityConstraints(step);\r\n      for (i = 0;\r\n      i < this.m_jointCount; ++i) {\r\n         joint = this.m_joints[i];\r\n         joint.InitVelocityConstraints(step);\r\n      }\r\n      for (i = 0;\r\n      i < step.velocityIterations; ++i) {\r\n         for (j = 0;\r\n         j < this.m_jointCount; ++j) {\r\n            joint = this.m_joints[j];\r\n            joint.SolveVelocityConstraints(step);\r\n         }\r\n         contactSolver.SolveVelocityConstraints();\r\n      }\r\n      for (i = 0;\r\n      i < this.m_jointCount; ++i) {\r\n         joint = this.m_joints[i];\r\n         joint.FinalizeVelocityConstraints();\r\n      }\r\n      contactSolver.FinalizeVelocityConstraints();\r\n      for (i = 0;\r\n      i < this.m_bodyCount; ++i) {\r\n         b = this.m_bodies[i];\r\n         if (b.GetType() == b2Body.b2_staticBody) continue;\r\n         var translationX = step.dt * b.m_linearVelocity.x;\r\n         var translationY = step.dt * b.m_linearVelocity.y;\r\n         if ((translationX * translationX + translationY * translationY) > b2Settings.b2_maxTranslationSquared) {\r\n            b.m_linearVelocity.Normalize();\r\n            b.m_linearVelocity.x *= b2Settings.b2_maxTranslation * step.inv_dt;\r\n            b.m_linearVelocity.y *= b2Settings.b2_maxTranslation * step.inv_dt;\r\n         }\r\n         var rotation = step.dt * b.m_angularVelocity;\r\n         if (rotation * rotation > b2Settings.b2_maxRotationSquared) {\r\n            if (b.m_angularVelocity < 0.0) {\r\n               b.m_angularVelocity = (-b2Settings.b2_maxRotation * step.inv_dt);\r\n            }\r\n            else {\r\n               b.m_angularVelocity = b2Settings.b2_maxRotation * step.inv_dt;\r\n            }\r\n         }\r\n         b.m_sweep.c0.SetV(b.m_sweep.c);\r\n         b.m_sweep.a0 = b.m_sweep.a;\r\n         b.m_sweep.c.x += step.dt * b.m_linearVelocity.x;\r\n         b.m_sweep.c.y += step.dt * b.m_linearVelocity.y;\r\n         b.m_sweep.a += step.dt * b.m_angularVelocity;\r\n         b.SynchronizeTransform();\r\n      }\r\n      for (i = 0;\r\n      i < step.positionIterations; ++i) {\r\n         var contactsOkay = contactSolver.SolvePositionConstraints(b2Settings.b2_contactBaumgarte);\r\n         var jointsOkay = true;\r\n         for (j = 0;\r\n         j < this.m_jointCount; ++j) {\r\n            joint = this.m_joints[j];\r\n            var jointOkay = joint.SolvePositionConstraints(b2Settings.b2_contactBaumgarte);\r\n            jointsOkay = jointsOkay && jointOkay;\r\n         }\r\n         if (contactsOkay && jointsOkay) {\r\n            break;\r\n         }\r\n      }\r\n      this.Report(contactSolver.m_constraints);\r\n      if (allowSleep) {\r\n         var minSleepTime = Number.MAX_VALUE;\r\n         var linTolSqr = b2Settings.b2_linearSleepTolerance * b2Settings.b2_linearSleepTolerance;\r\n         var angTolSqr = b2Settings.b2_angularSleepTolerance * b2Settings.b2_angularSleepTolerance;\r\n         for (i = 0;\r\n         i < this.m_bodyCount; ++i) {\r\n            b = this.m_bodies[i];\r\n            if (b.GetType() == b2Body.b2_staticBody) {\r\n               continue;\r\n            }\r\n            if ((b.m_flags & b2Body.e_allowSleepFlag) == 0) {\r\n               b.m_sleepTime = 0.0;\r\n               minSleepTime = 0.0;\r\n            }\r\n            if ((b.m_flags & b2Body.e_allowSleepFlag) == 0 || b.m_angularVelocity * b.m_angularVelocity > angTolSqr || b2Math.Dot(b.m_linearVelocity, b.m_linearVelocity) > linTolSqr) {\r\n               b.m_sleepTime = 0.0;\r\n               minSleepTime = 0.0;\r\n            }\r\n            else {\r\n               b.m_sleepTime += step.dt;\r\n               minSleepTime = b2Math.Min(minSleepTime, b.m_sleepTime);\r\n            }\r\n         }\r\n         if (minSleepTime >= b2Settings.b2_timeToSleep) {\r\n            for (i = 0;\r\n            i < this.m_bodyCount; ++i) {\r\n               b = this.m_bodies[i];\r\n               b.SetAwake(false);\r\n            }\r\n         }\r\n      }\r\n   }\r\n   b2Island.prototype.SolveTOI = function (subStep) {\r\n      var i = 0;\r\n      var j = 0;\r\n      this.m_contactSolver.Initialize(subStep, this.m_contacts, this.m_contactCount, this.m_allocator);\r\n      var contactSolver = this.m_contactSolver;\r\n      for (i = 0;\r\n      i < this.m_jointCount; ++i) {\r\n         this.m_joints[i].InitVelocityConstraints(subStep);\r\n      }\r\n      for (i = 0;\r\n      i < subStep.velocityIterations; ++i) {\r\n         contactSolver.SolveVelocityConstraints();\r\n         for (j = 0;\r\n         j < this.m_jointCount; ++j) {\r\n            this.m_joints[j].SolveVelocityConstraints(subStep);\r\n         }\r\n      }\r\n      for (i = 0;\r\n      i < this.m_bodyCount; ++i) {\r\n         var b = this.m_bodies[i];\r\n         if (b.GetType() == b2Body.b2_staticBody) continue;\r\n         var translationX = subStep.dt * b.m_linearVelocity.x;\r\n         var translationY = subStep.dt * b.m_linearVelocity.y;\r\n         if ((translationX * translationX + translationY * translationY) > b2Settings.b2_maxTranslationSquared) {\r\n            b.m_linearVelocity.Normalize();\r\n            b.m_linearVelocity.x *= b2Settings.b2_maxTranslation * subStep.inv_dt;\r\n            b.m_linearVelocity.y *= b2Settings.b2_maxTranslation * subStep.inv_dt;\r\n         }\r\n         var rotation = subStep.dt * b.m_angularVelocity;\r\n         if (rotation * rotation > b2Settings.b2_maxRotationSquared) {\r\n            if (b.m_angularVelocity < 0.0) {\r\n               b.m_angularVelocity = (-b2Settings.b2_maxRotation * subStep.inv_dt);\r\n            }\r\n            else {\r\n               b.m_angularVelocity = b2Settings.b2_maxRotation * subStep.inv_dt;\r\n            }\r\n         }\r\n         b.m_sweep.c0.SetV(b.m_sweep.c);\r\n         b.m_sweep.a0 = b.m_sweep.a;\r\n         b.m_sweep.c.x += subStep.dt * b.m_linearVelocity.x;\r\n         b.m_sweep.c.y += subStep.dt * b.m_linearVelocity.y;\r\n         b.m_sweep.a += subStep.dt * b.m_angularVelocity;\r\n         b.SynchronizeTransform();\r\n      }\r\n      var k_toiBaumgarte = 0.75;\r\n      for (i = 0;\r\n      i < subStep.positionIterations; ++i) {\r\n         var contactsOkay = contactSolver.SolvePositionConstraints(k_toiBaumgarte);\r\n         var jointsOkay = true;\r\n         for (j = 0;\r\n         j < this.m_jointCount; ++j) {\r\n            var jointOkay = this.m_joints[j].SolvePositionConstraints(b2Settings.b2_contactBaumgarte);\r\n            jointsOkay = jointsOkay && jointOkay;\r\n         }\r\n         if (contactsOkay && jointsOkay) {\r\n            break;\r\n         }\r\n      }\r\n      this.Report(contactSolver.m_constraints);\r\n   }\r\n   b2Island.prototype.Report = function (constraints) {\r\n      if (this.m_listener == null) {\r\n         return;\r\n      }\r\n      for (var i = 0; i < this.m_contactCount; ++i) {\r\n         var c = this.m_contacts[i];\r\n         var cc = constraints[i];\r\n         for (var j = 0; j < cc.pointCount; ++j) {\r\n            b2Island.s_impulse.normalImpulses[j] = cc.points[j].normalImpulse;\r\n            b2Island.s_impulse.tangentImpulses[j] = cc.points[j].tangentImpulse;\r\n         }\r\n         this.m_listener.PostSolve(c, b2Island.s_impulse);\r\n      }\r\n   }\r\n   b2Island.prototype.AddBody = function (body) {\r\n      body.m_islandIndex = this.m_bodyCount;\r\n      this.m_bodies[this.m_bodyCount++] = body;\r\n   }\r\n   b2Island.prototype.AddContact = function (contact) {\r\n      this.m_contacts[this.m_contactCount++] = contact;\r\n   }\r\n   b2Island.prototype.AddJoint = function (joint) {\r\n      this.m_joints[this.m_jointCount++] = joint;\r\n   }\r\n   Box2D.postDefs.push(function () {\r\n      Box2D.Dynamics.b2Island.s_impulse = new b2ContactImpulse();\r\n   });\r\n   b2TimeStep.b2TimeStep = function () {};\r\n   b2TimeStep.prototype.Set = function (step) {\r\n      this.dt = step.dt;\r\n      this.inv_dt = step.inv_dt;\r\n      this.positionIterations = step.positionIterations;\r\n      this.velocityIterations = step.velocityIterations;\r\n      this.warmStarting = step.warmStarting;\r\n   }\r\n   b2World.b2World = function () {\r\n      this.s_stack = new Vector();\r\n      this.m_contactManager = new b2ContactManager();\r\n      this.m_contactSolver = new b2ContactSolver();\r\n      this.m_island = new b2Island();\r\n   };\r\n   b2World.prototype.b2World = function (gravity, doSleep) {\r\n      this.m_destructionListener = null;\r\n      this.m_debugDraw = null;\r\n      this.m_bodyList = null;\r\n      this.m_contactList = null;\r\n      this.m_jointList = null;\r\n      this.m_controllerList = null;\r\n      this.m_bodyCount = 0;\r\n      this.m_contactCount = 0;\r\n      this.m_jointCount = 0;\r\n      this.m_controllerCount = 0;\r\n      b2World.m_warmStarting = true;\r\n      b2World.m_continuousPhysics = true;\r\n      this.m_allowSleep = doSleep;\r\n      this.m_gravity = gravity;\r\n      this.m_inv_dt0 = 0.0;\r\n      this.m_contactManager.m_world = this;\r\n      var bd = new b2BodyDef();\r\n      this.m_groundBody = this.CreateBody(bd);\r\n   }\r\n   b2World.prototype.SetDestructionListener = function (listener) {\r\n      this.m_destructionListener = listener;\r\n   }\r\n   b2World.prototype.SetContactFilter = function (filter) {\r\n      this.m_contactManager.m_contactFilter = filter;\r\n   }\r\n   b2World.prototype.SetContactListener = function (listener) {\r\n      this.m_contactManager.m_contactListener = listener;\r\n   }\r\n   b2World.prototype.SetDebugDraw = function (debugDraw) {\r\n      this.m_debugDraw = debugDraw;\r\n   }\r\n   b2World.prototype.SetBroadPhase = function (broadPhase) {\r\n      var oldBroadPhase = this.m_contactManager.m_broadPhase;\r\n      this.m_contactManager.m_broadPhase = broadPhase;\r\n      for (var b = this.m_bodyList; b; b = b.m_next) {\r\n         for (var f = b.m_fixtureList; f; f = f.m_next) {\r\n            f.m_proxy = broadPhase.CreateProxy(oldBroadPhase.GetFatAABB(f.m_proxy), f);\r\n         }\r\n      }\r\n   }\r\n   b2World.prototype.Validate = function () {\r\n      this.m_contactManager.m_broadPhase.Validate();\r\n   }\r\n   b2World.prototype.GetProxyCount = function () {\r\n      return this.m_contactManager.m_broadPhase.GetProxyCount();\r\n   }\r\n   b2World.prototype.CreateBody = function (def) {\r\n      if (this.IsLocked() == true) {\r\n         return null;\r\n      }\r\n      var b = new b2Body(def, this);\r\n      b.m_prev = null;\r\n      b.m_next = this.m_bodyList;\r\n      if (this.m_bodyList) {\r\n         this.m_bodyList.m_prev = b;\r\n      }\r\n      this.m_bodyList = b;\r\n      ++this.m_bodyCount;\r\n      return b;\r\n   }\r\n   b2World.prototype.DestroyBody = function (b) {\r\n      if (this.IsLocked() == true) {\r\n         return;\r\n      }\r\n      var jn = b.m_jointList;\r\n      while (jn) {\r\n         var jn0 = jn;\r\n         jn = jn.next;\r\n         if (this.m_destructionListener) {\r\n            this.m_destructionListener.SayGoodbyeJoint(jn0.joint);\r\n         }\r\n         this.DestroyJoint(jn0.joint);\r\n      }\r\n      var coe = b.m_controllerList;\r\n      while (coe) {\r\n         var coe0 = coe;\r\n         coe = coe.nextController;\r\n         coe0.controller.RemoveBody(b);\r\n      }\r\n      var ce = b.m_contactList;\r\n      while (ce) {\r\n         var ce0 = ce;\r\n         ce = ce.next;\r\n         this.m_contactManager.Destroy(ce0.contact);\r\n      }\r\n      b.m_contactList = null;\r\n      var f = b.m_fixtureList;\r\n      while (f) {\r\n         var f0 = f;\r\n         f = f.m_next;\r\n         if (this.m_destructionListener) {\r\n            this.m_destructionListener.SayGoodbyeFixture(f0);\r\n         }\r\n         f0.DestroyProxy(this.m_contactManager.m_broadPhase);\r\n         f0.Destroy();\r\n      }\r\n      b.m_fixtureList = null;\r\n      b.m_fixtureCount = 0;\r\n      if (b.m_prev) {\r\n         b.m_prev.m_next = b.m_next;\r\n      }\r\n      if (b.m_next) {\r\n         b.m_next.m_prev = b.m_prev;\r\n      }\r\n      if (b == this.m_bodyList) {\r\n         this.m_bodyList = b.m_next;\r\n      }--this.m_bodyCount;\r\n   }\r\n   b2World.prototype.CreateJoint = function (def) {\r\n      var j = b2Joint.Create(def, null);\r\n      j.m_prev = null;\r\n      j.m_next = this.m_jointList;\r\n      if (this.m_jointList) {\r\n         this.m_jointList.m_prev = j;\r\n      }\r\n      this.m_jointList = j;\r\n      ++this.m_jointCount;\r\n      j.m_edgeA.joint = j;\r\n      j.m_edgeA.other = j.m_bodyB;\r\n      j.m_edgeA.prev = null;\r\n      j.m_edgeA.next = j.m_bodyA.m_jointList;\r\n      if (j.m_bodyA.m_jointList) j.m_bodyA.m_jointList.prev = j.m_edgeA;\r\n      j.m_bodyA.m_jointList = j.m_edgeA;\r\n      j.m_edgeB.joint = j;\r\n      j.m_edgeB.other = j.m_bodyA;\r\n      j.m_edgeB.prev = null;\r\n      j.m_edgeB.next = j.m_bodyB.m_jointList;\r\n      if (j.m_bodyB.m_jointList) j.m_bodyB.m_jointList.prev = j.m_edgeB;\r\n      j.m_bodyB.m_jointList = j.m_edgeB;\r\n      var bodyA = def.bodyA;\r\n      var bodyB = def.bodyB;\r\n      if (def.collideConnected == false) {\r\n         var edge = bodyB.GetContactList();\r\n         while (edge) {\r\n            if (edge.other == bodyA) {\r\n               edge.contact.FlagForFiltering();\r\n            }\r\n            edge = edge.next;\r\n         }\r\n      }\r\n      return j;\r\n   }\r\n   b2World.prototype.DestroyJoint = function (j) {\r\n      var collideConnected = j.m_collideConnected;\r\n      if (j.m_prev) {\r\n         j.m_prev.m_next = j.m_next;\r\n      }\r\n      if (j.m_next) {\r\n         j.m_next.m_prev = j.m_prev;\r\n      }\r\n      if (j == this.m_jointList) {\r\n         this.m_jointList = j.m_next;\r\n      }\r\n      var bodyA = j.m_bodyA;\r\n      var bodyB = j.m_bodyB;\r\n      bodyA.SetAwake(true);\r\n      bodyB.SetAwake(true);\r\n      if (j.m_edgeA.prev) {\r\n         j.m_edgeA.prev.next = j.m_edgeA.next;\r\n      }\r\n      if (j.m_edgeA.next) {\r\n         j.m_edgeA.next.prev = j.m_edgeA.prev;\r\n      }\r\n      if (j.m_edgeA == bodyA.m_jointList) {\r\n         bodyA.m_jointList = j.m_edgeA.next;\r\n      }\r\n      j.m_edgeA.prev = null;\r\n      j.m_edgeA.next = null;\r\n      if (j.m_edgeB.prev) {\r\n         j.m_edgeB.prev.next = j.m_edgeB.next;\r\n      }\r\n      if (j.m_edgeB.next) {\r\n         j.m_edgeB.next.prev = j.m_edgeB.prev;\r\n      }\r\n      if (j.m_edgeB == bodyB.m_jointList) {\r\n         bodyB.m_jointList = j.m_edgeB.next;\r\n      }\r\n      j.m_edgeB.prev = null;\r\n      j.m_edgeB.next = null;\r\n      b2Joint.Destroy(j, null);\r\n      --this.m_jointCount;\r\n      if (collideConnected == false) {\r\n         var edge = bodyB.GetContactList();\r\n         while (edge) {\r\n            if (edge.other == bodyA) {\r\n               edge.contact.FlagForFiltering();\r\n            }\r\n            edge = edge.next;\r\n         }\r\n      }\r\n   }\r\n   b2World.prototype.AddController = function (c) {\r\n      c.m_next = this.m_controllerList;\r\n      c.m_prev = null;\r\n      this.m_controllerList = c;\r\n      c.m_world = this;\r\n      this.m_controllerCount++;\r\n      return c;\r\n   }\r\n   b2World.prototype.RemoveController = function (c) {\r\n      if (c.m_prev) c.m_prev.m_next = c.m_next;\r\n      if (c.m_next) c.m_next.m_prev = c.m_prev;\r\n      if (this.m_controllerList == c) this.m_controllerList = c.m_next;\r\n      this.m_controllerCount--;\r\n   }\r\n   b2World.prototype.CreateController = function (controller) {\r\n      if (controller.m_world != this) throw new Error(\"Controller can only be a member of one world\");\r\n      controller.m_next = this.m_controllerList;\r\n      controller.m_prev = null;\r\n      if (this.m_controllerList) this.m_controllerList.m_prev = controller;\r\n      this.m_controllerList = controller;\r\n      ++this.m_controllerCount;\r\n      controller.m_world = this;\r\n      return controller;\r\n   }\r\n   b2World.prototype.DestroyController = function (controller) {\r\n      controller.Clear();\r\n      if (controller.m_next) controller.m_next.m_prev = controller.m_prev;\r\n      if (controller.m_prev) controller.m_prev.m_next = controller.m_next;\r\n      if (controller == this.m_controllerList) this.m_controllerList = controller.m_next;\r\n      --this.m_controllerCount;\r\n   }\r\n   b2World.prototype.SetWarmStarting = function (flag) {\r\n      b2World.m_warmStarting = flag;\r\n   }\r\n   b2World.prototype.SetContinuousPhysics = function (flag) {\r\n      b2World.m_continuousPhysics = flag;\r\n   }\r\n   b2World.prototype.GetBodyCount = function () {\r\n      return this.m_bodyCount;\r\n   }\r\n   b2World.prototype.GetJointCount = function () {\r\n      return this.m_jointCount;\r\n   }\r\n   b2World.prototype.GetContactCount = function () {\r\n      return this.m_contactCount;\r\n   }\r\n   b2World.prototype.SetGravity = function (gravity) {\r\n      this.m_gravity = gravity;\r\n   }\r\n   b2World.prototype.GetGravity = function () {\r\n      return this.m_gravity;\r\n   }\r\n   b2World.prototype.GetGroundBody = function () {\r\n      return this.m_groundBody;\r\n   }\r\n   b2World.prototype.Step = function (dt, velocityIterations, positionIterations) {\r\n      if (dt === undefined) dt = 0;\r\n      if (velocityIterations === undefined) velocityIterations = 0;\r\n      if (positionIterations === undefined) positionIterations = 0;\r\n      if (this.m_flags & b2World.e_newFixture) {\r\n         this.m_contactManager.FindNewContacts();\r\n         this.m_flags &= ~b2World.e_newFixture;\r\n      }\r\n      this.m_flags |= b2World.e_locked;\r\n      var step = b2World.s_timestep2;\r\n      step.dt = dt;\r\n      step.velocityIterations = velocityIterations;\r\n      step.positionIterations = positionIterations;\r\n      if (dt > 0.0) {\r\n         step.inv_dt = 1.0 / dt;\r\n      }\r\n      else {\r\n         step.inv_dt = 0.0;\r\n      }\r\n      step.dtRatio = this.m_inv_dt0 * dt;\r\n      step.warmStarting = b2World.m_warmStarting;\r\n      this.m_contactManager.Collide();\r\n      if (step.dt > 0.0) {\r\n         this.Solve(step);\r\n      }\r\n      if (b2World.m_continuousPhysics && step.dt > 0.0) {\r\n         this.SolveTOI(step);\r\n      }\r\n      if (step.dt > 0.0) {\r\n         this.m_inv_dt0 = step.inv_dt;\r\n      }\r\n      this.m_flags &= ~b2World.e_locked;\r\n   }\r\n   b2World.prototype.ClearForces = function () {\r\n      for (var body = this.m_bodyList; body; body = body.m_next) {\r\n         body.m_force.SetZero();\r\n         body.m_torque = 0.0;\r\n      }\r\n   }\r\n   b2World.prototype.DrawDebugData = function () {\r\n      if (this.m_debugDraw == null) {\r\n         return;\r\n      }\r\n      this.m_debugDraw.m_sprite.graphics.clear();\r\n      var flags = this.m_debugDraw.GetFlags();\r\n      var i = 0;\r\n      var b;\r\n      var f;\r\n      var s;\r\n      var j;\r\n      var bp;\r\n      var invQ = new b2Vec2;\r\n      var x1 = new b2Vec2;\r\n      var x2 = new b2Vec2;\r\n      var xf;\r\n      var b1 = new b2AABB();\r\n      var b2 = new b2AABB();\r\n      var vs = [new b2Vec2(), new b2Vec2(), new b2Vec2(), new b2Vec2()];\r\n      var color = new b2Color(0, 0, 0);\r\n      if (flags & b2DebugDraw.e_shapeBit) {\r\n         for (b = this.m_bodyList;\r\n         b; b = b.m_next) {\r\n\t\t\t // This is different from the original in that we check\r\n\t\t\t // if the box2dNoDebug has been set first before drawing\r\n\t\t\t // a debug shape for this body\r\n\t\t\t if (!b._entity || !b._entity._box2dNoDebug) {\r\n\t\t\t\txf = b.m_xf;\r\n\t\t\t\tfor (f = b.GetFixtureList();\r\n\t\t\t\tf; f = f.m_next) {\r\n\t\t\t\t   s = f.GetShape();\r\n\t\t\t\t   if (b.IsActive() == false) {\r\n\t\t\t\t\t  color.Set(0.5, 0.5, 0.3);\r\n\t\t\t\t\t  this.DrawShape(s, xf, color);\r\n\t\t\t\t   }\r\n\t\t\t\t   else if (b.GetType() == b2Body.b2_staticBody) {\r\n\t\t\t\t\t  color.Set(0.5, 0.9, 0.5);\r\n\t\t\t\t\t  this.DrawShape(s, xf, color);\r\n\t\t\t\t   }\r\n\t\t\t\t   else if (b.GetType() == b2Body.b2_kinematicBody) {\r\n\t\t\t\t\t  color.Set(0.5, 0.5, 0.9);\r\n\t\t\t\t\t  this.DrawShape(s, xf, color);\r\n\t\t\t\t   }\r\n\t\t\t\t   else if (b.IsAwake() == false) {\r\n\t\t\t\t\t  color.Set(0.6, 0.6, 0.6);\r\n\t\t\t\t\t  this.DrawShape(s, xf, color);\r\n\t\t\t\t   }\r\n\t\t\t\t   else {\r\n\t\t\t\t\t  color.Set(0.9, 0.7, 0.7);\r\n\t\t\t\t\t  this.DrawShape(s, xf, color);\r\n\t\t\t\t   }\r\n\t\t\t\t}\r\n\t\t\t }\r\n         }\r\n      }\r\n      if (flags & b2DebugDraw.e_jointBit) {\r\n         for (j = this.m_jointList;\r\n         j; j = j.m_next) {\r\n            this.DrawJoint(j);\r\n         }\r\n      }\r\n      if (flags & b2DebugDraw.e_controllerBit) {\r\n         for (var c = this.m_controllerList; c; c = c.m_next) {\r\n            c.Draw(this.m_debugDraw);\r\n         }\r\n      }\r\n      if (flags & b2DebugDraw.e_pairBit) {\r\n         color.Set(0.3, 0.9, 0.9);\r\n         for (var contact = this.m_contactManager.m_contactList; contact; contact = contact.GetNext()) {\r\n            var fixtureA = contact.GetFixtureA();\r\n            var fixtureB = contact.GetFixtureB();\r\n            var cA = fixtureA.GetAABB().GetCenter();\r\n            var cB = fixtureB.GetAABB().GetCenter();\r\n            this.m_debugDraw.DrawSegment(cA, cB, color);\r\n         }\r\n      }\r\n      if (flags & b2DebugDraw.e_aabbBit) {\r\n         bp = this.m_contactManager.m_broadPhase;\r\n         vs = [new b2Vec2(), new b2Vec2(), new b2Vec2(), new b2Vec2()];\r\n         for (b = this.m_bodyList;\r\n         b; b = b.GetNext()) {\r\n            if (b.IsActive() == false) {\r\n               continue;\r\n            }\r\n            for (f = b.GetFixtureList();\r\n            f; f = f.GetNext()) {\r\n               var aabb = bp.GetFatAABB(f.m_proxy);\r\n               vs[0].Set(aabb.lowerBound.x, aabb.lowerBound.y);\r\n               vs[1].Set(aabb.upperBound.x, aabb.lowerBound.y);\r\n               vs[2].Set(aabb.upperBound.x, aabb.upperBound.y);\r\n               vs[3].Set(aabb.lowerBound.x, aabb.upperBound.y);\r\n               this.m_debugDraw.DrawPolygon(vs, 4, color);\r\n            }\r\n         }\r\n      }\r\n      if (flags & b2DebugDraw.e_centerOfMassBit) {\r\n         for (b = this.m_bodyList;\r\n         b; b = b.m_next) {\r\n            xf = b2World.s_xf;\r\n            xf.R = b.m_xf.R;\r\n            xf.position = b.GetWorldCenter();\r\n            this.m_debugDraw.DrawTransform(xf);\r\n         }\r\n      }\r\n   }\r\n   b2World.prototype.QueryAABB = function (callback, aabb) {\r\n      var __this = this;\r\n      var broadPhase = __this.m_contactManager.m_broadPhase;\r\n\r\n      function WorldQueryWrapper(proxy) {\r\n         return callback(broadPhase.GetUserData(proxy));\r\n      };\r\n      broadPhase.Query(WorldQueryWrapper, aabb);\r\n   }\r\n   b2World.prototype.QueryShape = function (callback, shape, transform) {\r\n      var __this = this;\r\n      if (transform === undefined) transform = null;\r\n      if (transform == null) {\r\n         transform = new b2Transform();\r\n         transform.SetIdentity();\r\n      }\r\n      var broadPhase = __this.m_contactManager.m_broadPhase;\r\n\r\n      function WorldQueryWrapper(proxy) {\r\n         var fixture = (broadPhase.GetUserData(proxy) instanceof b2Fixture ? broadPhase.GetUserData(proxy) : null);\r\n         if (b2Shape.TestOverlap(shape, transform, fixture.GetShape(), fixture.GetBody().GetTransform())) return callback(fixture);\r\n         return true;\r\n      };\r\n      var aabb = new b2AABB();\r\n      shape.ComputeAABB(aabb, transform);\r\n      broadPhase.Query(WorldQueryWrapper, aabb);\r\n   }\r\n   b2World.prototype.QueryPoint = function (callback, p) {\r\n      var __this = this;\r\n      var broadPhase = __this.m_contactManager.m_broadPhase;\r\n\r\n      function WorldQueryWrapper(proxy) {\r\n         var fixture = (broadPhase.GetUserData(proxy) instanceof b2Fixture ? broadPhase.GetUserData(proxy) : null);\r\n         if (fixture.TestPoint(p)) return callback(fixture);\r\n         return true;\r\n      };\r\n      var aabb = new b2AABB();\r\n      aabb.lowerBound.Set(p.x - b2Settings.b2_linearSlop, p.y - b2Settings.b2_linearSlop);\r\n      aabb.upperBound.Set(p.x + b2Settings.b2_linearSlop, p.y + b2Settings.b2_linearSlop);\r\n      broadPhase.Query(WorldQueryWrapper, aabb);\r\n   }\r\n   b2World.prototype.RayCast = function (callback, point1, point2) {\r\n      var __this = this;\r\n      var broadPhase = __this.m_contactManager.m_broadPhase;\r\n      var output = new b2RayCastOutput;\r\n\r\n      function RayCastWrapper(input, proxy) {\r\n         var userData = broadPhase.GetUserData(proxy);\r\n         var fixture = (userData instanceof b2Fixture ? userData : null);\r\n         var hit = fixture.RayCast(output, input);\r\n         if (hit) {\r\n            var fraction = output.fraction;\r\n            var point = new b2Vec2((1.0 - fraction) * point1.x + fraction * point2.x, (1.0 - fraction) * point1.y + fraction * point2.y);\r\n            return callback(fixture, point, output.normal, fraction);\r\n         }\r\n         return input.maxFraction;\r\n      };\r\n      var input = new b2RayCastInput(point1, point2);\r\n      broadPhase.RayCast(RayCastWrapper, input);\r\n   }\r\n   b2World.prototype.RayCastOne = function (point1, point2) {\r\n      var __this = this;\r\n      var result;\r\n\r\n      function RayCastOneWrapper(fixture, point, normal, fraction) {\r\n         if (fraction === undefined) fraction = 0;\r\n         result = fixture;\r\n         return fraction;\r\n      };\r\n      __this.RayCast(RayCastOneWrapper, point1, point2);\r\n      return result;\r\n   }\r\n   b2World.prototype.RayCastAll = function (point1, point2) {\r\n      var __this = this;\r\n      var result = new Vector();\r\n\r\n      function RayCastAllWrapper(fixture, point, normal, fraction) {\r\n         if (fraction === undefined) fraction = 0;\r\n         result[result.length] = fixture;\r\n         return 1;\r\n      };\r\n      __this.RayCast(RayCastAllWrapper, point1, point2);\r\n      return result;\r\n   }\r\n   b2World.prototype.GetBodyList = function () {\r\n      return this.m_bodyList;\r\n   }\r\n   b2World.prototype.GetJointList = function () {\r\n      return this.m_jointList;\r\n   }\r\n   b2World.prototype.GetContactList = function () {\r\n      return this.m_contactList;\r\n   }\r\n   b2World.prototype.IsLocked = function () {\r\n      return (this.m_flags & b2World.e_locked) > 0;\r\n   }\r\n   b2World.prototype.Solve = function (step) {\r\n      var b;\r\n      for (var controller = this.m_controllerList; controller; controller = controller.m_next) {\r\n         controller.Step(step);\r\n      }\r\n      var island = this.m_island;\r\n      island.Initialize(this.m_bodyCount, this.m_contactCount, this.m_jointCount, null, this.m_contactManager.m_contactListener, this.m_contactSolver);\r\n      for (b = this.m_bodyList;\r\n      b; b = b.m_next) {\r\n         b.m_flags &= ~b2Body.e_islandFlag;\r\n      }\r\n      for (var c = this.m_contactList; c; c = c.m_next) {\r\n         c.m_flags &= ~b2Contact.e_islandFlag;\r\n      }\r\n      for (var j = this.m_jointList; j; j = j.m_next) {\r\n         j.m_islandFlag = false;\r\n      }\r\n      var stackSize = parseInt(this.m_bodyCount);\r\n      var stack = this.s_stack;\r\n      for (var seed = this.m_bodyList; seed; seed = seed.m_next) {\r\n         if (seed.m_flags & b2Body.e_islandFlag) {\r\n            continue;\r\n         }\r\n         if (seed.IsAwake() == false || seed.IsActive() == false) {\r\n            continue;\r\n         }\r\n         if (seed.GetType() == b2Body.b2_staticBody) {\r\n            continue;\r\n         }\r\n         island.Clear();\r\n         var stackCount = 0;\r\n         stack[stackCount++] = seed;\r\n         seed.m_flags |= b2Body.e_islandFlag;\r\n         while (stackCount > 0) {\r\n            b = stack[--stackCount];\r\n            island.AddBody(b);\r\n            if (b.IsAwake() == false) {\r\n               b.SetAwake(true);\r\n            }\r\n            if (b.GetType() == b2Body.b2_staticBody) {\r\n               continue;\r\n            }\r\n            var other;\r\n            for (var ce = b.m_contactList; ce; ce = ce.next) {\r\n               if (ce.contact.m_flags & b2Contact.e_islandFlag) {\r\n                  continue;\r\n               }\r\n               if (ce.contact.IsSensor() == true || ce.contact.IsEnabled() == false || ce.contact.IsTouching() == false) {\r\n                  continue;\r\n               }\r\n               island.AddContact(ce.contact);\r\n               ce.contact.m_flags |= b2Contact.e_islandFlag;\r\n               other = ce.other;\r\n               if (other.m_flags & b2Body.e_islandFlag) {\r\n                  continue;\r\n               }\r\n               stack[stackCount++] = other;\r\n               other.m_flags |= b2Body.e_islandFlag;\r\n            }\r\n            for (var jn = b.m_jointList; jn; jn = jn.next) {\r\n               if (jn.joint.m_islandFlag == true) {\r\n                  continue;\r\n               }\r\n               other = jn.other;\r\n               if (other.IsActive() == false) {\r\n                  continue;\r\n               }\r\n               island.AddJoint(jn.joint);\r\n               jn.joint.m_islandFlag = true;\r\n               if (other.m_flags & b2Body.e_islandFlag) {\r\n                  continue;\r\n               }\r\n               stack[stackCount++] = other;\r\n               other.m_flags |= b2Body.e_islandFlag;\r\n            }\r\n         }\r\n         island.Solve(step, this.m_gravity, this.m_allowSleep);\r\n         for (var i = 0; i < island.m_bodyCount; ++i) {\r\n            b = island.m_bodies[i];\r\n            if (b.GetType() == b2Body.b2_staticBody) {\r\n               b.m_flags &= ~b2Body.e_islandFlag;\r\n            }\r\n         }\r\n      }\r\n      for (i = 0;\r\n      i < stack.length; ++i) {\r\n         if (!stack[i]) break;\r\n         stack[i] = null;\r\n      }\r\n      for (b = this.m_bodyList;\r\n      b; b = b.m_next) {\r\n         if (b.IsAwake() == false || b.IsActive() == false) {\r\n            continue;\r\n         }\r\n         if (b.GetType() == b2Body.b2_staticBody) {\r\n            continue;\r\n         }\r\n         b.SynchronizeFixtures();\r\n      }\r\n      this.m_contactManager.FindNewContacts();\r\n   }\r\n   b2World.prototype.SolveTOI = function (step) {\r\n      var b;\r\n      var fA;\r\n      var fB;\r\n      var bA;\r\n      var bB;\r\n      var cEdge;\r\n      var j;\r\n      var island = this.m_island;\r\n      island.Initialize(this.m_bodyCount, b2Settings.b2_maxTOIContactsPerIsland, b2Settings.b2_maxTOIJointsPerIsland, null, this.m_contactManager.m_contactListener, this.m_contactSolver);\r\n      var queue = b2World.s_queue;\r\n      for (b = this.m_bodyList;\r\n      b; b = b.m_next) {\r\n         b.m_flags &= ~b2Body.e_islandFlag;\r\n         b.m_sweep.t0 = 0.0;\r\n      }\r\n      var c;\r\n      for (c = this.m_contactList;\r\n      c; c = c.m_next) {\r\n         c.m_flags &= ~ (b2Contact.e_toiFlag | b2Contact.e_islandFlag);\r\n      }\r\n      for (j = this.m_jointList;\r\n      j; j = j.m_next) {\r\n         j.m_islandFlag = false;\r\n      }\r\n      for (;;) {\r\n         var minContact = null;\r\n         var minTOI = 1.0;\r\n         for (c = this.m_contactList;\r\n         c; c = c.m_next) {\r\n            if (c.IsSensor() == true || c.IsEnabled() == false || c.IsContinuous() == false) {\r\n               continue;\r\n            }\r\n            var toi = 1.0;\r\n            if (c.m_flags & b2Contact.e_toiFlag) {\r\n               toi = c.m_toi;\r\n            }\r\n            else {\r\n               fA = c.m_fixtureA;\r\n               fB = c.m_fixtureB;\r\n               bA = fA.m_body;\r\n               bB = fB.m_body;\r\n               if ((bA.GetType() != b2Body.b2_dynamicBody || bA.IsAwake() == false) && (bB.GetType() != b2Body.b2_dynamicBody || bB.IsAwake() == false)) {\r\n                  continue;\r\n               }\r\n               var t0 = bA.m_sweep.t0;\r\n               if (bA.m_sweep.t0 < bB.m_sweep.t0) {\r\n                  t0 = bB.m_sweep.t0;\r\n                  bA.m_sweep.Advance(t0);\r\n               }\r\n               else if (bB.m_sweep.t0 < bA.m_sweep.t0) {\r\n                  t0 = bA.m_sweep.t0;\r\n                  bB.m_sweep.Advance(t0);\r\n               }\r\n               toi = c.ComputeTOI(bA.m_sweep, bB.m_sweep);\r\n               b2Settings.b2Assert(0.0 <= toi && toi <= 1.0);\r\n               if (toi > 0.0 && toi < 1.0) {\r\n                  toi = (1.0 - toi) * t0 + toi;\r\n                  if (toi > 1) toi = 1;\r\n               }\r\n               c.m_toi = toi;\r\n               c.m_flags |= b2Contact.e_toiFlag;\r\n            }\r\n            if (Number.MIN_VALUE < toi && toi < minTOI) {\r\n               minContact = c;\r\n               minTOI = toi;\r\n            }\r\n         }\r\n         if (minContact == null || 1.0 - 100.0 * Number.MIN_VALUE < minTOI) {\r\n            break;\r\n         }\r\n         fA = minContact.m_fixtureA;\r\n         fB = minContact.m_fixtureB;\r\n         bA = fA.m_body;\r\n         bB = fB.m_body;\r\n         b2World.s_backupA.Set(bA.m_sweep);\r\n         b2World.s_backupB.Set(bB.m_sweep);\r\n         bA.Advance(minTOI);\r\n         bB.Advance(minTOI);\r\n         minContact.Update(this.m_contactManager.m_contactListener);\r\n         minContact.m_flags &= ~b2Contact.e_toiFlag;\r\n         if (minContact.IsSensor() == true || minContact.IsEnabled() == false) {\r\n            bA.m_sweep.Set(b2World.s_backupA);\r\n            bB.m_sweep.Set(b2World.s_backupB);\r\n            bA.SynchronizeTransform();\r\n            bB.SynchronizeTransform();\r\n            continue;\r\n         }\r\n         if (minContact.IsTouching() == false) {\r\n            continue;\r\n         }\r\n         var seed = bA;\r\n         if (seed.GetType() != b2Body.b2_dynamicBody) {\r\n            seed = bB;\r\n         }\r\n         island.Clear();\r\n         var queueStart = 0;\r\n         var queueSize = 0;\r\n         queue[queueStart + queueSize++] = seed;\r\n         seed.m_flags |= b2Body.e_islandFlag;\r\n         while (queueSize > 0) {\r\n            b = queue[queueStart++];\r\n            --queueSize;\r\n            island.AddBody(b);\r\n            if (b.IsAwake() == false) {\r\n               b.SetAwake(true);\r\n            }\r\n            if (b.GetType() != b2Body.b2_dynamicBody) {\r\n               continue;\r\n            }\r\n            for (cEdge = b.m_contactList;\r\n            cEdge; cEdge = cEdge.next) {\r\n               if (island.m_contactCount == island.m_contactCapacity) {\r\n                  break;\r\n               }\r\n               if (cEdge.contact.m_flags & b2Contact.e_islandFlag) {\r\n                  continue;\r\n               }\r\n               if (cEdge.contact.IsSensor() == true || cEdge.contact.IsEnabled() == false || cEdge.contact.IsTouching() == false) {\r\n                  continue;\r\n               }\r\n               island.AddContact(cEdge.contact);\r\n               cEdge.contact.m_flags |= b2Contact.e_islandFlag;\r\n               var other = cEdge.other;\r\n               if (other.m_flags & b2Body.e_islandFlag) {\r\n                  continue;\r\n               }\r\n               if (other.GetType() != b2Body.b2_staticBody) {\r\n                  other.Advance(minTOI);\r\n                  other.SetAwake(true);\r\n               }\r\n               queue[queueStart + queueSize] = other;\r\n               ++queueSize;\r\n               other.m_flags |= b2Body.e_islandFlag;\r\n            }\r\n            for (var jEdge = b.m_jointList; jEdge; jEdge = jEdge.next) {\r\n               if (island.m_jointCount == island.m_jointCapacity) continue;\r\n               if (jEdge.joint.m_islandFlag == true) continue;\r\n               other = jEdge.other;\r\n               if (other.IsActive() == false) {\r\n                  continue;\r\n               }\r\n               island.AddJoint(jEdge.joint);\r\n               jEdge.joint.m_islandFlag = true;\r\n               if (other.m_flags & b2Body.e_islandFlag) continue;\r\n               if (other.GetType() != b2Body.b2_staticBody) {\r\n                  other.Advance(minTOI);\r\n                  other.SetAwake(true);\r\n               }\r\n               queue[queueStart + queueSize] = other;\r\n               ++queueSize;\r\n               other.m_flags |= b2Body.e_islandFlag;\r\n            }\r\n         }\r\n         var subStep = b2World.s_timestep;\r\n         subStep.warmStarting = false;\r\n         subStep.dt = (1.0 - minTOI) * step.dt;\r\n         subStep.inv_dt = 1.0 / subStep.dt;\r\n         subStep.dtRatio = 0.0;\r\n         subStep.velocityIterations = step.velocityIterations;\r\n         subStep.positionIterations = step.positionIterations;\r\n         island.SolveTOI(subStep);\r\n         var i = 0;\r\n         for (i = 0;\r\n         i < island.m_bodyCount; ++i) {\r\n            b = island.m_bodies[i];\r\n            b.m_flags &= ~b2Body.e_islandFlag;\r\n            if (b.IsAwake() == false) {\r\n               continue;\r\n            }\r\n            if (b.GetType() != b2Body.b2_dynamicBody) {\r\n               continue;\r\n            }\r\n            b.SynchronizeFixtures();\r\n            for (cEdge = b.m_contactList;\r\n            cEdge; cEdge = cEdge.next) {\r\n               cEdge.contact.m_flags &= ~b2Contact.e_toiFlag;\r\n            }\r\n         }\r\n         for (i = 0;\r\n         i < island.m_contactCount; ++i) {\r\n            c = island.m_contacts[i];\r\n            c.m_flags &= ~ (b2Contact.e_toiFlag | b2Contact.e_islandFlag);\r\n         }\r\n         for (i = 0;\r\n         i < island.m_jointCount; ++i) {\r\n            j = island.m_joints[i];\r\n            j.m_islandFlag = false;\r\n         }\r\n         this.m_contactManager.FindNewContacts();\r\n      }\r\n   }\r\n   b2World.prototype.DrawJoint = function (joint) {\r\n      var b1 = joint.GetBodyA();\r\n      var b2 = joint.GetBodyB();\r\n      var xf1 = b1.m_xf;\r\n      var xf2 = b2.m_xf;\r\n      var x1 = xf1.position;\r\n      var x2 = xf2.position;\r\n      var p1 = joint.GetAnchorA();\r\n      var p2 = joint.GetAnchorB();\r\n      var color = b2World.s_jointColor;\r\n      switch (joint.m_type) {\r\n      case b2Joint.e_distanceJoint:\r\n         this.m_debugDraw.DrawSegment(p1, p2, color);\r\n         break;\r\n      case b2Joint.e_pulleyJoint:\r\n         {\r\n            var pulley = ((joint instanceof b2PulleyJoint ? joint : null));\r\n            var s1 = pulley.GetGroundAnchorA();\r\n            var s2 = pulley.GetGroundAnchorB();\r\n            this.m_debugDraw.DrawSegment(s1, p1, color);\r\n            this.m_debugDraw.DrawSegment(s2, p2, color);\r\n            this.m_debugDraw.DrawSegment(s1, s2, color);\r\n         }\r\n         break;\r\n      case b2Joint.e_mouseJoint:\r\n         this.m_debugDraw.DrawSegment(p1, p2, color);\r\n         break;\r\n      default:\r\n         if (b1 != this.m_groundBody) this.m_debugDraw.DrawSegment(x1, p1, color);\r\n         this.m_debugDraw.DrawSegment(p1, p2, color);\r\n         if (b2 != this.m_groundBody) this.m_debugDraw.DrawSegment(x2, p2, color);\r\n      }\r\n   }\r\n   b2World.prototype.DrawShape = function (shape, xf, color) {\r\n      switch (shape.m_type) {\r\n      case b2Shape.e_circleShape:\r\n         {\r\n            var circle = ((shape instanceof b2CircleShape ? shape : null));\r\n            var center = b2Math.MulX(xf, circle.m_p);\r\n            var radius = circle.m_radius;\r\n            var axis = xf.R.col1;\r\n            this.m_debugDraw.DrawSolidCircle(center, radius, axis, color);\r\n         }\r\n         break;\r\n      case b2Shape.e_polygonShape:\r\n         {\r\n            var i = 0;\r\n            var poly = ((shape instanceof b2PolygonShape ? shape : null));\r\n            var vertexCount = parseInt(poly.GetVertexCount());\r\n            var localVertices = poly.GetVertices();\r\n            var vertices = new Vector(vertexCount);\r\n            for (i = 0;\r\n            i < vertexCount; ++i) {\r\n               vertices[i] = b2Math.MulX(xf, localVertices[i]);\r\n            }\r\n            this.m_debugDraw.DrawSolidPolygon(vertices, vertexCount, color);\r\n         }\r\n         break;\r\n      case b2Shape.e_edgeShape:\r\n         {\r\n            var edge = (shape instanceof b2EdgeShape ? shape : null);\r\n            this.m_debugDraw.DrawSegment(b2Math.MulX(xf, edge.GetVertex1()), b2Math.MulX(xf, edge.GetVertex2()), color);\r\n         }\r\n         break;\r\n      }\r\n   }\r\n   Box2D.postDefs.push(function () {\r\n      Box2D.Dynamics.b2World.s_timestep2 = new b2TimeStep();\r\n      Box2D.Dynamics.b2World.s_xf = new b2Transform();\r\n      Box2D.Dynamics.b2World.s_backupA = new b2Sweep();\r\n      Box2D.Dynamics.b2World.s_backupB = new b2Sweep();\r\n      Box2D.Dynamics.b2World.s_timestep = new b2TimeStep();\r\n      Box2D.Dynamics.b2World.s_queue = new Vector();\r\n      Box2D.Dynamics.b2World.s_jointColor = new b2Color(0.5, 0.8, 0.8);\r\n      Box2D.Dynamics.b2World.e_newFixture = 0x0001;\r\n      Box2D.Dynamics.b2World.e_locked = 0x0002;\r\n   });\r\n})();\r\n(function () {\r\n   var b2CircleShape = Box2D.Collision.Shapes.b2CircleShape,\r\n      b2EdgeChainDef = Box2D.Collision.Shapes.b2EdgeChainDef,\r\n      b2EdgeShape = Box2D.Collision.Shapes.b2EdgeShape,\r\n      b2MassData = Box2D.Collision.Shapes.b2MassData,\r\n      b2PolygonShape = Box2D.Collision.Shapes.b2PolygonShape,\r\n      b2Shape = Box2D.Collision.Shapes.b2Shape,\r\n      b2CircleContact = Box2D.Dynamics.Contacts.b2CircleContact,\r\n      b2Contact = Box2D.Dynamics.Contacts.b2Contact,\r\n      b2ContactConstraint = Box2D.Dynamics.Contacts.b2ContactConstraint,\r\n      b2ContactConstraintPoint = Box2D.Dynamics.Contacts.b2ContactConstraintPoint,\r\n      b2ContactEdge = Box2D.Dynamics.Contacts.b2ContactEdge,\r\n      b2ContactFactory = Box2D.Dynamics.Contacts.b2ContactFactory,\r\n      b2ContactRegister = Box2D.Dynamics.Contacts.b2ContactRegister,\r\n      b2ContactResult = Box2D.Dynamics.Contacts.b2ContactResult,\r\n      b2ContactSolver = Box2D.Dynamics.Contacts.b2ContactSolver,\r\n      b2EdgeAndCircleContact = Box2D.Dynamics.Contacts.b2EdgeAndCircleContact,\r\n      b2NullContact = Box2D.Dynamics.Contacts.b2NullContact,\r\n      b2PolyAndCircleContact = Box2D.Dynamics.Contacts.b2PolyAndCircleContact,\r\n      b2PolyAndEdgeContact = Box2D.Dynamics.Contacts.b2PolyAndEdgeContact,\r\n      b2PolygonContact = Box2D.Dynamics.Contacts.b2PolygonContact,\r\n      b2PositionSolverManifold = Box2D.Dynamics.Contacts.b2PositionSolverManifold,\r\n      b2Body = Box2D.Dynamics.b2Body,\r\n      b2BodyDef = Box2D.Dynamics.b2BodyDef,\r\n      b2ContactFilter = Box2D.Dynamics.b2ContactFilter,\r\n      b2ContactImpulse = Box2D.Dynamics.b2ContactImpulse,\r\n      b2ContactListener = Box2D.Dynamics.b2ContactListener,\r\n      b2ContactManager = Box2D.Dynamics.b2ContactManager,\r\n      b2DebugDraw = Box2D.Dynamics.b2DebugDraw,\r\n      b2DestructionListener = Box2D.Dynamics.b2DestructionListener,\r\n      b2FilterData = Box2D.Dynamics.b2FilterData,\r\n      b2Fixture = Box2D.Dynamics.b2Fixture,\r\n      b2FixtureDef = Box2D.Dynamics.b2FixtureDef,\r\n      b2Island = Box2D.Dynamics.b2Island,\r\n      b2TimeStep = Box2D.Dynamics.b2TimeStep,\r\n      b2World = Box2D.Dynamics.b2World,\r\n      b2Color = Box2D.Common.b2Color,\r\n      b2internal = Box2D.Common.b2internal,\r\n      b2Settings = Box2D.Common.b2Settings,\r\n      b2Mat22 = Box2D.Common.Math.b2Mat22,\r\n      b2Mat33 = Box2D.Common.Math.b2Mat33,\r\n      b2Math = Box2D.Common.Math.b2Math,\r\n      b2Sweep = Box2D.Common.Math.b2Sweep,\r\n      b2Transform = Box2D.Common.Math.b2Transform,\r\n      b2Vec2 = Box2D.Common.Math.b2Vec2,\r\n      b2Vec3 = Box2D.Common.Math.b2Vec3,\r\n      b2AABB = Box2D.Collision.b2AABB,\r\n      b2Bound = Box2D.Collision.b2Bound,\r\n      b2BoundValues = Box2D.Collision.b2BoundValues,\r\n      b2Collision = Box2D.Collision.b2Collision,\r\n      b2ContactID = Box2D.Collision.b2ContactID,\r\n      b2ContactPoint = Box2D.Collision.b2ContactPoint,\r\n      b2Distance = Box2D.Collision.b2Distance,\r\n      b2DistanceInput = Box2D.Collision.b2DistanceInput,\r\n      b2DistanceOutput = Box2D.Collision.b2DistanceOutput,\r\n      b2DistanceProxy = Box2D.Collision.b2DistanceProxy,\r\n      b2DynamicTree = Box2D.Collision.b2DynamicTree,\r\n      b2DynamicTreeBroadPhase = Box2D.Collision.b2DynamicTreeBroadPhase,\r\n      b2DynamicTreeNode = Box2D.Collision.b2DynamicTreeNode,\r\n      b2DynamicTreePair = Box2D.Collision.b2DynamicTreePair,\r\n      b2Manifold = Box2D.Collision.b2Manifold,\r\n      b2ManifoldPoint = Box2D.Collision.b2ManifoldPoint,\r\n      b2Point = Box2D.Collision.b2Point,\r\n      b2RayCastInput = Box2D.Collision.b2RayCastInput,\r\n      b2RayCastOutput = Box2D.Collision.b2RayCastOutput,\r\n      b2Segment = Box2D.Collision.b2Segment,\r\n      b2SeparationFunction = Box2D.Collision.b2SeparationFunction,\r\n      b2Simplex = Box2D.Collision.b2Simplex,\r\n      b2SimplexCache = Box2D.Collision.b2SimplexCache,\r\n      b2SimplexVertex = Box2D.Collision.b2SimplexVertex,\r\n      b2TimeOfImpact = Box2D.Collision.b2TimeOfImpact,\r\n      b2TOIInput = Box2D.Collision.b2TOIInput,\r\n      b2WorldManifold = Box2D.Collision.b2WorldManifold,\r\n      ClipVertex = Box2D.Collision.ClipVertex,\r\n      Features = Box2D.Collision.Features,\r\n      IBroadPhase = Box2D.Collision.IBroadPhase;\r\n\r\n   Box2D.inherit(b2CircleContact, Box2D.Dynamics.Contacts.b2Contact);\r\n   b2CircleContact.prototype.__super = Box2D.Dynamics.Contacts.b2Contact.prototype;\r\n   b2CircleContact.b2CircleContact = function () {\r\n      Box2D.Dynamics.Contacts.b2Contact.b2Contact.apply(this, arguments);\r\n   };\r\n   b2CircleContact.Create = function (allocator) {\r\n      return new b2CircleContact();\r\n   }\r\n   b2CircleContact.Destroy = function (contact, allocator) {}\r\n   b2CircleContact.prototype.Reset = function (fixtureA, fixtureB) {\r\n      this.__super.Reset.call(this, fixtureA, fixtureB);\r\n   }\r\n   b2CircleContact.prototype.Evaluate = function () {\r\n      var bA = this.m_fixtureA.GetBody();\r\n      var bB = this.m_fixtureB.GetBody();\r\n      b2Collision.CollideCircles(this.m_manifold, (this.m_fixtureA.GetShape() instanceof b2CircleShape ? this.m_fixtureA.GetShape() : null), bA.m_xf, (this.m_fixtureB.GetShape() instanceof b2CircleShape ? this.m_fixtureB.GetShape() : null), bB.m_xf);\r\n   }\r\n   b2Contact.b2Contact = function () {\r\n      this.m_nodeA = new b2ContactEdge();\r\n      this.m_nodeB = new b2ContactEdge();\r\n      this.m_manifold = new b2Manifold();\r\n      this.m_oldManifold = new b2Manifold();\r\n   };\r\n   b2Contact.prototype.GetManifold = function () {\r\n      return this.m_manifold;\r\n   }\r\n   b2Contact.prototype.GetWorldManifold = function (worldManifold) {\r\n      var bodyA = this.m_fixtureA.GetBody();\r\n      var bodyB = this.m_fixtureB.GetBody();\r\n      var shapeA = this.m_fixtureA.GetShape();\r\n      var shapeB = this.m_fixtureB.GetShape();\r\n      worldManifold.Initialize(this.m_manifold, bodyA.GetTransform(), shapeA.m_radius, bodyB.GetTransform(), shapeB.m_radius);\r\n   }\r\n   b2Contact.prototype.IsTouching = function () {\r\n      return (this.m_flags & b2Contact.e_touchingFlag) == b2Contact.e_touchingFlag;\r\n   }\r\n   b2Contact.prototype.IsContinuous = function () {\r\n      return (this.m_flags & b2Contact.e_continuousFlag) == b2Contact.e_continuousFlag;\r\n   }\r\n   b2Contact.prototype.SetSensor = function (sensor) {\r\n      if (sensor) {\r\n         this.m_flags |= b2Contact.e_sensorFlag;\r\n      }\r\n      else {\r\n         this.m_flags &= ~b2Contact.e_sensorFlag;\r\n      }\r\n   }\r\n   b2Contact.prototype.IsSensor = function () {\r\n      return (this.m_flags & b2Contact.e_sensorFlag) == b2Contact.e_sensorFlag;\r\n   }\r\n   b2Contact.prototype.SetEnabled = function (flag) {\r\n      if (flag) {\r\n         this.m_flags |= b2Contact.e_enabledFlag;\r\n      }\r\n      else {\r\n         this.m_flags &= ~b2Contact.e_enabledFlag;\r\n      }\r\n   }\r\n   b2Contact.prototype.IsEnabled = function () {\r\n      return (this.m_flags & b2Contact.e_enabledFlag) == b2Contact.e_enabledFlag;\r\n   }\r\n   b2Contact.prototype.GetNext = function () {\r\n      return this.m_next;\r\n   }\r\n   b2Contact.prototype.GetFixtureA = function () {\r\n      return this.m_fixtureA;\r\n   }\r\n   b2Contact.prototype.GetFixtureB = function () {\r\n      return this.m_fixtureB;\r\n   }\r\n   b2Contact.prototype.FlagForFiltering = function () {\r\n      this.m_flags |= b2Contact.e_filterFlag;\r\n   }\r\n   b2Contact.prototype.b2Contact = function () {}\r\n   b2Contact.prototype.Reset = function (fixtureA, fixtureB) {\r\n      if (fixtureA === undefined) fixtureA = null;\r\n      if (fixtureB === undefined) fixtureB = null;\r\n      this.m_flags = b2Contact.e_enabledFlag;\r\n      if (!fixtureA || !fixtureB) {\r\n         this.m_fixtureA = null;\r\n         this.m_fixtureB = null;\r\n         return;\r\n      }\r\n      if (fixtureA.IsSensor() || fixtureB.IsSensor()) {\r\n         this.m_flags |= b2Contact.e_sensorFlag;\r\n      }\r\n      var bodyA = fixtureA.GetBody();\r\n      var bodyB = fixtureB.GetBody();\r\n      if (bodyA.GetType() != b2Body.b2_dynamicBody || bodyA.IsBullet() || bodyB.GetType() != b2Body.b2_dynamicBody || bodyB.IsBullet()) {\r\n         this.m_flags |= b2Contact.e_continuousFlag;\r\n      }\r\n      this.m_fixtureA = fixtureA;\r\n      this.m_fixtureB = fixtureB;\r\n      this.m_manifold.m_pointCount = 0;\r\n      this.m_prev = null;\r\n      this.m_next = null;\r\n      this.m_nodeA.contact = null;\r\n      this.m_nodeA.prev = null;\r\n      this.m_nodeA.next = null;\r\n      this.m_nodeA.other = null;\r\n      this.m_nodeB.contact = null;\r\n      this.m_nodeB.prev = null;\r\n      this.m_nodeB.next = null;\r\n      this.m_nodeB.other = null;\r\n   }\r\n   b2Contact.prototype.Update = function (listener) {\r\n      var tManifold = this.m_oldManifold;\r\n      this.m_oldManifold = this.m_manifold;\r\n      this.m_manifold = tManifold;\r\n      this.m_flags |= b2Contact.e_enabledFlag;\r\n      var touching = false;\r\n      var wasTouching = (this.m_flags & b2Contact.e_touchingFlag) == b2Contact.e_touchingFlag;\r\n      var bodyA = this.m_fixtureA.m_body;\r\n      var bodyB = this.m_fixtureB.m_body;\r\n      var aabbOverlap = this.m_fixtureA.m_aabb.TestOverlap(this.m_fixtureB.m_aabb);\r\n      if (this.m_flags & b2Contact.e_sensorFlag) {\r\n         if (aabbOverlap) {\r\n            var shapeA = this.m_fixtureA.GetShape();\r\n            var shapeB = this.m_fixtureB.GetShape();\r\n            var xfA = bodyA.GetTransform();\r\n            var xfB = bodyB.GetTransform();\r\n            touching = b2Shape.TestOverlap(shapeA, xfA, shapeB, xfB);\r\n         }\r\n         this.m_manifold.m_pointCount = 0;\r\n      }\r\n      else {\r\n         if (bodyA.GetType() != b2Body.b2_dynamicBody || bodyA.IsBullet() || bodyB.GetType() != b2Body.b2_dynamicBody || bodyB.IsBullet()) {\r\n            this.m_flags |= b2Contact.e_continuousFlag;\r\n         }\r\n         else {\r\n            this.m_flags &= ~b2Contact.e_continuousFlag;\r\n         }\r\n         if (aabbOverlap) {\r\n            this.Evaluate();\r\n            touching = this.m_manifold.m_pointCount > 0;\r\n            for (var i = 0; i < this.m_manifold.m_pointCount; ++i) {\r\n               var mp2 = this.m_manifold.m_points[i];\r\n               mp2.m_normalImpulse = 0.0;\r\n               mp2.m_tangentImpulse = 0.0;\r\n               var id2 = mp2.m_id;\r\n               for (var j = 0; j < this.m_oldManifold.m_pointCount; ++j) {\r\n                  var mp1 = this.m_oldManifold.m_points[j];\r\n                  if (mp1.m_id.key == id2.key) {\r\n                     mp2.m_normalImpulse = mp1.m_normalImpulse;\r\n                     mp2.m_tangentImpulse = mp1.m_tangentImpulse;\r\n                     break;\r\n                  }\r\n               }\r\n            }\r\n         }\r\n         else {\r\n            this.m_manifold.m_pointCount = 0;\r\n         }\r\n         if (touching != wasTouching) {\r\n            bodyA.SetAwake(true);\r\n            bodyB.SetAwake(true);\r\n         }\r\n      }\r\n      if (touching) {\r\n         this.m_flags |= b2Contact.e_touchingFlag;\r\n      }\r\n      else {\r\n         this.m_flags &= ~b2Contact.e_touchingFlag;\r\n      }\r\n      if (wasTouching == false && touching == true) {\r\n         listener.BeginContact(this);\r\n      }\r\n      if (wasTouching == true && touching == false) {\r\n         listener.EndContact(this);\r\n      }\r\n      if ((this.m_flags & b2Contact.e_sensorFlag) == 0) {\r\n         listener.PreSolve(this, this.m_oldManifold);\r\n      }\r\n   }\r\n   b2Contact.prototype.Evaluate = function () {}\r\n   b2Contact.prototype.ComputeTOI = function (sweepA, sweepB) {\r\n      b2Contact.s_input.proxyA.Set(this.m_fixtureA.GetShape());\r\n      b2Contact.s_input.proxyB.Set(this.m_fixtureB.GetShape());\r\n      b2Contact.s_input.sweepA = sweepA;\r\n      b2Contact.s_input.sweepB = sweepB;\r\n      b2Contact.s_input.tolerance = b2Settings.b2_linearSlop;\r\n      return b2TimeOfImpact.TimeOfImpact(b2Contact.s_input);\r\n   }\r\n   Box2D.postDefs.push(function () {\r\n      Box2D.Dynamics.Contacts.b2Contact.e_sensorFlag = 0x0001;\r\n      Box2D.Dynamics.Contacts.b2Contact.e_continuousFlag = 0x0002;\r\n      Box2D.Dynamics.Contacts.b2Contact.e_islandFlag = 0x0004;\r\n      Box2D.Dynamics.Contacts.b2Contact.e_toiFlag = 0x0008;\r\n      Box2D.Dynamics.Contacts.b2Contact.e_touchingFlag = 0x0010;\r\n      Box2D.Dynamics.Contacts.b2Contact.e_enabledFlag = 0x0020;\r\n      Box2D.Dynamics.Contacts.b2Contact.e_filterFlag = 0x0040;\r\n      Box2D.Dynamics.Contacts.b2Contact.s_input = new b2TOIInput();\r\n   });\r\n   b2ContactConstraint.b2ContactConstraint = function () {\r\n      this.localPlaneNormal = new b2Vec2();\r\n      this.localPoint = new b2Vec2();\r\n      this.normal = new b2Vec2();\r\n      this.normalMass = new b2Mat22();\r\n      this.K = new b2Mat22();\r\n   };\r\n   b2ContactConstraint.prototype.b2ContactConstraint = function () {\r\n      this.points = new Vector(b2Settings.b2_maxManifoldPoints);\r\n      for (var i = 0; i < b2Settings.b2_maxManifoldPoints; i++) {\r\n         this.points[i] = new b2ContactConstraintPoint();\r\n      }\r\n   }\r\n   b2ContactConstraintPoint.b2ContactConstraintPoint = function () {\r\n      this.localPoint = new b2Vec2();\r\n      this.rA = new b2Vec2();\r\n      this.rB = new b2Vec2();\r\n   };\r\n   b2ContactEdge.b2ContactEdge = function () {};\r\n   b2ContactFactory.b2ContactFactory = function () {};\r\n   b2ContactFactory.prototype.b2ContactFactory = function (allocator) {\r\n      this.m_allocator = allocator;\r\n      this.InitializeRegisters();\r\n   }\r\n   b2ContactFactory.prototype.AddType = function (createFcn, destroyFcn, type1, type2) {\r\n      if (type1 === undefined) type1 = 0;\r\n      if (type2 === undefined) type2 = 0;\r\n      this.m_registers[type1][type2].createFcn = createFcn;\r\n      this.m_registers[type1][type2].destroyFcn = destroyFcn;\r\n      this.m_registers[type1][type2].primary = true;\r\n      if (type1 != type2) {\r\n         this.m_registers[type2][type1].createFcn = createFcn;\r\n         this.m_registers[type2][type1].destroyFcn = destroyFcn;\r\n         this.m_registers[type2][type1].primary = false;\r\n      }\r\n   }\r\n   b2ContactFactory.prototype.InitializeRegisters = function () {\r\n      this.m_registers = new Vector(b2Shape.e_shapeTypeCount);\r\n      for (var i = 0; i < b2Shape.e_shapeTypeCount; i++) {\r\n         this.m_registers[i] = new Vector(b2Shape.e_shapeTypeCount);\r\n         for (var j = 0; j < b2Shape.e_shapeTypeCount; j++) {\r\n            this.m_registers[i][j] = new b2ContactRegister();\r\n         }\r\n      }\r\n      this.AddType(b2CircleContact.Create, b2CircleContact.Destroy, b2Shape.e_circleShape, b2Shape.e_circleShape);\r\n      this.AddType(b2PolyAndCircleContact.Create, b2PolyAndCircleContact.Destroy, b2Shape.e_polygonShape, b2Shape.e_circleShape);\r\n      this.AddType(b2PolygonContact.Create, b2PolygonContact.Destroy, b2Shape.e_polygonShape, b2Shape.e_polygonShape);\r\n      this.AddType(b2EdgeAndCircleContact.Create, b2EdgeAndCircleContact.Destroy, b2Shape.e_edgeShape, b2Shape.e_circleShape);\r\n      this.AddType(b2PolyAndEdgeContact.Create, b2PolyAndEdgeContact.Destroy, b2Shape.e_polygonShape, b2Shape.e_edgeShape);\r\n   }\r\n   b2ContactFactory.prototype.Create = function (fixtureA, fixtureB) {\r\n      var type1 = parseInt(fixtureA.GetType());\r\n      var type2 = parseInt(fixtureB.GetType());\r\n      var reg = this.m_registers[type1][type2];\r\n      var c;\r\n      if (reg.pool) {\r\n         c = reg.pool;\r\n         reg.pool = c.m_next;\r\n         reg.poolCount--;\r\n         c.Reset(fixtureA, fixtureB);\r\n         return c;\r\n      }\r\n      var createFcn = reg.createFcn;\r\n      if (createFcn != null) {\r\n         if (reg.primary) {\r\n            c = createFcn(this.m_allocator);\r\n            c.Reset(fixtureA, fixtureB);\r\n            return c;\r\n         }\r\n         else {\r\n            c = createFcn(this.m_allocator);\r\n            c.Reset(fixtureB, fixtureA);\r\n            return c;\r\n         }\r\n      }\r\n      else {\r\n         return null;\r\n      }\r\n   }\r\n   b2ContactFactory.prototype.Destroy = function (contact) {\r\n      if (contact.m_manifold.m_pointCount > 0) {\r\n         contact.m_fixtureA.m_body.SetAwake(true);\r\n         contact.m_fixtureB.m_body.SetAwake(true);\r\n      }\r\n      var type1 = parseInt(contact.m_fixtureA.GetType());\r\n      var type2 = parseInt(contact.m_fixtureB.GetType());\r\n      var reg = this.m_registers[type1][type2];\r\n      if (true) {\r\n         reg.poolCount++;\r\n         contact.m_next = reg.pool;\r\n         reg.pool = contact;\r\n      }\r\n      var destroyFcn = reg.destroyFcn;\r\n      destroyFcn(contact, this.m_allocator);\r\n   }\r\n   b2ContactRegister.b2ContactRegister = function () {};\r\n   b2ContactResult.b2ContactResult = function () {\r\n      this.position = new b2Vec2();\r\n      this.normal = new b2Vec2();\r\n      this.id = new b2ContactID();\r\n   };\r\n   b2ContactSolver.b2ContactSolver = function () {\r\n      this.m_step = new b2TimeStep();\r\n      this.m_constraints = new Vector();\r\n   };\r\n   b2ContactSolver.prototype.b2ContactSolver = function () {}\r\n   b2ContactSolver.prototype.Initialize = function (step, contacts, contactCount, allocator) {\r\n      if (contactCount === undefined) contactCount = 0;\r\n      var contact;\r\n      this.m_step.Set(step);\r\n      this.m_allocator = allocator;\r\n      var i = 0;\r\n      var tVec;\r\n      var tMat;\r\n      this.m_constraintCount = contactCount;\r\n      while (this.m_constraints.length < this.m_constraintCount) {\r\n         this.m_constraints[this.m_constraints.length] = new b2ContactConstraint();\r\n      }\r\n      for (i = 0;\r\n      i < contactCount; ++i) {\r\n         contact = contacts[i];\r\n         var fixtureA = contact.m_fixtureA;\r\n         var fixtureB = contact.m_fixtureB;\r\n         var shapeA = fixtureA.m_shape;\r\n         var shapeB = fixtureB.m_shape;\r\n         var radiusA = shapeA.m_radius;\r\n         var radiusB = shapeB.m_radius;\r\n         var bodyA = fixtureA.m_body;\r\n         var bodyB = fixtureB.m_body;\r\n         var manifold = contact.GetManifold();\r\n         var friction = b2Settings.b2MixFriction(fixtureA.GetFriction(), fixtureB.GetFriction());\r\n         var restitution = b2Settings.b2MixRestitution(fixtureA.GetRestitution(), fixtureB.GetRestitution());\r\n         var vAX = bodyA.m_linearVelocity.x;\r\n         var vAY = bodyA.m_linearVelocity.y;\r\n         var vBX = bodyB.m_linearVelocity.x;\r\n         var vBY = bodyB.m_linearVelocity.y;\r\n         var wA = bodyA.m_angularVelocity;\r\n         var wB = bodyB.m_angularVelocity;\r\n         b2Settings.b2Assert(manifold.m_pointCount > 0);\r\n         b2ContactSolver.s_worldManifold.Initialize(manifold, bodyA.m_xf, radiusA, bodyB.m_xf, radiusB);\r\n         var normalX = b2ContactSolver.s_worldManifold.m_normal.x;\r\n         var normalY = b2ContactSolver.s_worldManifold.m_normal.y;\r\n         var cc = this.m_constraints[i];\r\n         cc.bodyA = bodyA;\r\n         cc.bodyB = bodyB;\r\n         cc.manifold = manifold;\r\n         cc.normal.x = normalX;\r\n         cc.normal.y = normalY;\r\n         cc.pointCount = manifold.m_pointCount;\r\n         cc.friction = friction;\r\n         cc.restitution = restitution;\r\n         cc.localPlaneNormal.x = manifold.m_localPlaneNormal.x;\r\n         cc.localPlaneNormal.y = manifold.m_localPlaneNormal.y;\r\n         cc.localPoint.x = manifold.m_localPoint.x;\r\n         cc.localPoint.y = manifold.m_localPoint.y;\r\n         cc.radius = radiusA + radiusB;\r\n         cc.type = manifold.m_type;\r\n         for (var k = 0; k < cc.pointCount; ++k) {\r\n            var cp = manifold.m_points[k];\r\n            var ccp = cc.points[k];\r\n            ccp.normalImpulse = cp.m_normalImpulse;\r\n            ccp.tangentImpulse = cp.m_tangentImpulse;\r\n            ccp.localPoint.SetV(cp.m_localPoint);\r\n            var rAX = ccp.rA.x = b2ContactSolver.s_worldManifold.m_points[k].x - bodyA.m_sweep.c.x;\r\n            var rAY = ccp.rA.y = b2ContactSolver.s_worldManifold.m_points[k].y - bodyA.m_sweep.c.y;\r\n            var rBX = ccp.rB.x = b2ContactSolver.s_worldManifold.m_points[k].x - bodyB.m_sweep.c.x;\r\n            var rBY = ccp.rB.y = b2ContactSolver.s_worldManifold.m_points[k].y - bodyB.m_sweep.c.y;\r\n            var rnA = rAX * normalY - rAY * normalX;\r\n            var rnB = rBX * normalY - rBY * normalX;\r\n            rnA *= rnA;\r\n            rnB *= rnB;\r\n            var kNormal = bodyA.m_invMass + bodyB.m_invMass + bodyA.m_invI * rnA + bodyB.m_invI * rnB;\r\n            ccp.normalMass = 1.0 / kNormal;\r\n            var kEqualized = bodyA.m_mass * bodyA.m_invMass + bodyB.m_mass * bodyB.m_invMass;\r\n            kEqualized += bodyA.m_mass * bodyA.m_invI * rnA + bodyB.m_mass * bodyB.m_invI * rnB;\r\n            ccp.equalizedMass = 1.0 / kEqualized;\r\n            var tangentX = normalY;\r\n            var tangentY = (-normalX);\r\n            var rtA = rAX * tangentY - rAY * tangentX;\r\n            var rtB = rBX * tangentY - rBY * tangentX;\r\n            rtA *= rtA;\r\n            rtB *= rtB;\r\n            var kTangent = bodyA.m_invMass + bodyB.m_invMass + bodyA.m_invI * rtA + bodyB.m_invI * rtB;\r\n            ccp.tangentMass = 1.0 / kTangent;\r\n            ccp.velocityBias = 0.0;\r\n            var tX = vBX + ((-wB * rBY)) - vAX - ((-wA * rAY));\r\n            var tY = vBY + (wB * rBX) - vAY - (wA * rAX);\r\n            var vRel = cc.normal.x * tX + cc.normal.y * tY;\r\n            if (vRel < (-b2Settings.b2_velocityThreshold)) {\r\n               ccp.velocityBias += (-cc.restitution * vRel);\r\n            }\r\n         }\r\n         if (cc.pointCount == 2) {\r\n            var ccp1 = cc.points[0];\r\n            var ccp2 = cc.points[1];\r\n            var invMassA = bodyA.m_invMass;\r\n            var invIA = bodyA.m_invI;\r\n            var invMassB = bodyB.m_invMass;\r\n            var invIB = bodyB.m_invI;\r\n            var rn1A = ccp1.rA.x * normalY - ccp1.rA.y * normalX;\r\n            var rn1B = ccp1.rB.x * normalY - ccp1.rB.y * normalX;\r\n            var rn2A = ccp2.rA.x * normalY - ccp2.rA.y * normalX;\r\n            var rn2B = ccp2.rB.x * normalY - ccp2.rB.y * normalX;\r\n            var k11 = invMassA + invMassB + invIA * rn1A * rn1A + invIB * rn1B * rn1B;\r\n            var k22 = invMassA + invMassB + invIA * rn2A * rn2A + invIB * rn2B * rn2B;\r\n            var k12 = invMassA + invMassB + invIA * rn1A * rn2A + invIB * rn1B * rn2B;\r\n            var k_maxConditionNumber = 100.0;\r\n            if (k11 * k11 < k_maxConditionNumber * (k11 * k22 - k12 * k12)) {\r\n               cc.K.col1.Set(k11, k12);\r\n               cc.K.col2.Set(k12, k22);\r\n               cc.K.GetInverse(cc.normalMass);\r\n            }\r\n            else {\r\n               cc.pointCount = 1;\r\n            }\r\n         }\r\n      }\r\n   }\r\n   b2ContactSolver.prototype.InitVelocityConstraints = function (step) {\r\n      var tVec;\r\n      var tVec2;\r\n      var tMat;\r\n      for (var i = 0; i < this.m_constraintCount; ++i) {\r\n         var c = this.m_constraints[i];\r\n         var bodyA = c.bodyA;\r\n         var bodyB = c.bodyB;\r\n         var invMassA = bodyA.m_invMass;\r\n         var invIA = bodyA.m_invI;\r\n         var invMassB = bodyB.m_invMass;\r\n         var invIB = bodyB.m_invI;\r\n         var normalX = c.normal.x;\r\n         var normalY = c.normal.y;\r\n         var tangentX = normalY;\r\n         var tangentY = (-normalX);\r\n         var tX = 0;\r\n         var j = 0;\r\n         var tCount = 0;\r\n         if (step.warmStarting) {\r\n            tCount = c.pointCount;\r\n            for (j = 0;\r\n            j < tCount; ++j) {\r\n               var ccp = c.points[j];\r\n               ccp.normalImpulse *= step.dtRatio;\r\n               ccp.tangentImpulse *= step.dtRatio;\r\n               var PX = ccp.normalImpulse * normalX + ccp.tangentImpulse * tangentX;\r\n               var PY = ccp.normalImpulse * normalY + ccp.tangentImpulse * tangentY;\r\n               bodyA.m_angularVelocity -= invIA * (ccp.rA.x * PY - ccp.rA.y * PX);\r\n               bodyA.m_linearVelocity.x -= invMassA * PX;\r\n               bodyA.m_linearVelocity.y -= invMassA * PY;\r\n               bodyB.m_angularVelocity += invIB * (ccp.rB.x * PY - ccp.rB.y * PX);\r\n               bodyB.m_linearVelocity.x += invMassB * PX;\r\n               bodyB.m_linearVelocity.y += invMassB * PY;\r\n            }\r\n         }\r\n         else {\r\n            tCount = c.pointCount;\r\n            for (j = 0;\r\n            j < tCount; ++j) {\r\n               var ccp2 = c.points[j];\r\n               ccp2.normalImpulse = 0.0;\r\n               ccp2.tangentImpulse = 0.0;\r\n            }\r\n         }\r\n      }\r\n   }\r\n   b2ContactSolver.prototype.SolveVelocityConstraints = function () {\r\n      var j = 0;\r\n      var ccp;\r\n      var rAX = 0;\r\n      var rAY = 0;\r\n      var rBX = 0;\r\n      var rBY = 0;\r\n      var dvX = 0;\r\n      var dvY = 0;\r\n      var vn = 0;\r\n      var vt = 0;\r\n      var lambda = 0;\r\n      var maxFriction = 0;\r\n      var newImpulse = 0;\r\n      var PX = 0;\r\n      var PY = 0;\r\n      var dX = 0;\r\n      var dY = 0;\r\n      var P1X = 0;\r\n      var P1Y = 0;\r\n      var P2X = 0;\r\n      var P2Y = 0;\r\n      var tMat;\r\n      var tVec;\r\n      for (var i = 0; i < this.m_constraintCount; ++i) {\r\n         var c = this.m_constraints[i];\r\n         var bodyA = c.bodyA;\r\n         var bodyB = c.bodyB;\r\n         var wA = bodyA.m_angularVelocity;\r\n         var wB = bodyB.m_angularVelocity;\r\n         var vA = bodyA.m_linearVelocity;\r\n         var vB = bodyB.m_linearVelocity;\r\n         var invMassA = bodyA.m_invMass;\r\n         var invIA = bodyA.m_invI;\r\n         var invMassB = bodyB.m_invMass;\r\n         var invIB = bodyB.m_invI;\r\n         var normalX = c.normal.x;\r\n         var normalY = c.normal.y;\r\n         var tangentX = normalY;\r\n         var tangentY = (-normalX);\r\n         var friction = c.friction;\r\n         var tX = 0;\r\n         for (j = 0;\r\n         j < c.pointCount; j++) {\r\n            ccp = c.points[j];\r\n            dvX = vB.x - wB * ccp.rB.y - vA.x + wA * ccp.rA.y;\r\n            dvY = vB.y + wB * ccp.rB.x - vA.y - wA * ccp.rA.x;\r\n            vt = dvX * tangentX + dvY * tangentY;\r\n            lambda = ccp.tangentMass * (-vt);\r\n            maxFriction = friction * ccp.normalImpulse;\r\n            newImpulse = b2Math.Clamp(ccp.tangentImpulse + lambda, (-maxFriction), maxFriction);\r\n            lambda = newImpulse - ccp.tangentImpulse;\r\n            PX = lambda * tangentX;\r\n            PY = lambda * tangentY;\r\n            vA.x -= invMassA * PX;\r\n            vA.y -= invMassA * PY;\r\n            wA -= invIA * (ccp.rA.x * PY - ccp.rA.y * PX);\r\n            vB.x += invMassB * PX;\r\n            vB.y += invMassB * PY;\r\n            wB += invIB * (ccp.rB.x * PY - ccp.rB.y * PX);\r\n            ccp.tangentImpulse = newImpulse;\r\n         }\r\n         var tCount = parseInt(c.pointCount);\r\n         if (c.pointCount == 1) {\r\n            ccp = c.points[0];\r\n            dvX = vB.x + ((-wB * ccp.rB.y)) - vA.x - ((-wA * ccp.rA.y));\r\n            dvY = vB.y + (wB * ccp.rB.x) - vA.y - (wA * ccp.rA.x);\r\n            vn = dvX * normalX + dvY * normalY;\r\n            lambda = (-ccp.normalMass * (vn - ccp.velocityBias));\r\n            newImpulse = ccp.normalImpulse + lambda;\r\n            newImpulse = newImpulse > 0 ? newImpulse : 0.0;\r\n            lambda = newImpulse - ccp.normalImpulse;\r\n            PX = lambda * normalX;\r\n            PY = lambda * normalY;\r\n            vA.x -= invMassA * PX;\r\n            vA.y -= invMassA * PY;\r\n            wA -= invIA * (ccp.rA.x * PY - ccp.rA.y * PX);\r\n            vB.x += invMassB * PX;\r\n            vB.y += invMassB * PY;\r\n            wB += invIB * (ccp.rB.x * PY - ccp.rB.y * PX);\r\n            ccp.normalImpulse = newImpulse;\r\n         }\r\n         else {\r\n            var cp1 = c.points[0];\r\n            var cp2 = c.points[1];\r\n            var aX = cp1.normalImpulse;\r\n            var aY = cp2.normalImpulse;\r\n            var dv1X = vB.x - wB * cp1.rB.y - vA.x + wA * cp1.rA.y;\r\n            var dv1Y = vB.y + wB * cp1.rB.x - vA.y - wA * cp1.rA.x;\r\n            var dv2X = vB.x - wB * cp2.rB.y - vA.x + wA * cp2.rA.y;\r\n            var dv2Y = vB.y + wB * cp2.rB.x - vA.y - wA * cp2.rA.x;\r\n            var vn1 = dv1X * normalX + dv1Y * normalY;\r\n            var vn2 = dv2X * normalX + dv2Y * normalY;\r\n            var bX = vn1 - cp1.velocityBias;\r\n            var bY = vn2 - cp2.velocityBias;\r\n            tMat = c.K;\r\n            bX -= tMat.col1.x * aX + tMat.col2.x * aY;\r\n            bY -= tMat.col1.y * aX + tMat.col2.y * aY;\r\n            var k_errorTol = 0.001;\r\n            for (;;) {\r\n               tMat = c.normalMass;\r\n               var xX = (-(tMat.col1.x * bX + tMat.col2.x * bY));\r\n               var xY = (-(tMat.col1.y * bX + tMat.col2.y * bY));\r\n               if (xX >= 0.0 && xY >= 0.0) {\r\n                  dX = xX - aX;\r\n                  dY = xY - aY;\r\n                  P1X = dX * normalX;\r\n                  P1Y = dX * normalY;\r\n                  P2X = dY * normalX;\r\n                  P2Y = dY * normalY;\r\n                  vA.x -= invMassA * (P1X + P2X);\r\n                  vA.y -= invMassA * (P1Y + P2Y);\r\n                  wA -= invIA * (cp1.rA.x * P1Y - cp1.rA.y * P1X + cp2.rA.x * P2Y - cp2.rA.y * P2X);\r\n                  vB.x += invMassB * (P1X + P2X);\r\n                  vB.y += invMassB * (P1Y + P2Y);\r\n                  wB += invIB * (cp1.rB.x * P1Y - cp1.rB.y * P1X + cp2.rB.x * P2Y - cp2.rB.y * P2X);\r\n                  cp1.normalImpulse = xX;\r\n                  cp2.normalImpulse = xY;\r\n                  break;\r\n               }\r\n               xX = (-cp1.normalMass * bX);\r\n               xY = 0.0;\r\n               vn1 = 0.0;\r\n               vn2 = c.K.col1.y * xX + bY;\r\n               if (xX >= 0.0 && vn2 >= 0.0) {\r\n                  dX = xX - aX;\r\n                  dY = xY - aY;\r\n                  P1X = dX * normalX;\r\n                  P1Y = dX * normalY;\r\n                  P2X = dY * normalX;\r\n                  P2Y = dY * normalY;\r\n                  vA.x -= invMassA * (P1X + P2X);\r\n                  vA.y -= invMassA * (P1Y + P2Y);\r\n                  wA -= invIA * (cp1.rA.x * P1Y - cp1.rA.y * P1X + cp2.rA.x * P2Y - cp2.rA.y * P2X);\r\n                  vB.x += invMassB * (P1X + P2X);\r\n                  vB.y += invMassB * (P1Y + P2Y);\r\n                  wB += invIB * (cp1.rB.x * P1Y - cp1.rB.y * P1X + cp2.rB.x * P2Y - cp2.rB.y * P2X);\r\n                  cp1.normalImpulse = xX;\r\n                  cp2.normalImpulse = xY;\r\n                  break;\r\n               }\r\n               xX = 0.0;\r\n               xY = (-cp2.normalMass * bY);\r\n               vn1 = c.K.col2.x * xY + bX;\r\n               vn2 = 0.0;\r\n               if (xY >= 0.0 && vn1 >= 0.0) {\r\n                  dX = xX - aX;\r\n                  dY = xY - aY;\r\n                  P1X = dX * normalX;\r\n                  P1Y = dX * normalY;\r\n                  P2X = dY * normalX;\r\n                  P2Y = dY * normalY;\r\n                  vA.x -= invMassA * (P1X + P2X);\r\n                  vA.y -= invMassA * (P1Y + P2Y);\r\n                  wA -= invIA * (cp1.rA.x * P1Y - cp1.rA.y * P1X + cp2.rA.x * P2Y - cp2.rA.y * P2X);\r\n                  vB.x += invMassB * (P1X + P2X);\r\n                  vB.y += invMassB * (P1Y + P2Y);\r\n                  wB += invIB * (cp1.rB.x * P1Y - cp1.rB.y * P1X + cp2.rB.x * P2Y - cp2.rB.y * P2X);\r\n                  cp1.normalImpulse = xX;\r\n                  cp2.normalImpulse = xY;\r\n                  break;\r\n               }\r\n               xX = 0.0;\r\n               xY = 0.0;\r\n               vn1 = bX;\r\n               vn2 = bY;\r\n               if (vn1 >= 0.0 && vn2 >= 0.0) {\r\n                  dX = xX - aX;\r\n                  dY = xY - aY;\r\n                  P1X = dX * normalX;\r\n                  P1Y = dX * normalY;\r\n                  P2X = dY * normalX;\r\n                  P2Y = dY * normalY;\r\n                  vA.x -= invMassA * (P1X + P2X);\r\n                  vA.y -= invMassA * (P1Y + P2Y);\r\n                  wA -= invIA * (cp1.rA.x * P1Y - cp1.rA.y * P1X + cp2.rA.x * P2Y - cp2.rA.y * P2X);\r\n                  vB.x += invMassB * (P1X + P2X);\r\n                  vB.y += invMassB * (P1Y + P2Y);\r\n                  wB += invIB * (cp1.rB.x * P1Y - cp1.rB.y * P1X + cp2.rB.x * P2Y - cp2.rB.y * P2X);\r\n                  cp1.normalImpulse = xX;\r\n                  cp2.normalImpulse = xY;\r\n                  break;\r\n               }\r\n               break;\r\n            }\r\n         }\r\n         bodyA.m_angularVelocity = wA;\r\n         bodyB.m_angularVelocity = wB;\r\n      }\r\n   }\r\n   b2ContactSolver.prototype.FinalizeVelocityConstraints = function () {\r\n      for (var i = 0; i < this.m_constraintCount; ++i) {\r\n         var c = this.m_constraints[i];\r\n         var m = c.manifold;\r\n         for (var j = 0; j < c.pointCount; ++j) {\r\n            var point1 = m.m_points[j];\r\n            var point2 = c.points[j];\r\n            point1.m_normalImpulse = point2.normalImpulse;\r\n            point1.m_tangentImpulse = point2.tangentImpulse;\r\n         }\r\n      }\r\n   }\r\n   b2ContactSolver.prototype.SolvePositionConstraints = function (baumgarte) {\r\n      if (baumgarte === undefined) baumgarte = 0;\r\n      var minSeparation = 0.0;\r\n      for (var i = 0; i < this.m_constraintCount; i++) {\r\n         var c = this.m_constraints[i];\r\n         var bodyA = c.bodyA;\r\n         var bodyB = c.bodyB;\r\n         var invMassA = bodyA.m_mass * bodyA.m_invMass;\r\n         var invIA = bodyA.m_mass * bodyA.m_invI;\r\n         var invMassB = bodyB.m_mass * bodyB.m_invMass;\r\n         var invIB = bodyB.m_mass * bodyB.m_invI;\r\n         b2ContactSolver.s_psm.Initialize(c);\r\n         var normal = b2ContactSolver.s_psm.m_normal;\r\n         for (var j = 0; j < c.pointCount; j++) {\r\n            var ccp = c.points[j];\r\n            var point = b2ContactSolver.s_psm.m_points[j];\r\n            var separation = b2ContactSolver.s_psm.m_separations[j];\r\n            var rAX = point.x - bodyA.m_sweep.c.x;\r\n            var rAY = point.y - bodyA.m_sweep.c.y;\r\n            var rBX = point.x - bodyB.m_sweep.c.x;\r\n            var rBY = point.y - bodyB.m_sweep.c.y;\r\n            minSeparation = minSeparation < separation ? minSeparation : separation;\r\n            var C = b2Math.Clamp(baumgarte * (separation + b2Settings.b2_linearSlop), (-b2Settings.b2_maxLinearCorrection), 0.0);\r\n            var impulse = (-ccp.equalizedMass * C);\r\n            var PX = impulse * normal.x;\r\n            var PY = impulse * normal.y;bodyA.m_sweep.c.x -= invMassA * PX;\r\n            bodyA.m_sweep.c.y -= invMassA * PY;\r\n            bodyA.m_sweep.a -= invIA * (rAX * PY - rAY * PX);\r\n            bodyA.SynchronizeTransform();\r\n            bodyB.m_sweep.c.x += invMassB * PX;\r\n            bodyB.m_sweep.c.y += invMassB * PY;\r\n            bodyB.m_sweep.a += invIB * (rBX * PY - rBY * PX);\r\n            bodyB.SynchronizeTransform();\r\n         }\r\n      }\r\n      return minSeparation > (-1.5 * b2Settings.b2_linearSlop);\r\n   }\r\n   Box2D.postDefs.push(function () {\r\n      Box2D.Dynamics.Contacts.b2ContactSolver.s_worldManifold = new b2WorldManifold();\r\n      Box2D.Dynamics.Contacts.b2ContactSolver.s_psm = new b2PositionSolverManifold();\r\n   });\r\n   Box2D.inherit(b2EdgeAndCircleContact, Box2D.Dynamics.Contacts.b2Contact);\r\n   b2EdgeAndCircleContact.prototype.__super = Box2D.Dynamics.Contacts.b2Contact.prototype;\r\n   b2EdgeAndCircleContact.b2EdgeAndCircleContact = function () {\r\n      Box2D.Dynamics.Contacts.b2Contact.b2Contact.apply(this, arguments);\r\n   };\r\n   b2EdgeAndCircleContact.Create = function (allocator) {\r\n      return new b2EdgeAndCircleContact();\r\n   }\r\n   b2EdgeAndCircleContact.Destroy = function (contact, allocator) {}\r\n   b2EdgeAndCircleContact.prototype.Reset = function (fixtureA, fixtureB) {\r\n      this.__super.Reset.call(this, fixtureA, fixtureB);\r\n   }\r\n   b2EdgeAndCircleContact.prototype.Evaluate = function () {\r\n      var bA = this.m_fixtureA.GetBody();\r\n      var bB = this.m_fixtureB.GetBody();\r\n      this.b2CollideEdgeAndCircle(this.m_manifold, (this.m_fixtureA.GetShape() instanceof b2EdgeShape ? this.m_fixtureA.GetShape() : null), bA.m_xf, (this.m_fixtureB.GetShape() instanceof b2CircleShape ? this.m_fixtureB.GetShape() : null), bB.m_xf);\r\n   }\r\n   b2EdgeAndCircleContact.prototype.b2CollideEdgeAndCircle = function (manifold, edge, xf1, circle, xf2) {}\r\n   Box2D.inherit(b2NullContact, Box2D.Dynamics.Contacts.b2Contact);\r\n   b2NullContact.prototype.__super = Box2D.Dynamics.Contacts.b2Contact.prototype;\r\n   b2NullContact.b2NullContact = function () {\r\n      Box2D.Dynamics.Contacts.b2Contact.b2Contact.apply(this, arguments);\r\n   };\r\n   b2NullContact.prototype.b2NullContact = function () {\r\n      this.__super.b2Contact.call(this);\r\n   }\r\n   b2NullContact.prototype.Evaluate = function () {}\r\n   Box2D.inherit(b2PolyAndCircleContact, Box2D.Dynamics.Contacts.b2Contact);\r\n   b2PolyAndCircleContact.prototype.__super = Box2D.Dynamics.Contacts.b2Contact.prototype;\r\n   b2PolyAndCircleContact.b2PolyAndCircleContact = function () {\r\n      Box2D.Dynamics.Contacts.b2Contact.b2Contact.apply(this, arguments);\r\n   };\r\n   b2PolyAndCircleContact.Create = function (allocator) {\r\n      return new b2PolyAndCircleContact();\r\n   }\r\n   b2PolyAndCircleContact.Destroy = function (contact, allocator) {}\r\n   b2PolyAndCircleContact.prototype.Reset = function (fixtureA, fixtureB) {\r\n      this.__super.Reset.call(this, fixtureA, fixtureB);\r\n      b2Settings.b2Assert(fixtureA.GetType() == b2Shape.e_polygonShape);\r\n      b2Settings.b2Assert(fixtureB.GetType() == b2Shape.e_circleShape);\r\n   }\r\n   b2PolyAndCircleContact.prototype.Evaluate = function () {\r\n      var bA = this.m_fixtureA.m_body;\r\n      var bB = this.m_fixtureB.m_body;\r\n      b2Collision.CollidePolygonAndCircle(this.m_manifold, (this.m_fixtureA.GetShape() instanceof b2PolygonShape ? this.m_fixtureA.GetShape() : null), bA.m_xf, (this.m_fixtureB.GetShape() instanceof b2CircleShape ? this.m_fixtureB.GetShape() : null), bB.m_xf);\r\n   }\r\n   Box2D.inherit(b2PolyAndEdgeContact, Box2D.Dynamics.Contacts.b2Contact);\r\n   b2PolyAndEdgeContact.prototype.__super = Box2D.Dynamics.Contacts.b2Contact.prototype;\r\n   b2PolyAndEdgeContact.b2PolyAndEdgeContact = function () {\r\n      Box2D.Dynamics.Contacts.b2Contact.b2Contact.apply(this, arguments);\r\n   };\r\n   b2PolyAndEdgeContact.Create = function (allocator) {\r\n      return new b2PolyAndEdgeContact();\r\n   }\r\n   b2PolyAndEdgeContact.Destroy = function (contact, allocator) {}\r\n   b2PolyAndEdgeContact.prototype.Reset = function (fixtureA, fixtureB) {\r\n      this.__super.Reset.call(this, fixtureA, fixtureB);\r\n      b2Settings.b2Assert(fixtureA.GetType() == b2Shape.e_polygonShape);\r\n      b2Settings.b2Assert(fixtureB.GetType() == b2Shape.e_edgeShape);\r\n   }\r\n   b2PolyAndEdgeContact.prototype.Evaluate = function () {\r\n      var bA = this.m_fixtureA.GetBody();\r\n      var bB = this.m_fixtureB.GetBody();\r\n      this.b2CollidePolyAndEdge(this.m_manifold, (this.m_fixtureA.GetShape() instanceof b2PolygonShape ? this.m_fixtureA.GetShape() : null), bA.m_xf, (this.m_fixtureB.GetShape() instanceof b2EdgeShape ? this.m_fixtureB.GetShape() : null), bB.m_xf);\r\n   }\r\n   b2PolyAndEdgeContact.prototype.b2CollidePolyAndEdge = function (manifold, polygon, xf1, edge, xf2) {}\r\n   Box2D.inherit(b2PolygonContact, Box2D.Dynamics.Contacts.b2Contact);\r\n   b2PolygonContact.prototype.__super = Box2D.Dynamics.Contacts.b2Contact.prototype;\r\n   b2PolygonContact.b2PolygonContact = function () {\r\n      Box2D.Dynamics.Contacts.b2Contact.b2Contact.apply(this, arguments);\r\n   };\r\n   b2PolygonContact.Create = function (allocator) {\r\n      return new b2PolygonContact();\r\n   }\r\n   b2PolygonContact.Destroy = function (contact, allocator) {}\r\n   b2PolygonContact.prototype.Reset = function (fixtureA, fixtureB) {\r\n      this.__super.Reset.call(this, fixtureA, fixtureB);\r\n   }\r\n   b2PolygonContact.prototype.Evaluate = function () {\r\n      var bA = this.m_fixtureA.GetBody();\r\n      var bB = this.m_fixtureB.GetBody();\r\n      b2Collision.CollidePolygons(this.m_manifold, (this.m_fixtureA.GetShape() instanceof b2PolygonShape ? this.m_fixtureA.GetShape() : null), bA.m_xf, (this.m_fixtureB.GetShape() instanceof b2PolygonShape ? this.m_fixtureB.GetShape() : null), bB.m_xf);\r\n   }\r\n   b2PositionSolverManifold.b2PositionSolverManifold = function () {};\r\n   b2PositionSolverManifold.prototype.b2PositionSolverManifold = function () {\r\n      this.m_normal = new b2Vec2();\r\n      this.m_separations = new Vector_a2j_Number(b2Settings.b2_maxManifoldPoints);\r\n      this.m_points = new Vector(b2Settings.b2_maxManifoldPoints);\r\n      for (var i = 0; i < b2Settings.b2_maxManifoldPoints; i++) {\r\n         this.m_points[i] = new b2Vec2();\r\n      }\r\n   }\r\n   b2PositionSolverManifold.prototype.Initialize = function (cc) {\r\n      b2Settings.b2Assert(cc.pointCount > 0);\r\n      var i = 0;\r\n      var clipPointX = 0;\r\n      var clipPointY = 0;\r\n      var tMat;\r\n      var tVec;\r\n      var planePointX = 0;\r\n      var planePointY = 0;\r\n      switch (cc.type) {\r\n      case b2Manifold.e_circles:\r\n         {\r\n            tMat = cc.bodyA.m_xf.R;\r\n            tVec = cc.localPoint;\r\n            var pointAX = cc.bodyA.m_xf.position.x + (tMat.col1.x * tVec.x + tMat.col2.x * tVec.y);\r\n            var pointAY = cc.bodyA.m_xf.position.y + (tMat.col1.y * tVec.x + tMat.col2.y * tVec.y);\r\n            tMat = cc.bodyB.m_xf.R;\r\n            tVec = cc.points[0].localPoint;\r\n            var pointBX = cc.bodyB.m_xf.position.x + (tMat.col1.x * tVec.x + tMat.col2.x * tVec.y);\r\n            var pointBY = cc.bodyB.m_xf.position.y + (tMat.col1.y * tVec.x + tMat.col2.y * tVec.y);\r\n            var dX = pointBX - pointAX;\r\n            var dY = pointBY - pointAY;\r\n            var d2 = dX * dX + dY * dY;\r\n            if (d2 > Number.MIN_VALUE * Number.MIN_VALUE) {\r\n               var d = Math.sqrt(d2);\r\n               this.m_normal.x = dX / d;\r\n               this.m_normal.y = dY / d;\r\n            }\r\n            else {\r\n               this.m_normal.x = 1.0;\r\n               this.m_normal.y = 0.0;\r\n            }\r\n            this.m_points[0].x = 0.5 * (pointAX + pointBX);\r\n            this.m_points[0].y = 0.5 * (pointAY + pointBY);\r\n            this.m_separations[0] = dX * this.m_normal.x + dY * this.m_normal.y - cc.radius;\r\n         }\r\n         break;\r\n      case b2Manifold.e_faceA:\r\n         {\r\n            tMat = cc.bodyA.m_xf.R;\r\n            tVec = cc.localPlaneNormal;\r\n            this.m_normal.x = tMat.col1.x * tVec.x + tMat.col2.x * tVec.y;\r\n            this.m_normal.y = tMat.col1.y * tVec.x + tMat.col2.y * tVec.y;\r\n            tMat = cc.bodyA.m_xf.R;\r\n            tVec = cc.localPoint;\r\n            planePointX = cc.bodyA.m_xf.position.x + (tMat.col1.x * tVec.x + tMat.col2.x * tVec.y);\r\n            planePointY = cc.bodyA.m_xf.position.y + (tMat.col1.y * tVec.x + tMat.col2.y * tVec.y);\r\n            tMat = cc.bodyB.m_xf.R;\r\n            for (i = 0;\r\n            i < cc.pointCount; ++i) {\r\n               tVec = cc.points[i].localPoint;\r\n               clipPointX = cc.bodyB.m_xf.position.x + (tMat.col1.x * tVec.x + tMat.col2.x * tVec.y);\r\n               clipPointY = cc.bodyB.m_xf.position.y + (tMat.col1.y * tVec.x + tMat.col2.y * tVec.y);\r\n               this.m_separations[i] = (clipPointX - planePointX) * this.m_normal.x + (clipPointY - planePointY) * this.m_normal.y - cc.radius;\r\n               this.m_points[i].x = clipPointX;\r\n               this.m_points[i].y = clipPointY;\r\n            }\r\n         }\r\n         break;\r\n      case b2Manifold.e_faceB:\r\n         {\r\n            tMat = cc.bodyB.m_xf.R;\r\n            tVec = cc.localPlaneNormal;\r\n            this.m_normal.x = tMat.col1.x * tVec.x + tMat.col2.x * tVec.y;\r\n            this.m_normal.y = tMat.col1.y * tVec.x + tMat.col2.y * tVec.y;\r\n            tMat = cc.bodyB.m_xf.R;\r\n            tVec = cc.localPoint;\r\n            planePointX = cc.bodyB.m_xf.position.x + (tMat.col1.x * tVec.x + tMat.col2.x * tVec.y);\r\n            planePointY = cc.bodyB.m_xf.position.y + (tMat.col1.y * tVec.x + tMat.col2.y * tVec.y);\r\n            tMat = cc.bodyA.m_xf.R;\r\n            for (i = 0;\r\n            i < cc.pointCount; ++i) {\r\n               tVec = cc.points[i].localPoint;\r\n               clipPointX = cc.bodyA.m_xf.position.x + (tMat.col1.x * tVec.x + tMat.col2.x * tVec.y);\r\n               clipPointY = cc.bodyA.m_xf.position.y + (tMat.col1.y * tVec.x + tMat.col2.y * tVec.y);\r\n               this.m_separations[i] = (clipPointX - planePointX) * this.m_normal.x + (clipPointY - planePointY) * this.m_normal.y - cc.radius;\r\n               this.m_points[i].Set(clipPointX, clipPointY);\r\n            }\r\n            this.m_normal.x *= (-1);\r\n            this.m_normal.y *= (-1);\r\n         }\r\n         break;\r\n      }\r\n   }\r\n   Box2D.postDefs.push(function () {\r\n      Box2D.Dynamics.Contacts.b2PositionSolverManifold.circlePointA = new b2Vec2();\r\n      Box2D.Dynamics.Contacts.b2PositionSolverManifold.circlePointB = new b2Vec2();\r\n   });\r\n})();\r\n(function () {\r\n   var b2Body = Box2D.Dynamics.b2Body,\r\n      b2BodyDef = Box2D.Dynamics.b2BodyDef,\r\n      b2ContactFilter = Box2D.Dynamics.b2ContactFilter,\r\n      b2ContactImpulse = Box2D.Dynamics.b2ContactImpulse,\r\n      b2ContactListener = Box2D.Dynamics.b2ContactListener,\r\n      b2ContactManager = Box2D.Dynamics.b2ContactManager,\r\n      b2DebugDraw = Box2D.Dynamics.b2DebugDraw,\r\n      b2DestructionListener = Box2D.Dynamics.b2DestructionListener,\r\n      b2FilterData = Box2D.Dynamics.b2FilterData,\r\n      b2Fixture = Box2D.Dynamics.b2Fixture,\r\n      b2FixtureDef = Box2D.Dynamics.b2FixtureDef,\r\n      b2Island = Box2D.Dynamics.b2Island,\r\n      b2TimeStep = Box2D.Dynamics.b2TimeStep,\r\n      b2World = Box2D.Dynamics.b2World,\r\n      b2Mat22 = Box2D.Common.Math.b2Mat22,\r\n      b2Mat33 = Box2D.Common.Math.b2Mat33,\r\n      b2Math = Box2D.Common.Math.b2Math,\r\n      b2Sweep = Box2D.Common.Math.b2Sweep,\r\n      b2Transform = Box2D.Common.Math.b2Transform,\r\n      b2Vec2 = Box2D.Common.Math.b2Vec2,\r\n      b2Vec3 = Box2D.Common.Math.b2Vec3,\r\n      b2Color = Box2D.Common.b2Color,\r\n      b2internal = Box2D.Common.b2internal,\r\n      b2Settings = Box2D.Common.b2Settings,\r\n      b2CircleShape = Box2D.Collision.Shapes.b2CircleShape,\r\n      b2EdgeChainDef = Box2D.Collision.Shapes.b2EdgeChainDef,\r\n      b2EdgeShape = Box2D.Collision.Shapes.b2EdgeShape,\r\n      b2MassData = Box2D.Collision.Shapes.b2MassData,\r\n      b2PolygonShape = Box2D.Collision.Shapes.b2PolygonShape,\r\n      b2Shape = Box2D.Collision.Shapes.b2Shape,\r\n      b2BuoyancyController = Box2D.Dynamics.Controllers.b2BuoyancyController,\r\n      b2ConstantAccelController = Box2D.Dynamics.Controllers.b2ConstantAccelController,\r\n      b2ConstantForceController = Box2D.Dynamics.Controllers.b2ConstantForceController,\r\n      b2Controller = Box2D.Dynamics.Controllers.b2Controller,\r\n      b2ControllerEdge = Box2D.Dynamics.Controllers.b2ControllerEdge,\r\n      b2GravityController = Box2D.Dynamics.Controllers.b2GravityController,\r\n      b2TensorDampingController = Box2D.Dynamics.Controllers.b2TensorDampingController;\r\n\r\n   Box2D.inherit(b2BuoyancyController, Box2D.Dynamics.Controllers.b2Controller);\r\n   b2BuoyancyController.prototype.__super = Box2D.Dynamics.Controllers.b2Controller.prototype;\r\n   b2BuoyancyController.b2BuoyancyController = function () {\r\n      Box2D.Dynamics.Controllers.b2Controller.b2Controller.apply(this, arguments);\r\n      this.normal = new b2Vec2(0, (-1));\r\n      this.offset = 0;\r\n      this.density = 0;\r\n      this.velocity = new b2Vec2(0, 0);\r\n      this.linearDrag = 2;\r\n      this.angularDrag = 1;\r\n      this.useDensity = false;\r\n      this.useWorldGravity = true;\r\n      this.gravity = null;\r\n   };\r\n   b2BuoyancyController.prototype.Step = function (step) {\r\n      if (!this.m_bodyList) return;\r\n      if (this.useWorldGravity) {\r\n         this.gravity = this.GetWorld().GetGravity().Copy();\r\n      }\r\n      for (var i = this.m_bodyList; i; i = i.nextBody) {\r\n         var body = i.body;\r\n         if (body.IsAwake() == false) {\r\n            continue;\r\n         }\r\n         var areac = new b2Vec2();\r\n         var massc = new b2Vec2();\r\n         var area = 0.0;\r\n         var mass = 0.0;\r\n         for (var fixture = body.GetFixtureList(); fixture; fixture = fixture.GetNext()) {\r\n            var sc = new b2Vec2();\r\n            var sarea = fixture.GetShape().ComputeSubmergedArea(this.normal, this.offset, body.GetTransform(), sc);\r\n            area += sarea;\r\n            areac.x += sarea * sc.x;\r\n            areac.y += sarea * sc.y;\r\n            var shapeDensity = 0;\r\n            if (this.useDensity) {\r\n               shapeDensity = 1;\r\n            }\r\n            else {\r\n               shapeDensity = 1;\r\n            }\r\n            mass += sarea * shapeDensity;\r\n            massc.x += sarea * sc.x * shapeDensity;\r\n            massc.y += sarea * sc.y * shapeDensity;\r\n         }\r\n         areac.x /= area;\r\n         areac.y /= area;\r\n         massc.x /= mass;\r\n         massc.y /= mass;\r\n         if (area < Number.MIN_VALUE) continue;\r\n         var buoyancyForce = this.gravity.GetNegative();\r\n         buoyancyForce.Multiply(this.density * area);\r\n         body.ApplyForce(buoyancyForce, massc);\r\n         var dragForce = body.GetLinearVelocityFromWorldPoint(areac);\r\n         dragForce.Subtract(this.velocity);\r\n         dragForce.Multiply((-this.linearDrag * area));\r\n         body.ApplyForce(dragForce, areac);\r\n         body.ApplyTorque((-body.GetInertia() / body.GetMass() * area * body.GetAngularVelocity() * this.angularDrag));\r\n      }\r\n   }\r\n   b2BuoyancyController.prototype.Draw = function (debugDraw) {\r\n      var r = 1000;\r\n      var p1 = new b2Vec2();\r\n      var p2 = new b2Vec2();\r\n      p1.x = this.normal.x * this.offset + this.normal.y * r;\r\n      p1.y = this.normal.y * this.offset - this.normal.x * r;\r\n      p2.x = this.normal.x * this.offset - this.normal.y * r;\r\n      p2.y = this.normal.y * this.offset + this.normal.x * r;\r\n      var color = new b2Color(0, 0, 1);\r\n      debugDraw.DrawSegment(p1, p2, color);\r\n   }\r\n   Box2D.inherit(b2ConstantAccelController, Box2D.Dynamics.Controllers.b2Controller);\r\n   b2ConstantAccelController.prototype.__super = Box2D.Dynamics.Controllers.b2Controller.prototype;\r\n   b2ConstantAccelController.b2ConstantAccelController = function () {\r\n      Box2D.Dynamics.Controllers.b2Controller.b2Controller.apply(this, arguments);\r\n      this.A = new b2Vec2(0, 0);\r\n   };\r\n   b2ConstantAccelController.prototype.Step = function (step) {\r\n      var smallA = new b2Vec2(this.A.x * step.dt, this.A.y * step.dt);\r\n      for (var i = this.m_bodyList; i; i = i.nextBody) {\r\n         var body = i.body;\r\n         if (!body.IsAwake()) continue;\r\n         body.SetLinearVelocity(new b2Vec2(body.GetLinearVelocity().x + smallA.x, body.GetLinearVelocity().y + smallA.y));\r\n      }\r\n   }\r\n   Box2D.inherit(b2ConstantForceController, Box2D.Dynamics.Controllers.b2Controller);\r\n   b2ConstantForceController.prototype.__super = Box2D.Dynamics.Controllers.b2Controller.prototype;\r\n   b2ConstantForceController.b2ConstantForceController = function () {\r\n      Box2D.Dynamics.Controllers.b2Controller.b2Controller.apply(this, arguments);\r\n      this.F = new b2Vec2(0, 0);\r\n   };\r\n   b2ConstantForceController.prototype.Step = function (step) {\r\n      for (var i = this.m_bodyList; i; i = i.nextBody) {\r\n         var body = i.body;\r\n         if (!body.IsAwake()) continue;\r\n         body.ApplyForce(this.F, body.GetWorldCenter());\r\n      }\r\n   }\r\n   b2Controller.b2Controller = function () {};\r\n   b2Controller.prototype.Step = function (step) {}\r\n   b2Controller.prototype.Draw = function (debugDraw) {}\r\n   b2Controller.prototype.AddBody = function (body) {\r\n      var edge = new b2ControllerEdge();\r\n      edge.controller = this;\r\n      edge.body = body;\r\n      edge.nextBody = this.m_bodyList;\r\n      edge.prevBody = null;\r\n      this.m_bodyList = edge;\r\n      if (edge.nextBody) edge.nextBody.prevBody = edge;\r\n      this.m_bodyCount++;\r\n      edge.nextController = body.m_controllerList;\r\n      edge.prevController = null;\r\n      body.m_controllerList = edge;\r\n      if (edge.nextController) edge.nextController.prevController = edge;\r\n      body.m_controllerCount++;\r\n   }\r\n   b2Controller.prototype.RemoveBody = function (body) {\r\n      var edge = body.m_controllerList;\r\n      while (edge && edge.controller != this)\r\n      edge = edge.nextController;\r\n      if (edge.prevBody) edge.prevBody.nextBody = edge.nextBody;\r\n      if (edge.nextBody) edge.nextBody.prevBody = edge.prevBody;\r\n      if (edge.nextController) edge.nextController.prevController = edge.prevController;\r\n      if (edge.prevController) edge.prevController.nextController = edge.nextController;\r\n      if (this.m_bodyList == edge) this.m_bodyList = edge.nextBody;\r\n      if (body.m_controllerList == edge) body.m_controllerList = edge.nextController;\r\n      body.m_controllerCount--;\r\n      this.m_bodyCount--;\r\n   }\r\n   b2Controller.prototype.Clear = function () {\r\n      while (this.m_bodyList)\r\n      this.RemoveBody(this.m_bodyList.body);\r\n   }\r\n   b2Controller.prototype.GetNext = function () {\r\n      return this.m_next;\r\n   }\r\n   b2Controller.prototype.GetWorld = function () {\r\n      return this.m_world;\r\n   }\r\n   b2Controller.prototype.GetBodyList = function () {\r\n      return this.m_bodyList;\r\n   }\r\n   b2ControllerEdge.b2ControllerEdge = function () {};\r\n   Box2D.inherit(b2GravityController, Box2D.Dynamics.Controllers.b2Controller);\r\n   b2GravityController.prototype.__super = Box2D.Dynamics.Controllers.b2Controller.prototype;\r\n   b2GravityController.b2GravityController = function () {\r\n      Box2D.Dynamics.Controllers.b2Controller.b2Controller.apply(this, arguments);\r\n      this.G = 1;\r\n      this.invSqr = true;\r\n   };\r\n   b2GravityController.prototype.Step = function (step) {\r\n      var i = null;\r\n      var body1 = null;\r\n      var p1 = null;\r\n      var mass1 = 0;\r\n      var j = null;\r\n      var body2 = null;\r\n      var p2 = null;\r\n      var dx = 0;\r\n      var dy = 0;\r\n      var r2 = 0;\r\n      var f = null;\r\n      if (this.invSqr) {\r\n         for (i = this.m_bodyList;\r\n         i; i = i.nextBody) {\r\n            body1 = i.body;\r\n            p1 = body1.GetWorldCenter();\r\n            mass1 = body1.GetMass();\r\n            for (j = this.m_bodyList;\r\n            j != i; j = j.nextBody) {\r\n               body2 = j.body;\r\n               p2 = body2.GetWorldCenter();\r\n               dx = p2.x - p1.x;\r\n               dy = p2.y - p1.y;\r\n               r2 = dx * dx + dy * dy;\r\n               if (r2 < Number.MIN_VALUE) continue;\r\n               f = new b2Vec2(dx, dy);\r\n               f.Multiply(this.G / r2 / Math.sqrt(r2) * mass1 * body2.GetMass());\r\n               if (body1.IsAwake()) body1.ApplyForce(f, p1);\r\n               f.Multiply((-1));\r\n               if (body2.IsAwake()) body2.ApplyForce(f, p2);\r\n            }\r\n         }\r\n      }\r\n      else {\r\n         for (i = this.m_bodyList;\r\n         i; i = i.nextBody) {\r\n            body1 = i.body;\r\n            p1 = body1.GetWorldCenter();\r\n            mass1 = body1.GetMass();\r\n            for (j = this.m_bodyList;\r\n            j != i; j = j.nextBody) {\r\n               body2 = j.body;\r\n               p2 = body2.GetWorldCenter();\r\n               dx = p2.x - p1.x;\r\n               dy = p2.y - p1.y;\r\n               r2 = dx * dx + dy * dy;\r\n               if (r2 < Number.MIN_VALUE) continue;\r\n               f = new b2Vec2(dx, dy);\r\n               f.Multiply(this.G / r2 * mass1 * body2.GetMass());\r\n               if (body1.IsAwake()) body1.ApplyForce(f, p1);\r\n               f.Multiply((-1));\r\n               if (body2.IsAwake()) body2.ApplyForce(f, p2);\r\n            }\r\n         }\r\n      }\r\n   }\r\n   Box2D.inherit(b2TensorDampingController, Box2D.Dynamics.Controllers.b2Controller);\r\n   b2TensorDampingController.prototype.__super = Box2D.Dynamics.Controllers.b2Controller.prototype;\r\n   b2TensorDampingController.b2TensorDampingController = function () {\r\n      Box2D.Dynamics.Controllers.b2Controller.b2Controller.apply(this, arguments);\r\n      this.T = new b2Mat22();\r\n      this.maxTimestep = 0;\r\n   };\r\n   b2TensorDampingController.prototype.SetAxisAligned = function (xDamping, yDamping) {\r\n      if (xDamping === undefined) xDamping = 0;\r\n      if (yDamping === undefined) yDamping = 0;\r\n      this.T.col1.x = (-xDamping);\r\n      this.T.col1.y = 0;\r\n      this.T.col2.x = 0;\r\n      this.T.col2.y = (-yDamping);\r\n      if (xDamping > 0 || yDamping > 0) {\r\n         this.maxTimestep = 1 / Math.max(xDamping, yDamping);\r\n      }\r\n      else {\r\n         this.maxTimestep = 0;\r\n      }\r\n   }\r\n   b2TensorDampingController.prototype.Step = function (step) {\r\n      var timestep = step.dt;\r\n      if (timestep <= Number.MIN_VALUE) return;\r\n      if (timestep > this.maxTimestep && this.maxTimestep > 0) timestep = this.maxTimestep;\r\n      for (var i = this.m_bodyList; i; i = i.nextBody) {\r\n         var body = i.body;\r\n         if (!body.IsAwake()) {\r\n            continue;\r\n         }\r\n         var damping = body.GetWorldVector(b2Math.MulMV(this.T, body.GetLocalVector(body.GetLinearVelocity())));\r\n         body.SetLinearVelocity(new b2Vec2(body.GetLinearVelocity().x + damping.x * timestep, body.GetLinearVelocity().y + damping.y * timestep));\r\n      }\r\n   }\r\n})();\r\n(function () {\r\n   var b2Color = Box2D.Common.b2Color,\r\n      b2internal = Box2D.Common.b2internal,\r\n      b2Settings = Box2D.Common.b2Settings,\r\n      b2Mat22 = Box2D.Common.Math.b2Mat22,\r\n      b2Mat33 = Box2D.Common.Math.b2Mat33,\r\n      b2Math = Box2D.Common.Math.b2Math,\r\n      b2Sweep = Box2D.Common.Math.b2Sweep,\r\n      b2Transform = Box2D.Common.Math.b2Transform,\r\n      b2Vec2 = Box2D.Common.Math.b2Vec2,\r\n      b2Vec3 = Box2D.Common.Math.b2Vec3,\r\n      b2DistanceJoint = Box2D.Dynamics.Joints.b2DistanceJoint,\r\n      b2DistanceJointDef = Box2D.Dynamics.Joints.b2DistanceJointDef,\r\n      b2FrictionJoint = Box2D.Dynamics.Joints.b2FrictionJoint,\r\n      b2FrictionJointDef = Box2D.Dynamics.Joints.b2FrictionJointDef,\r\n      b2GearJoint = Box2D.Dynamics.Joints.b2GearJoint,\r\n      b2GearJointDef = Box2D.Dynamics.Joints.b2GearJointDef,\r\n      b2Jacobian = Box2D.Dynamics.Joints.b2Jacobian,\r\n      b2Joint = Box2D.Dynamics.Joints.b2Joint,\r\n      b2JointDef = Box2D.Dynamics.Joints.b2JointDef,\r\n      b2JointEdge = Box2D.Dynamics.Joints.b2JointEdge,\r\n      b2LineJoint = Box2D.Dynamics.Joints.b2LineJoint,\r\n      b2LineJointDef = Box2D.Dynamics.Joints.b2LineJointDef,\r\n      b2MouseJoint = Box2D.Dynamics.Joints.b2MouseJoint,\r\n      b2MouseJointDef = Box2D.Dynamics.Joints.b2MouseJointDef,\r\n      b2PrismaticJoint = Box2D.Dynamics.Joints.b2PrismaticJoint,\r\n      b2PrismaticJointDef = Box2D.Dynamics.Joints.b2PrismaticJointDef,\r\n      b2PulleyJoint = Box2D.Dynamics.Joints.b2PulleyJoint,\r\n      b2PulleyJointDef = Box2D.Dynamics.Joints.b2PulleyJointDef,\r\n      b2RevoluteJoint = Box2D.Dynamics.Joints.b2RevoluteJoint,\r\n      b2RevoluteJointDef = Box2D.Dynamics.Joints.b2RevoluteJointDef,\r\n      b2WeldJoint = Box2D.Dynamics.Joints.b2WeldJoint,\r\n      b2WeldJointDef = Box2D.Dynamics.Joints.b2WeldJointDef,\r\n      b2Body = Box2D.Dynamics.b2Body,\r\n      b2BodyDef = Box2D.Dynamics.b2BodyDef,\r\n      b2ContactFilter = Box2D.Dynamics.b2ContactFilter,\r\n      b2ContactImpulse = Box2D.Dynamics.b2ContactImpulse,\r\n      b2ContactListener = Box2D.Dynamics.b2ContactListener,\r\n      b2ContactManager = Box2D.Dynamics.b2ContactManager,\r\n      b2DebugDraw = Box2D.Dynamics.b2DebugDraw,\r\n      b2DestructionListener = Box2D.Dynamics.b2DestructionListener,\r\n      b2FilterData = Box2D.Dynamics.b2FilterData,\r\n      b2Fixture = Box2D.Dynamics.b2Fixture,\r\n      b2FixtureDef = Box2D.Dynamics.b2FixtureDef,\r\n      b2Island = Box2D.Dynamics.b2Island,\r\n      b2TimeStep = Box2D.Dynamics.b2TimeStep,\r\n      b2World = Box2D.Dynamics.b2World;\r\n\r\n   Box2D.inherit(b2DistanceJoint, Box2D.Dynamics.Joints.b2Joint);\r\n   b2DistanceJoint.prototype.__super = Box2D.Dynamics.Joints.b2Joint.prototype;\r\n   b2DistanceJoint.b2DistanceJoint = function () {\r\n      Box2D.Dynamics.Joints.b2Joint.b2Joint.apply(this, arguments);\r\n      this.m_localAnchor1 = new b2Vec2();\r\n      this.m_localAnchor2 = new b2Vec2();\r\n      this.m_u = new b2Vec2();\r\n   };\r\n   b2DistanceJoint.prototype.GetAnchorA = function () {\r\n      return this.m_bodyA.GetWorldPoint(this.m_localAnchor1);\r\n   }\r\n   b2DistanceJoint.prototype.GetAnchorB = function () {\r\n      return this.m_bodyB.GetWorldPoint(this.m_localAnchor2);\r\n   }\r\n   b2DistanceJoint.prototype.GetReactionForce = function (inv_dt) {\r\n      if (inv_dt === undefined) inv_dt = 0;\r\n      return new b2Vec2(inv_dt * this.m_impulse * this.m_u.x, inv_dt * this.m_impulse * this.m_u.y);\r\n   }\r\n   b2DistanceJoint.prototype.GetReactionTorque = function (inv_dt) {\r\n      if (inv_dt === undefined) inv_dt = 0;\r\n      return 0.0;\r\n   }\r\n   b2DistanceJoint.prototype.GetLength = function () {\r\n      return this.m_length;\r\n   }\r\n   b2DistanceJoint.prototype.SetLength = function (length) {\r\n      if (length === undefined) length = 0;\r\n      this.m_length = length;\r\n   }\r\n   b2DistanceJoint.prototype.GetFrequency = function () {\r\n      return this.m_frequencyHz;\r\n   }\r\n   b2DistanceJoint.prototype.SetFrequency = function (hz) {\r\n      if (hz === undefined) hz = 0;\r\n      this.m_frequencyHz = hz;\r\n   }\r\n   b2DistanceJoint.prototype.GetDampingRatio = function () {\r\n      return this.m_dampingRatio;\r\n   }\r\n   b2DistanceJoint.prototype.SetDampingRatio = function (ratio) {\r\n      if (ratio === undefined) ratio = 0;\r\n      this.m_dampingRatio = ratio;\r\n   }\r\n   b2DistanceJoint.prototype.b2DistanceJoint = function (def) {\r\n      this.__super.b2Joint.call(this, def);\r\n      var tMat;\r\n      var tX = 0;\r\n      var tY = 0;\r\n      this.m_localAnchor1.SetV(def.localAnchorA);\r\n      this.m_localAnchor2.SetV(def.localAnchorB);\r\n      this.m_length = def.length;\r\n      this.m_frequencyHz = def.frequencyHz;\r\n      this.m_dampingRatio = def.dampingRatio;\r\n      this.m_impulse = 0.0;\r\n      this.m_gamma = 0.0;\r\n      this.m_bias = 0.0;\r\n   }\r\n   b2DistanceJoint.prototype.InitVelocityConstraints = function (step) {\r\n      var tMat;\r\n      var tX = 0;\r\n      var bA = this.m_bodyA;\r\n      var bB = this.m_bodyB;\r\n      tMat = bA.m_xf.R;\r\n      var r1X = this.m_localAnchor1.x - bA.m_sweep.localCenter.x;\r\n      var r1Y = this.m_localAnchor1.y - bA.m_sweep.localCenter.y;\r\n      tX = (tMat.col1.x * r1X + tMat.col2.x * r1Y);\r\n      r1Y = (tMat.col1.y * r1X + tMat.col2.y * r1Y);\r\n      r1X = tX;\r\n      tMat = bB.m_xf.R;\r\n      var r2X = this.m_localAnchor2.x - bB.m_sweep.localCenter.x;\r\n      var r2Y = this.m_localAnchor2.y - bB.m_sweep.localCenter.y;\r\n      tX = (tMat.col1.x * r2X + tMat.col2.x * r2Y);\r\n      r2Y = (tMat.col1.y * r2X + tMat.col2.y * r2Y);\r\n      r2X = tX;\r\n      this.m_u.x = bB.m_sweep.c.x + r2X - bA.m_sweep.c.x - r1X;\r\n      this.m_u.y = bB.m_sweep.c.y + r2Y - bA.m_sweep.c.y - r1Y;\r\n      var length = Math.sqrt(this.m_u.x * this.m_u.x + this.m_u.y * this.m_u.y);\r\n      if (length > b2Settings.b2_linearSlop) {\r\n         this.m_u.Multiply(1.0 / length);\r\n      }\r\n      else {\r\n         this.m_u.SetZero();\r\n      }\r\n      var cr1u = (r1X * this.m_u.y - r1Y * this.m_u.x);\r\n      var cr2u = (r2X * this.m_u.y - r2Y * this.m_u.x);\r\n      var invMass = bA.m_invMass + bA.m_invI * cr1u * cr1u + bB.m_invMass + bB.m_invI * cr2u * cr2u;\r\n      this.m_mass = invMass != 0.0 ? 1.0 / invMass : 0.0;\r\n      if (this.m_frequencyHz > 0.0) {\r\n         var C = length - this.m_length;\r\n         var omega = 2.0 * Math.PI * this.m_frequencyHz;\r\n         var d = 2.0 * this.m_mass * this.m_dampingRatio * omega;\r\n         var k = this.m_mass * omega * omega;\r\n         this.m_gamma = step.dt * (d + step.dt * k);\r\n         this.m_gamma = this.m_gamma != 0.0 ? 1 / this.m_gamma : 0.0;\r\n         this.m_bias = C * step.dt * k * this.m_gamma;\r\n         this.m_mass = invMass + this.m_gamma;\r\n         this.m_mass = this.m_mass != 0.0 ? 1.0 / this.m_mass : 0.0;\r\n      }\r\n      if (step.warmStarting) {\r\n         this.m_impulse *= step.dtRatio;\r\n         var PX = this.m_impulse * this.m_u.x;\r\n         var PY = this.m_impulse * this.m_u.y;\r\n         bA.m_linearVelocity.x -= bA.m_invMass * PX;\r\n         bA.m_linearVelocity.y -= bA.m_invMass * PY;\r\n         bA.m_angularVelocity -= bA.m_invI * (r1X * PY - r1Y * PX);\r\n         bB.m_linearVelocity.x += bB.m_invMass * PX;\r\n         bB.m_linearVelocity.y += bB.m_invMass * PY;\r\n         bB.m_angularVelocity += bB.m_invI * (r2X * PY - r2Y * PX);\r\n      }\r\n      else {\r\n         this.m_impulse = 0.0;\r\n      }\r\n   }\r\n   b2DistanceJoint.prototype.SolveVelocityConstraints = function (step) {\r\n      var tMat;\r\n      var bA = this.m_bodyA;\r\n      var bB = this.m_bodyB;\r\n      tMat = bA.m_xf.R;\r\n      var r1X = this.m_localAnchor1.x - bA.m_sweep.localCenter.x;\r\n      var r1Y = this.m_localAnchor1.y - bA.m_sweep.localCenter.y;\r\n      var tX = (tMat.col1.x * r1X + tMat.col2.x * r1Y);\r\n      r1Y = (tMat.col1.y * r1X + tMat.col2.y * r1Y);\r\n      r1X = tX;\r\n      tMat = bB.m_xf.R;\r\n      var r2X = this.m_localAnchor2.x - bB.m_sweep.localCenter.x;\r\n      var r2Y = this.m_localAnchor2.y - bB.m_sweep.localCenter.y;\r\n      tX = (tMat.col1.x * r2X + tMat.col2.x * r2Y);\r\n      r2Y = (tMat.col1.y * r2X + tMat.col2.y * r2Y);\r\n      r2X = tX;\r\n      var v1X = bA.m_linearVelocity.x + ((-bA.m_angularVelocity * r1Y));\r\n      var v1Y = bA.m_linearVelocity.y + (bA.m_angularVelocity * r1X);\r\n      var v2X = bB.m_linearVelocity.x + ((-bB.m_angularVelocity * r2Y));\r\n      var v2Y = bB.m_linearVelocity.y + (bB.m_angularVelocity * r2X);\r\n      var Cdot = (this.m_u.x * (v2X - v1X) + this.m_u.y * (v2Y - v1Y));\r\n      var impulse = (-this.m_mass * (Cdot + this.m_bias + this.m_gamma * this.m_impulse));\r\n      this.m_impulse += impulse;\r\n      var PX = impulse * this.m_u.x;\r\n      var PY = impulse * this.m_u.y;\r\n      bA.m_linearVelocity.x -= bA.m_invMass * PX;\r\n      bA.m_linearVelocity.y -= bA.m_invMass * PY;\r\n      bA.m_angularVelocity -= bA.m_invI * (r1X * PY - r1Y * PX);\r\n      bB.m_linearVelocity.x += bB.m_invMass * PX;\r\n      bB.m_linearVelocity.y += bB.m_invMass * PY;\r\n      bB.m_angularVelocity += bB.m_invI * (r2X * PY - r2Y * PX);\r\n   }\r\n   b2DistanceJoint.prototype.SolvePositionConstraints = function (baumgarte) {\r\n      if (baumgarte === undefined) baumgarte = 0;\r\n      var tMat;\r\n      if (this.m_frequencyHz > 0.0) {\r\n         return true;\r\n      }\r\n      var bA = this.m_bodyA;\r\n      var bB = this.m_bodyB;\r\n      tMat = bA.m_xf.R;\r\n      var r1X = this.m_localAnchor1.x - bA.m_sweep.localCenter.x;\r\n      var r1Y = this.m_localAnchor1.y - bA.m_sweep.localCenter.y;\r\n      var tX = (tMat.col1.x * r1X + tMat.col2.x * r1Y);\r\n      r1Y = (tMat.col1.y * r1X + tMat.col2.y * r1Y);\r\n      r1X = tX;\r\n      tMat = bB.m_xf.R;\r\n      var r2X = this.m_localAnchor2.x - bB.m_sweep.localCenter.x;\r\n      var r2Y = this.m_localAnchor2.y - bB.m_sweep.localCenter.y;\r\n      tX = (tMat.col1.x * r2X + tMat.col2.x * r2Y);\r\n      r2Y = (tMat.col1.y * r2X + tMat.col2.y * r2Y);\r\n      r2X = tX;\r\n      var dX = bB.m_sweep.c.x + r2X - bA.m_sweep.c.x - r1X;\r\n      var dY = bB.m_sweep.c.y + r2Y - bA.m_sweep.c.y - r1Y;\r\n      var length = Math.sqrt(dX * dX + dY * dY);\r\n      dX /= length;\r\n      dY /= length;\r\n      var C = length - this.m_length;\r\n      C = b2Math.Clamp(C, (-b2Settings.b2_maxLinearCorrection), b2Settings.b2_maxLinearCorrection);\r\n      var impulse = (-this.m_mass * C);\r\n      this.m_u.Set(dX, dY);\r\n      var PX = impulse * this.m_u.x;\r\n      var PY = impulse * this.m_u.y;\r\n      bA.m_sweep.c.x -= bA.m_invMass * PX;\r\n      bA.m_sweep.c.y -= bA.m_invMass * PY;\r\n      bA.m_sweep.a -= bA.m_invI * (r1X * PY - r1Y * PX);\r\n      bB.m_sweep.c.x += bB.m_invMass * PX;\r\n      bB.m_sweep.c.y += bB.m_invMass * PY;\r\n      bB.m_sweep.a += bB.m_invI * (r2X * PY - r2Y * PX);\r\n      bA.SynchronizeTransform();\r\n      bB.SynchronizeTransform();\r\n      return b2Math.Abs(C) < b2Settings.b2_linearSlop;\r\n   }\r\n   Box2D.inherit(b2DistanceJointDef, Box2D.Dynamics.Joints.b2JointDef);\r\n   b2DistanceJointDef.prototype.__super = Box2D.Dynamics.Joints.b2JointDef.prototype;\r\n   b2DistanceJointDef.b2DistanceJointDef = function () {\r\n      Box2D.Dynamics.Joints.b2JointDef.b2JointDef.apply(this, arguments);\r\n      this.localAnchorA = new b2Vec2();\r\n      this.localAnchorB = new b2Vec2();\r\n   };\r\n   b2DistanceJointDef.prototype.b2DistanceJointDef = function () {\r\n      this.__super.b2JointDef.call(this);\r\n      this.type = b2Joint.e_distanceJoint;\r\n      this.length = 1.0;\r\n      this.frequencyHz = 0.0;\r\n      this.dampingRatio = 0.0;\r\n   }\r\n   b2DistanceJointDef.prototype.Initialize = function (bA, bB, anchorA, anchorB) {\r\n      this.bodyA = bA;\r\n      this.bodyB = bB;\r\n      this.localAnchorA.SetV(this.bodyA.GetLocalPoint(anchorA));\r\n      this.localAnchorB.SetV(this.bodyB.GetLocalPoint(anchorB));\r\n      var dX = anchorB.x - anchorA.x;\r\n      var dY = anchorB.y - anchorA.y;\r\n      this.length = Math.sqrt(dX * dX + dY * dY);\r\n      this.frequencyHz = 0.0;\r\n      this.dampingRatio = 0.0;\r\n   }\r\n   Box2D.inherit(b2FrictionJoint, Box2D.Dynamics.Joints.b2Joint);\r\n   b2FrictionJoint.prototype.__super = Box2D.Dynamics.Joints.b2Joint.prototype;\r\n   b2FrictionJoint.b2FrictionJoint = function () {\r\n      Box2D.Dynamics.Joints.b2Joint.b2Joint.apply(this, arguments);\r\n      this.m_localAnchorA = new b2Vec2();\r\n      this.m_localAnchorB = new b2Vec2();\r\n      this.m_linearMass = new b2Mat22();\r\n      this.m_linearImpulse = new b2Vec2();\r\n   };\r\n   b2FrictionJoint.prototype.GetAnchorA = function () {\r\n      return this.m_bodyA.GetWorldPoint(this.m_localAnchorA);\r\n   }\r\n   b2FrictionJoint.prototype.GetAnchorB = function () {\r\n      return this.m_bodyB.GetWorldPoint(this.m_localAnchorB);\r\n   }\r\n   b2FrictionJoint.prototype.GetReactionForce = function (inv_dt) {\r\n      if (inv_dt === undefined) inv_dt = 0;\r\n      return new b2Vec2(inv_dt * this.m_linearImpulse.x, inv_dt * this.m_linearImpulse.y);\r\n   }\r\n   b2FrictionJoint.prototype.GetReactionTorque = function (inv_dt) {\r\n      if (inv_dt === undefined) inv_dt = 0;\r\n      return inv_dt * this.m_angularImpulse;\r\n   }\r\n   b2FrictionJoint.prototype.SetMaxForce = function (force) {\r\n      if (force === undefined) force = 0;\r\n      this.m_maxForce = force;\r\n   }\r\n   b2FrictionJoint.prototype.GetMaxForce = function () {\r\n      return this.m_maxForce;\r\n   }\r\n   b2FrictionJoint.prototype.SetMaxTorque = function (torque) {\r\n      if (torque === undefined) torque = 0;\r\n      this.m_maxTorque = torque;\r\n   }\r\n   b2FrictionJoint.prototype.GetMaxTorque = function () {\r\n      return this.m_maxTorque;\r\n   }\r\n   b2FrictionJoint.prototype.b2FrictionJoint = function (def) {\r\n      this.__super.b2Joint.call(this, def);\r\n      this.m_localAnchorA.SetV(def.localAnchorA);\r\n      this.m_localAnchorB.SetV(def.localAnchorB);\r\n      this.m_linearMass.SetZero();\r\n      this.m_angularMass = 0.0;\r\n      this.m_linearImpulse.SetZero();\r\n      this.m_angularImpulse = 0.0;\r\n      this.m_maxForce = def.maxForce;\r\n      this.m_maxTorque = def.maxTorque;\r\n   }\r\n   b2FrictionJoint.prototype.InitVelocityConstraints = function (step) {\r\n      var tMat;\r\n      var tX = 0;\r\n      var bA = this.m_bodyA;\r\n      var bB = this.m_bodyB;\r\n      tMat = bA.m_xf.R;\r\n      var rAX = this.m_localAnchorA.x - bA.m_sweep.localCenter.x;\r\n      var rAY = this.m_localAnchorA.y - bA.m_sweep.localCenter.y;\r\n      tX = (tMat.col1.x * rAX + tMat.col2.x * rAY);\r\n      rAY = (tMat.col1.y * rAX + tMat.col2.y * rAY);\r\n      rAX = tX;\r\n      tMat = bB.m_xf.R;\r\n      var rBX = this.m_localAnchorB.x - bB.m_sweep.localCenter.x;\r\n      var rBY = this.m_localAnchorB.y - bB.m_sweep.localCenter.y;\r\n      tX = (tMat.col1.x * rBX + tMat.col2.x * rBY);\r\n      rBY = (tMat.col1.y * rBX + tMat.col2.y * rBY);\r\n      rBX = tX;\r\n      var mA = bA.m_invMass;\r\n      var mB = bB.m_invMass;\r\n      var iA = bA.m_invI;\r\n      var iB = bB.m_invI;\r\n      var K = new b2Mat22();\r\n      K.col1.x = mA + mB;\r\n      K.col2.x = 0.0;\r\n      K.col1.y = 0.0;\r\n      K.col2.y = mA + mB;\r\n      K.col1.x += iA * rAY * rAY;\r\n      K.col2.x += (-iA * rAX * rAY);\r\n      K.col1.y += (-iA * rAX * rAY);\r\n      K.col2.y += iA * rAX * rAX;\r\n      K.col1.x += iB * rBY * rBY;\r\n      K.col2.x += (-iB * rBX * rBY);\r\n      K.col1.y += (-iB * rBX * rBY);\r\n      K.col2.y += iB * rBX * rBX;\r\n      K.GetInverse(this.m_linearMass);\r\n      this.m_angularMass = iA + iB;\r\n      if (this.m_angularMass > 0.0) {\r\n         this.m_angularMass = 1.0 / this.m_angularMass;\r\n      }\r\n      if (step.warmStarting) {\r\n         this.m_linearImpulse.x *= step.dtRatio;\r\n         this.m_linearImpulse.y *= step.dtRatio;\r\n         this.m_angularImpulse *= step.dtRatio;\r\n         var P = this.m_linearImpulse;\r\n         bA.m_linearVelocity.x -= mA * P.x;\r\n         bA.m_linearVelocity.y -= mA * P.y;\r\n         bA.m_angularVelocity -= iA * (rAX * P.y - rAY * P.x + this.m_angularImpulse);\r\n         bB.m_linearVelocity.x += mB * P.x;\r\n         bB.m_linearVelocity.y += mB * P.y;\r\n         bB.m_angularVelocity += iB * (rBX * P.y - rBY * P.x + this.m_angularImpulse);\r\n      }\r\n      else {\r\n         this.m_linearImpulse.SetZero();\r\n         this.m_angularImpulse = 0.0;\r\n      }\r\n   }\r\n   b2FrictionJoint.prototype.SolveVelocityConstraints = function (step) {\r\n      var tMat;\r\n      var tX = 0;\r\n      var bA = this.m_bodyA;\r\n      var bB = this.m_bodyB;\r\n      var vA = bA.m_linearVelocity;\r\n      var wA = bA.m_angularVelocity;\r\n      var vB = bB.m_linearVelocity;\r\n      var wB = bB.m_angularVelocity;\r\n      var mA = bA.m_invMass;\r\n      var mB = bB.m_invMass;\r\n      var iA = bA.m_invI;\r\n      var iB = bB.m_invI;\r\n      tMat = bA.m_xf.R;\r\n      var rAX = this.m_localAnchorA.x - bA.m_sweep.localCenter.x;\r\n      var rAY = this.m_localAnchorA.y - bA.m_sweep.localCenter.y;\r\n      tX = (tMat.col1.x * rAX + tMat.col2.x * rAY);\r\n      rAY = (tMat.col1.y * rAX + tMat.col2.y * rAY);\r\n      rAX = tX;\r\n      tMat = bB.m_xf.R;\r\n      var rBX = this.m_localAnchorB.x - bB.m_sweep.localCenter.x;\r\n      var rBY = this.m_localAnchorB.y - bB.m_sweep.localCenter.y;\r\n      tX = (tMat.col1.x * rBX + tMat.col2.x * rBY);\r\n      rBY = (tMat.col1.y * rBX + tMat.col2.y * rBY);\r\n      rBX = tX;\r\n      var maxImpulse = 0; {\r\n         var Cdot = wB - wA;\r\n         var impulse = (-this.m_angularMass * Cdot);\r\n         var oldImpulse = this.m_angularImpulse;\r\n         maxImpulse = step.dt * this.m_maxTorque;\r\n         this.m_angularImpulse = b2Math.Clamp(this.m_angularImpulse + impulse, (-maxImpulse), maxImpulse);\r\n         impulse = this.m_angularImpulse - oldImpulse;\r\n         wA -= iA * impulse;\r\n         wB += iB * impulse;\r\n      } {\r\n         var CdotX = vB.x - wB * rBY - vA.x + wA * rAY;\r\n         var CdotY = vB.y + wB * rBX - vA.y - wA * rAX;\r\n         var impulseV = b2Math.MulMV(this.m_linearMass, new b2Vec2((-CdotX), (-CdotY)));\r\n         var oldImpulseV = this.m_linearImpulse.Copy();\r\n         this.m_linearImpulse.Add(impulseV);\r\n         maxImpulse = step.dt * this.m_maxForce;\r\n         if (this.m_linearImpulse.LengthSquared() > maxImpulse * maxImpulse) {\r\n            this.m_linearImpulse.Normalize();\r\n            this.m_linearImpulse.Multiply(maxImpulse);\r\n         }\r\n         impulseV = b2Math.SubtractVV(this.m_linearImpulse, oldImpulseV);\r\n         vA.x -= mA * impulseV.x;\r\n         vA.y -= mA * impulseV.y;\r\n         wA -= iA * (rAX * impulseV.y - rAY * impulseV.x);\r\n         vB.x += mB * impulseV.x;\r\n         vB.y += mB * impulseV.y;\r\n         wB += iB * (rBX * impulseV.y - rBY * impulseV.x);\r\n      }\r\n      bA.m_angularVelocity = wA;\r\n      bB.m_angularVelocity = wB;\r\n   }\r\n   b2FrictionJoint.prototype.SolvePositionConstraints = function (baumgarte) {\r\n      if (baumgarte === undefined) baumgarte = 0;\r\n      return true;\r\n   }\r\n   Box2D.inherit(b2FrictionJointDef, Box2D.Dynamics.Joints.b2JointDef);\r\n   b2FrictionJointDef.prototype.__super = Box2D.Dynamics.Joints.b2JointDef.prototype;\r\n   b2FrictionJointDef.b2FrictionJointDef = function () {\r\n      Box2D.Dynamics.Joints.b2JointDef.b2JointDef.apply(this, arguments);\r\n      this.localAnchorA = new b2Vec2();\r\n      this.localAnchorB = new b2Vec2();\r\n   };\r\n   b2FrictionJointDef.prototype.b2FrictionJointDef = function () {\r\n      this.__super.b2JointDef.call(this);\r\n      this.type = b2Joint.e_frictionJoint;\r\n      this.maxForce = 0.0;\r\n      this.maxTorque = 0.0;\r\n   }\r\n   b2FrictionJointDef.prototype.Initialize = function (bA, bB, anchor) {\r\n      this.bodyA = bA;\r\n      this.bodyB = bB;\r\n      this.localAnchorA.SetV(this.bodyA.GetLocalPoint(anchor));\r\n      this.localAnchorB.SetV(this.bodyB.GetLocalPoint(anchor));\r\n   }\r\n   Box2D.inherit(b2GearJoint, Box2D.Dynamics.Joints.b2Joint);\r\n   b2GearJoint.prototype.__super = Box2D.Dynamics.Joints.b2Joint.prototype;\r\n   b2GearJoint.b2GearJoint = function () {\r\n      Box2D.Dynamics.Joints.b2Joint.b2Joint.apply(this, arguments);\r\n      this.m_groundAnchor1 = new b2Vec2();\r\n      this.m_groundAnchor2 = new b2Vec2();\r\n      this.m_localAnchor1 = new b2Vec2();\r\n      this.m_localAnchor2 = new b2Vec2();\r\n      this.m_J = new b2Jacobian();\r\n   };\r\n   b2GearJoint.prototype.GetAnchorA = function () {\r\n      return this.m_bodyA.GetWorldPoint(this.m_localAnchor1);\r\n   }\r\n   b2GearJoint.prototype.GetAnchorB = function () {\r\n      return this.m_bodyB.GetWorldPoint(this.m_localAnchor2);\r\n   }\r\n   b2GearJoint.prototype.GetReactionForce = function (inv_dt) {\r\n      if (inv_dt === undefined) inv_dt = 0;\r\n      return new b2Vec2(inv_dt * this.m_impulse * this.m_J.linearB.x, inv_dt * this.m_impulse * this.m_J.linearB.y);\r\n   }\r\n   b2GearJoint.prototype.GetReactionTorque = function (inv_dt) {\r\n      if (inv_dt === undefined) inv_dt = 0;\r\n      var tMat = this.m_bodyB.m_xf.R;\r\n      var rX = this.m_localAnchor1.x - this.m_bodyB.m_sweep.localCenter.x;\r\n      var rY = this.m_localAnchor1.y - this.m_bodyB.m_sweep.localCenter.y;\r\n      var tX = tMat.col1.x * rX + tMat.col2.x * rY;\r\n      rY = tMat.col1.y * rX + tMat.col2.y * rY;\r\n      rX = tX;\r\n      var PX = this.m_impulse * this.m_J.linearB.x;\r\n      var PY = this.m_impulse * this.m_J.linearB.y;\r\n      return inv_dt * (this.m_impulse * this.m_J.angularB - rX * PY + rY * PX);\r\n   }\r\n   b2GearJoint.prototype.GetRatio = function () {\r\n      return this.m_ratio;\r\n   }\r\n   b2GearJoint.prototype.SetRatio = function (ratio) {\r\n      if (ratio === undefined) ratio = 0;\r\n      this.m_ratio = ratio;\r\n   }\r\n   b2GearJoint.prototype.b2GearJoint = function (def) {\r\n      this.__super.b2Joint.call(this, def);\r\n      var type1 = parseInt(def.joint1.m_type);\r\n      var type2 = parseInt(def.joint2.m_type);\r\n      this.m_revolute1 = null;\r\n      this.m_prismatic1 = null;\r\n      this.m_revolute2 = null;\r\n      this.m_prismatic2 = null;\r\n      var coordinate1 = 0;\r\n      var coordinate2 = 0;\r\n      this.m_ground1 = def.joint1.GetBodyA();\r\n      this.m_bodyA = def.joint1.GetBodyB();\r\n      if (type1 == b2Joint.e_revoluteJoint) {\r\n         this.m_revolute1 = (def.joint1 instanceof b2RevoluteJoint ? def.joint1 : null);\r\n         this.m_groundAnchor1.SetV(this.m_revolute1.m_localAnchor1);\r\n         this.m_localAnchor1.SetV(this.m_revolute1.m_localAnchor2);\r\n         coordinate1 = this.m_revolute1.GetJointAngle();\r\n      }\r\n      else {\r\n         this.m_prismatic1 = (def.joint1 instanceof b2PrismaticJoint ? def.joint1 : null);\r\n         this.m_groundAnchor1.SetV(this.m_prismatic1.m_localAnchor1);\r\n         this.m_localAnchor1.SetV(this.m_prismatic1.m_localAnchor2);\r\n         coordinate1 = this.m_prismatic1.GetJointTranslation();\r\n      }\r\n      this.m_ground2 = def.joint2.GetBodyA();\r\n      this.m_bodyB = def.joint2.GetBodyB();\r\n      if (type2 == b2Joint.e_revoluteJoint) {\r\n         this.m_revolute2 = (def.joint2 instanceof b2RevoluteJoint ? def.joint2 : null);\r\n         this.m_groundAnchor2.SetV(this.m_revolute2.m_localAnchor1);\r\n         this.m_localAnchor2.SetV(this.m_revolute2.m_localAnchor2);\r\n         coordinate2 = this.m_revolute2.GetJointAngle();\r\n      }\r\n      else {\r\n         this.m_prismatic2 = (def.joint2 instanceof b2PrismaticJoint ? def.joint2 : null);\r\n         this.m_groundAnchor2.SetV(this.m_prismatic2.m_localAnchor1);\r\n         this.m_localAnchor2.SetV(this.m_prismatic2.m_localAnchor2);\r\n         coordinate2 = this.m_prismatic2.GetJointTranslation();\r\n      }\r\n      this.m_ratio = def.ratio;\r\n      this.m_constant = coordinate1 + this.m_ratio * coordinate2;\r\n      this.m_impulse = 0.0;\r\n   }\r\n   b2GearJoint.prototype.InitVelocityConstraints = function (step) {\r\n      var g1 = this.m_ground1;\r\n      var g2 = this.m_ground2;\r\n      var bA = this.m_bodyA;\r\n      var bB = this.m_bodyB;\r\n      var ugX = 0;\r\n      var ugY = 0;\r\n      var rX = 0;\r\n      var rY = 0;\r\n      var tMat;\r\n      var tVec;\r\n      var crug = 0;\r\n      var tX = 0;\r\n      var K = 0.0;\r\n      this.m_J.SetZero();\r\n      if (this.m_revolute1) {\r\n         this.m_J.angularA = (-1.0);\r\n         K += bA.m_invI;\r\n      }\r\n      else {\r\n         tMat = g1.m_xf.R;\r\n         tVec = this.m_prismatic1.m_localXAxis1;\r\n         ugX = tMat.col1.x * tVec.x + tMat.col2.x * tVec.y;\r\n         ugY = tMat.col1.y * tVec.x + tMat.col2.y * tVec.y;\r\n         tMat = bA.m_xf.R;\r\n         rX = this.m_localAnchor1.x - bA.m_sweep.localCenter.x;\r\n         rY = this.m_localAnchor1.y - bA.m_sweep.localCenter.y;\r\n         tX = tMat.col1.x * rX + tMat.col2.x * rY;\r\n         rY = tMat.col1.y * rX + tMat.col2.y * rY;\r\n         rX = tX;\r\n         crug = rX * ugY - rY * ugX;\r\n         this.m_J.linearA.Set((-ugX), (-ugY));\r\n         this.m_J.angularA = (-crug);\r\n         K += bA.m_invMass + bA.m_invI * crug * crug;\r\n      }\r\n      if (this.m_revolute2) {\r\n         this.m_J.angularB = (-this.m_ratio);\r\n         K += this.m_ratio * this.m_ratio * bB.m_invI;\r\n      }\r\n      else {\r\n         tMat = g2.m_xf.R;\r\n         tVec = this.m_prismatic2.m_localXAxis1;\r\n         ugX = tMat.col1.x * tVec.x + tMat.col2.x * tVec.y;\r\n         ugY = tMat.col1.y * tVec.x + tMat.col2.y * tVec.y;\r\n         tMat = bB.m_xf.R;\r\n         rX = this.m_localAnchor2.x - bB.m_sweep.localCenter.x;\r\n         rY = this.m_localAnchor2.y - bB.m_sweep.localCenter.y;\r\n         tX = tMat.col1.x * rX + tMat.col2.x * rY;\r\n         rY = tMat.col1.y * rX + tMat.col2.y * rY;\r\n         rX = tX;\r\n         crug = rX * ugY - rY * ugX;\r\n         this.m_J.linearB.Set((-this.m_ratio * ugX), (-this.m_ratio * ugY));\r\n         this.m_J.angularB = (-this.m_ratio * crug);\r\n         K += this.m_ratio * this.m_ratio * (bB.m_invMass + bB.m_invI * crug * crug);\r\n      }\r\n      this.m_mass = K > 0.0 ? 1.0 / K : 0.0;\r\n      if (step.warmStarting) {\r\n         bA.m_linearVelocity.x += bA.m_invMass * this.m_impulse * this.m_J.linearA.x;\r\n         bA.m_linearVelocity.y += bA.m_invMass * this.m_impulse * this.m_J.linearA.y;\r\n         bA.m_angularVelocity += bA.m_invI * this.m_impulse * this.m_J.angularA;\r\n         bB.m_linearVelocity.x += bB.m_invMass * this.m_impulse * this.m_J.linearB.x;\r\n         bB.m_linearVelocity.y += bB.m_invMass * this.m_impulse * this.m_J.linearB.y;\r\n         bB.m_angularVelocity += bB.m_invI * this.m_impulse * this.m_J.angularB;\r\n      }\r\n      else {\r\n         this.m_impulse = 0.0;\r\n      }\r\n   }\r\n   b2GearJoint.prototype.SolveVelocityConstraints = function (step) {\r\n      var bA = this.m_bodyA;\r\n      var bB = this.m_bodyB;\r\n      var Cdot = this.m_J.Compute(bA.m_linearVelocity, bA.m_angularVelocity, bB.m_linearVelocity, bB.m_angularVelocity);\r\n      var impulse = (-this.m_mass * Cdot);\r\n      this.m_impulse += impulse;\r\n      bA.m_linearVelocity.x += bA.m_invMass * impulse * this.m_J.linearA.x;\r\n      bA.m_linearVelocity.y += bA.m_invMass * impulse * this.m_J.linearA.y;\r\n      bA.m_angularVelocity += bA.m_invI * impulse * this.m_J.angularA;\r\n      bB.m_linearVelocity.x += bB.m_invMass * impulse * this.m_J.linearB.x;\r\n      bB.m_linearVelocity.y += bB.m_invMass * impulse * this.m_J.linearB.y;\r\n      bB.m_angularVelocity += bB.m_invI * impulse * this.m_J.angularB;\r\n   }\r\n   b2GearJoint.prototype.SolvePositionConstraints = function (baumgarte) {\r\n      if (baumgarte === undefined) baumgarte = 0;\r\n      var linearError = 0.0;\r\n      var bA = this.m_bodyA;\r\n      var bB = this.m_bodyB;\r\n      var coordinate1 = 0;\r\n      var coordinate2 = 0;\r\n      if (this.m_revolute1) {\r\n         coordinate1 = this.m_revolute1.GetJointAngle();\r\n      }\r\n      else {\r\n         coordinate1 = this.m_prismatic1.GetJointTranslation();\r\n      }\r\n      if (this.m_revolute2) {\r\n         coordinate2 = this.m_revolute2.GetJointAngle();\r\n      }\r\n      else {\r\n         coordinate2 = this.m_prismatic2.GetJointTranslation();\r\n      }\r\n      var C = this.m_constant - (coordinate1 + this.m_ratio * coordinate2);\r\n      var impulse = (-this.m_mass * C);\r\n      bA.m_sweep.c.x += bA.m_invMass * impulse * this.m_J.linearA.x;\r\n      bA.m_sweep.c.y += bA.m_invMass * impulse * this.m_J.linearA.y;\r\n      bA.m_sweep.a += bA.m_invI * impulse * this.m_J.angularA;\r\n      bB.m_sweep.c.x += bB.m_invMass * impulse * this.m_J.linearB.x;\r\n      bB.m_sweep.c.y += bB.m_invMass * impulse * this.m_J.linearB.y;\r\n      bB.m_sweep.a += bB.m_invI * impulse * this.m_J.angularB;\r\n      bA.SynchronizeTransform();\r\n      bB.SynchronizeTransform();\r\n      return linearError < b2Settings.b2_linearSlop;\r\n   }\r\n   Box2D.inherit(b2GearJointDef, Box2D.Dynamics.Joints.b2JointDef);\r\n   b2GearJointDef.prototype.__super = Box2D.Dynamics.Joints.b2JointDef.prototype;\r\n   b2GearJointDef.b2GearJointDef = function () {\r\n      Box2D.Dynamics.Joints.b2JointDef.b2JointDef.apply(this, arguments);\r\n   };\r\n   b2GearJointDef.prototype.b2GearJointDef = function () {\r\n      this.__super.b2JointDef.call(this);\r\n      this.type = b2Joint.e_gearJoint;\r\n      this.joint1 = null;\r\n      this.joint2 = null;\r\n      this.ratio = 1.0;\r\n   }\r\n   b2Jacobian.b2Jacobian = function () {\r\n      this.linearA = new b2Vec2();\r\n      this.linearB = new b2Vec2();\r\n   };\r\n   b2Jacobian.prototype.SetZero = function () {\r\n      this.linearA.SetZero();\r\n      this.angularA = 0.0;\r\n      this.linearB.SetZero();\r\n      this.angularB = 0.0;\r\n   }\r\n   b2Jacobian.prototype.Set = function (x1, a1, x2, a2) {\r\n      if (a1 === undefined) a1 = 0;\r\n      if (a2 === undefined) a2 = 0;\r\n      this.linearA.SetV(x1);\r\n      this.angularA = a1;\r\n      this.linearB.SetV(x2);\r\n      this.angularB = a2;\r\n   }\r\n   b2Jacobian.prototype.Compute = function (x1, a1, x2, a2) {\r\n      if (a1 === undefined) a1 = 0;\r\n      if (a2 === undefined) a2 = 0;\r\n      return (this.linearA.x * x1.x + this.linearA.y * x1.y) + this.angularA * a1 + (this.linearB.x * x2.x + this.linearB.y * x2.y) + this.angularB * a2;\r\n   }\r\n   b2Joint.b2Joint = function () {\r\n      this.m_edgeA = new b2JointEdge();\r\n      this.m_edgeB = new b2JointEdge();\r\n      this.m_localCenterA = new b2Vec2();\r\n      this.m_localCenterB = new b2Vec2();\r\n   };\r\n   b2Joint.prototype.GetType = function () {\r\n      return this.m_type;\r\n   }\r\n   b2Joint.prototype.GetAnchorA = function () {\r\n      return null;\r\n   }\r\n   b2Joint.prototype.GetAnchorB = function () {\r\n      return null;\r\n   }\r\n   b2Joint.prototype.GetReactionForce = function (inv_dt) {\r\n      if (inv_dt === undefined) inv_dt = 0;\r\n      return null;\r\n   }\r\n   b2Joint.prototype.GetReactionTorque = function (inv_dt) {\r\n      if (inv_dt === undefined) inv_dt = 0;\r\n      return 0.0;\r\n   }\r\n   b2Joint.prototype.GetBodyA = function () {\r\n      return this.m_bodyA;\r\n   }\r\n   b2Joint.prototype.GetBodyB = function () {\r\n      return this.m_bodyB;\r\n   }\r\n   b2Joint.prototype.GetNext = function () {\r\n      return this.m_next;\r\n   }\r\n   b2Joint.prototype.GetUserData = function () {\r\n      return this.m_userData;\r\n   }\r\n   b2Joint.prototype.SetUserData = function (data) {\r\n      this.m_userData = data;\r\n   }\r\n   b2Joint.prototype.IsActive = function () {\r\n      return this.m_bodyA.IsActive() && this.m_bodyB.IsActive();\r\n   }\r\n   b2Joint.Create = function (def, allocator) {\r\n      var joint = null;\r\n      switch (def.type) {\r\n      case b2Joint.e_distanceJoint:\r\n         {\r\n            joint = new b2DistanceJoint((def instanceof b2DistanceJointDef ? def : null));\r\n         }\r\n         break;\r\n      case b2Joint.e_mouseJoint:\r\n         {\r\n            joint = new b2MouseJoint((def instanceof b2MouseJointDef ? def : null));\r\n         }\r\n         break;\r\n      case b2Joint.e_prismaticJoint:\r\n         {\r\n            joint = new b2PrismaticJoint((def instanceof b2PrismaticJointDef ? def : null));\r\n         }\r\n         break;\r\n      case b2Joint.e_revoluteJoint:\r\n         {\r\n            joint = new b2RevoluteJoint((def instanceof b2RevoluteJointDef ? def : null));\r\n         }\r\n         break;\r\n      case b2Joint.e_pulleyJoint:\r\n         {\r\n            joint = new b2PulleyJoint((def instanceof b2PulleyJointDef ? def : null));\r\n         }\r\n         break;\r\n      case b2Joint.e_gearJoint:\r\n         {\r\n            joint = new b2GearJoint((def instanceof b2GearJointDef ? def : null));\r\n         }\r\n         break;\r\n      case b2Joint.e_lineJoint:\r\n         {\r\n            joint = new b2LineJoint((def instanceof b2LineJointDef ? def : null));\r\n         }\r\n         break;\r\n      case b2Joint.e_weldJoint:\r\n         {\r\n            joint = new b2WeldJoint((def instanceof b2WeldJointDef ? def : null));\r\n         }\r\n         break;\r\n      case b2Joint.e_frictionJoint:\r\n         {\r\n            joint = new b2FrictionJoint((def instanceof b2FrictionJointDef ? def : null));\r\n         }\r\n         break;\r\n      default:\r\n         break;\r\n      }\r\n      return joint;\r\n   }\r\n   b2Joint.Destroy = function (joint, allocator) {}\r\n   b2Joint.prototype.b2Joint = function (def) {\r\n      b2Settings.b2Assert(def.bodyA != def.bodyB);\r\n      this.m_type = def.type;\r\n      this.m_prev = null;\r\n      this.m_next = null;\r\n      this.m_bodyA = def.bodyA;\r\n      this.m_bodyB = def.bodyB;\r\n      this.m_collideConnected = def.collideConnected;\r\n      this.m_islandFlag = false;\r\n      this.m_userData = def.userData;\r\n   }\r\n   b2Joint.prototype.InitVelocityConstraints = function (step) {}\r\n   b2Joint.prototype.SolveVelocityConstraints = function (step) {}\r\n   b2Joint.prototype.FinalizeVelocityConstraints = function () {}\r\n   b2Joint.prototype.SolvePositionConstraints = function (baumgarte) {\r\n      if (baumgarte === undefined) baumgarte = 0;\r\n      return false;\r\n   }\r\n   Box2D.postDefs.push(function () {\r\n      Box2D.Dynamics.Joints.b2Joint.e_unknownJoint = 0;\r\n      Box2D.Dynamics.Joints.b2Joint.e_revoluteJoint = 1;\r\n      Box2D.Dynamics.Joints.b2Joint.e_prismaticJoint = 2;\r\n      Box2D.Dynamics.Joints.b2Joint.e_distanceJoint = 3;\r\n      Box2D.Dynamics.Joints.b2Joint.e_pulleyJoint = 4;\r\n      Box2D.Dynamics.Joints.b2Joint.e_mouseJoint = 5;\r\n      Box2D.Dynamics.Joints.b2Joint.e_gearJoint = 6;\r\n      Box2D.Dynamics.Joints.b2Joint.e_lineJoint = 7;\r\n      Box2D.Dynamics.Joints.b2Joint.e_weldJoint = 8;\r\n      Box2D.Dynamics.Joints.b2Joint.e_frictionJoint = 9;\r\n      Box2D.Dynamics.Joints.b2Joint.e_inactiveLimit = 0;\r\n      Box2D.Dynamics.Joints.b2Joint.e_atLowerLimit = 1;\r\n      Box2D.Dynamics.Joints.b2Joint.e_atUpperLimit = 2;\r\n      Box2D.Dynamics.Joints.b2Joint.e_equalLimits = 3;\r\n   });\r\n   b2JointDef.b2JointDef = function () {};\r\n   b2JointDef.prototype.b2JointDef = function () {\r\n      this.type = b2Joint.e_unknownJoint;\r\n      this.userData = null;\r\n      this.bodyA = null;\r\n      this.bodyB = null;\r\n      this.collideConnected = false;\r\n   }\r\n   b2JointEdge.b2JointEdge = function () {};\r\n   Box2D.inherit(b2LineJoint, Box2D.Dynamics.Joints.b2Joint);\r\n   b2LineJoint.prototype.__super = Box2D.Dynamics.Joints.b2Joint.prototype;\r\n   b2LineJoint.b2LineJoint = function () {\r\n      Box2D.Dynamics.Joints.b2Joint.b2Joint.apply(this, arguments);\r\n      this.m_localAnchor1 = new b2Vec2();\r\n      this.m_localAnchor2 = new b2Vec2();\r\n      this.m_localXAxis1 = new b2Vec2();\r\n      this.m_localYAxis1 = new b2Vec2();\r\n      this.m_axis = new b2Vec2();\r\n      this.m_perp = new b2Vec2();\r\n      this.m_K = new b2Mat22();\r\n      this.m_impulse = new b2Vec2();\r\n   };\r\n   b2LineJoint.prototype.GetAnchorA = function () {\r\n      return this.m_bodyA.GetWorldPoint(this.m_localAnchor1);\r\n   }\r\n   b2LineJoint.prototype.GetAnchorB = function () {\r\n      return this.m_bodyB.GetWorldPoint(this.m_localAnchor2);\r\n   }\r\n   b2LineJoint.prototype.GetReactionForce = function (inv_dt) {\r\n      if (inv_dt === undefined) inv_dt = 0;\r\n      return new b2Vec2(inv_dt * (this.m_impulse.x * this.m_perp.x + (this.m_motorImpulse + this.m_impulse.y) * this.m_axis.x), inv_dt * (this.m_impulse.x * this.m_perp.y + (this.m_motorImpulse + this.m_impulse.y) * this.m_axis.y));\r\n   }\r\n   b2LineJoint.prototype.GetReactionTorque = function (inv_dt) {\r\n      if (inv_dt === undefined) inv_dt = 0;\r\n      return inv_dt * this.m_impulse.y;\r\n   }\r\n   b2LineJoint.prototype.GetJointTranslation = function () {\r\n      var bA = this.m_bodyA;\r\n      var bB = this.m_bodyB;\r\n      var tMat;\r\n      var p1 = bA.GetWorldPoint(this.m_localAnchor1);\r\n      var p2 = bB.GetWorldPoint(this.m_localAnchor2);\r\n      var dX = p2.x - p1.x;\r\n      var dY = p2.y - p1.y;\r\n      var axis = bA.GetWorldVector(this.m_localXAxis1);\r\n      var translation = axis.x * dX + axis.y * dY;\r\n      return translation;\r\n   }\r\n   b2LineJoint.prototype.GetJointSpeed = function () {\r\n      var bA = this.m_bodyA;\r\n      var bB = this.m_bodyB;\r\n      var tMat;\r\n      tMat = bA.m_xf.R;\r\n      var r1X = this.m_localAnchor1.x - bA.m_sweep.localCenter.x;\r\n      var r1Y = this.m_localAnchor1.y - bA.m_sweep.localCenter.y;\r\n      var tX = (tMat.col1.x * r1X + tMat.col2.x * r1Y);\r\n      r1Y = (tMat.col1.y * r1X + tMat.col2.y * r1Y);\r\n      r1X = tX;\r\n      tMat = bB.m_xf.R;\r\n      var r2X = this.m_localAnchor2.x - bB.m_sweep.localCenter.x;\r\n      var r2Y = this.m_localAnchor2.y - bB.m_sweep.localCenter.y;\r\n      tX = (tMat.col1.x * r2X + tMat.col2.x * r2Y);\r\n      r2Y = (tMat.col1.y * r2X + tMat.col2.y * r2Y);\r\n      r2X = tX;\r\n      var p1X = bA.m_sweep.c.x + r1X;\r\n      var p1Y = bA.m_sweep.c.y + r1Y;\r\n      var p2X = bB.m_sweep.c.x + r2X;\r\n      var p2Y = bB.m_sweep.c.y + r2Y;\r\n      var dX = p2X - p1X;\r\n      var dY = p2Y - p1Y;\r\n      var axis = bA.GetWorldVector(this.m_localXAxis1);\r\n      var v1 = bA.m_linearVelocity;\r\n      var v2 = bB.m_linearVelocity;\r\n      var w1 = bA.m_angularVelocity;\r\n      var w2 = bB.m_angularVelocity;\r\n      var speed = (dX * ((-w1 * axis.y)) + dY * (w1 * axis.x)) + (axis.x * (((v2.x + ((-w2 * r2Y))) - v1.x) - ((-w1 * r1Y))) + axis.y * (((v2.y + (w2 * r2X)) - v1.y) - (w1 * r1X)));\r\n      return speed;\r\n   }\r\n   b2LineJoint.prototype.IsLimitEnabled = function () {\r\n      return this.m_enableLimit;\r\n   }\r\n   b2LineJoint.prototype.EnableLimit = function (flag) {\r\n      this.m_bodyA.SetAwake(true);\r\n      this.m_bodyB.SetAwake(true);\r\n      this.m_enableLimit = flag;\r\n   }\r\n   b2LineJoint.prototype.GetLowerLimit = function () {\r\n      return this.m_lowerTranslation;\r\n   }\r\n   b2LineJoint.prototype.GetUpperLimit = function () {\r\n      return this.m_upperTranslation;\r\n   }\r\n   b2LineJoint.prototype.SetLimits = function (lower, upper) {\r\n      if (lower === undefined) lower = 0;\r\n      if (upper === undefined) upper = 0;\r\n      this.m_bodyA.SetAwake(true);\r\n      this.m_bodyB.SetAwake(true);\r\n      this.m_lowerTranslation = lower;\r\n      this.m_upperTranslation = upper;\r\n   }\r\n   b2LineJoint.prototype.IsMotorEnabled = function () {\r\n      return this.m_enableMotor;\r\n   }\r\n   b2LineJoint.prototype.EnableMotor = function (flag) {\r\n      this.m_bodyA.SetAwake(true);\r\n      this.m_bodyB.SetAwake(true);\r\n      this.m_enableMotor = flag;\r\n   }\r\n   b2LineJoint.prototype.SetMotorSpeed = function (speed) {\r\n      if (speed === undefined) speed = 0;\r\n      this.m_bodyA.SetAwake(true);\r\n      this.m_bodyB.SetAwake(true);\r\n      this.m_motorSpeed = speed;\r\n   }\r\n   b2LineJoint.prototype.GetMotorSpeed = function () {\r\n      return this.m_motorSpeed;\r\n   }\r\n   b2LineJoint.prototype.SetMaxMotorForce = function (force) {\r\n      if (force === undefined) force = 0;\r\n      this.m_bodyA.SetAwake(true);\r\n      this.m_bodyB.SetAwake(true);\r\n      this.m_maxMotorForce = force;\r\n   }\r\n   b2LineJoint.prototype.GetMaxMotorForce = function () {\r\n      return this.m_maxMotorForce;\r\n   }\r\n   b2LineJoint.prototype.GetMotorForce = function () {\r\n      return this.m_motorImpulse;\r\n   }\r\n   b2LineJoint.prototype.b2LineJoint = function (def) {\r\n      this.__super.b2Joint.call(this, def);\r\n      var tMat;\r\n      var tX = 0;\r\n      var tY = 0;\r\n      this.m_localAnchor1.SetV(def.localAnchorA);\r\n      this.m_localAnchor2.SetV(def.localAnchorB);\r\n      this.m_localXAxis1.SetV(def.localAxisA);\r\n      this.m_localYAxis1.x = (-this.m_localXAxis1.y);\r\n      this.m_localYAxis1.y = this.m_localXAxis1.x;\r\n      this.m_impulse.SetZero();\r\n      this.m_motorMass = 0.0;\r\n      this.m_motorImpulse = 0.0;\r\n      this.m_lowerTranslation = def.lowerTranslation;\r\n      this.m_upperTranslation = def.upperTranslation;\r\n      this.m_maxMotorForce = def.maxMotorForce;\r\n      this.m_motorSpeed = def.motorSpeed;\r\n      this.m_enableLimit = def.enableLimit;\r\n      this.m_enableMotor = def.enableMotor;\r\n      this.m_limitState = b2Joint.e_inactiveLimit;\r\n      this.m_axis.SetZero();\r\n      this.m_perp.SetZero();\r\n   }\r\n   b2LineJoint.prototype.InitVelocityConstraints = function (step) {\r\n      var bA = this.m_bodyA;\r\n      var bB = this.m_bodyB;\r\n      var tMat;\r\n      var tX = 0;\r\n      this.m_localCenterA.SetV(bA.GetLocalCenter());\r\n      this.m_localCenterB.SetV(bB.GetLocalCenter());\r\n      var xf1 = bA.GetTransform();\r\n      var xf2 = bB.GetTransform();\r\n      tMat = bA.m_xf.R;\r\n      var r1X = this.m_localAnchor1.x - this.m_localCenterA.x;\r\n      var r1Y = this.m_localAnchor1.y - this.m_localCenterA.y;\r\n      tX = (tMat.col1.x * r1X + tMat.col2.x * r1Y);\r\n      r1Y = (tMat.col1.y * r1X + tMat.col2.y * r1Y);\r\n      r1X = tX;\r\n      tMat = bB.m_xf.R;\r\n      var r2X = this.m_localAnchor2.x - this.m_localCenterB.x;\r\n      var r2Y = this.m_localAnchor2.y - this.m_localCenterB.y;\r\n      tX = (tMat.col1.x * r2X + tMat.col2.x * r2Y);\r\n      r2Y = (tMat.col1.y * r2X + tMat.col2.y * r2Y);\r\n      r2X = tX;\r\n      var dX = bB.m_sweep.c.x + r2X - bA.m_sweep.c.x - r1X;\r\n      var dY = bB.m_sweep.c.y + r2Y - bA.m_sweep.c.y - r1Y;\r\n      this.m_invMassA = bA.m_invMass;\r\n      this.m_invMassB = bB.m_invMass;\r\n      this.m_invIA = bA.m_invI;\r\n      this.m_invIB = bB.m_invI; {\r\n         this.m_axis.SetV(b2Math.MulMV(xf1.R, this.m_localXAxis1));\r\n         this.m_a1 = (dX + r1X) * this.m_axis.y - (dY + r1Y) * this.m_axis.x;\r\n         this.m_a2 = r2X * this.m_axis.y - r2Y * this.m_axis.x;\r\n         this.m_motorMass = this.m_invMassA + this.m_invMassB + this.m_invIA * this.m_a1 * this.m_a1 + this.m_invIB * this.m_a2 * this.m_a2;\r\n         this.m_motorMass = this.m_motorMass > Number.MIN_VALUE ? 1.0 / this.m_motorMass : 0.0;\r\n      } {\r\n         this.m_perp.SetV(b2Math.MulMV(xf1.R, this.m_localYAxis1));\r\n         this.m_s1 = (dX + r1X) * this.m_perp.y - (dY + r1Y) * this.m_perp.x;\r\n         this.m_s2 = r2X * this.m_perp.y - r2Y * this.m_perp.x;\r\n         var m1 = this.m_invMassA;\r\n         var m2 = this.m_invMassB;\r\n         var i1 = this.m_invIA;\r\n         var i2 = this.m_invIB;\r\n         this.m_K.col1.x = m1 + m2 + i1 * this.m_s1 * this.m_s1 + i2 * this.m_s2 * this.m_s2;\r\n         this.m_K.col1.y = i1 * this.m_s1 * this.m_a1 + i2 * this.m_s2 * this.m_a2;\r\n         this.m_K.col2.x = this.m_K.col1.y;\r\n         this.m_K.col2.y = m1 + m2 + i1 * this.m_a1 * this.m_a1 + i2 * this.m_a2 * this.m_a2;\r\n      }\r\n      if (this.m_enableLimit) {\r\n         var jointTransition = this.m_axis.x * dX + this.m_axis.y * dY;\r\n         if (b2Math.Abs(this.m_upperTranslation - this.m_lowerTranslation) < 2.0 * b2Settings.b2_linearSlop) {\r\n            this.m_limitState = b2Joint.e_equalLimits;\r\n         }\r\n         else if (jointTransition <= this.m_lowerTranslation) {\r\n            if (this.m_limitState != b2Joint.e_atLowerLimit) {\r\n               this.m_limitState = b2Joint.e_atLowerLimit;\r\n               this.m_impulse.y = 0.0;\r\n            }\r\n         }\r\n         else if (jointTransition >= this.m_upperTranslation) {\r\n            if (this.m_limitState != b2Joint.e_atUpperLimit) {\r\n               this.m_limitState = b2Joint.e_atUpperLimit;\r\n               this.m_impulse.y = 0.0;\r\n            }\r\n         }\r\n         else {\r\n            this.m_limitState = b2Joint.e_inactiveLimit;\r\n            this.m_impulse.y = 0.0;\r\n         }\r\n      }\r\n      else {\r\n         this.m_limitState = b2Joint.e_inactiveLimit;\r\n      }\r\n      if (this.m_enableMotor == false) {\r\n         this.m_motorImpulse = 0.0;\r\n      }\r\n      if (step.warmStarting) {\r\n         this.m_impulse.x *= step.dtRatio;\r\n         this.m_impulse.y *= step.dtRatio;\r\n         this.m_motorImpulse *= step.dtRatio;\r\n         var PX = this.m_impulse.x * this.m_perp.x + (this.m_motorImpulse + this.m_impulse.y) * this.m_axis.x;\r\n         var PY = this.m_impulse.x * this.m_perp.y + (this.m_motorImpulse + this.m_impulse.y) * this.m_axis.y;\r\n         var L1 = this.m_impulse.x * this.m_s1 + (this.m_motorImpulse + this.m_impulse.y) * this.m_a1;\r\n         var L2 = this.m_impulse.x * this.m_s2 + (this.m_motorImpulse + this.m_impulse.y) * this.m_a2;\r\n         bA.m_linearVelocity.x -= this.m_invMassA * PX;\r\n         bA.m_linearVelocity.y -= this.m_invMassA * PY;\r\n         bA.m_angularVelocity -= this.m_invIA * L1;\r\n         bB.m_linearVelocity.x += this.m_invMassB * PX;\r\n         bB.m_linearVelocity.y += this.m_invMassB * PY;\r\n         bB.m_angularVelocity += this.m_invIB * L2;\r\n      }\r\n      else {\r\n         this.m_impulse.SetZero();\r\n         this.m_motorImpulse = 0.0;\r\n      }\r\n   }\r\n   b2LineJoint.prototype.SolveVelocityConstraints = function (step) {\r\n      var bA = this.m_bodyA;\r\n      var bB = this.m_bodyB;\r\n      var v1 = bA.m_linearVelocity;\r\n      var w1 = bA.m_angularVelocity;\r\n      var v2 = bB.m_linearVelocity;\r\n      var w2 = bB.m_angularVelocity;\r\n      var PX = 0;\r\n      var PY = 0;\r\n      var L1 = 0;\r\n      var L2 = 0;\r\n      if (this.m_enableMotor && this.m_limitState != b2Joint.e_equalLimits) {\r\n         var Cdot = this.m_axis.x * (v2.x - v1.x) + this.m_axis.y * (v2.y - v1.y) + this.m_a2 * w2 - this.m_a1 * w1;\r\n         var impulse = this.m_motorMass * (this.m_motorSpeed - Cdot);\r\n         var oldImpulse = this.m_motorImpulse;\r\n         var maxImpulse = step.dt * this.m_maxMotorForce;\r\n         this.m_motorImpulse = b2Math.Clamp(this.m_motorImpulse + impulse, (-maxImpulse), maxImpulse);\r\n         impulse = this.m_motorImpulse - oldImpulse;\r\n         PX = impulse * this.m_axis.x;\r\n         PY = impulse * this.m_axis.y;\r\n         L1 = impulse * this.m_a1;\r\n         L2 = impulse * this.m_a2;\r\n         v1.x -= this.m_invMassA * PX;\r\n         v1.y -= this.m_invMassA * PY;\r\n         w1 -= this.m_invIA * L1;\r\n         v2.x += this.m_invMassB * PX;\r\n         v2.y += this.m_invMassB * PY;\r\n         w2 += this.m_invIB * L2;\r\n      }\r\n      var Cdot1 = this.m_perp.x * (v2.x - v1.x) + this.m_perp.y * (v2.y - v1.y) + this.m_s2 * w2 - this.m_s1 * w1;\r\n      if (this.m_enableLimit && this.m_limitState != b2Joint.e_inactiveLimit) {\r\n         var Cdot2 = this.m_axis.x * (v2.x - v1.x) + this.m_axis.y * (v2.y - v1.y) + this.m_a2 * w2 - this.m_a1 * w1;\r\n         var f1 = this.m_impulse.Copy();\r\n         var df = this.m_K.Solve(new b2Vec2(), (-Cdot1), (-Cdot2));\r\n         this.m_impulse.Add(df);\r\n         if (this.m_limitState == b2Joint.e_atLowerLimit) {\r\n            this.m_impulse.y = b2Math.Max(this.m_impulse.y, 0.0);\r\n         }\r\n         else if (this.m_limitState == b2Joint.e_atUpperLimit) {\r\n            this.m_impulse.y = b2Math.Min(this.m_impulse.y, 0.0);\r\n         }\r\n         var b = (-Cdot1) - (this.m_impulse.y - f1.y) * this.m_K.col2.x;\r\n         var f2r = 0;\r\n         if (this.m_K.col1.x != 0.0) {\r\n            f2r = b / this.m_K.col1.x + f1.x;\r\n         }\r\n         else {\r\n            f2r = f1.x;\r\n         }\r\n         this.m_impulse.x = f2r;\r\n         df.x = this.m_impulse.x - f1.x;\r\n         df.y = this.m_impulse.y - f1.y;\r\n         PX = df.x * this.m_perp.x + df.y * this.m_axis.x;\r\n         PY = df.x * this.m_perp.y + df.y * this.m_axis.y;\r\n         L1 = df.x * this.m_s1 + df.y * this.m_a1;\r\n         L2 = df.x * this.m_s2 + df.y * this.m_a2;\r\n         v1.x -= this.m_invMassA * PX;\r\n         v1.y -= this.m_invMassA * PY;\r\n         w1 -= this.m_invIA * L1;\r\n         v2.x += this.m_invMassB * PX;\r\n         v2.y += this.m_invMassB * PY;\r\n         w2 += this.m_invIB * L2;\r\n      }\r\n      else {\r\n         var df2 = 0;\r\n         if (this.m_K.col1.x != 0.0) {\r\n            df2 = ((-Cdot1)) / this.m_K.col1.x;\r\n         }\r\n         else {\r\n            df2 = 0.0;\r\n         }\r\n         this.m_impulse.x += df2;\r\n         PX = df2 * this.m_perp.x;\r\n         PY = df2 * this.m_perp.y;\r\n         L1 = df2 * this.m_s1;\r\n         L2 = df2 * this.m_s2;\r\n         v1.x -= this.m_invMassA * PX;\r\n         v1.y -= this.m_invMassA * PY;\r\n         w1 -= this.m_invIA * L1;\r\n         v2.x += this.m_invMassB * PX;\r\n         v2.y += this.m_invMassB * PY;\r\n         w2 += this.m_invIB * L2;\r\n      }\r\n      bA.m_linearVelocity.SetV(v1);\r\n      bA.m_angularVelocity = w1;\r\n      bB.m_linearVelocity.SetV(v2);\r\n      bB.m_angularVelocity = w2;\r\n   }\r\n   b2LineJoint.prototype.SolvePositionConstraints = function (baumgarte) {\r\n      if (baumgarte === undefined) baumgarte = 0;\r\n      var limitC = 0;\r\n      var oldLimitImpulse = 0;\r\n      var bA = this.m_bodyA;\r\n      var bB = this.m_bodyB;\r\n      var c1 = bA.m_sweep.c;\r\n      var a1 = bA.m_sweep.a;\r\n      var c2 = bB.m_sweep.c;\r\n      var a2 = bB.m_sweep.a;\r\n      var tMat;\r\n      var tX = 0;\r\n      var m1 = 0;\r\n      var m2 = 0;\r\n      var i1 = 0;\r\n      var i2 = 0;\r\n      var linearError = 0.0;\r\n      var angularError = 0.0;\r\n      var active = false;\r\n      var C2 = 0.0;\r\n      var R1 = b2Mat22.FromAngle(a1);\r\n      var R2 = b2Mat22.FromAngle(a2);\r\n      tMat = R1;\r\n      var r1X = this.m_localAnchor1.x - this.m_localCenterA.x;\r\n      var r1Y = this.m_localAnchor1.y - this.m_localCenterA.y;\r\n      tX = (tMat.col1.x * r1X + tMat.col2.x * r1Y);\r\n      r1Y = (tMat.col1.y * r1X + tMat.col2.y * r1Y);\r\n      r1X = tX;\r\n      tMat = R2;\r\n      var r2X = this.m_localAnchor2.x - this.m_localCenterB.x;\r\n      var r2Y = this.m_localAnchor2.y - this.m_localCenterB.y;\r\n      tX = (tMat.col1.x * r2X + tMat.col2.x * r2Y);\r\n      r2Y = (tMat.col1.y * r2X + tMat.col2.y * r2Y);\r\n      r2X = tX;\r\n      var dX = c2.x + r2X - c1.x - r1X;\r\n      var dY = c2.y + r2Y - c1.y - r1Y;\r\n      if (this.m_enableLimit) {\r\n         this.m_axis = b2Math.MulMV(R1, this.m_localXAxis1);\r\n         this.m_a1 = (dX + r1X) * this.m_axis.y - (dY + r1Y) * this.m_axis.x;\r\n         this.m_a2 = r2X * this.m_axis.y - r2Y * this.m_axis.x;\r\n         var translation = this.m_axis.x * dX + this.m_axis.y * dY;\r\n         if (b2Math.Abs(this.m_upperTranslation - this.m_lowerTranslation) < 2.0 * b2Settings.b2_linearSlop) {\r\n            C2 = b2Math.Clamp(translation, (-b2Settings.b2_maxLinearCorrection), b2Settings.b2_maxLinearCorrection);\r\n            linearError = b2Math.Abs(translation);\r\n            active = true;\r\n         }\r\n         else if (translation <= this.m_lowerTranslation) {\r\n            C2 = b2Math.Clamp(translation - this.m_lowerTranslation + b2Settings.b2_linearSlop, (-b2Settings.b2_maxLinearCorrection), 0.0);\r\n            linearError = this.m_lowerTranslation - translation;\r\n            active = true;\r\n         }\r\n         else if (translation >= this.m_upperTranslation) {\r\n            C2 = b2Math.Clamp(translation - this.m_upperTranslation + b2Settings.b2_linearSlop, 0.0, b2Settings.b2_maxLinearCorrection);\r\n            linearError = translation - this.m_upperTranslation;\r\n            active = true;\r\n         }\r\n      }\r\n      this.m_perp = b2Math.MulMV(R1, this.m_localYAxis1);\r\n      this.m_s1 = (dX + r1X) * this.m_perp.y - (dY + r1Y) * this.m_perp.x;\r\n      this.m_s2 = r2X * this.m_perp.y - r2Y * this.m_perp.x;\r\n      var impulse = new b2Vec2();\r\n      var C1 = this.m_perp.x * dX + this.m_perp.y * dY;\r\n      linearError = b2Math.Max(linearError, b2Math.Abs(C1));\r\n      angularError = 0.0;\r\n      if (active) {\r\n         m1 = this.m_invMassA;\r\n         m2 = this.m_invMassB;\r\n         i1 = this.m_invIA;\r\n         i2 = this.m_invIB;\r\n         this.m_K.col1.x = m1 + m2 + i1 * this.m_s1 * this.m_s1 + i2 * this.m_s2 * this.m_s2;\r\n         this.m_K.col1.y = i1 * this.m_s1 * this.m_a1 + i2 * this.m_s2 * this.m_a2;\r\n         this.m_K.col2.x = this.m_K.col1.y;\r\n         this.m_K.col2.y = m1 + m2 + i1 * this.m_a1 * this.m_a1 + i2 * this.m_a2 * this.m_a2;\r\n         this.m_K.Solve(impulse, (-C1), (-C2));\r\n      }\r\n      else {\r\n         m1 = this.m_invMassA;\r\n         m2 = this.m_invMassB;\r\n         i1 = this.m_invIA;\r\n         i2 = this.m_invIB;\r\n         var k11 = m1 + m2 + i1 * this.m_s1 * this.m_s1 + i2 * this.m_s2 * this.m_s2;\r\n         var impulse1 = 0;\r\n         if (k11 != 0.0) {\r\n            impulse1 = ((-C1)) / k11;\r\n         }\r\n         else {\r\n            impulse1 = 0.0;\r\n         }\r\n         impulse.x = impulse1;\r\n         impulse.y = 0.0;\r\n      }\r\n      var PX = impulse.x * this.m_perp.x + impulse.y * this.m_axis.x;\r\n      var PY = impulse.x * this.m_perp.y + impulse.y * this.m_axis.y;\r\n      var L1 = impulse.x * this.m_s1 + impulse.y * this.m_a1;\r\n      var L2 = impulse.x * this.m_s2 + impulse.y * this.m_a2;\r\n      c1.x -= this.m_invMassA * PX;\r\n      c1.y -= this.m_invMassA * PY;\r\n      a1 -= this.m_invIA * L1;\r\n      c2.x += this.m_invMassB * PX;\r\n      c2.y += this.m_invMassB * PY;\r\n      a2 += this.m_invIB * L2;\r\n      bA.m_sweep.a = a1;\r\n      bB.m_sweep.a = a2;\r\n      bA.SynchronizeTransform();\r\n      bB.SynchronizeTransform();\r\n      return linearError <= b2Settings.b2_linearSlop && angularError <= b2Settings.b2_angularSlop;\r\n   }\r\n   Box2D.inherit(b2LineJointDef, Box2D.Dynamics.Joints.b2JointDef);\r\n   b2LineJointDef.prototype.__super = Box2D.Dynamics.Joints.b2JointDef.prototype;\r\n   b2LineJointDef.b2LineJointDef = function () {\r\n      Box2D.Dynamics.Joints.b2JointDef.b2JointDef.apply(this, arguments);\r\n      this.localAnchorA = new b2Vec2();\r\n      this.localAnchorB = new b2Vec2();\r\n      this.localAxisA = new b2Vec2();\r\n   };\r\n   b2LineJointDef.prototype.b2LineJointDef = function () {\r\n      this.__super.b2JointDef.call(this);\r\n      this.type = b2Joint.e_lineJoint;\r\n      this.localAxisA.Set(1.0, 0.0);\r\n      this.enableLimit = false;\r\n      this.lowerTranslation = 0.0;\r\n      this.upperTranslation = 0.0;\r\n      this.enableMotor = false;\r\n      this.maxMotorForce = 0.0;\r\n      this.motorSpeed = 0.0;\r\n   }\r\n   b2LineJointDef.prototype.Initialize = function (bA, bB, anchor, axis) {\r\n      this.bodyA = bA;\r\n      this.bodyB = bB;\r\n      this.localAnchorA = this.bodyA.GetLocalPoint(anchor);\r\n      this.localAnchorB = this.bodyB.GetLocalPoint(anchor);\r\n      this.localAxisA = this.bodyA.GetLocalVector(axis);\r\n   }\r\n   Box2D.inherit(b2MouseJoint, Box2D.Dynamics.Joints.b2Joint);\r\n   b2MouseJoint.prototype.__super = Box2D.Dynamics.Joints.b2Joint.prototype;\r\n   b2MouseJoint.b2MouseJoint = function () {\r\n      Box2D.Dynamics.Joints.b2Joint.b2Joint.apply(this, arguments);\r\n      this.K = new b2Mat22();\r\n      this.K1 = new b2Mat22();\r\n      this.K2 = new b2Mat22();\r\n      this.m_localAnchor = new b2Vec2();\r\n      this.m_target = new b2Vec2();\r\n      this.m_impulse = new b2Vec2();\r\n      this.m_mass = new b2Mat22();\r\n      this.m_C = new b2Vec2();\r\n   };\r\n   b2MouseJoint.prototype.GetAnchorA = function () {\r\n      return this.m_target;\r\n   }\r\n   b2MouseJoint.prototype.GetAnchorB = function () {\r\n      return this.m_bodyB.GetWorldPoint(this.m_localAnchor);\r\n   }\r\n   b2MouseJoint.prototype.GetReactionForce = function (inv_dt) {\r\n      if (inv_dt === undefined) inv_dt = 0;\r\n      return new b2Vec2(inv_dt * this.m_impulse.x, inv_dt * this.m_impulse.y);\r\n   }\r\n   b2MouseJoint.prototype.GetReactionTorque = function (inv_dt) {\r\n      if (inv_dt === undefined) inv_dt = 0;\r\n      return 0.0;\r\n   }\r\n   b2MouseJoint.prototype.GetTarget = function () {\r\n      return this.m_target;\r\n   }\r\n   b2MouseJoint.prototype.SetTarget = function (target) {\r\n      if (this.m_bodyB.IsAwake() == false) {\r\n         this.m_bodyB.SetAwake(true);\r\n      }\r\n      this.m_target = target;\r\n   }\r\n   b2MouseJoint.prototype.GetMaxForce = function () {\r\n      return this.m_maxForce;\r\n   }\r\n   b2MouseJoint.prototype.SetMaxForce = function (maxForce) {\r\n      if (maxForce === undefined) maxForce = 0;\r\n      this.m_maxForce = maxForce;\r\n   }\r\n   b2MouseJoint.prototype.GetFrequency = function () {\r\n      return this.m_frequencyHz;\r\n   }\r\n   b2MouseJoint.prototype.SetFrequency = function (hz) {\r\n      if (hz === undefined) hz = 0;\r\n      this.m_frequencyHz = hz;\r\n   }\r\n   b2MouseJoint.prototype.GetDampingRatio = function () {\r\n      return this.m_dampingRatio;\r\n   }\r\n   b2MouseJoint.prototype.SetDampingRatio = function (ratio) {\r\n      if (ratio === undefined) ratio = 0;\r\n      this.m_dampingRatio = ratio;\r\n   }\r\n   b2MouseJoint.prototype.b2MouseJoint = function (def) {\r\n      this.__super.b2Joint.call(this, def);\r\n      this.m_target.SetV(def.target);\r\n      var tX = this.m_target.x - this.m_bodyB.m_xf.position.x;\r\n      var tY = this.m_target.y - this.m_bodyB.m_xf.position.y;\r\n      var tMat = this.m_bodyB.m_xf.R;\r\n      this.m_localAnchor.x = (tX * tMat.col1.x + tY * tMat.col1.y);\r\n      this.m_localAnchor.y = (tX * tMat.col2.x + tY * tMat.col2.y);\r\n      this.m_maxForce = def.maxForce;\r\n      this.m_impulse.SetZero();\r\n      this.m_frequencyHz = def.frequencyHz;\r\n      this.m_dampingRatio = def.dampingRatio;\r\n      this.m_beta = 0.0;\r\n      this.m_gamma = 0.0;\r\n   }\r\n   b2MouseJoint.prototype.InitVelocityConstraints = function (step) {\r\n      var b = this.m_bodyB;\r\n      var mass = b.GetMass();\r\n      var omega = 2.0 * Math.PI * this.m_frequencyHz;\r\n      var d = 2.0 * mass * this.m_dampingRatio * omega;\r\n      var k = mass * omega * omega;\r\n      this.m_gamma = step.dt * (d + step.dt * k);\r\n      this.m_gamma = this.m_gamma != 0 ? 1 / this.m_gamma : 0.0;\r\n      this.m_beta = step.dt * k * this.m_gamma;\r\n      var tMat;tMat = b.m_xf.R;\r\n      var rX = this.m_localAnchor.x - b.m_sweep.localCenter.x;\r\n      var rY = this.m_localAnchor.y - b.m_sweep.localCenter.y;\r\n      var tX = (tMat.col1.x * rX + tMat.col2.x * rY);rY = (tMat.col1.y * rX + tMat.col2.y * rY);\r\n      rX = tX;\r\n      var invMass = b.m_invMass;\r\n      var invI = b.m_invI;this.K1.col1.x = invMass;\r\n      this.K1.col2.x = 0.0;\r\n      this.K1.col1.y = 0.0;\r\n      this.K1.col2.y = invMass;\r\n      this.K2.col1.x = invI * rY * rY;\r\n      this.K2.col2.x = (-invI * rX * rY);\r\n      this.K2.col1.y = (-invI * rX * rY);\r\n      this.K2.col2.y = invI * rX * rX;\r\n      this.K.SetM(this.K1);\r\n      this.K.AddM(this.K2);\r\n      this.K.col1.x += this.m_gamma;\r\n      this.K.col2.y += this.m_gamma;\r\n      this.K.GetInverse(this.m_mass);\r\n      this.m_C.x = b.m_sweep.c.x + rX - this.m_target.x;\r\n      this.m_C.y = b.m_sweep.c.y + rY - this.m_target.y;\r\n      b.m_angularVelocity *= 0.98;\r\n      this.m_impulse.x *= step.dtRatio;\r\n      this.m_impulse.y *= step.dtRatio;\r\n      b.m_linearVelocity.x += invMass * this.m_impulse.x;\r\n      b.m_linearVelocity.y += invMass * this.m_impulse.y;\r\n      b.m_angularVelocity += invI * (rX * this.m_impulse.y - rY * this.m_impulse.x);\r\n   }\r\n   b2MouseJoint.prototype.SolveVelocityConstraints = function (step) {\r\n      var b = this.m_bodyB;\r\n      var tMat;\r\n      var tX = 0;\r\n      var tY = 0;\r\n      tMat = b.m_xf.R;\r\n      var rX = this.m_localAnchor.x - b.m_sweep.localCenter.x;\r\n      var rY = this.m_localAnchor.y - b.m_sweep.localCenter.y;\r\n      tX = (tMat.col1.x * rX + tMat.col2.x * rY);\r\n      rY = (tMat.col1.y * rX + tMat.col2.y * rY);\r\n      rX = tX;\r\n      var CdotX = b.m_linearVelocity.x + ((-b.m_angularVelocity * rY));\r\n      var CdotY = b.m_linearVelocity.y + (b.m_angularVelocity * rX);\r\n      tMat = this.m_mass;\r\n      tX = CdotX + this.m_beta * this.m_C.x + this.m_gamma * this.m_impulse.x;\r\n      tY = CdotY + this.m_beta * this.m_C.y + this.m_gamma * this.m_impulse.y;\r\n      var impulseX = (-(tMat.col1.x * tX + tMat.col2.x * tY));\r\n      var impulseY = (-(tMat.col1.y * tX + tMat.col2.y * tY));\r\n      var oldImpulseX = this.m_impulse.x;\r\n      var oldImpulseY = this.m_impulse.y;\r\n      this.m_impulse.x += impulseX;\r\n      this.m_impulse.y += impulseY;\r\n      var maxImpulse = step.dt * this.m_maxForce;\r\n      if (this.m_impulse.LengthSquared() > maxImpulse * maxImpulse) {\r\n         this.m_impulse.Multiply(maxImpulse / this.m_impulse.Length());\r\n      }\r\n      impulseX = this.m_impulse.x - oldImpulseX;\r\n      impulseY = this.m_impulse.y - oldImpulseY;\r\n      b.m_linearVelocity.x += b.m_invMass * impulseX;\r\n      b.m_linearVelocity.y += b.m_invMass * impulseY;\r\n      b.m_angularVelocity += b.m_invI * (rX * impulseY - rY * impulseX);\r\n   }\r\n   b2MouseJoint.prototype.SolvePositionConstraints = function (baumgarte) {\r\n      if (baumgarte === undefined) baumgarte = 0;\r\n      return true;\r\n   }\r\n   Box2D.inherit(b2MouseJointDef, Box2D.Dynamics.Joints.b2JointDef);\r\n   b2MouseJointDef.prototype.__super = Box2D.Dynamics.Joints.b2JointDef.prototype;\r\n   b2MouseJointDef.b2MouseJointDef = function () {\r\n      Box2D.Dynamics.Joints.b2JointDef.b2JointDef.apply(this, arguments);\r\n      this.target = new b2Vec2();\r\n   };\r\n   b2MouseJointDef.prototype.b2MouseJointDef = function () {\r\n      this.__super.b2JointDef.call(this);\r\n      this.type = b2Joint.e_mouseJoint;\r\n      this.maxForce = 0.0;\r\n      this.frequencyHz = 5.0;\r\n      this.dampingRatio = 0.7;\r\n   }\r\n   Box2D.inherit(b2PrismaticJoint, Box2D.Dynamics.Joints.b2Joint);\r\n   b2PrismaticJoint.prototype.__super = Box2D.Dynamics.Joints.b2Joint.prototype;\r\n   b2PrismaticJoint.b2PrismaticJoint = function () {\r\n      Box2D.Dynamics.Joints.b2Joint.b2Joint.apply(this, arguments);\r\n      this.m_localAnchor1 = new b2Vec2();\r\n      this.m_localAnchor2 = new b2Vec2();\r\n      this.m_localXAxis1 = new b2Vec2();\r\n      this.m_localYAxis1 = new b2Vec2();\r\n      this.m_axis = new b2Vec2();\r\n      this.m_perp = new b2Vec2();\r\n      this.m_K = new b2Mat33();\r\n      this.m_impulse = new b2Vec3();\r\n   };\r\n   b2PrismaticJoint.prototype.GetAnchorA = function () {\r\n      return this.m_bodyA.GetWorldPoint(this.m_localAnchor1);\r\n   }\r\n   b2PrismaticJoint.prototype.GetAnchorB = function () {\r\n      return this.m_bodyB.GetWorldPoint(this.m_localAnchor2);\r\n   }\r\n   b2PrismaticJoint.prototype.GetReactionForce = function (inv_dt) {\r\n      if (inv_dt === undefined) inv_dt = 0;\r\n      return new b2Vec2(inv_dt * (this.m_impulse.x * this.m_perp.x + (this.m_motorImpulse + this.m_impulse.z) * this.m_axis.x), inv_dt * (this.m_impulse.x * this.m_perp.y + (this.m_motorImpulse + this.m_impulse.z) * this.m_axis.y));\r\n   }\r\n   b2PrismaticJoint.prototype.GetReactionTorque = function (inv_dt) {\r\n      if (inv_dt === undefined) inv_dt = 0;\r\n      return inv_dt * this.m_impulse.y;\r\n   }\r\n   b2PrismaticJoint.prototype.GetJointTranslation = function () {\r\n      var bA = this.m_bodyA;\r\n      var bB = this.m_bodyB;\r\n      var tMat;\r\n      var p1 = bA.GetWorldPoint(this.m_localAnchor1);\r\n      var p2 = bB.GetWorldPoint(this.m_localAnchor2);\r\n      var dX = p2.x - p1.x;\r\n      var dY = p2.y - p1.y;\r\n      var axis = bA.GetWorldVector(this.m_localXAxis1);\r\n      var translation = axis.x * dX + axis.y * dY;\r\n      return translation;\r\n   }\r\n   b2PrismaticJoint.prototype.GetJointSpeed = function () {\r\n      var bA = this.m_bodyA;\r\n      var bB = this.m_bodyB;\r\n      var tMat;\r\n      tMat = bA.m_xf.R;\r\n      var r1X = this.m_localAnchor1.x - bA.m_sweep.localCenter.x;\r\n      var r1Y = this.m_localAnchor1.y - bA.m_sweep.localCenter.y;\r\n      var tX = (tMat.col1.x * r1X + tMat.col2.x * r1Y);\r\n      r1Y = (tMat.col1.y * r1X + tMat.col2.y * r1Y);\r\n      r1X = tX;\r\n      tMat = bB.m_xf.R;\r\n      var r2X = this.m_localAnchor2.x - bB.m_sweep.localCenter.x;\r\n      var r2Y = this.m_localAnchor2.y - bB.m_sweep.localCenter.y;\r\n      tX = (tMat.col1.x * r2X + tMat.col2.x * r2Y);\r\n      r2Y = (tMat.col1.y * r2X + tMat.col2.y * r2Y);\r\n      r2X = tX;\r\n      var p1X = bA.m_sweep.c.x + r1X;\r\n      var p1Y = bA.m_sweep.c.y + r1Y;\r\n      var p2X = bB.m_sweep.c.x + r2X;\r\n      var p2Y = bB.m_sweep.c.y + r2Y;\r\n      var dX = p2X - p1X;\r\n      var dY = p2Y - p1Y;\r\n      var axis = bA.GetWorldVector(this.m_localXAxis1);\r\n      var v1 = bA.m_linearVelocity;\r\n      var v2 = bB.m_linearVelocity;\r\n      var w1 = bA.m_angularVelocity;\r\n      var w2 = bB.m_angularVelocity;\r\n      var speed = (dX * ((-w1 * axis.y)) + dY * (w1 * axis.x)) + (axis.x * (((v2.x + ((-w2 * r2Y))) - v1.x) - ((-w1 * r1Y))) + axis.y * (((v2.y + (w2 * r2X)) - v1.y) - (w1 * r1X)));\r\n      return speed;\r\n   }\r\n   b2PrismaticJoint.prototype.IsLimitEnabled = function () {\r\n      return this.m_enableLimit;\r\n   }\r\n   b2PrismaticJoint.prototype.EnableLimit = function (flag) {\r\n      this.m_bodyA.SetAwake(true);\r\n      this.m_bodyB.SetAwake(true);\r\n      this.m_enableLimit = flag;\r\n   }\r\n   b2PrismaticJoint.prototype.GetLowerLimit = function () {\r\n      return this.m_lowerTranslation;\r\n   }\r\n   b2PrismaticJoint.prototype.GetUpperLimit = function () {\r\n      return this.m_upperTranslation;\r\n   }\r\n   b2PrismaticJoint.prototype.SetLimits = function (lower, upper) {\r\n      if (lower === undefined) lower = 0;\r\n      if (upper === undefined) upper = 0;\r\n      this.m_bodyA.SetAwake(true);\r\n      this.m_bodyB.SetAwake(true);\r\n      this.m_lowerTranslation = lower;\r\n      this.m_upperTranslation = upper;\r\n   }\r\n   b2PrismaticJoint.prototype.IsMotorEnabled = function () {\r\n      return this.m_enableMotor;\r\n   }\r\n   b2PrismaticJoint.prototype.EnableMotor = function (flag) {\r\n      this.m_bodyA.SetAwake(true);\r\n      this.m_bodyB.SetAwake(true);\r\n      this.m_enableMotor = flag;\r\n   }\r\n   b2PrismaticJoint.prototype.SetMotorSpeed = function (speed) {\r\n      if (speed === undefined) speed = 0;\r\n      this.m_bodyA.SetAwake(true);\r\n      this.m_bodyB.SetAwake(true);\r\n      this.m_motorSpeed = speed;\r\n   }\r\n   b2PrismaticJoint.prototype.GetMotorSpeed = function () {\r\n      return this.m_motorSpeed;\r\n   }\r\n   b2PrismaticJoint.prototype.SetMaxMotorForce = function (force) {\r\n      if (force === undefined) force = 0;\r\n      this.m_bodyA.SetAwake(true);\r\n      this.m_bodyB.SetAwake(true);\r\n      this.m_maxMotorForce = force;\r\n   }\r\n   b2PrismaticJoint.prototype.GetMotorForce = function () {\r\n      return this.m_motorImpulse;\r\n   }\r\n   b2PrismaticJoint.prototype.b2PrismaticJoint = function (def) {\r\n      this.__super.b2Joint.call(this, def);\r\n      var tMat;\r\n      var tX = 0;\r\n      var tY = 0;\r\n      this.m_localAnchor1.SetV(def.localAnchorA);\r\n      this.m_localAnchor2.SetV(def.localAnchorB);\r\n      this.m_localXAxis1.SetV(def.localAxisA);\r\n      this.m_localYAxis1.x = (-this.m_localXAxis1.y);\r\n      this.m_localYAxis1.y = this.m_localXAxis1.x;\r\n      this.m_refAngle = def.referenceAngle;\r\n      this.m_impulse.SetZero();\r\n      this.m_motorMass = 0.0;\r\n      this.m_motorImpulse = 0.0;\r\n      this.m_lowerTranslation = def.lowerTranslation;\r\n      this.m_upperTranslation = def.upperTranslation;\r\n      this.m_maxMotorForce = def.maxMotorForce;\r\n      this.m_motorSpeed = def.motorSpeed;\r\n      this.m_enableLimit = def.enableLimit;\r\n      this.m_enableMotor = def.enableMotor;\r\n      this.m_limitState = b2Joint.e_inactiveLimit;\r\n      this.m_axis.SetZero();\r\n      this.m_perp.SetZero();\r\n   }\r\n   b2PrismaticJoint.prototype.InitVelocityConstraints = function (step) {\r\n      var bA = this.m_bodyA;\r\n      var bB = this.m_bodyB;\r\n      var tMat;\r\n      var tX = 0;\r\n      this.m_localCenterA.SetV(bA.GetLocalCenter());\r\n      this.m_localCenterB.SetV(bB.GetLocalCenter());\r\n      var xf1 = bA.GetTransform();\r\n      var xf2 = bB.GetTransform();\r\n      tMat = bA.m_xf.R;\r\n      var r1X = this.m_localAnchor1.x - this.m_localCenterA.x;\r\n      var r1Y = this.m_localAnchor1.y - this.m_localCenterA.y;\r\n      tX = (tMat.col1.x * r1X + tMat.col2.x * r1Y);\r\n      r1Y = (tMat.col1.y * r1X + tMat.col2.y * r1Y);\r\n      r1X = tX;\r\n      tMat = bB.m_xf.R;\r\n      var r2X = this.m_localAnchor2.x - this.m_localCenterB.x;\r\n      var r2Y = this.m_localAnchor2.y - this.m_localCenterB.y;\r\n      tX = (tMat.col1.x * r2X + tMat.col2.x * r2Y);\r\n      r2Y = (tMat.col1.y * r2X + tMat.col2.y * r2Y);\r\n      r2X = tX;\r\n      var dX = bB.m_sweep.c.x + r2X - bA.m_sweep.c.x - r1X;\r\n      var dY = bB.m_sweep.c.y + r2Y - bA.m_sweep.c.y - r1Y;\r\n      this.m_invMassA = bA.m_invMass;\r\n      this.m_invMassB = bB.m_invMass;\r\n      this.m_invIA = bA.m_invI;\r\n      this.m_invIB = bB.m_invI; {\r\n         this.m_axis.SetV(b2Math.MulMV(xf1.R, this.m_localXAxis1));\r\n         this.m_a1 = (dX + r1X) * this.m_axis.y - (dY + r1Y) * this.m_axis.x;\r\n         this.m_a2 = r2X * this.m_axis.y - r2Y * this.m_axis.x;\r\n         this.m_motorMass = this.m_invMassA + this.m_invMassB + this.m_invIA * this.m_a1 * this.m_a1 + this.m_invIB * this.m_a2 * this.m_a2;\r\n         if (this.m_motorMass > Number.MIN_VALUE) this.m_motorMass = 1.0 / this.m_motorMass;\r\n      } {\r\n         this.m_perp.SetV(b2Math.MulMV(xf1.R, this.m_localYAxis1));\r\n         this.m_s1 = (dX + r1X) * this.m_perp.y - (dY + r1Y) * this.m_perp.x;\r\n         this.m_s2 = r2X * this.m_perp.y - r2Y * this.m_perp.x;\r\n         var m1 = this.m_invMassA;\r\n         var m2 = this.m_invMassB;\r\n         var i1 = this.m_invIA;\r\n         var i2 = this.m_invIB;\r\n         this.m_K.col1.x = m1 + m2 + i1 * this.m_s1 * this.m_s1 + i2 * this.m_s2 * this.m_s2;\r\n         this.m_K.col1.y = i1 * this.m_s1 + i2 * this.m_s2;\r\n         this.m_K.col1.z = i1 * this.m_s1 * this.m_a1 + i2 * this.m_s2 * this.m_a2;\r\n         this.m_K.col2.x = this.m_K.col1.y;\r\n         this.m_K.col2.y = i1 + i2;\r\n         this.m_K.col2.z = i1 * this.m_a1 + i2 * this.m_a2;\r\n         this.m_K.col3.x = this.m_K.col1.z;\r\n         this.m_K.col3.y = this.m_K.col2.z;\r\n         this.m_K.col3.z = m1 + m2 + i1 * this.m_a1 * this.m_a1 + i2 * this.m_a2 * this.m_a2;\r\n      }\r\n      if (this.m_enableLimit) {\r\n         var jointTransition = this.m_axis.x * dX + this.m_axis.y * dY;\r\n         if (b2Math.Abs(this.m_upperTranslation - this.m_lowerTranslation) < 2.0 * b2Settings.b2_linearSlop) {\r\n            this.m_limitState = b2Joint.e_equalLimits;\r\n         }\r\n         else if (jointTransition <= this.m_lowerTranslation) {\r\n            if (this.m_limitState != b2Joint.e_atLowerLimit) {\r\n               this.m_limitState = b2Joint.e_atLowerLimit;\r\n               this.m_impulse.z = 0.0;\r\n            }\r\n         }\r\n         else if (jointTransition >= this.m_upperTranslation) {\r\n            if (this.m_limitState != b2Joint.e_atUpperLimit) {\r\n               this.m_limitState = b2Joint.e_atUpperLimit;\r\n               this.m_impulse.z = 0.0;\r\n            }\r\n         }\r\n         else {\r\n            this.m_limitState = b2Joint.e_inactiveLimit;\r\n            this.m_impulse.z = 0.0;\r\n         }\r\n      }\r\n      else {\r\n         this.m_limitState = b2Joint.e_inactiveLimit;\r\n      }\r\n      if (this.m_enableMotor == false) {\r\n         this.m_motorImpulse = 0.0;\r\n      }\r\n      if (step.warmStarting) {\r\n         this.m_impulse.x *= step.dtRatio;\r\n         this.m_impulse.y *= step.dtRatio;\r\n         this.m_motorImpulse *= step.dtRatio;\r\n         var PX = this.m_impulse.x * this.m_perp.x + (this.m_motorImpulse + this.m_impulse.z) * this.m_axis.x;\r\n         var PY = this.m_impulse.x * this.m_perp.y + (this.m_motorImpulse + this.m_impulse.z) * this.m_axis.y;\r\n         var L1 = this.m_impulse.x * this.m_s1 + this.m_impulse.y + (this.m_motorImpulse + this.m_impulse.z) * this.m_a1;\r\n         var L2 = this.m_impulse.x * this.m_s2 + this.m_impulse.y + (this.m_motorImpulse + this.m_impulse.z) * this.m_a2;\r\n         bA.m_linearVelocity.x -= this.m_invMassA * PX;\r\n         bA.m_linearVelocity.y -= this.m_invMassA * PY;\r\n         bA.m_angularVelocity -= this.m_invIA * L1;\r\n         bB.m_linearVelocity.x += this.m_invMassB * PX;\r\n         bB.m_linearVelocity.y += this.m_invMassB * PY;\r\n         bB.m_angularVelocity += this.m_invIB * L2;\r\n      }\r\n      else {\r\n         this.m_impulse.SetZero();\r\n         this.m_motorImpulse = 0.0;\r\n      }\r\n   }\r\n   b2PrismaticJoint.prototype.SolveVelocityConstraints = function (step) {\r\n      var bA = this.m_bodyA;\r\n      var bB = this.m_bodyB;\r\n      var v1 = bA.m_linearVelocity;\r\n      var w1 = bA.m_angularVelocity;\r\n      var v2 = bB.m_linearVelocity;\r\n      var w2 = bB.m_angularVelocity;\r\n      var PX = 0;\r\n      var PY = 0;\r\n      var L1 = 0;\r\n      var L2 = 0;\r\n      if (this.m_enableMotor && this.m_limitState != b2Joint.e_equalLimits) {\r\n         var Cdot = this.m_axis.x * (v2.x - v1.x) + this.m_axis.y * (v2.y - v1.y) + this.m_a2 * w2 - this.m_a1 * w1;\r\n         var impulse = this.m_motorMass * (this.m_motorSpeed - Cdot);\r\n         var oldImpulse = this.m_motorImpulse;\r\n         var maxImpulse = step.dt * this.m_maxMotorForce;\r\n         this.m_motorImpulse = b2Math.Clamp(this.m_motorImpulse + impulse, (-maxImpulse), maxImpulse);\r\n         impulse = this.m_motorImpulse - oldImpulse;\r\n         PX = impulse * this.m_axis.x;\r\n         PY = impulse * this.m_axis.y;\r\n         L1 = impulse * this.m_a1;\r\n         L2 = impulse * this.m_a2;\r\n         v1.x -= this.m_invMassA * PX;\r\n         v1.y -= this.m_invMassA * PY;\r\n         w1 -= this.m_invIA * L1;\r\n         v2.x += this.m_invMassB * PX;\r\n         v2.y += this.m_invMassB * PY;\r\n         w2 += this.m_invIB * L2;\r\n      }\r\n      var Cdot1X = this.m_perp.x * (v2.x - v1.x) + this.m_perp.y * (v2.y - v1.y) + this.m_s2 * w2 - this.m_s1 * w1;\r\n      var Cdot1Y = w2 - w1;\r\n      if (this.m_enableLimit && this.m_limitState != b2Joint.e_inactiveLimit) {\r\n         var Cdot2 = this.m_axis.x * (v2.x - v1.x) + this.m_axis.y * (v2.y - v1.y) + this.m_a2 * w2 - this.m_a1 * w1;\r\n         var f1 = this.m_impulse.Copy();\r\n         var df = this.m_K.Solve33(new b2Vec3(), (-Cdot1X), (-Cdot1Y), (-Cdot2));\r\n         this.m_impulse.Add(df);\r\n         if (this.m_limitState == b2Joint.e_atLowerLimit) {\r\n            this.m_impulse.z = b2Math.Max(this.m_impulse.z, 0.0);\r\n         }\r\n         else if (this.m_limitState == b2Joint.e_atUpperLimit) {\r\n            this.m_impulse.z = b2Math.Min(this.m_impulse.z, 0.0);\r\n         }\r\n         var bX = (-Cdot1X) - (this.m_impulse.z - f1.z) * this.m_K.col3.x;\r\n         var bY = (-Cdot1Y) - (this.m_impulse.z - f1.z) * this.m_K.col3.y;\r\n         var f2r = this.m_K.Solve22(new b2Vec2(), bX, bY);\r\n         f2r.x += f1.x;\r\n         f2r.y += f1.y;\r\n         this.m_impulse.x = f2r.x;\r\n         this.m_impulse.y = f2r.y;\r\n         df.x = this.m_impulse.x - f1.x;\r\n         df.y = this.m_impulse.y - f1.y;\r\n         df.z = this.m_impulse.z - f1.z;\r\n         PX = df.x * this.m_perp.x + df.z * this.m_axis.x;\r\n         PY = df.x * this.m_perp.y + df.z * this.m_axis.y;\r\n         L1 = df.x * this.m_s1 + df.y + df.z * this.m_a1;\r\n         L2 = df.x * this.m_s2 + df.y + df.z * this.m_a2;\r\n         v1.x -= this.m_invMassA * PX;\r\n         v1.y -= this.m_invMassA * PY;\r\n         w1 -= this.m_invIA * L1;\r\n         v2.x += this.m_invMassB * PX;\r\n         v2.y += this.m_invMassB * PY;\r\n         w2 += this.m_invIB * L2;\r\n      }\r\n      else {\r\n         var df2 = this.m_K.Solve22(new b2Vec2(), (-Cdot1X), (-Cdot1Y));\r\n         this.m_impulse.x += df2.x;\r\n         this.m_impulse.y += df2.y;\r\n         PX = df2.x * this.m_perp.x;\r\n         PY = df2.x * this.m_perp.y;\r\n         L1 = df2.x * this.m_s1 + df2.y;\r\n         L2 = df2.x * this.m_s2 + df2.y;\r\n         v1.x -= this.m_invMassA * PX;\r\n         v1.y -= this.m_invMassA * PY;\r\n         w1 -= this.m_invIA * L1;\r\n         v2.x += this.m_invMassB * PX;\r\n         v2.y += this.m_invMassB * PY;\r\n         w2 += this.m_invIB * L2;\r\n      }\r\n      bA.m_linearVelocity.SetV(v1);\r\n      bA.m_angularVelocity = w1;\r\n      bB.m_linearVelocity.SetV(v2);\r\n      bB.m_angularVelocity = w2;\r\n   }\r\n   b2PrismaticJoint.prototype.SolvePositionConstraints = function (baumgarte) {\r\n      if (baumgarte === undefined) baumgarte = 0;\r\n      var limitC = 0;\r\n      var oldLimitImpulse = 0;\r\n      var bA = this.m_bodyA;\r\n      var bB = this.m_bodyB;\r\n      var c1 = bA.m_sweep.c;\r\n      var a1 = bA.m_sweep.a;\r\n      var c2 = bB.m_sweep.c;\r\n      var a2 = bB.m_sweep.a;\r\n      var tMat;\r\n      var tX = 0;\r\n      var m1 = 0;\r\n      var m2 = 0;\r\n      var i1 = 0;\r\n      var i2 = 0;\r\n      var linearError = 0.0;\r\n      var angularError = 0.0;\r\n      var active = false;\r\n      var C2 = 0.0;\r\n      var R1 = b2Mat22.FromAngle(a1);\r\n      var R2 = b2Mat22.FromAngle(a2);\r\n      tMat = R1;\r\n      var r1X = this.m_localAnchor1.x - this.m_localCenterA.x;\r\n      var r1Y = this.m_localAnchor1.y - this.m_localCenterA.y;\r\n      tX = (tMat.col1.x * r1X + tMat.col2.x * r1Y);\r\n      r1Y = (tMat.col1.y * r1X + tMat.col2.y * r1Y);\r\n      r1X = tX;\r\n      tMat = R2;\r\n      var r2X = this.m_localAnchor2.x - this.m_localCenterB.x;\r\n      var r2Y = this.m_localAnchor2.y - this.m_localCenterB.y;\r\n      tX = (tMat.col1.x * r2X + tMat.col2.x * r2Y);\r\n      r2Y = (tMat.col1.y * r2X + tMat.col2.y * r2Y);\r\n      r2X = tX;\r\n      var dX = c2.x + r2X - c1.x - r1X;\r\n      var dY = c2.y + r2Y - c1.y - r1Y;\r\n      if (this.m_enableLimit) {\r\n         this.m_axis = b2Math.MulMV(R1, this.m_localXAxis1);\r\n         this.m_a1 = (dX + r1X) * this.m_axis.y - (dY + r1Y) * this.m_axis.x;\r\n         this.m_a2 = r2X * this.m_axis.y - r2Y * this.m_axis.x;\r\n         var translation = this.m_axis.x * dX + this.m_axis.y * dY;\r\n         if (b2Math.Abs(this.m_upperTranslation - this.m_lowerTranslation) < 2.0 * b2Settings.b2_linearSlop) {\r\n            C2 = b2Math.Clamp(translation, (-b2Settings.b2_maxLinearCorrection), b2Settings.b2_maxLinearCorrection);\r\n            linearError = b2Math.Abs(translation);\r\n            active = true;\r\n         }\r\n         else if (translation <= this.m_lowerTranslation) {\r\n            C2 = b2Math.Clamp(translation - this.m_lowerTranslation + b2Settings.b2_linearSlop, (-b2Settings.b2_maxLinearCorrection), 0.0);\r\n            linearError = this.m_lowerTranslation - translation;\r\n            active = true;\r\n         }\r\n         else if (translation >= this.m_upperTranslation) {\r\n            C2 = b2Math.Clamp(translation - this.m_upperTranslation + b2Settings.b2_linearSlop, 0.0, b2Settings.b2_maxLinearCorrection);\r\n            linearError = translation - this.m_upperTranslation;\r\n            active = true;\r\n         }\r\n      }\r\n      this.m_perp = b2Math.MulMV(R1, this.m_localYAxis1);\r\n      this.m_s1 = (dX + r1X) * this.m_perp.y - (dY + r1Y) * this.m_perp.x;\r\n      this.m_s2 = r2X * this.m_perp.y - r2Y * this.m_perp.x;\r\n      var impulse = new b2Vec3();\r\n      var C1X = this.m_perp.x * dX + this.m_perp.y * dY;\r\n      var C1Y = a2 - a1 - this.m_refAngle;\r\n      linearError = b2Math.Max(linearError, b2Math.Abs(C1X));\r\n      angularError = b2Math.Abs(C1Y);\r\n      if (active) {\r\n         m1 = this.m_invMassA;\r\n         m2 = this.m_invMassB;\r\n         i1 = this.m_invIA;\r\n         i2 = this.m_invIB;\r\n         this.m_K.col1.x = m1 + m2 + i1 * this.m_s1 * this.m_s1 + i2 * this.m_s2 * this.m_s2;\r\n         this.m_K.col1.y = i1 * this.m_s1 + i2 * this.m_s2;\r\n         this.m_K.col1.z = i1 * this.m_s1 * this.m_a1 + i2 * this.m_s2 * this.m_a2;\r\n         this.m_K.col2.x = this.m_K.col1.y;\r\n         this.m_K.col2.y = i1 + i2;\r\n         this.m_K.col2.z = i1 * this.m_a1 + i2 * this.m_a2;\r\n         this.m_K.col3.x = this.m_K.col1.z;\r\n         this.m_K.col3.y = this.m_K.col2.z;\r\n         this.m_K.col3.z = m1 + m2 + i1 * this.m_a1 * this.m_a1 + i2 * this.m_a2 * this.m_a2;\r\n         this.m_K.Solve33(impulse, (-C1X), (-C1Y), (-C2));\r\n      }\r\n      else {\r\n         m1 = this.m_invMassA;\r\n         m2 = this.m_invMassB;\r\n         i1 = this.m_invIA;\r\n         i2 = this.m_invIB;\r\n         var k11 = m1 + m2 + i1 * this.m_s1 * this.m_s1 + i2 * this.m_s2 * this.m_s2;\r\n         var k12 = i1 * this.m_s1 + i2 * this.m_s2;\r\n         var k22 = i1 + i2;\r\n         this.m_K.col1.Set(k11, k12, 0.0);\r\n         this.m_K.col2.Set(k12, k22, 0.0);\r\n         var impulse1 = this.m_K.Solve22(new b2Vec2(), (-C1X), (-C1Y));\r\n         impulse.x = impulse1.x;\r\n         impulse.y = impulse1.y;\r\n         impulse.z = 0.0;\r\n      }\r\n      var PX = impulse.x * this.m_perp.x + impulse.z * this.m_axis.x;\r\n      var PY = impulse.x * this.m_perp.y + impulse.z * this.m_axis.y;\r\n      var L1 = impulse.x * this.m_s1 + impulse.y + impulse.z * this.m_a1;\r\n      var L2 = impulse.x * this.m_s2 + impulse.y + impulse.z * this.m_a2;\r\n      c1.x -= this.m_invMassA * PX;\r\n      c1.y -= this.m_invMassA * PY;\r\n      a1 -= this.m_invIA * L1;\r\n      c2.x += this.m_invMassB * PX;\r\n      c2.y += this.m_invMassB * PY;\r\n      a2 += this.m_invIB * L2;\r\n      bA.m_sweep.a = a1;\r\n      bB.m_sweep.a = a2;\r\n      bA.SynchronizeTransform();\r\n      bB.SynchronizeTransform();\r\n      return linearError <= b2Settings.b2_linearSlop && angularError <= b2Settings.b2_angularSlop;\r\n   }\r\n   Box2D.inherit(b2PrismaticJointDef, Box2D.Dynamics.Joints.b2JointDef);\r\n   b2PrismaticJointDef.prototype.__super = Box2D.Dynamics.Joints.b2JointDef.prototype;\r\n   b2PrismaticJointDef.b2PrismaticJointDef = function () {\r\n      Box2D.Dynamics.Joints.b2JointDef.b2JointDef.apply(this, arguments);\r\n      this.localAnchorA = new b2Vec2();\r\n      this.localAnchorB = new b2Vec2();\r\n      this.localAxisA = new b2Vec2();\r\n   };\r\n   b2PrismaticJointDef.prototype.b2PrismaticJointDef = function () {\r\n      this.__super.b2JointDef.call(this);\r\n      this.type = b2Joint.e_prismaticJoint;\r\n      this.localAxisA.Set(1.0, 0.0);\r\n      this.referenceAngle = 0.0;\r\n      this.enableLimit = false;\r\n      this.lowerTranslation = 0.0;\r\n      this.upperTranslation = 0.0;\r\n      this.enableMotor = false;\r\n      this.maxMotorForce = 0.0;\r\n      this.motorSpeed = 0.0;\r\n   }\r\n   b2PrismaticJointDef.prototype.Initialize = function (bA, bB, anchor, axis) {\r\n      this.bodyA = bA;\r\n      this.bodyB = bB;\r\n      this.localAnchorA = this.bodyA.GetLocalPoint(anchor);\r\n      this.localAnchorB = this.bodyB.GetLocalPoint(anchor);\r\n      this.localAxisA = this.bodyA.GetLocalVector(axis);\r\n      this.referenceAngle = this.bodyB.GetAngle() - this.bodyA.GetAngle();\r\n   }\r\n   Box2D.inherit(b2PulleyJoint, Box2D.Dynamics.Joints.b2Joint);\r\n   b2PulleyJoint.prototype.__super = Box2D.Dynamics.Joints.b2Joint.prototype;\r\n   b2PulleyJoint.b2PulleyJoint = function () {\r\n      Box2D.Dynamics.Joints.b2Joint.b2Joint.apply(this, arguments);\r\n      this.m_groundAnchor1 = new b2Vec2();\r\n      this.m_groundAnchor2 = new b2Vec2();\r\n      this.m_localAnchor1 = new b2Vec2();\r\n      this.m_localAnchor2 = new b2Vec2();\r\n      this.m_u1 = new b2Vec2();\r\n      this.m_u2 = new b2Vec2();\r\n   };\r\n   b2PulleyJoint.prototype.GetAnchorA = function () {\r\n      return this.m_bodyA.GetWorldPoint(this.m_localAnchor1);\r\n   }\r\n   b2PulleyJoint.prototype.GetAnchorB = function () {\r\n      return this.m_bodyB.GetWorldPoint(this.m_localAnchor2);\r\n   }\r\n   b2PulleyJoint.prototype.GetReactionForce = function (inv_dt) {\r\n      if (inv_dt === undefined) inv_dt = 0;\r\n      return new b2Vec2(inv_dt * this.m_impulse * this.m_u2.x, inv_dt * this.m_impulse * this.m_u2.y);\r\n   }\r\n   b2PulleyJoint.prototype.GetReactionTorque = function (inv_dt) {\r\n      if (inv_dt === undefined) inv_dt = 0;\r\n      return 0.0;\r\n   }\r\n   b2PulleyJoint.prototype.GetGroundAnchorA = function () {\r\n      var a = this.m_ground.m_xf.position.Copy();\r\n      a.Add(this.m_groundAnchor1);\r\n      return a;\r\n   }\r\n   b2PulleyJoint.prototype.GetGroundAnchorB = function () {\r\n      var a = this.m_ground.m_xf.position.Copy();\r\n      a.Add(this.m_groundAnchor2);\r\n      return a;\r\n   }\r\n   b2PulleyJoint.prototype.GetLength1 = function () {\r\n      var p = this.m_bodyA.GetWorldPoint(this.m_localAnchor1);\r\n      var sX = this.m_ground.m_xf.position.x + this.m_groundAnchor1.x;\r\n      var sY = this.m_ground.m_xf.position.y + this.m_groundAnchor1.y;\r\n      var dX = p.x - sX;\r\n      var dY = p.y - sY;\r\n      return Math.sqrt(dX * dX + dY * dY);\r\n   }\r\n   b2PulleyJoint.prototype.GetLength2 = function () {\r\n      var p = this.m_bodyB.GetWorldPoint(this.m_localAnchor2);\r\n      var sX = this.m_ground.m_xf.position.x + this.m_groundAnchor2.x;\r\n      var sY = this.m_ground.m_xf.position.y + this.m_groundAnchor2.y;\r\n      var dX = p.x - sX;\r\n      var dY = p.y - sY;\r\n      return Math.sqrt(dX * dX + dY * dY);\r\n   }\r\n   b2PulleyJoint.prototype.GetRatio = function () {\r\n      return this.m_ratio;\r\n   }\r\n   b2PulleyJoint.prototype.b2PulleyJoint = function (def) {\r\n      this.__super.b2Joint.call(this, def);\r\n      var tMat;\r\n      var tX = 0;\r\n      var tY = 0;\r\n      this.m_ground = this.m_bodyA.m_world.m_groundBody;\r\n      this.m_groundAnchor1.x = def.groundAnchorA.x - this.m_ground.m_xf.position.x;\r\n      this.m_groundAnchor1.y = def.groundAnchorA.y - this.m_ground.m_xf.position.y;\r\n      this.m_groundAnchor2.x = def.groundAnchorB.x - this.m_ground.m_xf.position.x;\r\n      this.m_groundAnchor2.y = def.groundAnchorB.y - this.m_ground.m_xf.position.y;\r\n      this.m_localAnchor1.SetV(def.localAnchorA);\r\n      this.m_localAnchor2.SetV(def.localAnchorB);\r\n      this.m_ratio = def.ratio;\r\n      this.m_constant = def.lengthA + this.m_ratio * def.lengthB;\r\n      this.m_maxLength1 = b2Math.Min(def.maxLengthA, this.m_constant - this.m_ratio * b2PulleyJoint.b2_minPulleyLength);\r\n      this.m_maxLength2 = b2Math.Min(def.maxLengthB, (this.m_constant - b2PulleyJoint.b2_minPulleyLength) / this.m_ratio);\r\n      this.m_impulse = 0.0;\r\n      this.m_limitImpulse1 = 0.0;\r\n      this.m_limitImpulse2 = 0.0;\r\n   }\r\n   b2PulleyJoint.prototype.InitVelocityConstraints = function (step) {\r\n      var bA = this.m_bodyA;\r\n      var bB = this.m_bodyB;\r\n      var tMat;\r\n      tMat = bA.m_xf.R;\r\n      var r1X = this.m_localAnchor1.x - bA.m_sweep.localCenter.x;\r\n      var r1Y = this.m_localAnchor1.y - bA.m_sweep.localCenter.y;\r\n      var tX = (tMat.col1.x * r1X + tMat.col2.x * r1Y);\r\n      r1Y = (tMat.col1.y * r1X + tMat.col2.y * r1Y);\r\n      r1X = tX;\r\n      tMat = bB.m_xf.R;\r\n      var r2X = this.m_localAnchor2.x - bB.m_sweep.localCenter.x;\r\n      var r2Y = this.m_localAnchor2.y - bB.m_sweep.localCenter.y;\r\n      tX = (tMat.col1.x * r2X + tMat.col2.x * r2Y);\r\n      r2Y = (tMat.col1.y * r2X + tMat.col2.y * r2Y);\r\n      r2X = tX;\r\n      var p1X = bA.m_sweep.c.x + r1X;\r\n      var p1Y = bA.m_sweep.c.y + r1Y;\r\n      var p2X = bB.m_sweep.c.x + r2X;\r\n      var p2Y = bB.m_sweep.c.y + r2Y;\r\n      var s1X = this.m_ground.m_xf.position.x + this.m_groundAnchor1.x;\r\n      var s1Y = this.m_ground.m_xf.position.y + this.m_groundAnchor1.y;\r\n      var s2X = this.m_ground.m_xf.position.x + this.m_groundAnchor2.x;\r\n      var s2Y = this.m_ground.m_xf.position.y + this.m_groundAnchor2.y;\r\n      this.m_u1.Set(p1X - s1X, p1Y - s1Y);\r\n      this.m_u2.Set(p2X - s2X, p2Y - s2Y);\r\n      var length1 = this.m_u1.Length();\r\n      var length2 = this.m_u2.Length();\r\n      if (length1 > b2Settings.b2_linearSlop) {\r\n         this.m_u1.Multiply(1.0 / length1);\r\n      }\r\n      else {\r\n         this.m_u1.SetZero();\r\n      }\r\n      if (length2 > b2Settings.b2_linearSlop) {\r\n         this.m_u2.Multiply(1.0 / length2);\r\n      }\r\n      else {\r\n         this.m_u2.SetZero();\r\n      }\r\n      var C = this.m_constant - length1 - this.m_ratio * length2;\r\n      if (C > 0.0) {\r\n         this.m_state = b2Joint.e_inactiveLimit;\r\n         this.m_impulse = 0.0;\r\n      }\r\n      else {\r\n         this.m_state = b2Joint.e_atUpperLimit;\r\n      }\r\n      if (length1 < this.m_maxLength1) {\r\n         this.m_limitState1 = b2Joint.e_inactiveLimit;\r\n         this.m_limitImpulse1 = 0.0;\r\n      }\r\n      else {\r\n         this.m_limitState1 = b2Joint.e_atUpperLimit;\r\n      }\r\n      if (length2 < this.m_maxLength2) {\r\n         this.m_limitState2 = b2Joint.e_inactiveLimit;\r\n         this.m_limitImpulse2 = 0.0;\r\n      }\r\n      else {\r\n         this.m_limitState2 = b2Joint.e_atUpperLimit;\r\n      }\r\n      var cr1u1 = r1X * this.m_u1.y - r1Y * this.m_u1.x;\r\n      var cr2u2 = r2X * this.m_u2.y - r2Y * this.m_u2.x;\r\n      this.m_limitMass1 = bA.m_invMass + bA.m_invI * cr1u1 * cr1u1;\r\n      this.m_limitMass2 = bB.m_invMass + bB.m_invI * cr2u2 * cr2u2;\r\n      this.m_pulleyMass = this.m_limitMass1 + this.m_ratio * this.m_ratio * this.m_limitMass2;\r\n      this.m_limitMass1 = 1.0 / this.m_limitMass1;\r\n      this.m_limitMass2 = 1.0 / this.m_limitMass2;\r\n      this.m_pulleyMass = 1.0 / this.m_pulleyMass;\r\n      if (step.warmStarting) {\r\n         this.m_impulse *= step.dtRatio;\r\n         this.m_limitImpulse1 *= step.dtRatio;\r\n         this.m_limitImpulse2 *= step.dtRatio;\r\n         var P1X = ((-this.m_impulse) - this.m_limitImpulse1) * this.m_u1.x;\r\n         var P1Y = ((-this.m_impulse) - this.m_limitImpulse1) * this.m_u1.y;\r\n         var P2X = ((-this.m_ratio * this.m_impulse) - this.m_limitImpulse2) * this.m_u2.x;\r\n         var P2Y = ((-this.m_ratio * this.m_impulse) - this.m_limitImpulse2) * this.m_u2.y;\r\n         bA.m_linearVelocity.x += bA.m_invMass * P1X;\r\n         bA.m_linearVelocity.y += bA.m_invMass * P1Y;\r\n         bA.m_angularVelocity += bA.m_invI * (r1X * P1Y - r1Y * P1X);\r\n         bB.m_linearVelocity.x += bB.m_invMass * P2X;\r\n         bB.m_linearVelocity.y += bB.m_invMass * P2Y;\r\n         bB.m_angularVelocity += bB.m_invI * (r2X * P2Y - r2Y * P2X);\r\n      }\r\n      else {\r\n         this.m_impulse = 0.0;\r\n         this.m_limitImpulse1 = 0.0;\r\n         this.m_limitImpulse2 = 0.0;\r\n      }\r\n   }\r\n   b2PulleyJoint.prototype.SolveVelocityConstraints = function (step) {\r\n      var bA = this.m_bodyA;\r\n      var bB = this.m_bodyB;\r\n      var tMat;\r\n      tMat = bA.m_xf.R;\r\n      var r1X = this.m_localAnchor1.x - bA.m_sweep.localCenter.x;\r\n      var r1Y = this.m_localAnchor1.y - bA.m_sweep.localCenter.y;\r\n      var tX = (tMat.col1.x * r1X + tMat.col2.x * r1Y);\r\n      r1Y = (tMat.col1.y * r1X + tMat.col2.y * r1Y);\r\n      r1X = tX;\r\n      tMat = bB.m_xf.R;\r\n      var r2X = this.m_localAnchor2.x - bB.m_sweep.localCenter.x;\r\n      var r2Y = this.m_localAnchor2.y - bB.m_sweep.localCenter.y;\r\n      tX = (tMat.col1.x * r2X + tMat.col2.x * r2Y);\r\n      r2Y = (tMat.col1.y * r2X + tMat.col2.y * r2Y);\r\n      r2X = tX;\r\n      var v1X = 0;\r\n      var v1Y = 0;\r\n      var v2X = 0;\r\n      var v2Y = 0;\r\n      var P1X = 0;\r\n      var P1Y = 0;\r\n      var P2X = 0;\r\n      var P2Y = 0;\r\n      var Cdot = 0;\r\n      var impulse = 0;\r\n      var oldImpulse = 0;\r\n      if (this.m_state == b2Joint.e_atUpperLimit) {\r\n         v1X = bA.m_linearVelocity.x + ((-bA.m_angularVelocity * r1Y));\r\n         v1Y = bA.m_linearVelocity.y + (bA.m_angularVelocity * r1X);\r\n         v2X = bB.m_linearVelocity.x + ((-bB.m_angularVelocity * r2Y));\r\n         v2Y = bB.m_linearVelocity.y + (bB.m_angularVelocity * r2X);\r\n         Cdot = (-(this.m_u1.x * v1X + this.m_u1.y * v1Y)) - this.m_ratio * (this.m_u2.x * v2X + this.m_u2.y * v2Y);\r\n         impulse = this.m_pulleyMass * ((-Cdot));\r\n         oldImpulse = this.m_impulse;\r\n         this.m_impulse = b2Math.Max(0.0, this.m_impulse + impulse);\r\n         impulse = this.m_impulse - oldImpulse;\r\n         P1X = (-impulse * this.m_u1.x);\r\n         P1Y = (-impulse * this.m_u1.y);\r\n         P2X = (-this.m_ratio * impulse * this.m_u2.x);\r\n         P2Y = (-this.m_ratio * impulse * this.m_u2.y);\r\n         bA.m_linearVelocity.x += bA.m_invMass * P1X;\r\n         bA.m_linearVelocity.y += bA.m_invMass * P1Y;\r\n         bA.m_angularVelocity += bA.m_invI * (r1X * P1Y - r1Y * P1X);\r\n         bB.m_linearVelocity.x += bB.m_invMass * P2X;\r\n         bB.m_linearVelocity.y += bB.m_invMass * P2Y;\r\n         bB.m_angularVelocity += bB.m_invI * (r2X * P2Y - r2Y * P2X);\r\n      }\r\n      if (this.m_limitState1 == b2Joint.e_atUpperLimit) {\r\n         v1X = bA.m_linearVelocity.x + ((-bA.m_angularVelocity * r1Y));\r\n         v1Y = bA.m_linearVelocity.y + (bA.m_angularVelocity * r1X);\r\n         Cdot = (-(this.m_u1.x * v1X + this.m_u1.y * v1Y));\r\n         impulse = (-this.m_limitMass1 * Cdot);\r\n         oldImpulse = this.m_limitImpulse1;\r\n         this.m_limitImpulse1 = b2Math.Max(0.0, this.m_limitImpulse1 + impulse);\r\n         impulse = this.m_limitImpulse1 - oldImpulse;\r\n         P1X = (-impulse * this.m_u1.x);\r\n         P1Y = (-impulse * this.m_u1.y);\r\n         bA.m_linearVelocity.x += bA.m_invMass * P1X;\r\n         bA.m_linearVelocity.y += bA.m_invMass * P1Y;\r\n         bA.m_angularVelocity += bA.m_invI * (r1X * P1Y - r1Y * P1X);\r\n      }\r\n      if (this.m_limitState2 == b2Joint.e_atUpperLimit) {\r\n         v2X = bB.m_linearVelocity.x + ((-bB.m_angularVelocity * r2Y));\r\n         v2Y = bB.m_linearVelocity.y + (bB.m_angularVelocity * r2X);\r\n         Cdot = (-(this.m_u2.x * v2X + this.m_u2.y * v2Y));\r\n         impulse = (-this.m_limitMass2 * Cdot);\r\n         oldImpulse = this.m_limitImpulse2;\r\n         this.m_limitImpulse2 = b2Math.Max(0.0, this.m_limitImpulse2 + impulse);\r\n         impulse = this.m_limitImpulse2 - oldImpulse;\r\n         P2X = (-impulse * this.m_u2.x);\r\n         P2Y = (-impulse * this.m_u2.y);\r\n         bB.m_linearVelocity.x += bB.m_invMass * P2X;\r\n         bB.m_linearVelocity.y += bB.m_invMass * P2Y;\r\n         bB.m_angularVelocity += bB.m_invI * (r2X * P2Y - r2Y * P2X);\r\n      }\r\n   }\r\n   b2PulleyJoint.prototype.SolvePositionConstraints = function (baumgarte) {\r\n      if (baumgarte === undefined) baumgarte = 0;\r\n      var bA = this.m_bodyA;\r\n      var bB = this.m_bodyB;\r\n      var tMat;\r\n      var s1X = this.m_ground.m_xf.position.x + this.m_groundAnchor1.x;\r\n      var s1Y = this.m_ground.m_xf.position.y + this.m_groundAnchor1.y;\r\n      var s2X = this.m_ground.m_xf.position.x + this.m_groundAnchor2.x;\r\n      var s2Y = this.m_ground.m_xf.position.y + this.m_groundAnchor2.y;\r\n      var r1X = 0;\r\n      var r1Y = 0;\r\n      var r2X = 0;\r\n      var r2Y = 0;\r\n      var p1X = 0;\r\n      var p1Y = 0;\r\n      var p2X = 0;\r\n      var p2Y = 0;\r\n      var length1 = 0;\r\n      var length2 = 0;\r\n      var C = 0;\r\n      var impulse = 0;\r\n      var oldImpulse = 0;\r\n      var oldLimitPositionImpulse = 0;\r\n      var tX = 0;\r\n      var linearError = 0.0;\r\n      if (this.m_state == b2Joint.e_atUpperLimit) {\r\n         tMat = bA.m_xf.R;\r\n         r1X = this.m_localAnchor1.x - bA.m_sweep.localCenter.x;\r\n         r1Y = this.m_localAnchor1.y - bA.m_sweep.localCenter.y;\r\n         tX = (tMat.col1.x * r1X + tMat.col2.x * r1Y);\r\n         r1Y = (tMat.col1.y * r1X + tMat.col2.y * r1Y);\r\n         r1X = tX;\r\n         tMat = bB.m_xf.R;\r\n         r2X = this.m_localAnchor2.x - bB.m_sweep.localCenter.x;\r\n         r2Y = this.m_localAnchor2.y - bB.m_sweep.localCenter.y;\r\n         tX = (tMat.col1.x * r2X + tMat.col2.x * r2Y);\r\n         r2Y = (tMat.col1.y * r2X + tMat.col2.y * r2Y);\r\n         r2X = tX;\r\n         p1X = bA.m_sweep.c.x + r1X;\r\n         p1Y = bA.m_sweep.c.y + r1Y;\r\n         p2X = bB.m_sweep.c.x + r2X;\r\n         p2Y = bB.m_sweep.c.y + r2Y;\r\n         this.m_u1.Set(p1X - s1X, p1Y - s1Y);\r\n         this.m_u2.Set(p2X - s2X, p2Y - s2Y);\r\n         length1 = this.m_u1.Length();\r\n         length2 = this.m_u2.Length();\r\n         if (length1 > b2Settings.b2_linearSlop) {\r\n            this.m_u1.Multiply(1.0 / length1);\r\n         }\r\n         else {\r\n            this.m_u1.SetZero();\r\n         }\r\n         if (length2 > b2Settings.b2_linearSlop) {\r\n            this.m_u2.Multiply(1.0 / length2);\r\n         }\r\n         else {\r\n            this.m_u2.SetZero();\r\n         }\r\n         C = this.m_constant - length1 - this.m_ratio * length2;\r\n         linearError = b2Math.Max(linearError, (-C));\r\n         C = b2Math.Clamp(C + b2Settings.b2_linearSlop, (-b2Settings.b2_maxLinearCorrection), 0.0);\r\n         impulse = (-this.m_pulleyMass * C);\r\n         p1X = (-impulse * this.m_u1.x);\r\n         p1Y = (-impulse * this.m_u1.y);\r\n         p2X = (-this.m_ratio * impulse * this.m_u2.x);\r\n         p2Y = (-this.m_ratio * impulse * this.m_u2.y);\r\n         bA.m_sweep.c.x += bA.m_invMass * p1X;\r\n         bA.m_sweep.c.y += bA.m_invMass * p1Y;\r\n         bA.m_sweep.a += bA.m_invI * (r1X * p1Y - r1Y * p1X);\r\n         bB.m_sweep.c.x += bB.m_invMass * p2X;\r\n         bB.m_sweep.c.y += bB.m_invMass * p2Y;\r\n         bB.m_sweep.a += bB.m_invI * (r2X * p2Y - r2Y * p2X);\r\n         bA.SynchronizeTransform();\r\n         bB.SynchronizeTransform();\r\n      }\r\n      if (this.m_limitState1 == b2Joint.e_atUpperLimit) {\r\n         tMat = bA.m_xf.R;\r\n         r1X = this.m_localAnchor1.x - bA.m_sweep.localCenter.x;\r\n         r1Y = this.m_localAnchor1.y - bA.m_sweep.localCenter.y;\r\n         tX = (tMat.col1.x * r1X + tMat.col2.x * r1Y);\r\n         r1Y = (tMat.col1.y * r1X + tMat.col2.y * r1Y);\r\n         r1X = tX;\r\n         p1X = bA.m_sweep.c.x + r1X;\r\n         p1Y = bA.m_sweep.c.y + r1Y;\r\n         this.m_u1.Set(p1X - s1X, p1Y - s1Y);\r\n         length1 = this.m_u1.Length();\r\n         if (length1 > b2Settings.b2_linearSlop) {\r\n            this.m_u1.x *= 1.0 / length1;\r\n            this.m_u1.y *= 1.0 / length1;\r\n         }\r\n         else {\r\n            this.m_u1.SetZero();\r\n         }\r\n         C = this.m_maxLength1 - length1;\r\n         linearError = b2Math.Max(linearError, (-C));\r\n         C = b2Math.Clamp(C + b2Settings.b2_linearSlop, (-b2Settings.b2_maxLinearCorrection), 0.0);\r\n         impulse = (-this.m_limitMass1 * C);\r\n         p1X = (-impulse * this.m_u1.x);\r\n         p1Y = (-impulse * this.m_u1.y);\r\n         bA.m_sweep.c.x += bA.m_invMass * p1X;\r\n         bA.m_sweep.c.y += bA.m_invMass * p1Y;\r\n         bA.m_sweep.a += bA.m_invI * (r1X * p1Y - r1Y * p1X);\r\n         bA.SynchronizeTransform();\r\n      }\r\n      if (this.m_limitState2 == b2Joint.e_atUpperLimit) {\r\n         tMat = bB.m_xf.R;\r\n         r2X = this.m_localAnchor2.x - bB.m_sweep.localCenter.x;\r\n         r2Y = this.m_localAnchor2.y - bB.m_sweep.localCenter.y;\r\n         tX = (tMat.col1.x * r2X + tMat.col2.x * r2Y);\r\n         r2Y = (tMat.col1.y * r2X + tMat.col2.y * r2Y);\r\n         r2X = tX;\r\n         p2X = bB.m_sweep.c.x + r2X;\r\n         p2Y = bB.m_sweep.c.y + r2Y;\r\n         this.m_u2.Set(p2X - s2X, p2Y - s2Y);\r\n         length2 = this.m_u2.Length();\r\n         if (length2 > b2Settings.b2_linearSlop) {\r\n            this.m_u2.x *= 1.0 / length2;\r\n            this.m_u2.y *= 1.0 / length2;\r\n         }\r\n         else {\r\n            this.m_u2.SetZero();\r\n         }\r\n         C = this.m_maxLength2 - length2;\r\n         linearError = b2Math.Max(linearError, (-C));\r\n         C = b2Math.Clamp(C + b2Settings.b2_linearSlop, (-b2Settings.b2_maxLinearCorrection), 0.0);\r\n         impulse = (-this.m_limitMass2 * C);\r\n         p2X = (-impulse * this.m_u2.x);\r\n         p2Y = (-impulse * this.m_u2.y);\r\n         bB.m_sweep.c.x += bB.m_invMass * p2X;\r\n         bB.m_sweep.c.y += bB.m_invMass * p2Y;\r\n         bB.m_sweep.a += bB.m_invI * (r2X * p2Y - r2Y * p2X);\r\n         bB.SynchronizeTransform();\r\n      }\r\n      return linearError < b2Settings.b2_linearSlop;\r\n   }\r\n   Box2D.postDefs.push(function () {\r\n      Box2D.Dynamics.Joints.b2PulleyJoint.b2_minPulleyLength = 2.0;\r\n   });\r\n   Box2D.inherit(b2PulleyJointDef, Box2D.Dynamics.Joints.b2JointDef);\r\n   b2PulleyJointDef.prototype.__super = Box2D.Dynamics.Joints.b2JointDef.prototype;\r\n   b2PulleyJointDef.b2PulleyJointDef = function () {\r\n      Box2D.Dynamics.Joints.b2JointDef.b2JointDef.apply(this, arguments);\r\n      this.groundAnchorA = new b2Vec2();\r\n      this.groundAnchorB = new b2Vec2();\r\n      this.localAnchorA = new b2Vec2();\r\n      this.localAnchorB = new b2Vec2();\r\n   };\r\n   b2PulleyJointDef.prototype.b2PulleyJointDef = function () {\r\n      this.__super.b2JointDef.call(this);\r\n      this.type = b2Joint.e_pulleyJoint;\r\n      this.groundAnchorA.Set((-1.0), 1.0);\r\n      this.groundAnchorB.Set(1.0, 1.0);\r\n      this.localAnchorA.Set((-1.0), 0.0);\r\n      this.localAnchorB.Set(1.0, 0.0);\r\n      this.lengthA = 0.0;\r\n      this.maxLengthA = 0.0;\r\n      this.lengthB = 0.0;\r\n      this.maxLengthB = 0.0;\r\n      this.ratio = 1.0;\r\n      this.collideConnected = true;\r\n   }\r\n   b2PulleyJointDef.prototype.Initialize = function (bA, bB, gaA, gaB, anchorA, anchorB, r) {\r\n      if (r === undefined) r = 0;\r\n      this.bodyA = bA;\r\n      this.bodyB = bB;\r\n      this.groundAnchorA.SetV(gaA);\r\n      this.groundAnchorB.SetV(gaB);\r\n      this.localAnchorA = this.bodyA.GetLocalPoint(anchorA);\r\n      this.localAnchorB = this.bodyB.GetLocalPoint(anchorB);\r\n      var d1X = anchorA.x - gaA.x;\r\n      var d1Y = anchorA.y - gaA.y;\r\n      this.lengthA = Math.sqrt(d1X * d1X + d1Y * d1Y);\r\n      var d2X = anchorB.x - gaB.x;\r\n      var d2Y = anchorB.y - gaB.y;\r\n      this.lengthB = Math.sqrt(d2X * d2X + d2Y * d2Y);\r\n      this.ratio = r;\r\n      var C = this.lengthA + this.ratio * this.lengthB;\r\n      this.maxLengthA = C - this.ratio * b2PulleyJoint.b2_minPulleyLength;\r\n      this.maxLengthB = (C - b2PulleyJoint.b2_minPulleyLength) / this.ratio;\r\n   }\r\n   Box2D.inherit(b2RevoluteJoint, Box2D.Dynamics.Joints.b2Joint);\r\n   b2RevoluteJoint.prototype.__super = Box2D.Dynamics.Joints.b2Joint.prototype;\r\n   b2RevoluteJoint.b2RevoluteJoint = function () {\r\n      Box2D.Dynamics.Joints.b2Joint.b2Joint.apply(this, arguments);\r\n      this.K = new b2Mat22();\r\n      this.K1 = new b2Mat22();\r\n      this.K2 = new b2Mat22();\r\n      this.K3 = new b2Mat22();\r\n      this.impulse3 = new b2Vec3();\r\n      this.impulse2 = new b2Vec2();\r\n      this.reduced = new b2Vec2();\r\n      this.m_localAnchor1 = new b2Vec2();\r\n      this.m_localAnchor2 = new b2Vec2();\r\n      this.m_impulse = new b2Vec3();\r\n      this.m_mass = new b2Mat33();\r\n   };\r\n   b2RevoluteJoint.prototype.GetAnchorA = function () {\r\n      return this.m_bodyA.GetWorldPoint(this.m_localAnchor1);\r\n   }\r\n   b2RevoluteJoint.prototype.GetAnchorB = function () {\r\n      return this.m_bodyB.GetWorldPoint(this.m_localAnchor2);\r\n   }\r\n   b2RevoluteJoint.prototype.GetReactionForce = function (inv_dt) {\r\n      if (inv_dt === undefined) inv_dt = 0;\r\n      return new b2Vec2(inv_dt * this.m_impulse.x, inv_dt * this.m_impulse.y);\r\n   }\r\n   b2RevoluteJoint.prototype.GetReactionTorque = function (inv_dt) {\r\n      if (inv_dt === undefined) inv_dt = 0;\r\n      return inv_dt * this.m_impulse.z;\r\n   }\r\n   b2RevoluteJoint.prototype.GetJointAngle = function () {\r\n      return this.m_bodyB.m_sweep.a - this.m_bodyA.m_sweep.a - this.m_referenceAngle;\r\n   }\r\n   b2RevoluteJoint.prototype.GetJointSpeed = function () {\r\n      return this.m_bodyB.m_angularVelocity - this.m_bodyA.m_angularVelocity;\r\n   }\r\n   b2RevoluteJoint.prototype.IsLimitEnabled = function () {\r\n      return this.m_enableLimit;\r\n   }\r\n   b2RevoluteJoint.prototype.EnableLimit = function (flag) {\r\n      this.m_enableLimit = flag;\r\n   }\r\n   b2RevoluteJoint.prototype.GetLowerLimit = function () {\r\n      return this.m_lowerAngle;\r\n   }\r\n   b2RevoluteJoint.prototype.GetUpperLimit = function () {\r\n      return this.m_upperAngle;\r\n   }\r\n   b2RevoluteJoint.prototype.SetLimits = function (lower, upper) {\r\n      if (lower === undefined) lower = 0;\r\n      if (upper === undefined) upper = 0;\r\n      this.m_lowerAngle = lower;\r\n      this.m_upperAngle = upper;\r\n   }\r\n   b2RevoluteJoint.prototype.IsMotorEnabled = function () {\r\n      this.m_bodyA.SetAwake(true);\r\n      this.m_bodyB.SetAwake(true);\r\n      return this.m_enableMotor;\r\n   }\r\n   b2RevoluteJoint.prototype.EnableMotor = function (flag) {\r\n      this.m_enableMotor = flag;\r\n   }\r\n   b2RevoluteJoint.prototype.SetMotorSpeed = function (speed) {\r\n      if (speed === undefined) speed = 0;\r\n      this.m_bodyA.SetAwake(true);\r\n      this.m_bodyB.SetAwake(true);\r\n      this.m_motorSpeed = speed;\r\n   }\r\n   b2RevoluteJoint.prototype.GetMotorSpeed = function () {\r\n      return this.m_motorSpeed;\r\n   }\r\n   b2RevoluteJoint.prototype.SetMaxMotorTorque = function (torque) {\r\n      if (torque === undefined) torque = 0;\r\n      this.m_maxMotorTorque = torque;\r\n   }\r\n   b2RevoluteJoint.prototype.GetMotorTorque = function () {\r\n      return this.m_maxMotorTorque;\r\n   }\r\n   b2RevoluteJoint.prototype.b2RevoluteJoint = function (def) {\r\n      this.__super.b2Joint.call(this, def);\r\n      this.m_localAnchor1.SetV(def.localAnchorA);\r\n      this.m_localAnchor2.SetV(def.localAnchorB);\r\n      this.m_referenceAngle = def.referenceAngle;\r\n      this.m_impulse.SetZero();\r\n      this.m_motorImpulse = 0.0;\r\n      this.m_lowerAngle = def.lowerAngle;\r\n      this.m_upperAngle = def.upperAngle;\r\n      this.m_maxMotorTorque = def.maxMotorTorque;\r\n      this.m_motorSpeed = def.motorSpeed;\r\n      this.m_enableLimit = def.enableLimit;\r\n      this.m_enableMotor = def.enableMotor;\r\n      this.m_limitState = b2Joint.e_inactiveLimit;\r\n   }\r\n   b2RevoluteJoint.prototype.InitVelocityConstraints = function (step) {\r\n      var bA = this.m_bodyA;\r\n      var bB = this.m_bodyB;\r\n      var tMat;\r\n      var tX = 0;\r\n      if (this.m_enableMotor || this.m_enableLimit) {}\r\n      tMat = bA.m_xf.R;\r\n      var r1X = this.m_localAnchor1.x - bA.m_sweep.localCenter.x;\r\n      var r1Y = this.m_localAnchor1.y - bA.m_sweep.localCenter.y;\r\n      tX = (tMat.col1.x * r1X + tMat.col2.x * r1Y);\r\n      r1Y = (tMat.col1.y * r1X + tMat.col2.y * r1Y);\r\n      r1X = tX;\r\n      tMat = bB.m_xf.R;\r\n      var r2X = this.m_localAnchor2.x - bB.m_sweep.localCenter.x;\r\n      var r2Y = this.m_localAnchor2.y - bB.m_sweep.localCenter.y;\r\n      tX = (tMat.col1.x * r2X + tMat.col2.x * r2Y);\r\n      r2Y = (tMat.col1.y * r2X + tMat.col2.y * r2Y);\r\n      r2X = tX;\r\n      var m1 = bA.m_invMass;\r\n      var m2 = bB.m_invMass;\r\n      var i1 = bA.m_invI;\r\n      var i2 = bB.m_invI;\r\n      this.m_mass.col1.x = m1 + m2 + r1Y * r1Y * i1 + r2Y * r2Y * i2;\r\n      this.m_mass.col2.x = (-r1Y * r1X * i1) - r2Y * r2X * i2;\r\n      this.m_mass.col3.x = (-r1Y * i1) - r2Y * i2;\r\n      this.m_mass.col1.y = this.m_mass.col2.x;\r\n      this.m_mass.col2.y = m1 + m2 + r1X * r1X * i1 + r2X * r2X * i2;\r\n      this.m_mass.col3.y = r1X * i1 + r2X * i2;\r\n      this.m_mass.col1.z = this.m_mass.col3.x;\r\n      this.m_mass.col2.z = this.m_mass.col3.y;\r\n      this.m_mass.col3.z = i1 + i2;\r\n      this.m_motorMass = 1.0 / (i1 + i2);\r\n      if (this.m_enableMotor == false) {\r\n         this.m_motorImpulse = 0.0;\r\n      }\r\n      if (this.m_enableLimit) {\r\n         var jointAngle = bB.m_sweep.a - bA.m_sweep.a - this.m_referenceAngle;\r\n         if (b2Math.Abs(this.m_upperAngle - this.m_lowerAngle) < 2.0 * b2Settings.b2_angularSlop) {\r\n            this.m_limitState = b2Joint.e_equalLimits;\r\n         }\r\n         else if (jointAngle <= this.m_lowerAngle) {\r\n            if (this.m_limitState != b2Joint.e_atLowerLimit) {\r\n               this.m_impulse.z = 0.0;\r\n            }\r\n            this.m_limitState = b2Joint.e_atLowerLimit;\r\n         }\r\n         else if (jointAngle >= this.m_upperAngle) {\r\n            if (this.m_limitState != b2Joint.e_atUpperLimit) {\r\n               this.m_impulse.z = 0.0;\r\n            }\r\n            this.m_limitState = b2Joint.e_atUpperLimit;\r\n         }\r\n         else {\r\n            this.m_limitState = b2Joint.e_inactiveLimit;\r\n            this.m_impulse.z = 0.0;\r\n         }\r\n      }\r\n      else {\r\n         this.m_limitState = b2Joint.e_inactiveLimit;\r\n      }\r\n      if (step.warmStarting) {\r\n         this.m_impulse.x *= step.dtRatio;\r\n         this.m_impulse.y *= step.dtRatio;\r\n         this.m_motorImpulse *= step.dtRatio;\r\n         var PX = this.m_impulse.x;\r\n         var PY = this.m_impulse.y;\r\n         bA.m_linearVelocity.x -= m1 * PX;\r\n         bA.m_linearVelocity.y -= m1 * PY;\r\n         bA.m_angularVelocity -= i1 * ((r1X * PY - r1Y * PX) + this.m_motorImpulse + this.m_impulse.z);\r\n         bB.m_linearVelocity.x += m2 * PX;\r\n         bB.m_linearVelocity.y += m2 * PY;\r\n         bB.m_angularVelocity += i2 * ((r2X * PY - r2Y * PX) + this.m_motorImpulse + this.m_impulse.z);\r\n      }\r\n      else {\r\n         this.m_impulse.SetZero();\r\n         this.m_motorImpulse = 0.0;\r\n      }\r\n   }\r\n   b2RevoluteJoint.prototype.SolveVelocityConstraints = function (step) {\r\n      var bA = this.m_bodyA;\r\n      var bB = this.m_bodyB;\r\n      var tMat;\r\n      var tX = 0;\r\n      var newImpulse = 0;\r\n      var r1X = 0;\r\n      var r1Y = 0;\r\n      var r2X = 0;\r\n      var r2Y = 0;\r\n      var v1 = bA.m_linearVelocity;\r\n      var w1 = bA.m_angularVelocity;\r\n      var v2 = bB.m_linearVelocity;\r\n      var w2 = bB.m_angularVelocity;\r\n      var m1 = bA.m_invMass;\r\n      var m2 = bB.m_invMass;\r\n      var i1 = bA.m_invI;\r\n      var i2 = bB.m_invI;\r\n      if (this.m_enableMotor && this.m_limitState != b2Joint.e_equalLimits) {\r\n         var Cdot = w2 - w1 - this.m_motorSpeed;\r\n         var impulse = this.m_motorMass * ((-Cdot));\r\n         var oldImpulse = this.m_motorImpulse;\r\n         var maxImpulse = step.dt * this.m_maxMotorTorque;\r\n         this.m_motorImpulse = b2Math.Clamp(this.m_motorImpulse + impulse, (-maxImpulse), maxImpulse);\r\n         impulse = this.m_motorImpulse - oldImpulse;\r\n         w1 -= i1 * impulse;\r\n         w2 += i2 * impulse;\r\n      }\r\n      if (this.m_enableLimit && this.m_limitState != b2Joint.e_inactiveLimit) {\r\n         tMat = bA.m_xf.R;\r\n         r1X = this.m_localAnchor1.x - bA.m_sweep.localCenter.x;\r\n         r1Y = this.m_localAnchor1.y - bA.m_sweep.localCenter.y;\r\n         tX = (tMat.col1.x * r1X + tMat.col2.x * r1Y);\r\n         r1Y = (tMat.col1.y * r1X + tMat.col2.y * r1Y);\r\n         r1X = tX;\r\n         tMat = bB.m_xf.R;\r\n         r2X = this.m_localAnchor2.x - bB.m_sweep.localCenter.x;\r\n         r2Y = this.m_localAnchor2.y - bB.m_sweep.localCenter.y;\r\n         tX = (tMat.col1.x * r2X + tMat.col2.x * r2Y);\r\n         r2Y = (tMat.col1.y * r2X + tMat.col2.y * r2Y);\r\n         r2X = tX;\r\n         var Cdot1X = v2.x + ((-w2 * r2Y)) - v1.x - ((-w1 * r1Y));\r\n         var Cdot1Y = v2.y + (w2 * r2X) - v1.y - (w1 * r1X);\r\n         var Cdot2 = w2 - w1;\r\n         this.m_mass.Solve33(this.impulse3, (-Cdot1X), (-Cdot1Y), (-Cdot2));\r\n         if (this.m_limitState == b2Joint.e_equalLimits) {\r\n            this.m_impulse.Add(this.impulse3);\r\n         }\r\n         else if (this.m_limitState == b2Joint.e_atLowerLimit) {\r\n            newImpulse = this.m_impulse.z + this.impulse3.z;\r\n            if (newImpulse < 0.0) {\r\n               this.m_mass.Solve22(this.reduced, (-Cdot1X), (-Cdot1Y));\r\n               this.impulse3.x = this.reduced.x;\r\n               this.impulse3.y = this.reduced.y;\r\n               this.impulse3.z = (-this.m_impulse.z);\r\n               this.m_impulse.x += this.reduced.x;\r\n               this.m_impulse.y += this.reduced.y;\r\n               this.m_impulse.z = 0.0;\r\n            }\r\n         }\r\n         else if (this.m_limitState == b2Joint.e_atUpperLimit) {\r\n            newImpulse = this.m_impulse.z + this.impulse3.z;\r\n            if (newImpulse > 0.0) {\r\n               this.m_mass.Solve22(this.reduced, (-Cdot1X), (-Cdot1Y));\r\n               this.impulse3.x = this.reduced.x;\r\n               this.impulse3.y = this.reduced.y;\r\n               this.impulse3.z = (-this.m_impulse.z);\r\n               this.m_impulse.x += this.reduced.x;\r\n               this.m_impulse.y += this.reduced.y;\r\n               this.m_impulse.z = 0.0;\r\n            }\r\n         }\r\n         v1.x -= m1 * this.impulse3.x;\r\n         v1.y -= m1 * this.impulse3.y;\r\n         w1 -= i1 * (r1X * this.impulse3.y - r1Y * this.impulse3.x + this.impulse3.z);\r\n         v2.x += m2 * this.impulse3.x;\r\n         v2.y += m2 * this.impulse3.y;\r\n         w2 += i2 * (r2X * this.impulse3.y - r2Y * this.impulse3.x + this.impulse3.z);\r\n      }\r\n      else {\r\n         tMat = bA.m_xf.R;\r\n         r1X = this.m_localAnchor1.x - bA.m_sweep.localCenter.x;\r\n         r1Y = this.m_localAnchor1.y - bA.m_sweep.localCenter.y;\r\n         tX = (tMat.col1.x * r1X + tMat.col2.x * r1Y);\r\n         r1Y = (tMat.col1.y * r1X + tMat.col2.y * r1Y);\r\n         r1X = tX;\r\n         tMat = bB.m_xf.R;\r\n         r2X = this.m_localAnchor2.x - bB.m_sweep.localCenter.x;\r\n         r2Y = this.m_localAnchor2.y - bB.m_sweep.localCenter.y;\r\n         tX = (tMat.col1.x * r2X + tMat.col2.x * r2Y);\r\n         r2Y = (tMat.col1.y * r2X + tMat.col2.y * r2Y);\r\n         r2X = tX;\r\n         var CdotX = v2.x + ((-w2 * r2Y)) - v1.x - ((-w1 * r1Y));\r\n         var CdotY = v2.y + (w2 * r2X) - v1.y - (w1 * r1X);\r\n         this.m_mass.Solve22(this.impulse2, (-CdotX), (-CdotY));\r\n         this.m_impulse.x += this.impulse2.x;\r\n         this.m_impulse.y += this.impulse2.y;\r\n         v1.x -= m1 * this.impulse2.x;\r\n         v1.y -= m1 * this.impulse2.y;\r\n         w1 -= i1 * (r1X * this.impulse2.y - r1Y * this.impulse2.x);\r\n         v2.x += m2 * this.impulse2.x;\r\n         v2.y += m2 * this.impulse2.y;\r\n         w2 += i2 * (r2X * this.impulse2.y - r2Y * this.impulse2.x);\r\n      }\r\n      bA.m_linearVelocity.SetV(v1);\r\n      bA.m_angularVelocity = w1;\r\n      bB.m_linearVelocity.SetV(v2);\r\n      bB.m_angularVelocity = w2;\r\n   }\r\n   b2RevoluteJoint.prototype.SolvePositionConstraints = function (baumgarte) {\r\n      if (baumgarte === undefined) baumgarte = 0;\r\n      var oldLimitImpulse = 0;\r\n      var C = 0;\r\n      var tMat;\r\n      var bA = this.m_bodyA;\r\n      var bB = this.m_bodyB;\r\n      var angularError = 0.0;\r\n      var positionError = 0.0;\r\n      var tX = 0;\r\n      var impulseX = 0;\r\n      var impulseY = 0;\r\n      if (this.m_enableLimit && this.m_limitState != b2Joint.e_inactiveLimit) {\r\n         var angle = bB.m_sweep.a - bA.m_sweep.a - this.m_referenceAngle;\r\n         var limitImpulse = 0.0;\r\n         if (this.m_limitState == b2Joint.e_equalLimits) {\r\n            C = b2Math.Clamp(angle - this.m_lowerAngle, (-b2Settings.b2_maxAngularCorrection), b2Settings.b2_maxAngularCorrection);\r\n            limitImpulse = (-this.m_motorMass * C);\r\n            angularError = b2Math.Abs(C);\r\n         }\r\n         else if (this.m_limitState == b2Joint.e_atLowerLimit) {\r\n            C = angle - this.m_lowerAngle;\r\n            angularError = (-C);\r\n            C = b2Math.Clamp(C + b2Settings.b2_angularSlop, (-b2Settings.b2_maxAngularCorrection), 0.0);\r\n            limitImpulse = (-this.m_motorMass * C);\r\n         }\r\n         else if (this.m_limitState == b2Joint.e_atUpperLimit) {\r\n            C = angle - this.m_upperAngle;\r\n            angularError = C;\r\n            C = b2Math.Clamp(C - b2Settings.b2_angularSlop, 0.0, b2Settings.b2_maxAngularCorrection);\r\n            limitImpulse = (-this.m_motorMass * C);\r\n         }\r\n         bA.m_sweep.a -= bA.m_invI * limitImpulse;\r\n         bB.m_sweep.a += bB.m_invI * limitImpulse;\r\n         bA.SynchronizeTransform();\r\n         bB.SynchronizeTransform();\r\n      } {\r\n         tMat = bA.m_xf.R;\r\n         var r1X = this.m_localAnchor1.x - bA.m_sweep.localCenter.x;\r\n         var r1Y = this.m_localAnchor1.y - bA.m_sweep.localCenter.y;\r\n         tX = (tMat.col1.x * r1X + tMat.col2.x * r1Y);\r\n         r1Y = (tMat.col1.y * r1X + tMat.col2.y * r1Y);\r\n         r1X = tX;\r\n         tMat = bB.m_xf.R;\r\n         var r2X = this.m_localAnchor2.x - bB.m_sweep.localCenter.x;\r\n         var r2Y = this.m_localAnchor2.y - bB.m_sweep.localCenter.y;\r\n         tX = (tMat.col1.x * r2X + tMat.col2.x * r2Y);\r\n         r2Y = (tMat.col1.y * r2X + tMat.col2.y * r2Y);\r\n         r2X = tX;\r\n         var CX = bB.m_sweep.c.x + r2X - bA.m_sweep.c.x - r1X;\r\n         var CY = bB.m_sweep.c.y + r2Y - bA.m_sweep.c.y - r1Y;\r\n         var CLengthSquared = CX * CX + CY * CY;\r\n         var CLength = Math.sqrt(CLengthSquared);\r\n         positionError = CLength;\r\n         var invMass1 = bA.m_invMass;\r\n         var invMass2 = bB.m_invMass;\r\n         var invI1 = bA.m_invI;\r\n         var invI2 = bB.m_invI;\r\n         var k_allowedStretch = 10.0 * b2Settings.b2_linearSlop;\r\n         if (CLengthSquared > k_allowedStretch * k_allowedStretch) {\r\n            var uX = CX / CLength;\r\n            var uY = CY / CLength;\r\n            var k = invMass1 + invMass2;\r\n            var m = 1.0 / k;\r\n            impulseX = m * ((-CX));\r\n            impulseY = m * ((-CY));\r\n            var k_beta = 0.5;\r\n            bA.m_sweep.c.x -= k_beta * invMass1 * impulseX;\r\n            bA.m_sweep.c.y -= k_beta * invMass1 * impulseY;\r\n            bB.m_sweep.c.x += k_beta * invMass2 * impulseX;\r\n            bB.m_sweep.c.y += k_beta * invMass2 * impulseY;\r\n            CX = bB.m_sweep.c.x + r2X - bA.m_sweep.c.x - r1X;\r\n            CY = bB.m_sweep.c.y + r2Y - bA.m_sweep.c.y - r1Y;\r\n         }\r\n         this.K1.col1.x = invMass1 + invMass2;\r\n         this.K1.col2.x = 0.0;\r\n         this.K1.col1.y = 0.0;\r\n         this.K1.col2.y = invMass1 + invMass2;\r\n         this.K2.col1.x = invI1 * r1Y * r1Y;\r\n         this.K2.col2.x = (-invI1 * r1X * r1Y);\r\n         this.K2.col1.y = (-invI1 * r1X * r1Y);\r\n         this.K2.col2.y = invI1 * r1X * r1X;\r\n         this.K3.col1.x = invI2 * r2Y * r2Y;\r\n         this.K3.col2.x = (-invI2 * r2X * r2Y);\r\n         this.K3.col1.y = (-invI2 * r2X * r2Y);\r\n         this.K3.col2.y = invI2 * r2X * r2X;\r\n         this.K.SetM(this.K1);\r\n         this.K.AddM(this.K2);\r\n         this.K.AddM(this.K3);\r\n         this.K.Solve(b2RevoluteJoint.tImpulse, (-CX), (-CY));\r\n         impulseX = b2RevoluteJoint.tImpulse.x;\r\n         impulseY = b2RevoluteJoint.tImpulse.y;\r\n         bA.m_sweep.c.x -= bA.m_invMass * impulseX;\r\n         bA.m_sweep.c.y -= bA.m_invMass * impulseY;\r\n         bA.m_sweep.a -= bA.m_invI * (r1X * impulseY - r1Y * impulseX);\r\n         bB.m_sweep.c.x += bB.m_invMass * impulseX;\r\n         bB.m_sweep.c.y += bB.m_invMass * impulseY;\r\n         bB.m_sweep.a += bB.m_invI * (r2X * impulseY - r2Y * impulseX);\r\n         bA.SynchronizeTransform();\r\n         bB.SynchronizeTransform();\r\n      }\r\n      return positionError <= b2Settings.b2_linearSlop && angularError <= b2Settings.b2_angularSlop;\r\n   }\r\n   Box2D.postDefs.push(function () {\r\n      Box2D.Dynamics.Joints.b2RevoluteJoint.tImpulse = new b2Vec2();\r\n   });\r\n   Box2D.inherit(b2RevoluteJointDef, Box2D.Dynamics.Joints.b2JointDef);\r\n   b2RevoluteJointDef.prototype.__super = Box2D.Dynamics.Joints.b2JointDef.prototype;\r\n   b2RevoluteJointDef.b2RevoluteJointDef = function () {\r\n      Box2D.Dynamics.Joints.b2JointDef.b2JointDef.apply(this, arguments);\r\n      this.localAnchorA = new b2Vec2();\r\n      this.localAnchorB = new b2Vec2();\r\n   };\r\n   b2RevoluteJointDef.prototype.b2RevoluteJointDef = function () {\r\n      this.__super.b2JointDef.call(this);\r\n      this.type = b2Joint.e_revoluteJoint;\r\n      this.localAnchorA.Set(0.0, 0.0);\r\n      this.localAnchorB.Set(0.0, 0.0);\r\n      this.referenceAngle = 0.0;\r\n      this.lowerAngle = 0.0;\r\n      this.upperAngle = 0.0;\r\n      this.maxMotorTorque = 0.0;\r\n      this.motorSpeed = 0.0;\r\n      this.enableLimit = false;\r\n      this.enableMotor = false;\r\n   }\r\n   b2RevoluteJointDef.prototype.Initialize = function (bA, bB, anchor) {\r\n      this.bodyA = bA;\r\n      this.bodyB = bB;\r\n      this.localAnchorA = this.bodyA.GetLocalPoint(anchor);\r\n      this.localAnchorB = this.bodyB.GetLocalPoint(anchor);\r\n      this.referenceAngle = this.bodyB.GetAngle() - this.bodyA.GetAngle();\r\n   }\r\n   Box2D.inherit(b2WeldJoint, Box2D.Dynamics.Joints.b2Joint);\r\n   b2WeldJoint.prototype.__super = Box2D.Dynamics.Joints.b2Joint.prototype;\r\n   b2WeldJoint.b2WeldJoint = function () {\r\n      Box2D.Dynamics.Joints.b2Joint.b2Joint.apply(this, arguments);\r\n      this.m_localAnchorA = new b2Vec2();\r\n      this.m_localAnchorB = new b2Vec2();\r\n      this.m_impulse = new b2Vec3();\r\n      this.m_mass = new b2Mat33();\r\n   };\r\n   b2WeldJoint.prototype.GetAnchorA = function () {\r\n      return this.m_bodyA.GetWorldPoint(this.m_localAnchorA);\r\n   }\r\n   b2WeldJoint.prototype.GetAnchorB = function () {\r\n      return this.m_bodyB.GetWorldPoint(this.m_localAnchorB);\r\n   }\r\n   b2WeldJoint.prototype.GetReactionForce = function (inv_dt) {\r\n      if (inv_dt === undefined) inv_dt = 0;\r\n      return new b2Vec2(inv_dt * this.m_impulse.x, inv_dt * this.m_impulse.y);\r\n   }\r\n   b2WeldJoint.prototype.GetReactionTorque = function (inv_dt) {\r\n      if (inv_dt === undefined) inv_dt = 0;\r\n      return inv_dt * this.m_impulse.z;\r\n   }\r\n   b2WeldJoint.prototype.b2WeldJoint = function (def) {\r\n      this.__super.b2Joint.call(this, def);\r\n      this.m_localAnchorA.SetV(def.localAnchorA);\r\n      this.m_localAnchorB.SetV(def.localAnchorB);\r\n      this.m_referenceAngle = def.referenceAngle;\r\n      this.m_impulse.SetZero();\r\n      this.m_mass = new b2Mat33();\r\n   }\r\n   b2WeldJoint.prototype.InitVelocityConstraints = function (step) {\r\n      var tMat;\r\n      var tX = 0;\r\n      var bA = this.m_bodyA;\r\n      var bB = this.m_bodyB;\r\n      tMat = bA.m_xf.R;\r\n      var rAX = this.m_localAnchorA.x - bA.m_sweep.localCenter.x;\r\n      var rAY = this.m_localAnchorA.y - bA.m_sweep.localCenter.y;\r\n      tX = (tMat.col1.x * rAX + tMat.col2.x * rAY);\r\n      rAY = (tMat.col1.y * rAX + tMat.col2.y * rAY);\r\n      rAX = tX;\r\n      tMat = bB.m_xf.R;\r\n      var rBX = this.m_localAnchorB.x - bB.m_sweep.localCenter.x;\r\n      var rBY = this.m_localAnchorB.y - bB.m_sweep.localCenter.y;\r\n      tX = (tMat.col1.x * rBX + tMat.col2.x * rBY);\r\n      rBY = (tMat.col1.y * rBX + tMat.col2.y * rBY);\r\n      rBX = tX;\r\n      var mA = bA.m_invMass;\r\n      var mB = bB.m_invMass;\r\n      var iA = bA.m_invI;\r\n      var iB = bB.m_invI;\r\n      this.m_mass.col1.x = mA + mB + rAY * rAY * iA + rBY * rBY * iB;\r\n      this.m_mass.col2.x = (-rAY * rAX * iA) - rBY * rBX * iB;\r\n      this.m_mass.col3.x = (-rAY * iA) - rBY * iB;\r\n      this.m_mass.col1.y = this.m_mass.col2.x;\r\n      this.m_mass.col2.y = mA + mB + rAX * rAX * iA + rBX * rBX * iB;\r\n      this.m_mass.col3.y = rAX * iA + rBX * iB;\r\n      this.m_mass.col1.z = this.m_mass.col3.x;\r\n      this.m_mass.col2.z = this.m_mass.col3.y;\r\n      this.m_mass.col3.z = iA + iB;\r\n      if (step.warmStarting) {\r\n         this.m_impulse.x *= step.dtRatio;\r\n         this.m_impulse.y *= step.dtRatio;\r\n         this.m_impulse.z *= step.dtRatio;\r\n         bA.m_linearVelocity.x -= mA * this.m_impulse.x;\r\n         bA.m_linearVelocity.y -= mA * this.m_impulse.y;\r\n         bA.m_angularVelocity -= iA * (rAX * this.m_impulse.y - rAY * this.m_impulse.x + this.m_impulse.z);\r\n         bB.m_linearVelocity.x += mB * this.m_impulse.x;\r\n         bB.m_linearVelocity.y += mB * this.m_impulse.y;\r\n         bB.m_angularVelocity += iB * (rBX * this.m_impulse.y - rBY * this.m_impulse.x + this.m_impulse.z);\r\n      }\r\n      else {\r\n         this.m_impulse.SetZero();\r\n      }\r\n   }\r\n   b2WeldJoint.prototype.SolveVelocityConstraints = function (step) {\r\n      var tMat;\r\n      var tX = 0;\r\n      var bA = this.m_bodyA;\r\n      var bB = this.m_bodyB;\r\n      var vA = bA.m_linearVelocity;\r\n      var wA = bA.m_angularVelocity;\r\n      var vB = bB.m_linearVelocity;\r\n      var wB = bB.m_angularVelocity;\r\n      var mA = bA.m_invMass;\r\n      var mB = bB.m_invMass;\r\n      var iA = bA.m_invI;\r\n      var iB = bB.m_invI;\r\n      tMat = bA.m_xf.R;\r\n      var rAX = this.m_localAnchorA.x - bA.m_sweep.localCenter.x;\r\n      var rAY = this.m_localAnchorA.y - bA.m_sweep.localCenter.y;\r\n      tX = (tMat.col1.x * rAX + tMat.col2.x * rAY);\r\n      rAY = (tMat.col1.y * rAX + tMat.col2.y * rAY);\r\n      rAX = tX;\r\n      tMat = bB.m_xf.R;\r\n      var rBX = this.m_localAnchorB.x - bB.m_sweep.localCenter.x;\r\n      var rBY = this.m_localAnchorB.y - bB.m_sweep.localCenter.y;\r\n      tX = (tMat.col1.x * rBX + tMat.col2.x * rBY);\r\n      rBY = (tMat.col1.y * rBX + tMat.col2.y * rBY);\r\n      rBX = tX;\r\n      var Cdot1X = vB.x - wB * rBY - vA.x + wA * rAY;\r\n      var Cdot1Y = vB.y + wB * rBX - vA.y - wA * rAX;\r\n      var Cdot2 = wB - wA;\r\n      var impulse = new b2Vec3();\r\n      this.m_mass.Solve33(impulse, (-Cdot1X), (-Cdot1Y), (-Cdot2));\r\n      this.m_impulse.Add(impulse);\r\n      vA.x -= mA * impulse.x;\r\n      vA.y -= mA * impulse.y;\r\n      wA -= iA * (rAX * impulse.y - rAY * impulse.x + impulse.z);\r\n      vB.x += mB * impulse.x;\r\n      vB.y += mB * impulse.y;\r\n      wB += iB * (rBX * impulse.y - rBY * impulse.x + impulse.z);\r\n      bA.m_angularVelocity = wA;\r\n      bB.m_angularVelocity = wB;\r\n   }\r\n   b2WeldJoint.prototype.SolvePositionConstraints = function (baumgarte) {\r\n      if (baumgarte === undefined) baumgarte = 0;\r\n      var tMat;\r\n      var tX = 0;\r\n      var bA = this.m_bodyA;\r\n      var bB = this.m_bodyB;\r\n      tMat = bA.m_xf.R;\r\n      var rAX = this.m_localAnchorA.x - bA.m_sweep.localCenter.x;\r\n      var rAY = this.m_localAnchorA.y - bA.m_sweep.localCenter.y;\r\n      tX = (tMat.col1.x * rAX + tMat.col2.x * rAY);\r\n      rAY = (tMat.col1.y * rAX + tMat.col2.y * rAY);\r\n      rAX = tX;\r\n      tMat = bB.m_xf.R;\r\n      var rBX = this.m_localAnchorB.x - bB.m_sweep.localCenter.x;\r\n      var rBY = this.m_localAnchorB.y - bB.m_sweep.localCenter.y;\r\n      tX = (tMat.col1.x * rBX + tMat.col2.x * rBY);\r\n      rBY = (tMat.col1.y * rBX + tMat.col2.y * rBY);\r\n      rBX = tX;\r\n      var mA = bA.m_invMass;\r\n      var mB = bB.m_invMass;\r\n      var iA = bA.m_invI;\r\n      var iB = bB.m_invI;\r\n      var C1X = bB.m_sweep.c.x + rBX - bA.m_sweep.c.x - rAX;\r\n      var C1Y = bB.m_sweep.c.y + rBY - bA.m_sweep.c.y - rAY;\r\n      var C2 = bB.m_sweep.a - bA.m_sweep.a - this.m_referenceAngle;\r\n      var k_allowedStretch = 10.0 * b2Settings.b2_linearSlop;\r\n      var positionError = Math.sqrt(C1X * C1X + C1Y * C1Y);\r\n      var angularError = b2Math.Abs(C2);\r\n      if (positionError > k_allowedStretch) {\r\n         iA *= 1.0;\r\n         iB *= 1.0;\r\n      }\r\n      this.m_mass.col1.x = mA + mB + rAY * rAY * iA + rBY * rBY * iB;\r\n      this.m_mass.col2.x = (-rAY * rAX * iA) - rBY * rBX * iB;\r\n      this.m_mass.col3.x = (-rAY * iA) - rBY * iB;\r\n      this.m_mass.col1.y = this.m_mass.col2.x;\r\n      this.m_mass.col2.y = mA + mB + rAX * rAX * iA + rBX * rBX * iB;\r\n      this.m_mass.col3.y = rAX * iA + rBX * iB;\r\n      this.m_mass.col1.z = this.m_mass.col3.x;\r\n      this.m_mass.col2.z = this.m_mass.col3.y;\r\n      this.m_mass.col3.z = iA + iB;\r\n      var impulse = new b2Vec3();\r\n      this.m_mass.Solve33(impulse, (-C1X), (-C1Y), (-C2));\r\n      bA.m_sweep.c.x -= mA * impulse.x;\r\n      bA.m_sweep.c.y -= mA * impulse.y;\r\n      bA.m_sweep.a -= iA * (rAX * impulse.y - rAY * impulse.x + impulse.z);\r\n      bB.m_sweep.c.x += mB * impulse.x;\r\n      bB.m_sweep.c.y += mB * impulse.y;\r\n      bB.m_sweep.a += iB * (rBX * impulse.y - rBY * impulse.x + impulse.z);\r\n      bA.SynchronizeTransform();\r\n      bB.SynchronizeTransform();\r\n      return positionError <= b2Settings.b2_linearSlop && angularError <= b2Settings.b2_angularSlop;\r\n   }\r\n   Box2D.inherit(b2WeldJointDef, Box2D.Dynamics.Joints.b2JointDef);\r\n   b2WeldJointDef.prototype.__super = Box2D.Dynamics.Joints.b2JointDef.prototype;\r\n   b2WeldJointDef.b2WeldJointDef = function () {\r\n      Box2D.Dynamics.Joints.b2JointDef.b2JointDef.apply(this, arguments);\r\n      this.localAnchorA = new b2Vec2();\r\n      this.localAnchorB = new b2Vec2();\r\n   };\r\n   b2WeldJointDef.prototype.b2WeldJointDef = function () {\r\n      this.__super.b2JointDef.call(this);\r\n      this.type = b2Joint.e_weldJoint;\r\n      this.referenceAngle = 0.0;\r\n   }\r\n   b2WeldJointDef.prototype.Initialize = function (bA, bB, anchor) {\r\n      this.bodyA = bA;\r\n      this.bodyB = bB;\r\n      this.localAnchorA.SetV(this.bodyA.GetLocalPoint(anchor));\r\n      this.localAnchorB.SetV(this.bodyB.GetLocalPoint(anchor));\r\n      this.referenceAngle = this.bodyB.GetAngle() - this.bodyA.GetAngle();\r\n   }\r\n})();\r\n(function () {\r\n   var b2DebugDraw = Box2D.Dynamics.b2DebugDraw;\r\n   b2DebugDraw.b2DebugDraw = function () {\r\n      this.m_drawScale = 1.0;\r\n      this.m_lineThickness = 1.0;\r\n      this.m_alpha = 1.0;\r\n      this.m_fillAlpha = 1.0;\r\n      this.m_xformScale = 1.0;\r\n      var __this = this;\r\n      //#WORKAROUND\r\n      this.m_sprite = {\r\n         graphics: {\r\n            clear: function () {\r\n               //__this.m_ctx.clearRect(0, 0, __this.m_ctx.canvas.width, __this.m_ctx.canvas.height)\r\n            },\r\n\t\t\tsetTranslation: function (x, y) {\r\n\t\t\t\t__this.m_ctx.translate(x, y);\r\n\t\t\t},\r\n         }\r\n      };\r\n   };\r\n   b2DebugDraw.prototype._color = function (color, alpha) {\r\n      return \"rgba(\" + ((color & 0xFF0000) >> 16) + \",\" + ((color & 0xFF00) >> 8) + \",\" + (color & 0xFF) + \",\" + alpha + \")\";\r\n   };\r\n   b2DebugDraw.prototype.b2DebugDraw = function () {\r\n      this.m_drawFlags = 0;\r\n   };\r\n   b2DebugDraw.prototype.SetFlags = function (flags) {\r\n      if (flags === undefined) flags = 0;\r\n      this.m_drawFlags = flags;\r\n   };\r\n   b2DebugDraw.prototype.GetFlags = function () {\r\n      return this.m_drawFlags;\r\n   };\r\n   b2DebugDraw.prototype.AppendFlags = function (flags) {\r\n      if (flags === undefined) flags = 0;\r\n      this.m_drawFlags |= flags;\r\n   };\r\n   b2DebugDraw.prototype.ClearFlags = function (flags) {\r\n      if (flags === undefined) flags = 0;\r\n      this.m_drawFlags &= ~flags;\r\n   };\r\n   b2DebugDraw.prototype.SetSprite = function (sprite) {\r\n      this.m_ctx = sprite;\r\n   };\r\n   b2DebugDraw.prototype.GetSprite = function () {\r\n      return this.m_ctx;\r\n   };\r\n   b2DebugDraw.prototype.SetDrawScale = function (drawScale) {\r\n      if (drawScale === undefined) drawScale = 0;\r\n      this.m_drawScale = drawScale;\r\n   };\r\n   b2DebugDraw.prototype.GetDrawScale = function () {\r\n      return this.m_drawScale;\r\n   };\r\n   b2DebugDraw.prototype.SetLineThickness = function (lineThickness) {\r\n      if (lineThickness === undefined) lineThickness = 0;\r\n      this.m_lineThickness = lineThickness;\r\n      this.m_ctx.strokeWidth = lineThickness;\r\n   };\r\n   b2DebugDraw.prototype.GetLineThickness = function () {\r\n      return this.m_lineThickness;\r\n   };\r\n   b2DebugDraw.prototype.SetAlpha = function (alpha) {\r\n      if (alpha === undefined) alpha = 0;\r\n      this.m_alpha = alpha;\r\n   };\r\n   b2DebugDraw.prototype.GetAlpha = function () {\r\n      return this.m_alpha;\r\n   };\r\n   b2DebugDraw.prototype.SetFillAlpha = function (alpha) {\r\n      if (alpha === undefined) alpha = 0;\r\n      this.m_fillAlpha = alpha;\r\n   };\r\n   b2DebugDraw.prototype.GetFillAlpha = function () {\r\n      return this.m_fillAlpha;\r\n   };\r\n   b2DebugDraw.prototype.SetXFormScale = function (xformScale) {\r\n      if (xformScale === undefined) xformScale = 0;\r\n      this.m_xformScale = xformScale;\r\n   };\r\n   b2DebugDraw.prototype.GetXFormScale = function () {\r\n      return this.m_xformScale;\r\n   };\r\n   b2DebugDraw.prototype.DrawPolygon = function (vertices, vertexCount, color) {\r\n      if (!vertexCount) return;\r\n      var s = this.m_ctx;\r\n      var drawScale = this.m_drawScale;\r\n      s.beginPath();\r\n      s.strokeStyle = this._color(color.color, this.m_alpha);\r\n      s.moveTo(vertices[0].x * drawScale, vertices[0].y * drawScale);\r\n      for (var i = 1; i < vertexCount; i++) {\r\n         s.lineTo(vertices[i].x * drawScale, vertices[i].y * drawScale);\r\n      }\r\n      s.lineTo(vertices[0].x * drawScale, vertices[0].y * drawScale);\r\n      s.closePath();\r\n      s.stroke();\r\n   };\r\n   b2DebugDraw.prototype.DrawSolidPolygon = function (vertices, vertexCount, color) {\r\n      if (!vertexCount) return;\r\n      var s = this.m_ctx;\r\n      var drawScale = this.m_drawScale;\r\n      s.beginPath();\r\n      s.strokeStyle = this._color(color.color, this.m_alpha);\r\n      s.fillStyle = this._color(color.color, this.m_fillAlpha);\r\n      s.moveTo(vertices[0].x * drawScale, vertices[0].y * drawScale);\r\n      for (var i = 1; i < vertexCount; i++) {\r\n         s.lineTo(vertices[i].x * drawScale, vertices[i].y * drawScale);\r\n      }\r\n      s.lineTo(vertices[0].x * drawScale, vertices[0].y * drawScale);\r\n      s.closePath();\r\n      s.fill();\r\n      s.stroke();\r\n   };\r\n   b2DebugDraw.prototype.DrawCircle = function (center, radius, color) {\r\n      if (!radius) return;\r\n      var s = this.m_ctx;\r\n      var drawScale = this.m_drawScale;\r\n      s.beginPath();\r\n      s.strokeStyle = this._color(color.color, this.m_alpha);\r\n      s.arc(center.x * drawScale, center.y * drawScale, radius * drawScale, 0, Math.PI * 2, true);\r\n      s.closePath();\r\n      s.stroke();\r\n   };\r\n   b2DebugDraw.prototype.DrawSolidCircle = function (center, radius, axis, color) {\r\n      if (!radius) return;\r\n      var s = this.m_ctx,\r\n         drawScale = this.m_drawScale,\r\n         cx = center.x * drawScale,\r\n         cy = center.y * drawScale;\r\n      s.moveTo(0, 0);\r\n      s.beginPath();\r\n      s.strokeStyle = this._color(color.color, this.m_alpha);\r\n      s.fillStyle = this._color(color.color, this.m_fillAlpha);\r\n      s.arc(cx, cy, radius * drawScale, 0, Math.PI * 2, true);\r\n      s.moveTo(cx, cy);\r\n      s.lineTo((center.x + axis.x * radius) * drawScale, (center.y + axis.y * radius) * drawScale);\r\n      s.closePath();\r\n      s.fill();\r\n      s.stroke();\r\n   };\r\n   b2DebugDraw.prototype.DrawSegment = function (p1, p2, color) {\r\n      var s = this.m_ctx,\r\n         drawScale = this.m_drawScale;\r\n      s.strokeStyle = this._color(color.color, this.m_alpha);\r\n      s.beginPath();\r\n      s.moveTo(p1.x * drawScale, p1.y * drawScale);\r\n      s.lineTo(p2.x * drawScale, p2.y * drawScale);\r\n      s.closePath();\r\n      s.stroke();\r\n   };\r\n   b2DebugDraw.prototype.DrawTransform = function (xf) {\r\n      var s = this.m_ctx,\r\n         drawScale = this.m_drawScale;\r\n      s.beginPath();\r\n      s.strokeStyle = this._color(0xff0000, this.m_alpha);\r\n      s.moveTo(xf.position.x * drawScale, xf.position.y * drawScale);\r\n      s.lineTo((xf.position.x + this.m_xformScale * xf.R.col1.x) * drawScale, (xf.position.y + this.m_xformScale * xf.R.col1.y) * drawScale);\r\n\r\n      s.strokeStyle = this._color(0xff00, this.m_alpha);\r\n      s.moveTo(xf.position.x * drawScale, xf.position.y * drawScale);\r\n      s.lineTo((xf.position.x + this.m_xformScale * xf.R.col2.x) * drawScale, (xf.position.y + this.m_xformScale * xf.R.col2.y) * drawScale);\r\n      s.closePath();\r\n      s.stroke();\r\n   };\r\n})(); //post-definitions\r\nvar i;\r\nfor (i = 0; i < Box2D.postDefs.length; ++i) Box2D.postDefs[i]();\r\ndelete Box2D.postDefs;\r\n\r\nif (typeof(window) == 'undefined') {\r\n\texports.Box2D = Box2D;\r\n}","/**\r\n * Copyright (c) 2012 cannon.js Authors\r\n *\r\n * Permission is hereby granted, free of charge, to any person\r\n * obtaining a copy of this software and associated documentation\r\n * files (the \"Software\"), to deal in the Software without\r\n * restriction, including without limitation the rights to use, copy,\r\n * modify, merge, publish, distribute, sublicense, and/or sell copies\r\n * of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be\r\n * included in all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\r\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\r\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\r\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\r\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n(function () {\r\n\t/**\r\n\t * @mainpage Cannon.js\r\n\t * A lightweight 3D physics engine for the web. See the github page for more information: https://github.com/schteppe/cannon.js\r\n\t */\r\n\r\n\tvar CANNON = CANNON || {};\r\n\r\n// Maintain compatibility with older browsers\r\n// @todo: check so ordinary Arrays work.\r\n\tif(!this.Int32Array){\r\n\t\tthis.Int32Array=Array;\r\n\t\tthis.Float32Array=Array;\r\n\t}/*global CANNON:true */\r\n\r\n\t/**\r\n\t * @class CANNON.Broadphase\r\n\t * @author schteppe\r\n\t * @brief Base class for broadphase implementations\r\n\t */\r\n\tCANNON.Broadphase = function(){\r\n\t\t/// The world to search for collisions in.\r\n\t\tthis.world = null;\r\n\t};\r\n\tCANNON.Broadphase.prototype.constructor = CANNON.BroadPhase;\r\n\r\n\t/**\r\n\t * @fn collisionPairs\r\n\t * @memberof CANNON.Broadphase\r\n\t * @brief Get the collision pairs from the world\r\n\t * @param CANNON.World world The world to search in\r\n\t * @return array An array with two subarrays of body indices\r\n\t */\r\n\tCANNON.Broadphase.prototype.collisionPairs = function(world){\r\n\t\tthrow \"collisionPairs not implemented for this BroadPhase class!\";\r\n\t};\r\n\r\n\t/*global CANNON:true */\r\n\r\n\t/**\r\n\t * @class CANNON.NaiveBroadphase\r\n\t * @brief Naive broadphase implementation, used in lack of better ones. The naive broadphase looks at all possible pairs without restriction, therefore it has complexity N^2 (which is bad)\r\n\t * @extends CANNON.Broadphase\r\n\t */\r\n\tCANNON.NaiveBroadphase = function(){\r\n\t\tthis.temp = {\r\n\t\t\tr: new CANNON.Vec3(),\r\n\t\t\tnormal: new CANNON.Vec3(),\r\n\t\t\tquat: new CANNON.Quaternion()\r\n\t\t};\r\n\t};\r\n\tCANNON.NaiveBroadphase.prototype = new CANNON.Broadphase();\r\n\tCANNON.NaiveBroadphase.prototype.constructor = CANNON.NaiveBroadphase;\r\n\r\n\t/**\r\n\t * @fn collisionPairs\r\n\t * @memberof CANNON.NaiveBroadphase\r\n\t * @brief Get all the collision pairs in the physics world\r\n\t * @param CANNON.World world\r\n\t * @return array An array containing two arrays of integers. The integers corresponds to the body indices.\r\n\t */\r\n\tCANNON.NaiveBroadphase.prototype.collisionPairs = function(world){\r\n\t\tvar pairs1 = [], pairs2 = [];\r\n\t\tvar n = world.numObjects(),\r\n\t\t\tbodies = world.bodies;\r\n\r\n\t\t// Local fast access\r\n\t\tvar types = CANNON.Shape.types;\r\n\t\tvar BOX_SPHERE_COMPOUND_CONVEX = types.SPHERE | types.BOX | types.COMPOUND | types.CONVEXPOLYHEDRON,\r\n\t\t\tPLANE = types.PLANE,\r\n\t\t\tSTATIC_OR_KINEMATIC = CANNON.Body.STATIC | CANNON.Body.KINEMATIC;\r\n\r\n\t\t// Temp vecs\r\n\t\tvar r = this.temp.r;\r\n\t\tvar normal = this.temp.normal;\r\n\t\tvar quat = this.temp.quat;\r\n\r\n\t\t// Naive N^2 ftw!\r\n\t\tfor(var i=0; i<n; i++){\r\n\t\t\tfor(var j=0; j<i; j++){\r\n\t\t\t\tvar bi = bodies[i], bj = bodies[j];\r\n\t\t\t\tif(bi.shape && bj.shape){\r\n\t\t\t\t\tvar ti = bi.shape.type, tj = bj.shape.type;\r\n\r\n\t\t\t\t\tif(((bi.motionstate & STATIC_OR_KINEMATIC)!==0 || bi.isSleeping()) &&\r\n\t\t\t\t\t\t((bj.motionstate & STATIC_OR_KINEMATIC)!==0 || bj.isSleeping())) {\r\n\t\t\t\t\t\t// Both bodies are static, kinematic or sleeping. Skip.\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// --- Box / sphere / compound / convexpolyhedron collision ---\r\n\t\t\t\t\tif((ti & BOX_SPHERE_COMPOUND_CONVEX) && (tj & BOX_SPHERE_COMPOUND_CONVEX)){\r\n\t\t\t\t\t\t// Rel. position\r\n\t\t\t\t\t\tbj.position.vsub(bi.position,r);\r\n\r\n\t\t\t\t\t\tvar boundingRadiusSum = bi.shape.boundingSphereRadius() + bj.shape.boundingSphereRadius();\r\n\t\t\t\t\t\tif(r.norm2()<boundingRadiusSum*boundingRadiusSum){\r\n\t\t\t\t\t\t\tpairs1.push(bi);\r\n\t\t\t\t\t\t\tpairs2.push(bj);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// --- Sphere/box/compound/convexpoly versus plane ---\r\n\t\t\t\t\t} else if((ti & BOX_SPHERE_COMPOUND_CONVEX) && (tj & types.PLANE) || (tj & BOX_SPHERE_COMPOUND_CONVEX) && (ti & types.PLANE)){\r\n\t\t\t\t\t\tvar pi = (ti===PLANE) ? i : j, // Plane\r\n\t\t\t\t\t\t\toi = (ti!==PLANE) ? i : j; // Other\r\n\r\n\t\t\t\t\t\t// Rel. position\r\n\t\t\t\t\t\tbodies[oi].position.vsub(bodies[pi].position,r);\r\n\t\t\t\t\t\tbodies[pi].quaternion.vmult(bodies[pi].shape.normal,normal);\r\n\r\n\t\t\t\t\t\tvar q = r.dot(normal) - bodies[oi].shape.boundingSphereRadius();\r\n\t\t\t\t\t\tif(q<0.0){\r\n\t\t\t\t\t\t\tpairs1.push(bi);\r\n\t\t\t\t\t\t\tpairs2.push(bj);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn [pairs1,pairs2];\r\n\t};\r\n\t/*global CANNON:true */\r\n\r\n\t/**\r\n\t * @class CANNON.Ray\r\n\t * @author Originally written by mr.doob / http://mrdoob.com/ for Three.js. Cannon.js-ified by schteppe.\r\n\t * @brief A ray is a line in 3D space that can intersect bodies and return intersection points.\r\n\t * @param CANNON.Vec3 origin\r\n\t * @param CANNON.Vec3 direction\r\n\t */\r\n\tCANNON.Ray = function(origin, direction){\r\n\t\tthis.origin = origin || new CANNON.Vec3();\r\n\t\tthis.direction = direction || new CANNON.Vec3();\r\n\r\n\t\tvar precision = 0.0001;\r\n\r\n\t\t/**\r\n\t\t * @fn setPrecision\r\n\t\t * @memberof CANNON.Ray\r\n\t\t * @param float value\r\n\t\t * @brief Sets the precision of the ray. Used when checking parallelity etc.\r\n\t\t */\r\n\t\tthis.setPrecision = function ( value ) {\r\n\t\t\tprecision = value;\r\n\t\t};\r\n\r\n\t\tvar a = new CANNON.Vec3();\r\n\t\tvar b = new CANNON.Vec3();\r\n\t\tvar c = new CANNON.Vec3();\r\n\t\tvar d = new CANNON.Vec3();\r\n\r\n\t\tvar directionCopy = new CANNON.Vec3();\r\n\r\n\t\tvar vector = new CANNON.Vec3();\r\n\t\tvar normal = new CANNON.Vec3();\r\n\t\tvar intersectPoint = new CANNON.Vec3()\r\n\r\n\t\t/**\r\n\t\t * @fn intersectBody\r\n\t\t * @memberof CANNON.Ray\r\n\t\t * @param CANNON.RigidBody body\r\n\t\t * @brief Shoot a ray at a body, get back information about the hit.\r\n\t\t * @return Array An array of results. The result objects has properties: distance (float), point (CANNON.Vec3) and body (CANNON.RigidBody).\r\n\t\t */\r\n\t\tthis.intersectBody = function ( body ) {\r\n\t\t\tif(body.shape instanceof CANNON.ConvexPolyhedron){\r\n\t\t\t\treturn this.intersectShape(body.shape,\r\n\t\t\t\t\tbody.quaternion,\r\n\t\t\t\t\tbody.position,\r\n\t\t\t\t\tbody);\r\n\t\t\t} else if(body.shape instanceof CANNON.Box){\r\n\t\t\t\treturn this.intersectShape(body.shape.convexPolyhedronRepresentation,\r\n\t\t\t\t\tbody.quaternion,\r\n\t\t\t\t\tbody.position,\r\n\t\t\t\t\tbody);\r\n\t\t\t} else\r\n\t\t\t\tconsole.warn(\"Ray intersection is this far only implemented for ConvexPolyhedron and Box shapes.\");\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * @fn intersectShape\r\n\t\t * @memberof CANNON.Ray\r\n\t\t * @param CANNON.Shape shape\r\n\t\t * @param CANNON.Quaternion quat\r\n\t\t * @param CANNON.Vec3 position\r\n\t\t * @param CANNON.RigidBody body\r\n\t\t * @return Array See intersectBody()\r\n\t\t */\r\n\t\tthis.intersectShape = function(shape,quat,position,body){\r\n\r\n\t\t\tvar intersect, intersects = [];\r\n\r\n\t\t\tif ( shape instanceof CANNON.ConvexPolyhedron ) {\r\n\t\t\t\t// Checking boundingSphere\r\n\r\n\t\t\t\tvar distance = distanceFromIntersection( this.origin, this.direction, position );\r\n\t\t\t\tif ( distance > shape.boundingSphereRadius() ) {\r\n\t\t\t\t\treturn intersects;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Checking faces\r\n\t\t\t\tvar dot, scalar, faces = shape.faces, vertices = shape.vertices, normals = shape.faceNormals;\r\n\r\n\t\t\t\tfor ( fi = 0; fi < faces.length; fi++ ) {\r\n\r\n\t\t\t\t\tvar face = faces[ fi ];\r\n\t\t\t\t\tvar faceNormal = normals[ fi ];\r\n\t\t\t\t\tvar q = quat;\r\n\t\t\t\t\tvar x = position;\r\n\r\n\t\t\t\t\t// determine if ray intersects the plane of the face\r\n\t\t\t\t\t// note: this works regardless of the direction of the face normal\r\n\r\n\t\t\t\t\t// Get plane point\r\n\t\t\t\t\tvar vector = new CANNON.Vec3();\r\n\t\t\t\t\tvertices[face[0]].copy(vector);\r\n\t\t\t\t\tvector.vsub(this.origin,vector);\r\n\t\t\t\t\tq.vmult(vector,vector);\r\n\t\t\t\t\tvector.vadd(x,vector);\r\n\r\n\t\t\t\t\t// Get plane normal\r\n\t\t\t\t\tvar normal = new CANNON.Vec3();\r\n\t\t\t\t\tq.vmult(faceNormal,normal);\r\n\r\n\t\t\t\t\tdot = this.direction.dot(normal);\r\n\r\n\t\t\t\t\t// bail if ray and plane are parallel\r\n\r\n\t\t\t\t\tif ( Math.abs( dot ) < precision ) continue;\r\n\r\n\t\t\t\t\t// calc distance to plane\r\n\r\n\t\t\t\t\tscalar = normal.dot( vector ) / dot;\r\n\r\n\t\t\t\t\t// if negative distance, then plane is behind ray\r\n\t\t\t\t\tif ( scalar < 0 ) continue;\r\n\r\n\t\t\t\t\tif (  dot < 0 ) {\r\n\r\n\t\t\t\t\t\t// Intersection point is origin + direction * scalar\r\n\t\t\t\t\t\tthis.direction.mult(scalar,intersectPoint);\r\n\t\t\t\t\t\tintersectPoint.vadd(this.origin,intersectPoint);\r\n\r\n\t\t\t\t\t\t// a is the point we compare points b and c with.\r\n\t\t\t\t\t\tvertices[ face[0] ].copy(a);\r\n\t\t\t\t\t\tq.vmult(a,a);\r\n\t\t\t\t\t\tx.vadd(a,a);\r\n\r\n\t\t\t\t\t\tfor(var i=1; i<face.length-1; i++){\r\n\t\t\t\t\t\t\t// Transform 3 vertices to world coords\r\n\t\t\t\t\t\t\tvertices[ face[i] ].copy(b);\r\n\t\t\t\t\t\t\tvertices[ face[i+1] ].copy(c);\r\n\t\t\t\t\t\t\tq.vmult(b,b);\r\n\t\t\t\t\t\t\tq.vmult(c,c);\r\n\t\t\t\t\t\t\tx.vadd(b,b);\r\n\t\t\t\t\t\t\tx.vadd(c,c);\r\n\r\n\t\t\t\t\t\t\tif ( pointInTriangle( intersectPoint, a, b, c ) ) {\r\n\r\n\t\t\t\t\t\t\t\tintersect = {\r\n\r\n\t\t\t\t\t\t\t\t\tdistance: this.origin.distanceTo( intersectPoint ),\r\n\t\t\t\t\t\t\t\t\tpoint: intersectPoint.copy(),\r\n\t\t\t\t\t\t\t\t\tface: face,\r\n\t\t\t\t\t\t\t\t\tbody: body\r\n\r\n\t\t\t\t\t\t\t\t};\r\n\r\n\t\t\t\t\t\t\t\tintersects.push( intersect );\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\r\n\t\t\treturn intersects;\r\n\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * @fn intersectBodies\r\n\t\t * @memberof CANNON.Ray\r\n\t\t * @param Array bodies An array of CANNON.RigidBody objects.\r\n\t\t * @return Array See intersectBody\r\n\t\t */\r\n\t\tthis.intersectBodies = function ( bodies ) {\r\n\r\n\t\t\tvar intersects = [];\r\n\r\n\t\t\tfor ( var i = 0, l = bodies.length; i < l; i ++ ) {\r\n\t\t\t\tvar result = this.intersectBody( bodies[ i ] );\r\n\t\t\t\tArray.prototype.push.apply( intersects, result );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tintersects.sort( function ( a, b ) { return a.distance - b.distance; } );\r\n\r\n\t\t\treturn intersects;\r\n\r\n\t\t};\r\n\r\n\t\tvar v0 = new CANNON.Vec3(), intersect = new CANNON.Vec3();\r\n\t\tvar dot, distance;\r\n\r\n\t\tfunction distanceFromIntersection( origin, direction, position ) {\r\n\r\n\t\t\t// v0 is vector from origin to position\r\n\t\t\tposition.vsub(origin,v0);\r\n\t\t\tdot = v0.dot( direction );\r\n\r\n\t\t\t// intersect = direction*dot + origin\r\n\t\t\tdirection.mult(dot,intersect);\r\n\t\t\tintersect.vadd(origin,intersect);\r\n\r\n\t\t\tdistance = position.distanceTo( intersect );\r\n\r\n\t\t\treturn distance;\r\n\r\n\t\t}\r\n\r\n\t\t// http://www.blackpawn.com/texts/pointinpoly/default.html\r\n\r\n\t\tvar dot00, dot01, dot02, dot11, dot12, invDenom, u, v;\r\n\t\tvar v1 = new CANNON.Vec3(), v2 = new CANNON.Vec3();\r\n\r\n\t\tfunction pointInTriangle( p, a, b, c ) {\r\n\t\t\tc.vsub(a,v0);\r\n\t\t\tb.vsub(a,v1);\r\n\t\t\tp.vsub(a,v2);\r\n\r\n\t\t\tdot00 = v0.dot( v0 );\r\n\t\t\tdot01 = v0.dot( v1 );\r\n\t\t\tdot02 = v0.dot( v2 );\r\n\t\t\tdot11 = v1.dot( v1 );\r\n\t\t\tdot12 = v1.dot( v2 );\r\n\r\n\t\t\tinvDenom = 1 / ( dot00 * dot11 - dot01 * dot01 );\r\n\t\t\tu = ( dot11 * dot02 - dot01 * dot12 ) * invDenom;\r\n\t\t\tv = ( dot00 * dot12 - dot01 * dot02 ) * invDenom;\r\n\r\n\t\t\treturn ( u >= 0 ) && ( v >= 0 ) && ( u + v < 1 );\r\n\t\t}\r\n\t};\r\n\tCANNON.Ray.prototype.constructor = CANNON.Ray;\r\n\t/*global CANNON:true */\r\n\r\n\t/**\r\n\t * @class CANNON.Mat3\r\n\t * @brief Produce a 3x3 matrix. Columns first!\r\n\t * @param array elements Array of nine elements. Optional.\r\n\t * @author schteppe / http://github.com/schteppe\r\n\t */\r\n\tCANNON.Mat3 = function(elements){\r\n\t\t/**\r\n\t\t * @property Float32Array elements\r\n\t\t * @memberof CANNON.Mat3\r\n\t\t * @brief A vector of length 9, containing all matrix elements\r\n\t\t */\r\n\t\tif(elements){\r\n\t\t\tthis.elements = new Float32Array(elements);\r\n\t\t} else {\r\n\t\t\tthis.elements = new Float32Array(9);\r\n\t\t}\r\n\t};\r\n\r\n\t/**\r\n\t * @fn identity\r\n\t * @memberof CANNON.Mat3\r\n\t * @brief Sets the matrix to identity\r\n\t * @todo Should perhaps be renamed to setIdentity() to be more clear.\r\n\t * @todo Create another function that immediately creates an identity matrix eg. eye()\r\n\t */\r\n\tCANNON.Mat3.prototype.identity = function(){\r\n\t\tthis.elements[0] = 1;\r\n\t\tthis.elements[1] = 0;\r\n\t\tthis.elements[2] = 0;\r\n\r\n\t\tthis.elements[3] = 0;\r\n\t\tthis.elements[4] = 1;\r\n\t\tthis.elements[5] = 0;\r\n\r\n\t\tthis.elements[6] = 0;\r\n\t\tthis.elements[7] = 0;\r\n\t\tthis.elements[8] = 1;\r\n\t};\r\n\r\n\t/**\r\n\t * @fn vmult\r\n\t * @memberof CANNON.vmult\r\n\t * @brief Matrix-Vector multiplication\r\n\t * @param CANNON.Vec3 v The vector to multiply with\r\n\t * @param CANNON.Vec3 target Optional, target to save the result in.\r\n\t */\r\n\tCANNON.Mat3.prototype.vmult = function(v,target){\r\n\t\tif(target===undefined){\r\n\t\t\ttarget = new CANNON.Vec3();\r\n\t\t}\r\n\r\n\t\tvar vec = [v.x, v.y, v.z];\r\n\t\tvar targetvec = [0, 0, 0];\r\n\t\tfor(var i=0; i<3; i++){\r\n\t\t\tfor(var j=0; j<3; j++){\r\n\t\t\t\ttargetvec[i] += this.elements[i+3*j]*vec[i];\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\ttarget.x = targetvec[0];\r\n\t\ttarget.y = targetvec[1];\r\n\t\ttarget.z = targetvec[2];\r\n\t\treturn target;\r\n\t};\r\n\r\n\t/**\r\n\t * @fn smult\r\n\t * @memberof CANNON.Mat3\r\n\t * @brief Matrix-scalar multiplication\r\n\t * @param float s\r\n\t */\r\n\tCANNON.Mat3.prototype.smult = function(s){\r\n\t\tfor(var i=0; i<this.elements.length; i++){\r\n\t\t\tthis.elements[i] *= s;\r\n\t\t}\r\n\t};\r\n\r\n\t/**\r\n\t * @fn mmult\r\n\t * @memberof CANNON.Mat3\r\n\t * @brief Matrix multiplication\r\n\t * @param CANNON.Mat3 m Matrix to multiply with from left side.\r\n\t * @return CANNON.Mat3 The result.\r\n\t */\r\n\tCANNON.Mat3.prototype.mmult = function(m){\r\n\t\tvar r = new CANNON.Mat3();\r\n\t\tfor(var i=0; i<3; i++){\r\n\t\t\tfor(var j=0; j<3; j++){\r\n\t\t\t\tvar sum = 0.0;\r\n\t\t\t\tfor(var k=0; k<3; k++){\r\n\t\t\t\t\tsum += this.elements[i+k] * m.elements[k+j*3];\r\n\t\t\t\t}\r\n\t\t\t\tr.elements[i+j*3] = sum;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn r;\r\n\t};\r\n\r\n\t/**\r\n\t * @fn solve\r\n\t * @memberof CANNON.Mat3\r\n\t * @brief Solve Ax=b\r\n\t * @param CANNON.Vec3 b The right hand side\r\n\t * @param CANNON.Vec3 target Optional. Target vector to save in.\r\n\t * @return CANNON.Vec3 The solution x\r\n\t */\r\n\tCANNON.Mat3.prototype.solve = function(b,target){\r\n\r\n\t\ttarget = target || new CANNON.Vec3();\r\n\r\n\t\t// Construct equations\r\n\t\tvar nr = 3; // num rows\r\n\t\tvar nc = 4; // num cols\r\n\t\tvar eqns = new Float32Array(nr*nc);\r\n\t\tvar i,j;\r\n\t\tfor(i=0; i<3; i++){\r\n\t\t\tfor(j=0; j<3; j++){\r\n\t\t\t\teqns[i+nc*j] = this.elements[i+3*j];\r\n\t\t\t}\r\n\t\t}\r\n\t\teqns[3+4*0] = b.x;\r\n\t\teqns[3+4*1] = b.y;\r\n\t\teqns[3+4*2] = b.z;\r\n\r\n\t\t// Compute right upper triangular version of the matrix - Gauss elimination\r\n\t\tvar n = 3, k = n, np;\r\n\t\tvar kp = 4; // num rows\r\n\t\tvar p, els;\r\n\t\tdo {\r\n\t\t\ti = k - n;\r\n\t\t\tif (eqns[i+nc*i] === 0) {\r\n\t\t\t\tfor (j = i + 1; j < k; j++) {\r\n\t\t\t\t\tif (eqns[i+nc*j] !== 0) {\r\n\t\t\t\t\t\tels = [];\r\n\t\t\t\t\t\tnp = kp;\r\n\t\t\t\t\t\tdo {\r\n\t\t\t\t\t\t\tp = kp - np;\r\n\t\t\t\t\t\t\tels.push(eqns[p+nc*i] + eqns[p+nc*j]);\r\n\t\t\t\t\t\t} while (--np);\r\n\t\t\t\t\t\teqns[i+nc*0] = els[0];\r\n\t\t\t\t\t\teqns[i+nc*1] = els[1];\r\n\t\t\t\t\t\teqns[i+nc*2] = els[2];\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (eqns[i+nc*i] !== 0) {\r\n\t\t\t\tfor (j = i + 1; j < k; j++) {\r\n\t\t\t\t\tvar multiplier = eqns[i+nc*j] / eqns[i+nc*i];\r\n\t\t\t\t\tels = [];\r\n\t\t\t\t\tnp = kp;\r\n\t\t\t\t\tdo {\r\n\t\t\t\t\t\tp = kp - np;\r\n\t\t\t\t\t\tels.push(p <= i ? 0 : eqns[p+nc*j] - eqns[p+nc*i] * multiplier);\r\n\t\t\t\t\t} while (--np);\r\n\t\t\t\t\teqns[j+nc*0] = els[0];\r\n\t\t\t\t\teqns[j+nc*1] = els[1];\r\n\t\t\t\t\teqns[j+nc*2] = els[2];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} while (--n);\r\n\t\t// Get the solution\r\n\t\ttarget.z = eqns[2*nc+3] / eqns[2*nc+2];\r\n\t\ttarget.y = (eqns[1*nc+3] - eqns[1*nc+2]*target.z) / eqns[1*nc+1];\r\n\t\ttarget.x = (eqns[0*nc+3] - eqns[0*nc+2]*target.z - eqns[0*nc+1]*target.y) / eqns[0*nc+0];\r\n\r\n\t\tif(isNaN(target.x) || isNaN(target.y) || isNaN(target.z) || target.x===Infinity || target.y===Infinity || target.z===Infinity){\r\n\t\t\tthrow \"Could not solve equation! Got x=[\"+target.toString()+\"], b=[\"+b.toString()+\"], A=[\"+this.toString()+\"]\";\r\n\t\t}\r\n\r\n\t\treturn target;\r\n\t};\r\n\r\n\t/**\r\n\t * @fn e\r\n\t * @memberof CANNON.Mat3\r\n\t * @brief Get an element in the matrix by index. Index starts at 0, not 1!!!\r\n\t * @param int i\r\n\t * @param int j\r\n\t * @param float value Optional. If provided, the matrix element will be set to this value.\r\n\t * @return float\r\n\t */\r\n\tCANNON.Mat3.prototype.e = function(i,j,value){\r\n\t\tif(value===undefined){\r\n\t\t\treturn this.elements[i+3*j];\r\n\t\t} else {\r\n\t\t\t// Set value\r\n\t\t\tthis.elements[i+3*j] = value;\r\n\t\t}\r\n\t};\r\n\r\n\t/**\r\n\t * @fn copy\r\n\t * @memberof CANNON.Mat3\r\n\t * @brief Copy the matrix\r\n\t * @param CANNON.Mat3 target Optional. Target to save the copy in.\r\n\t * @return CANNON.Mat3\r\n\t */\r\n\tCANNON.Mat3.prototype.copy = function(target){\r\n\t\ttarget = target || new CANNON.Mat3();\r\n\t\tfor(var i=0; i<this.elements.length; i++){\r\n\t\t\ttarget.elements[i] = this.elements[i];\r\n\t\t}\r\n\t\treturn target;\r\n\t};\r\n\r\n\t/**\r\n\t * @fn toString\r\n\t * @memberof CANNON.Mat3\r\n\t * @brief Returns a string representation of the matrix.\r\n\t * @return string\r\n\t */\r\n\tCANNON.Mat3.prototype.toString = function(){\r\n\t\tvar r = \"\";\r\n\t\tvar sep = \",\";\r\n\t\tfor(var i=0; i<9; i++){\r\n\t\t\tr += this.elements[i] + sep;\r\n\t\t}\r\n\t\treturn r;\r\n\t};/*global CANNON:true */\r\n\r\n\t/**\r\n\t * @class CANNON.Vec3\r\n\t * @brief 3-dimensional vector\r\n\t * @param float x\r\n\t * @param float y\r\n\t * @param float z\r\n\t * @author schteppe\r\n\t */\r\n\tCANNON.Vec3 = function(x,y,z){\r\n\t\t/**\r\n\t\t * @property float x\r\n\t\t * @memberof CANNON.Vec3\r\n\t\t */\r\n\t\tthis.x = x||0.0;\r\n\t\t/**\r\n\t\t * @property float y\r\n\t\t * @memberof CANNON.Vec3\r\n\t\t */\r\n\t\tthis.y = y||0.0;\r\n\t\t/**\r\n\t\t * @property float z\r\n\t\t * @memberof CANNON.Vec3\r\n\t\t */\r\n\t\tthis.z = z||0.0;\r\n\t};\r\n\r\n\t/**\r\n\t * @fn cross\r\n\t * @memberof CANNON.Vec3\r\n\t * @brief Vector cross product\r\n\t * @param CANNON.Vec3 v\r\n\t * @param CANNON.Vec3 target Optional. Target to save in.\r\n\t * @return CANNON.Vec3\r\n\t */\r\n\tCANNON.Vec3.prototype.cross = function(v,target){\r\n\t\ttarget = target || new CANNON.Vec3();\r\n\t\tvar A = [this.x, this.y, this.z];\r\n\t\tvar B = [v.x, v.y, v.z];\r\n\r\n\t\ttarget.x = (A[1] * B[2]) - (A[2] * B[1]);\r\n\t\ttarget.y = (A[2] * B[0]) - (A[0] * B[2]);\r\n\t\ttarget.z = (A[0] * B[1]) - (A[1] * B[0]);\r\n\r\n\t\treturn target;\r\n\t};\r\n\r\n\t/**\r\n\t * @fn set\r\n\t * @memberof CANNON.Vec3\r\n\t * @brief Set the vectors' 3 elements\r\n\t * @param float x\r\n\t * @param float y\r\n\t * @param float z\r\n\t * @return CANNON.Vec3\r\n\t */\r\n\tCANNON.Vec3.prototype.set = function(x,y,z){\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\t\tthis.z = z;\r\n\t\treturn this;\r\n\t};\r\n\r\n\t/**\r\n\t * @fn vadd\r\n\t * @memberof CANNON.Vec3\r\n\t * @brief Vector addition\r\n\t * @param CANNON.Vec3 v\r\n\t * @param CANNON.Vec3 target Optional.\r\n\t * @return CANNON.Vec3\r\n\t */\r\n\tCANNON.Vec3.prototype.vadd = function(v,target){\r\n\t\tif(target){\r\n\t\t\ttarget.x = v.x + this.x;\r\n\t\t\ttarget.y = v.y + this.y;\r\n\t\t\ttarget.z = v.z + this.z;\r\n\t\t} else {\r\n\t\t\treturn new CANNON.Vec3(this.x + v.x,\r\n\t\t\t\tthis.y + v.y,\r\n\t\t\t\tthis.z + v.z);\r\n\t\t}\r\n\t};\r\n\r\n\t/**\r\n\t * @fn vsub\r\n\t * @memberof CANNON.Vec3\r\n\t * @brief Vector subtraction\r\n\t * @param CANNON.Vec3 v\r\n\t * @param CANNON.Vec3 target Optional. Target to save in.\r\n\t * @return CANNON.Vec3\r\n\t */\r\n\tCANNON.Vec3.prototype.vsub = function(v,target){\r\n\t\tif(target){\r\n\t\t\ttarget.x = this.x - v.x;\r\n\t\t\ttarget.y = this.y - v.y;\r\n\t\t\ttarget.z = this.z - v.z;\r\n\t\t} else {\r\n\t\t\treturn new CANNON.Vec3(this.x-v.x,\r\n\t\t\t\tthis.y-v.y,\r\n\t\t\t\tthis.z-v.z);\r\n\t\t}\r\n\t};\r\n\r\n\t/**\r\n\t * @fn crossmat\r\n\t * @memberof CANNON.Vec3\r\n\t * @brief Get the cross product matrix a_cross from a vector, such that a x b = a_cross * b = c\r\n\t * @see http://www8.cs.umu.se/kurser/TDBD24/VT06/lectures/Lecture6.pdf\r\n\t * @return CANNON.Mat3\r\n\t */\r\n\tCANNON.Vec3.prototype.crossmat = function(){\r\n\t\treturn new CANNON.Mat3([      0,  -this.z,   this.y,\r\n\t\t\tthis.z,        0,  -this.x,\r\n\t\t\t-this.y,   this.x,        0]);\r\n\t};\r\n\r\n\t/**\r\n\t * @fn normalize\r\n\t * @memberof CANNON.Vec3\r\n\t * @brief Normalize the vector. Note that this changes the values in the vector.\r\n\t * @return float Returns the norm of the vector\r\n\t */\r\n\tCANNON.Vec3.prototype.normalize = function(){\r\n\t\tvar n = Math.sqrt(this.x*this.x + this.y*this.y + this.z*this.z);\r\n\t\tif(n>0.0){\r\n\t\t\tthis.x /= n;\r\n\t\t\tthis.y /= n;\r\n\t\t\tthis.z /= n;\r\n\t\t} else {\r\n\t\t\t// Make something up\r\n\t\t\tthis.x = 0;\r\n\t\t\tthis.y = 0;\r\n\t\t\tthis.z = 0;\r\n\t\t}\r\n\t\treturn n;\r\n\t};\r\n\r\n\t/**\r\n\t * @fn unit\r\n\t * @memberof CANNON.Vec3\r\n\t * @brief Get the version of this vector that is of length 1.\r\n\t * @param CANNON.Vec3 target Optional target to save in\r\n\t * @return CANNON.Vec3 Returns the unit vector\r\n\t */\r\n\tCANNON.Vec3.prototype.unit = function(target){\r\n\t\ttarget = target || new CANNON.Vec3();\r\n\t\tvar ninv = Math.sqrt(this.x*this.x + this.y*this.y + this.z*this.z);\r\n\t\tif(ninv>0.0){\r\n\t\t\tninv = 1.0/ninv;\r\n\t\t\ttarget.x = this.x * ninv;\r\n\t\t\ttarget.y = this.y * ninv;\r\n\t\t\ttarget.z = this.z * ninv;\r\n\t\t} else {\r\n\t\t\ttarget.x = 0;\r\n\t\t\ttarget.y = 0;\r\n\t\t\ttarget.z = 0;\r\n\t\t}\r\n\t\treturn target;\r\n\t};\r\n\r\n\t/**\r\n\t * @fn norm\r\n\t * @memberof CANNON.Vec3\r\n\t * @brief Get the 2-norm (length) of the vector\r\n\t * @return float\r\n\t */\r\n\tCANNON.Vec3.prototype.norm = function(){\r\n\t\treturn Math.sqrt(this.x*this.x + this.y*this.y + this.z*this.z);\r\n\t};\r\n\r\n\t/**\r\n\t * @fn norm2\r\n\t * @memberof CANNON.Vec3\r\n\t * @brief Get the squared length of the vector\r\n\t * @return float\r\n\t */\r\n\tCANNON.Vec3.prototype.norm2 = function(){\r\n\t\treturn this.dot(this);\r\n\t};\r\n\r\n\tCANNON.Vec3.prototype.distanceTo = function(p){\r\n\t\treturn Math.sqrt((p.x-this.x)*(p.x-this.x)+\r\n\t\t\t(p.y-this.y)*(p.y-this.y)+\r\n\t\t\t(p.z-this.z)*(p.z-this.z));\r\n\t};\r\n\r\n\t/**\r\n\t * @fn mult\r\n\t * @memberof CANNON.Vec3\r\n\t * @brief Multiply the vector with a scalar\r\n\t * @param float scalar\r\n\t * @param CANNON.Vec3 target\r\n\t * @return CANNON.Vec3\r\n\t */\r\n\tCANNON.Vec3.prototype.mult = function(scalar,target){\r\n\t\tif(!target)\r\n\t\t\ttarget = new CANNON.Vec3();\r\n\t\ttarget.x = scalar*this.x;\r\n\t\ttarget.y = scalar*this.y;\r\n\t\ttarget.z = scalar*this.z;\r\n\t\treturn target;\r\n\t};\r\n\r\n\t/**\r\n\t * @fn dot\r\n\t * @memberof CANNON.Vec3\r\n\t * @brief Calculate dot product\r\n\t * @param CANNON.Vec3 v\r\n\t * @return float\r\n\t */\r\n\tCANNON.Vec3.prototype.dot = function(v){\r\n\t\treturn (this.x * v.x + this.y * v.y + this.z * v.z);\r\n\t};\r\n\r\n\t/**\r\n\t * @fn isZero\r\n\t * @memberof CANNON.Vec3\r\n\t * @return bool\r\n\t */\r\n\tCANNON.Vec3.prototype.isZero = function(){\r\n\t\treturn this.x===0 && this.y===0 && this.z===0;\r\n\t}\r\n\r\n\t/**\r\n\t * @fn negate\r\n\t * @memberof CANNON.Vec3\r\n\t * @brief Make the vector point in the opposite direction.\r\n\t * @param CANNON.Vec3 target Optional target to save in\r\n\t * @return CANNON.Vec3\r\n\t */\r\n\tCANNON.Vec3.prototype.negate = function(target){\r\n\t\ttarget = target || new CANNON.Vec3();\r\n\t\ttarget.x = -this.x;\r\n\t\ttarget.y = -this.y;\r\n\t\ttarget.z = -this.z;\r\n\t\treturn target;\r\n\t};\r\n\r\n\t/**\r\n\t * @fn tangents\r\n\t * @memberof CANNON.Vec3\r\n\t * @brief Compute two artificial tangents to the vector\r\n\t * @param CANNON.Vec3 t1 Vector object to save the first tangent in\r\n\t * @param CANNON.Vec3 t2 Vector object to save the second tangent in\r\n\t */\r\n\tCANNON.Vec3.prototype.tangents = function(t1,t2){\r\n\t\tvar norm = this.norm();\r\n\t\tif(norm>0.0){\r\n\t\t\tvar n = new CANNON.Vec3(this.x/norm,\r\n\t\t\t\tthis.y/norm,\r\n\t\t\t\tthis.z/norm);\r\n\t\t\tif(n.x<0.9){\r\n\t\t\t\tvar rand = Math.random();\r\n\t\t\t\tn.cross(new CANNON.Vec3(rand,0.0000001,0).unit(),t1);\r\n\t\t\t} else\r\n\t\t\t\tn.cross(new CANNON.Vec3(0.0000001,rand,0).unit(),t1);\r\n\t\t\tn.cross(t1,t2);\r\n\t\t} else {\r\n\t\t\t// The normal length is zero, make something up\r\n\t\t\tt1.set(1,0,0).normalize();\r\n\t\t\tt2.set(0,1,0).normalize();\r\n\t\t}\r\n\t};\r\n\r\n\t/**\r\n\t * @fn toString\r\n\t * @memberof CANNON.Vec3\r\n\t * @brief Converts to a more readable format\r\n\t * @return string\r\n\t */\r\n\tCANNON.Vec3.prototype.toString = function(){\r\n\t\treturn this.x+\",\"+this.y+\",\"+this.z;\r\n\t};\r\n\r\n\t/**\r\n\t * @fn copy\r\n\t * @memberof CANNON.Vec3\r\n\t * @brief Copy the vector.\r\n\t * @param CANNON.Vec3 target\r\n\t * @return CANNON.Vec3\r\n\t */\r\n\tCANNON.Vec3.prototype.copy = function(target){\r\n\t\ttarget = target || new CANNON.Vec3();\r\n\t\ttarget.x = this.x;\r\n\t\ttarget.y = this.y;\r\n\t\ttarget.z = this.z;\r\n\t\treturn target;\r\n\t};\r\n\r\n\r\n\t/**\r\n\t * @fn lerp\r\n\t * @memberof CANNON.Vec3\r\n\t * @brief Do a linear interpolation between two vectors\r\n\t * @param CANNON.Vec3 v\r\n\t * @param float t A number between 0 and 1. 0 will make this function return u, and 1 will make it return v. Numbers in between will generate a vector in between them.\r\n\t * @param CANNON.Vec3 target\r\n\t */\r\n\tCANNON.Vec3.prototype.lerp = function(v,t,target){\r\n\t\ttarget.x = this.x + (v.x-this.x)*t;\r\n\t\ttarget.y = this.y + (v.y-this.y)*t;\r\n\t\ttarget.z = this.z + (v.z-this.z)*t;\r\n\t};\r\n\r\n\t/**\r\n\t * @fn almostEquals\r\n\t * @memberof CANNON.Vec3\r\n\t * @brief Check if a vector equals is almost equal to another one.\r\n\t * @param CANNON.Vec3 v\r\n\t * @param float precision\r\n\t * @return bool\r\n\t */\r\n\tCANNON.Vec3.prototype.almostEquals = function(v,precision){\r\n\t\tif(precision===undefined)\r\n\t\t\tprecision = 1e-6;\r\n\t\tif(Math.abs(this.x-v.x)>precision ||\r\n\t\t\tMath.abs(this.y-v.y)>precision ||\r\n\t\t\tMath.abs(this.z-v.z)>precision)\r\n\t\t\treturn false;\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if a vector is almost zero\r\n\t */\r\n\tCANNON.Vec3.prototype.almostZero = function(precision){\r\n\t\tif(precision===undefined)\r\n\t\t\tprecision = 1e-6;\r\n\t\tif(Math.abs(this.x)>precision ||\r\n\t\t\tMath.abs(this.y)>precision ||\r\n\t\t\tMath.abs(this.z)>precision)\r\n\t\t\treturn false;\r\n\t\treturn true;\r\n\t}/*global CANNON:true */\r\n\r\n\t/**\r\n\t * @class CANNON.Quaternion\r\n\t * @brief A Quaternion describes a rotation in 3D space. It is mathematically defined as Q = x*i + y*j + z*k + w, where (i,j,k) are imaginary basis vectors. (x,y,z) can be seen as a vector related to the axis of rotation, while the real multiplier, w, is related to the amount of rotation.\r\n\t * @param float x Multiplier of the imaginary basis vector i.\r\n\t * @param float y Multiplier of the imaginary basis vector j.\r\n\t * @param float z Multiplier of the imaginary basis vector k.\r\n\t * @param float w Multiplier of the real part.\r\n\t * @see http://en.wikipedia.org/wiki/Quaternion\r\n\t */\r\n\tCANNON.Quaternion = function(x,y,z,w){\r\n\t\t/**\r\n\t\t * @property float x\r\n\t\t * @memberof CANNON.Quaternion\r\n\t\t */\r\n\t\tthis.x = x!=undefined ? x : 0;\r\n\t\t/**\r\n\t\t * @property float y\r\n\t\t * @memberof CANNON.Quaternion\r\n\t\t */\r\n\t\tthis.y = y!=undefined ? y : 0;\r\n\t\t/**\r\n\t\t * @property float z\r\n\t\t * @memberof CANNON.Quaternion\r\n\t\t */\r\n\t\tthis.z = z!=undefined ? z : 0;\r\n\t\t/**\r\n\t\t * @property float w\r\n\t\t * @memberof CANNON.Quaternion\r\n\t\t * @brief The multiplier of the real quaternion basis vector.\r\n\t\t */\r\n\t\tthis.w = w!=undefined ? w : 1;\r\n\t};\r\n\r\n\t/**\r\n\t * Set the value of the quaternion.\r\n\t */\r\n\tCANNON.Quaternion.prototype.set = function(x,y,z,w){\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\t\tthis.z = z;\r\n\t\tthis.w = w;\r\n\t};\r\n\r\n\t/**\r\n\t * @fn toString\r\n\t * @memberof CANNON.Quaternion\r\n\t * @brief Convert to a readable format\r\n\t * @return string\r\n\t */\r\n\tCANNON.Quaternion.prototype.toString = function(){\r\n\t\treturn this.x+\",\"+this.y+\",\"+this.z+\",\"+this.w;\r\n\t};\r\n\r\n\t/**\r\n\t * @fn setFromAxisAngle\r\n\t * @memberof CANNON.Quaternion\r\n\t * @brief Set the quaternion components given an axis and an angle.\r\n\t * @param CANNON.Vec3 axis\r\n\t * @param float angle in radians\r\n\t */\r\n\tCANNON.Quaternion.prototype.setFromAxisAngle = function(axis,angle){\r\n\t\tvar s = Math.sin(angle*0.5);\r\n\t\tthis.x = axis.x * s;\r\n\t\tthis.y = axis.y * s;\r\n\t\tthis.z = axis.z * s;\r\n\t\tthis.w = Math.cos(angle*0.5);\r\n\t};\r\n\r\n// saves axis to targetAxis and returns \r\n\tCANNON.Quaternion.prototype.toAxisAngle = function(targetAxis){\r\n\t\ttargetAxis = targetAxis || new CANNON.Vec3();\r\n\t\tthis.normalize(); // if w>1 acos and sqrt will produce errors, this cant happen if quaternion is normalised\r\n\t\tvar angle = 2 * Math.acos(this.w);\r\n\t\tvar s = Math.sqrt(1-this.w*this.w); // assuming quaternion normalised then w is less than 1, so term always positive.\r\n\t\tif (s < 0.001) { // test to avoid divide by zero, s is always positive due to sqrt\r\n\t\t\t// if s close to zero then direction of axis not important\r\n\t\t\ttargetAxis.x = this.x; // if it is important that axis is normalised then replace with x=1; y=z=0;\r\n\t\t\ttargetAxis.y = this.y;\r\n\t\t\ttargetAxis.z = this.z;\r\n\t\t} else {\r\n\t\t\ttargetAxis.x = this.x / s; // normalise axis\r\n\t\t\ttargetAxis.y = this.y / s;\r\n\t\t\ttargetAxis.z = this.z / s;\r\n\t\t}\r\n\t\treturn [targetAxis,angle];\r\n\t};\r\n\r\n\t/**\r\n\t * @fn setFromVectors\r\n\t * @memberof CANNON.Quaternion\r\n\t * @brief Set the quaternion value given two vectors. The resulting rotation will be the needed rotation to rotate u to v.\r\n\t * @param CANNON.Vec3 u\r\n\t * @param CANNON.Vec3 v\r\n\t */\r\n\tCANNON.Quaternion.prototype.setFromVectors = function(u,v){\r\n\t\tvar a = u.cross(v);\r\n\t\tthis.x = a.x;\r\n\t\tthis.y = a.y;\r\n\t\tthis.z = a.z;\r\n\t\tthis.w = Math.sqrt(Math.pow(u.norm(),2) * Math.pow(v.norm(),2)) + u.dot(v);\r\n\t\tthis.normalize();\r\n\t};\r\n\r\n\t/**\r\n\t * @fn mult\r\n\t * @memberof CANNON.Quaternion\r\n\t * @brief Quaternion multiplication\r\n\t * @param CANNON.Quaternion q\r\n\t * @param CANNON.Quaternion target Optional.\r\n\t * @return CANNON.Quaternion\r\n\t */\r\n\tCANNON.Quaternion.prototype.mult = function(q,target){\r\n\t\tif(target==undefined)\r\n\t\t\ttarget = new CANNON.Quaternion();\r\n\r\n\t\tvar va = new CANNON.Vec3(this.x,this.y,this.z);\r\n\t\tvar vb = new CANNON.Vec3(q.x,q.y,q.z);\r\n\t\ttarget.w = this.w*q.w - va.dot(vb);\r\n\t\tvaxvb = va.cross(vb);\r\n\t\ttarget.x = this.w * vb.x + q.w*va.x + vaxvb.x;\r\n\t\ttarget.y = this.w * vb.y + q.w*va.y + vaxvb.y;\r\n\t\ttarget.z = this.w * vb.z + q.w*va.z + vaxvb.z;\r\n\t\treturn target;\r\n\t};\r\n\r\n\t/**\r\n\t * @fn inverse\r\n\t * @memberof CANNON.Quaternion\r\n\t * @brief Get the inverse quaternion rotation.\r\n\t * @param CANNON.Quaternion target\r\n\t * @return CANNON.Quaternion\r\n\t */\r\n\tCANNON.Quaternion.prototype.inverse = function(target){\r\n\t\tif(target==undefined)\r\n\t\t\ttarget = new CANNON.Quaternion();\r\n\r\n\t\tthis.conjugate(target);\r\n\t\tvar inorm2 = 1/(this.x*this.x + this.y*this.y + this.z*this.z + this.w*this.w);\r\n\t\ttarget.x *= inorm2;\r\n\t\ttarget.y *= inorm2;\r\n\t\ttarget.z *= inorm2;\r\n\t\ttarget.w *= inorm2;\r\n\r\n\t\treturn target;\r\n\t};\r\n\r\n\t/**\r\n\t * @fn conjugate\r\n\t * @memberof CANNON.Quaternion\r\n\t * @brief Get the quaternion conjugate\r\n\t * @param CANNON.Quaternion target\r\n\t * @return CANNON.Quaternion\r\n\t */\r\n\tCANNON.Quaternion.prototype.conjugate = function(target){\r\n\t\tif(target==undefined)\r\n\t\t\ttarget = new CANNON.Quaternion();\r\n\r\n\t\ttarget.x = -this.x;\r\n\t\ttarget.y = -this.y;\r\n\t\ttarget.z = -this.z;\r\n\t\ttarget.w = this.w;\r\n\r\n\t\treturn target;\r\n\t};\r\n\r\n\t/**\r\n\t * @fn normalize\r\n\t * @memberof CANNON.Quaternion\r\n\t * @brief Normalize the quaternion. Note that this changes the values of the quaternion.\r\n\t */\r\n\tCANNON.Quaternion.prototype.normalize = function(){\r\n\t\tvar l = Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w);\r\n\t\tif ( l === 0 ) {\r\n\t\t\tthis.x = 0;\r\n\t\t\tthis.y = 0;\r\n\t\t\tthis.z = 0;\r\n\t\t\tthis.w = 0;\r\n\t\t} else {\r\n\t\t\tl = 1 / l;\r\n\t\t\tthis.x *= l;\r\n\t\t\tthis.y *= l;\r\n\t\t\tthis.z *= l;\r\n\t\t\tthis.w *= l;\r\n\t\t}\r\n\t};\r\n\r\n\t/**\r\n\t * @fn normalizeFast\r\n\t * @memberof CANNON.Quaternion\r\n\t * @brief Approximation of quaternion normalization. Works best when quat is already almost-normalized.\r\n\t * @see http://jsperf.com/fast-quaternion-normalization\r\n\t * @author unphased, https://github.com/unphased\r\n\t */\r\n\tCANNON.Quaternion.prototype.normalizeFast = function () {\r\n\t\tvar f = (3.0-(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w))/2.0;\r\n\t\tif ( f === 0 ) {\r\n\t\t\tthis.x = 0;\r\n\t\t\tthis.y = 0;\r\n\t\t\tthis.z = 0;\r\n\t\t\tthis.w = 0;\r\n\t\t} else {\r\n\t\t\tthis.x *= f;\r\n\t\t\tthis.y *= f;\r\n\t\t\tthis.z *= f;\r\n\t\t\tthis.w *= f;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @fn vmult\r\n\t * @memberof CANNON.Quaternion\r\n\t * @brief Multiply the quaternion by a vector\r\n\t * @param CANNON.Vec3 v\r\n\t * @param CANNON.Vec3 target Optional\r\n\t * @return CANNON.Vec3\r\n\t */\r\n\tCANNON.Quaternion.prototype.vmult = function(v,target){\r\n\t\ttarget = target || new CANNON.Vec3();\r\n\t\tif(this.w==0.0){\r\n\t\t\ttarget.x = v.x;\r\n\t\t\ttarget.y = v.y;\r\n\t\t\ttarget.z = v.z;\r\n\t\t} else {\r\n\r\n\t\t\tvar x = v.x,\r\n\t\t\t\ty = v.y,\r\n\t\t\t\tz = v.z;\r\n\r\n\t\t\tvar qx = this.x,\r\n\t\t\t\tqy = this.y,\r\n\t\t\t\tqz = this.z,\r\n\t\t\t\tqw = this.w;\r\n\r\n\t\t\t// q*v\r\n\t\t\tvar ix =  qw * x + qy * z - qz * y,\r\n\t\t\t\tiy =  qw * y + qz * x - qx * z,\r\n\t\t\t\tiz =  qw * z + qx * y - qy * x,\r\n\t\t\t\tiw = -qx * x - qy * y - qz * z;\r\n\r\n\t\t\ttarget.x = ix * qw + iw * -qx + iy * -qz - iz * -qy;\r\n\t\t\ttarget.y = iy * qw + iw * -qy + iz * -qx - ix * -qz;\r\n\t\t\ttarget.z = iz * qw + iw * -qz + ix * -qy - iy * -qx;\r\n\t\t}\r\n\r\n\t\treturn target;\r\n\t};\r\n\r\n\t/**\r\n\t * @fn copy\r\n\t * @memberof CANNON.Quaternion\r\n\t * @param CANNON.Quaternion target\r\n\t */\r\n\tCANNON.Quaternion.prototype.copy = function(target){\r\n\t\ttarget.x = this.x;\r\n\t\ttarget.y = this.y;\r\n\t\ttarget.z = this.z;\r\n\t\ttarget.w = this.w;\r\n\t};\r\n\r\n\t/**\r\n\t * @fn toEuler\r\n\t * @memberof CANNON.Quaternion\r\n\t * @brief Convert the quaternion to euler angle representation. Order: YZX, as this page describes: http://www.euclideanspace.com/maths/standards/index.htm\r\n\t * @param CANNON.Vec3 target\r\n\t * @param string order Three-character string e.g. \"YZX\", which also is default.\r\n\t */\r\n\tCANNON.Quaternion.prototype.toEuler = function(target,order){\r\n\t\torder = order || \"YZX\";\r\n\r\n\t\tvar heading, attitude, bank;\r\n\t\tvar x = this.x, y = this.y, z = this.z, w = this.w;\r\n\r\n\t\tswitch(order){\r\n\t\t\tcase \"YZX\":\r\n\t\t\t\tvar test = x*y + z*w;\r\n\t\t\t\tif (test > 0.499) { // singularity at north pole\r\n\t\t\t\t\theading = 2 * Math.atan2(x,w);\r\n\t\t\t\t\tattitude = Math.PI/2;\r\n\t\t\t\t\tbank = 0;\r\n\t\t\t\t}\r\n\t\t\t\tif (test < -0.499) { // singularity at south pole\r\n\t\t\t\t\theading = -2 * Math.atan2(x,w);\r\n\t\t\t\t\tattitude = - Math.PI/2;\r\n\t\t\t\t\tbank = 0;\r\n\t\t\t\t}\r\n\t\t\t\tif(isNaN(heading)){\r\n\t\t\t\t\tvar sqx = x*x;\r\n\t\t\t\t\tvar sqy = y*y;\r\n\t\t\t\t\tvar sqz = z*z;\r\n\t\t\t\t\theading = Math.atan2(2*y*w - 2*x*z , 1 - 2*sqy - 2*sqz); // Heading\r\n\t\t\t\t\tattitude = Math.asin(2*test); // attitude\r\n\t\t\t\t\tbank = Math.atan2(2*x*w - 2*y*z , 1 - 2*sqx - 2*sqz); // bank\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(\"Euler order \"+order+\" not supported yet.\");\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\ttarget.y = heading;\r\n\t\ttarget.z = attitude;\r\n\t\ttarget.x = bank;\r\n\t};/*global CANNON:true */\r\n\r\n\t/**\r\n\t * @class CANNON.Shape\r\n\t * @author schteppe\r\n\t * @brief Base class for shapes\r\n\t */\r\n\tCANNON.Shape = function(){\r\n\r\n\t\t/**\r\n\t\t * @property int type\r\n\t\t * @memberof CANNON.Shape\r\n\t\t * @brief The type of this shape. Must be set to an int > 0 by subclasses.\r\n\t\t * @see CANNON.Shape.types\r\n\t\t */\r\n\t\tthis.type = 0;\r\n\r\n\t\tthis.aabbmin = new CANNON.Vec3();\r\n\t\tthis.aabbmax = new CANNON.Vec3();\r\n\t};\r\n\tCANNON.Shape.prototype.constructor = CANNON.Shape;\r\n\r\n\t/**\r\n\t * @fn boundingSphereRadius\r\n\t * @memberof CANNON.Shape\r\n\t * @brief Get the bounding sphere radius from this shape\r\n\t * @return float\r\n\t */\r\n\tCANNON.Shape.prototype.boundingSphereRadius = function(){\r\n\t\tthrow \"boundingSphereRadius() not implemented for shape type \"+this.type;\r\n\t};\r\n\r\n\t/**\r\n\t * @fn volume\r\n\t * @memberof CANNON.Shape\r\n\t * @brief Get the volume of this shape\r\n\t * @return float\r\n\t */\r\n\tCANNON.Shape.prototype.volume = function(){\r\n\t\tthrow \"volume() not implemented for shape type \"+this.type;\r\n\t};\r\n\r\n\t/**\r\n\t * @fn calculateLocalInertia\r\n\t * @memberof CANNON.Shape\r\n\t * @brief Calculates the inertia in the local frame for this shape.\r\n\t * @return CANNON.Vec3\r\n\t * @see http://en.wikipedia.org/wiki/List_of_moments_of_inertia\r\n\t */\r\n\tCANNON.Shape.prototype.calculateLocalInertia = function(mass,target){\r\n\t\tthrow \"calculateLocalInertia() not implemented for shape type \"+this.type;\r\n\t};\r\n\r\n\t/**\r\n\t * @fn calculateTransformedInertia\r\n\t * @memberof CANNON.Shape\r\n\t * @brief Calculates inertia in a specified frame for this shape.\r\n\t * @return CANNON.Vec3\r\n\t */\r\n\tCANNON.Shape.prototype.calculateTransformedInertia = function(mass,quat,target){\r\n\t\tif(target==undefined)\r\n\t\t\ttarget = new CANNON.Vec3();\r\n\r\n\t\t// Compute inertia in the world frame\r\n\t\tquat.normalize();\r\n\t\tvar localInertia = this.calculateLocalInertia(mass);\r\n\r\n\t\t// @todo Is this rotation OK? Check!\r\n\t\tvar worldInertia = quat.vmult(localInertia);\r\n\t\ttarget.x = Math.abs(worldInertia.x);\r\n\t\ttarget.y = Math.abs(worldInertia.y);\r\n\t\ttarget.z = Math.abs(worldInertia.z);\r\n\t\treturn target;\r\n\t\t//throw \"calculateInertia() not implemented for shape type \"+this.type;\r\n\t};\r\n\r\n\t/**\r\n\t * @enum CANNON.Shape.types\r\n\t * @brief The available shape types.\r\n\t */\r\n\tCANNON.Shape.types = {\r\n\t\tSPHERE:1,\r\n\t\tPLANE:2,\r\n\t\tBOX:4,\r\n\t\tCOMPOUND:8,\r\n\t\tCONVEXPOLYHEDRON:16\r\n\t};\r\n\r\n\t/*global CANNON:true */\r\n\r\n\t/**\r\n\t * @class CANNON.Body\r\n\t * @brief Base class for all body types.\r\n\t * @param string type\r\n\t */\r\n\tCANNON.Body = function(type){\r\n\r\n\t\tCANNON.EventTarget.apply(this);\r\n\r\n\t\tthis.type = type;\r\n\r\n\t\tvar that = this;\r\n\r\n\t\t/**\r\n\t\t * @property CANNON.World world\r\n\t\t * @memberof CANNON.Body\r\n\t\t * @brief Reference to the world the body is living in\r\n\t\t */\r\n\t\tthis.world = null;\r\n\r\n\t\t/**\r\n\t\t * @property function preStep\r\n\t\t * @memberof CANNON.Body\r\n\t\t * @brief Callback function that is used BEFORE stepping the system. Use it to apply forces, for example. Inside the function, \"this\" will refer to this CANNON.Body object.\r\n\t\t * @todo dispatch an event from the World instead\r\n\t\t */\r\n\t\tthis.preStep = null;\r\n\r\n\t\t/**\r\n\t\t * @property function postStep\r\n\t\t * @memberof CANNON.Body\r\n\t\t * @brief Callback function that is used AFTER stepping the system. Inside the function, \"this\" will refer to this CANNON.Body object.\r\n\t\t * @todo dispatch an event from the World instead\r\n\t\t */\r\n\t\tthis.postStep = null;\r\n\t};\r\n\r\n\t/**\r\n\t * @brief A dynamic body is fully simulated. Can be moved manually by the user, but normally they move according to forces. A dynamic body can collide with all body types. A dynamic body always has finite, non-zero mass.\r\n\t */\r\n\tCANNON.Body.DYNAMIC = 1;\r\n\r\n\t/**\r\n\t * @brief A static body does not move during simulation and behaves as if it has infinite mass. Static bodies can be moved manually by setting the position of the body. The velocity of a static body is always zero. Static bodies do not collide with other static or kinematic bodies.\r\n\t */\r\n\tCANNON.Body.STATIC = 2;\r\n\r\n\t/**\r\n\t * A kinematic body moves under simulation according to its velocity. They do not respond to forces. They can be moved manually, but normally a kinematic body is moved by setting its velocity. A kinematic body behaves as if it has infinite mass. Kinematic bodies do not collide with other static or kinematic bodies.\r\n\t */\r\n\tCANNON.Body.KINEMATIC = 4;/*global CANNON:true */\r\n\r\n\t/**\r\n\t * @class CANNON.Particle\r\n\t * @param float mass\r\n\t * @param CANNON.Material material\r\n\t */\r\n\tCANNON.Particle = function(mass,material){\r\n\r\n\t\t// Check input\r\n\t\tif(typeof(mass)!=\"number\")\r\n\t\t\tthrow new Error(\"Argument 1 (mass) must be a number.\");\r\n\t\tif(typeof(material)!=\"undefined\" && !(material instanceof(CANNON.Material)))\r\n\t\t\tthrow new Error(\"Argument 3 (material) must be an instance of CANNON.Material.\");\r\n\r\n\t\tCANNON.Body.call(this,\"particle\");\r\n\r\n\t\tvar that = this;\r\n\r\n\t\t/**\r\n\t\t * @property CANNON.Vec3 position\r\n\t\t * @memberof CANNON.Particle\r\n\t\t */\r\n\t\tthis.position = new CANNON.Vec3();\r\n\r\n\t\t/**\r\n\t\t * @property CANNON.Vec3 initPosition\r\n\t\t * @memberof CANNON.Particle\r\n\t\t * @brief Initial position of the body\r\n\t\t */\r\n\t\tthis.initPosition = new CANNON.Vec3();\r\n\r\n\t\t/**\r\n\t\t * @property CANNON.Vec3 velocity\r\n\t\t * @memberof CANNON.Particle\r\n\t\t */\r\n\t\tthis.velocity = new CANNON.Vec3();\r\n\r\n\t\t/**\r\n\t\t * @property CANNON.Vec3 initVelocity\r\n\t\t * @memberof CANNON.Particle\r\n\t\t */\r\n\t\tthis.initVelocity = new CANNON.Vec3();\r\n\r\n\t\t/**\r\n\t\t * @property CANNON.Vec3 force\r\n\t\t * @memberof CANNON.Particle\r\n\t\t * @brief Linear force on the body\r\n\t\t */\r\n\t\tthis.force = new CANNON.Vec3();\r\n\r\n\t\t/**\r\n\t\t * @property float mass\r\n\t\t * @memberof CANNON.Particle\r\n\t\t */\r\n\t\tthis.mass = mass;\r\n\r\n\t\t/**\r\n\t\t * @property float invMass\r\n\t\t * @memberof CANNON.Particle\r\n\t\t */\r\n\t\tthis.invMass = mass>0 ? 1.0/mass : 0;\r\n\r\n\t\t/**\r\n\t\t * @property CANNON.Material material\r\n\t\t * @memberof CANNON.Particle\r\n\t\t */\r\n\t\tthis.material = material;\r\n\r\n\t\t/**\r\n\t\t * @property float linearDamping\r\n\t\t * @memberof CANNON.Particle\r\n\t\t */\r\n\t\tthis.linearDamping = 0.01; // Perhaps default should be zero here?\r\n\r\n\t\t/**\r\n\t\t * @property int motionstate\r\n\t\t * @memberof CANNON.Particle\r\n\t\t * @brief One of the states CANNON.Body.DYNAMIC, CANNON.Body.STATIC and CANNON.Body.KINEMATIC\r\n\t\t */\r\n\t\tthis.motionstate = (mass <= 0.0 ? CANNON.Body.STATIC : CANNON.Body.DYNAMIC);\r\n\r\n\t\t/**\r\n\t\t * @property bool allowSleep\r\n\t\t * @memberof CANNON.Particle\r\n\t\t * @brief If true, the body will automatically fall to sleep.\r\n\t\t */\r\n\t\tthis.allowSleep = true;\r\n\r\n\t\t// 0:awake, 1:sleepy, 2:sleeping\r\n\t\tvar sleepState = 0;\r\n\r\n\t\t/**\r\n\t\t * @fn isAwake\r\n\t\t * @memberof CANNON.Particle\r\n\t\t */\r\n\t\tthis.isAwake = function(){ return sleepState == 0; }\r\n\r\n\t\t/**\r\n\t\t * @fn isSleepy\r\n\t\t * @memberof CANNON.Particle\r\n\t\t */\r\n\t\tthis.isSleepy = function(){ return sleepState == 1; }\r\n\r\n\t\t/**\r\n\t\t * @fn isSleeping\r\n\t\t * @memberof CANNON.Particle\r\n\t\t */\r\n\t\tthis.isSleeping = function(){ return sleepState == 2; }\r\n\r\n\t\t/**\r\n\t\t * @property float sleepSpeedLimit\r\n\t\t * @memberof CANNON.Particle\r\n\t\t * @brief If the speed (the norm of the velocity) is smaller than this value, the body is considered sleepy.\r\n\t\t */\r\n\t\tthis.sleepSpeedLimit = 0.1;\r\n\r\n\t\t/**\r\n\t\t * @property float sleepTimeLimit\r\n\t\t * @memberof CANNON.Particle\r\n\t\t * @brief If the body has been sleepy for this sleepTimeLimit milliseconds, it is considered sleeping.\r\n\t\t */\r\n\t\tthis.sleepTimeLimit = 1000;\r\n\t\tvar timeLastSleepy = new Date().getTime();\r\n\r\n\t\t/**\r\n\t\t * @fn wakeUp\r\n\t\t * @memberof CANNON.Particle\r\n\t\t * @brief Wake the body up.\r\n\t\t */\r\n\t\tthis.wakeUp = function(){\r\n\t\t\tsleepState = 0;\r\n\t\t\tthat.dispatchEvent({type:\"wakeup\"});\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * @fn sleep\r\n\t\t * @memberof CANNON.Particle\r\n\t\t * @brief Force body sleep\r\n\t\t */\r\n\t\tthis.sleep = function(){\r\n\t\t\tsleepState = 2;\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * @fn sleepTick\r\n\t\t * @memberof CANNON.Particle\r\n\t\t * @brief Called every timestep to update internal sleep timer and change sleep state if needed.\r\n\t\t */\r\n\t\tthis.sleepTick = function(){\r\n\t\t\tif(that.allowSleep){\r\n\t\t\t\tif(sleepState==0 && that.velocity.norm()<that.sleepSpeedLimit){\r\n\t\t\t\t\tsleepState = 1; // Sleepy\r\n\t\t\t\t\ttimeLastSleepy = new Date().getTime();\r\n\t\t\t\t\tthat.dispatchEvent({type:\"sleepy\"});\r\n\t\t\t\t} else if(sleepState==1 && that.velocity.norm()>that.sleepSpeedLimit){\r\n\t\t\t\t\tthat.wakeUp(); // Wake up\r\n\t\t\t\t} else if(sleepState==1 && (new Date().getTime() - timeLastSleepy)>that.sleepTimeLimit){\r\n\t\t\t\t\tsleepState = 2; // Sleeping\r\n\t\t\t\t\tthat.dispatchEvent({type:\"sleep\"});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t};\r\n\t/*global CANNON:true */\r\n\r\n\t/**\r\n\t * @class CANNON.RigidBody\r\n\t * @brief Rigid body base class\r\n\t * @param float mass\r\n\t * @param CANNON.Shape shape\r\n\t * @param CANNON.Material material\r\n\t */\r\n\tCANNON.RigidBody = function(mass,shape,material){\r\n\r\n\t\t// Check input\r\n\t\tif(typeof(mass)!=\"number\")\r\n\t\t\tthrow new Error(\"Argument 1 (mass) must be a number.\");\r\n\t\tif(typeof(shape)!=\"object\" || !(shape instanceof(CANNON.Shape)))\r\n\t\t\tthrow new Error(\"Argument 2 (shape) must be an instance of CANNON.Shape.\");\r\n\t\tif(typeof(material)!=\"undefined\" && !(material instanceof(CANNON.Material)))\r\n\t\t\tthrow new Error(\"Argument 3 (material) must be an instance of CANNON.Material.\");\r\n\r\n\t\tCANNON.Particle.call(this,mass,material);\r\n\r\n\t\tvar that = this;\r\n\r\n\t\t/**\r\n\t\t * @property CANNON.Vec3 tau\r\n\t\t * @memberof CANNON.RigidBody\r\n\t\t * @brief Rotational force on the body, around center of mass\r\n\t\t */\r\n\t\tthis.tau = new CANNON.Vec3();\r\n\r\n\t\t/**\r\n\t\t * @property CANNON.Quaternion quaternion\r\n\t\t * @memberof CANNON.RigidBody\r\n\t\t * @brief Orientation of the body\r\n\t\t */\r\n\t\tthis.quaternion = new CANNON.Quaternion();\r\n\r\n\t\t/**\r\n\t\t * @property CANNON.Quaternion initQuaternion\r\n\t\t * @memberof CANNON.RigidBody\r\n\t\t */\r\n\t\tthis.initQuaternion = new CANNON.Quaternion();\r\n\r\n\t\t/**\r\n\t\t * @property CANNON.Vec3 angularVelocity\r\n\t\t * @memberof CANNON.RigidBody\r\n\t\t */\r\n\t\tthis.angularVelocity = new CANNON.Vec3();\r\n\r\n\t\t/**\r\n\t\t * @property CANNON.Vec3 initAngularVelocity\r\n\t\t * @memberof CANNON.RigidBody\r\n\t\t */\r\n\t\tthis.initAngularVelocity = new CANNON.Vec3();\r\n\r\n\t\t/**\r\n\t\t * @property CANNON.Shape shape\r\n\t\t * @memberof CANNON.RigidBody\r\n\t\t */\r\n\t\tthis.shape = shape;\r\n\r\n\t\t/**\r\n\t\t * @property CANNON.Vec3 inertia\r\n\t\t * @memberof CANNON.RigidBody\r\n\t\t */\r\n\t\tthis.inertia = new CANNON.Vec3();\r\n\t\tshape.calculateLocalInertia(mass,this.inertia);\r\n\r\n\t\t/**\r\n\t\t * @property CANNON.Vec3 intInertia\r\n\t\t * @memberof CANNON.RigidBody\r\n\t\t */\r\n\t\tthis.invInertia = new CANNON.Vec3(this.inertia.x>0 ? 1.0/this.inertia.x : 0,\r\n\t\t\tthis.inertia.y>0 ? 1.0/this.inertia.y : 0,\r\n\t\t\tthis.inertia.z>0 ? 1.0/this.inertia.z : 0);\r\n\r\n\t\t/**\r\n\t\t * @property float angularDamping\r\n\t\t * @memberof CANNON.RigidBody\r\n\t\t */\r\n\t\tthis.angularDamping = 0.01; // Perhaps default should be zero here?\r\n\t};\r\n\t/*global CANNON:true */\r\n\r\n\t/**\r\n\t * @brief Spherical rigid body\r\n\t * @class CANNON.Sphere\r\n\t * @extends CANNON.Shape\r\n\t * @param float radius\r\n\t * @author schteppe / http://github.com/schteppe\r\n\t */\r\n\tCANNON.Sphere = function(radius){\r\n\t\tCANNON.Shape.call(this);\r\n\t\tthis.radius = radius!=undefined ? Number(radius) : 1.0;\r\n\t\tthis.type = CANNON.Shape.types.SPHERE;\r\n\t};\r\n\tCANNON.Sphere.prototype = new CANNON.Shape();\r\n\tCANNON.Sphere.prototype.constructor = CANNON.Sphere;\r\n\r\n\tCANNON.Sphere.prototype.calculateLocalInertia = function(mass,target){\r\n\t\ttarget = target || new CANNON.Vec3();\r\n\t\tvar I = 2.0*mass*this.radius*this.radius/5.0;\r\n\t\ttarget.x = I;\r\n\t\ttarget.y = I;\r\n\t\ttarget.z = I;\r\n\t\treturn target;\r\n\t};\r\n\r\n\tCANNON.Sphere.prototype.volume = function(){\r\n\t\treturn 4.0 * Math.PI * this.radius / 3.0;\r\n\t};\r\n\r\n\tCANNON.Sphere.prototype.boundingSphereRadius = function(){\r\n\t\treturn this.radius;\r\n\t};/*global CANNON:true */\r\n\r\n\t/**\r\n\t * @class CANNON.Box\r\n\t * @brief A 3d box shape.\r\n\t * @param CANNON.Vec3 halfExtents\r\n\t * @author schteppe\r\n\t * @extends CANNON.Shape\r\n\t */\r\n\tCANNON.Box = function(halfExtents){\r\n\t\tCANNON.Shape.call(this);\r\n\r\n\t\t/**\r\n\t\t * @property CANNON.Vec3 halfExtents\r\n\t\t * @memberof CANNON.Box\r\n\t\t */\r\n\t\tthis.halfExtents = halfExtents;\r\n\t\tthis.type = CANNON.Shape.types.BOX;\r\n\r\n\t\t/**\r\n\t\t *\r\n\t\t */\r\n\t\tthis.convexPolyhedronRepresentation = null;\r\n\r\n\t\tthis.updateConvexPolyhedronRepresentation();\r\n\t};\r\n\tCANNON.Box.prototype = new CANNON.Shape();\r\n\tCANNON.Box.prototype.constructor = CANNON.Box;\r\n\r\n\t/**\r\n\t * @fn updateConvexPolyhedronRepresentation\r\n\t * @memberof CANNON.Box\r\n\t * @brief Updates the local convex polyhedron representation used for some collisions.\r\n\t */\r\n\tCANNON.Box.prototype.updateConvexPolyhedronRepresentation = function(){\r\n\t\tvar sx = this.halfExtents.x;\r\n\t\tvar sy = this.halfExtents.y;\r\n\t\tvar sz = this.halfExtents.z;\r\n\t\tvar v = CANNON.Vec3;\r\n\t\tvar h = new CANNON.ConvexPolyhedron([new v(-sx,-sy,-sz),\r\n\t\t\tnew v( sx,-sy,-sz),\r\n\t\t\tnew v( sx, sy,-sz),\r\n\t\t\tnew v(-sx, sy,-sz),\r\n\t\t\tnew v(-sx,-sy, sz),\r\n\t\t\tnew v( sx,-sy, sz),\r\n\t\t\tnew v( sx, sy, sz),\r\n\t\t\tnew v(-sx, sy, sz)],\r\n\r\n\t\t\t[\r\n\t\t\t\t[0,1,2,3], // -z\r\n\t\t\t\t[4,5,6,7], // +z\r\n\t\t\t\t[0,1,4,5], // -y\r\n\t\t\t\t[2,3,6,7], // +y\r\n\t\t\t\t[0,3,4,7], // -x\r\n\t\t\t\t[1,2,5,6], // +x\r\n\t\t\t],\r\n\r\n\t\t\t[new v( 0, 0,-1),\r\n\t\t\t\tnew v( 0, 0, 1),\r\n\t\t\t\tnew v( 0,-1, 0),\r\n\t\t\t\tnew v( 0, 1, 0),\r\n\t\t\t\tnew v(-1, 0, 0),\r\n\t\t\t\tnew v( 1, 0, 0)]);\r\n\t\tthis.convexPolyhedronRepresentation = h;\r\n\t};\r\n\r\n\tCANNON.Box.prototype.calculateLocalInertia = function(mass,target){\r\n\t\ttarget = target || new CANNON.Vec3();\r\n\t\ttarget.x = 1.0 / 12.0 * mass * (   2*this.halfExtents.y*2*this.halfExtents.y\r\n\t\t\t+ 2*this.halfExtents.z*2*this.halfExtents.z );\r\n\t\ttarget.y = 1.0 / 12.0 * mass * (   2*this.halfExtents.x*2*this.halfExtents.x\r\n\t\t\t+ 2*this.halfExtents.z*2*this.halfExtents.z );\r\n\t\ttarget.z = 1.0 / 12.0 * mass * (   2*this.halfExtents.y*2*this.halfExtents.y\r\n\t\t\t+ 2*this.halfExtents.x*2*this.halfExtents.x );\r\n\t\treturn target;\r\n\t};\r\n\r\n\t/**\r\n\t * @fn getCorners\r\n\t * @memberof CANNON.Box\r\n\t * @brief Get the box corners\r\n\t * @param CANNON.Quaternion quat Orientation to apply to the corner vectors. If not provided, the vectors will be in respect to the local frame.\r\n\t * @return array\r\n\t */\r\n\tCANNON.Box.prototype.getCorners = function(quat){\r\n\t\tvar corners = [];\r\n\t\tvar ex = this.halfExtents;\r\n\t\tcorners.push(new CANNON.Vec3(  ex.x,  ex.y,  ex.z));\r\n\t\tcorners.push(new CANNON.Vec3( -ex.x,  ex.y,  ex.z));\r\n\t\tcorners.push(new CANNON.Vec3( -ex.x, -ex.y,  ex.z));\r\n\t\tcorners.push(new CANNON.Vec3( -ex.x, -ex.y, -ex.z));\r\n\t\tcorners.push(new CANNON.Vec3(  ex.x, -ex.y, -ex.z));\r\n\t\tcorners.push(new CANNON.Vec3(  ex.x,  ex.y, -ex.z));\r\n\t\tcorners.push(new CANNON.Vec3( -ex.x,  ex.y, -ex.z));\r\n\t\tcorners.push(new CANNON.Vec3(  ex.x, -ex.y,  ex.z));\r\n\r\n\t\tfor(var i=0; quat!=undefined && i<corners.length; i++)\r\n\t\t\tquat.vmult(corners[i],corners[i]);\r\n\r\n\t\treturn corners;\r\n\t};\r\n\r\n\t/**\r\n\t * @fn getSideNormals\r\n\t * @memberof CANNON.Box\r\n\t * @brief Get the box 6 side normals\r\n\t * @param bool includeNegative If true, this function returns 6 vectors. If false, it only returns 3 (but you get 6 by reversing those 3)\r\n\t * @param CANNON.Quaternion quat Orientation to apply to the normal vectors. If not provided, the vectors will be in respect to the local frame.\r\n\t * @return array\r\n\t */\r\n\tCANNON.Box.prototype.getSideNormals = function(includeNegative,quat){\r\n\t\tvar sides = [];\r\n\t\tvar ex = this.halfExtents;\r\n\t\tsides.push(new CANNON.Vec3(  ex.x,     0,     0));\r\n\t\tsides.push(new CANNON.Vec3(     0,  ex.y,     0));\r\n\t\tsides.push(new CANNON.Vec3(     0,     0,  ex.z));\r\n\t\tif(includeNegative!=undefined && includeNegative){\r\n\t\t\tsides.push(new CANNON.Vec3( -ex.x,     0,     0));\r\n\t\t\tsides.push(new CANNON.Vec3(     0, -ex.y,     0));\r\n\t\t\tsides.push(new CANNON.Vec3(     0,     0, -ex.z));\r\n\t\t}\r\n\r\n\t\tfor(var i=0; quat!=undefined && i<sides.length; i++)\r\n\t\t\tquat.vmult(sides[i],sides[i]);\r\n\r\n\t\treturn sides;\r\n\t};\r\n\r\n\tCANNON.Box.prototype.volume = function(){\r\n\t\treturn 8.0 * this.halfExtents.x * this.halfExtents.y * this.halfExtents.z;\r\n\t};\r\n\r\n\tCANNON.Box.prototype.boundingSphereRadius = function(){\r\n\t\treturn this.halfExtents.norm();\r\n\t};/*global CANNON:true */\r\n\r\n\t/**\r\n\t * @class CANNON.Plane\r\n\t * @extends CANNON.Shape\r\n\t * @param CANNON.Vec3 normal\r\n\t * @brief An infinite plane, facing in the direction of the given normal.\r\n\t * @author schteppe\r\n\t */\r\n\tCANNON.Plane = function(normal){\r\n\t\tCANNON.Shape.call(this);\r\n\t\tnormal.normalize();\r\n\t\tthis.normal = normal;\r\n\t\tthis.type = CANNON.Shape.types.PLANE;\r\n\t};\r\n\tCANNON.Plane.prototype = new CANNON.Shape();\r\n\tCANNON.Plane.prototype.constructor = CANNON.Plane;\r\n\r\n\tCANNON.Plane.prototype.calculateLocalInertia = function(mass,target){\r\n\t\ttarget = target || new CANNON.Vec3();\r\n\t\treturn target;\r\n\t};\r\n\r\n\tCANNON.Plane.prototype.volume = function(){\r\n\t\treturn Infinity; // The plane is infinite...\r\n\t};/*global CANNON:true */\r\n\r\n\t/**\r\n\t * @class CANNON.Compound\r\n\t * @extends CANNON.Shape\r\n\t * @brief A shape that is built of several other shapes, in this context called child shapes.\r\n\t * @author schteppe\r\n\t */\r\n\tCANNON.Compound = function(){\r\n\t\tCANNON.Shape.call(this);\r\n\t\tthis.type = CANNON.Shape.types.COMPOUND;\r\n\t\tthis.childShapes = [];\r\n\t\tthis.childOffsets = [];\r\n\t\tthis.childOrientations = [];\r\n\t};\r\n\tCANNON.Compound.prototype = new CANNON.Shape();\r\n\tCANNON.Compound.prototype.constructor = CANNON.Compound;\r\n\r\n\t/**\r\n\t * @fn addChild\r\n\t * @memberof CANNON.Compound\r\n\t * @brief Add a child shape.\r\n\t * @param CANNON.Shape shape\r\n\t * @param CANNON.Vec3 offset\r\n\t * @param CANNON.Quaternion orientation\r\n\t */\r\n\tCANNON.Compound.prototype.addChild = function(shape,offset,orientation){\r\n\t\toffset = offset || new CANNON.Vec3();\r\n\t\torientation = orientation || new CANNON.Quaternion();\r\n\t\tthis.childShapes.push(shape);\r\n\t\tthis.childOffsets.push(offset);\r\n\t\tthis.childOrientations.push(orientation);\r\n\t};\r\n\r\n\tCANNON.Compound.prototype.volume = function(){\r\n\t\tvar r = 0.0;\r\n\t\tfor(var i = 0; i<this.childShapes.length; i++)\r\n\t\t\tr += this.childShapes[i].volume();\r\n\t\treturn r;\r\n\t};\r\n\r\n\tCANNON.Compound.prototype.calculateLocalInertia = function(mass,target){\r\n\t\ttarget = target || new CANNON.Vec3();\r\n\r\n\t\t// Calculate the total volume, we will spread out this objects' mass on the sub shapes\r\n\t\tvar V = this.volume();\r\n\r\n\t\tfor(var i = 0; i<this.childShapes.length; i++){\r\n\t\t\t// Get child information\r\n\t\t\tvar b = this.childShapes[i];\r\n\t\t\tvar o = this.childOffsets[i];\r\n\t\t\tvar q = this.childOrientations[i];\r\n\t\t\tvar m = b.volume() / V * mass;\r\n\r\n\t\t\t// Get the child inertia, transformed relative to local frame\r\n\t\t\tvar inertia = b.calculateTransformedInertia(m,q);\r\n\r\n\t\t\t// Add its inertia using the parallel axis theorem, i.e.\r\n\t\t\t// I += I_child;    \r\n\t\t\t// I += m_child * r^2\r\n\r\n\t\t\ttarget.vadd(inertia,target);\r\n\t\t\tvar mr2 = new CANNON.Vec3(m*o.x*o.x,\r\n\t\t\t\tm*o.y*o.y,\r\n\t\t\t\tm*o.z*o.z);\r\n\t\t\ttarget.vadd(mr2,target);\r\n\t\t}\r\n\t\treturn target;\r\n\t};\r\n\r\n\tCANNON.Compound.prototype.boundingSphereRadius = function(){\r\n\t\tvar r = 0.0;\r\n\t\tfor(var i = 0; i<this.childShapes.length; i++){\r\n\t\t\tvar candidate = this.childOffsets[i].norm() + this.childShapes[i].boundingSphereRadius();\r\n\t\t\tif(r < candidate)\r\n\t\t\t\tr = candidate;\r\n\t\t}\r\n\t\treturn r;\r\n\t};/**\r\n\t * @class CANNON.ConvexPolyhedron\r\n\t * @extends CANNON.Shape\r\n\t * @brief A set of points in space describing a convex shape.\r\n\t * @author qiao / https://github.com/qiao (original author, see https://github.com/qiao/three.js/commit/85026f0c769e4000148a67d45a9e9b9c5108836f)\r\n\t * @author schteppe / https://github.com/schteppe\r\n\t * @see http://www.altdevblogaday.com/2011/05/13/contact-generation-between-3d-convex-meshes/\r\n\t * @see http://bullet.googlecode.com/svn/trunk/src/BulletCollision/NarrowPhaseCollision/btPolyhedralContactClipping.cpp\r\n\t * @todo move the clipping functions to ContactGenerator?\r\n\t * @param array points An array of CANNON.Vec3's\r\n\t * @param array faces Deprecated - fix autogenerator for these\r\n\t * @param array normals Deprecated - fix autogenerator for these\r\n\t */\r\n\tCANNON.ConvexPolyhedron = function( points , faces , normals ) {\r\n\t\tvar that = this;\r\n\t\tCANNON.Shape.call( this );\r\n\t\tthis.type = CANNON.Shape.types.CONVEXPOLYHEDRON;\r\n\r\n\t\t/**\r\n\t\t * @property array vertices\r\n\t\t * @memberof CANNON.ConvexPolyhedron\r\n\t\t * @brief Array of CANNON.Vec3\r\n\t\t */\r\n\t\tthis.vertices = [];\r\n\r\n\t\t/**\r\n\t\t * @property array faces\r\n\t\t * @memberof CANNON.ConvexPolyhedron\r\n\t\t * @brief Array of integer arrays, indicating which vertices each face consists of\r\n\t\t * @todo Needed?\r\n\t\t */\r\n\t\tthis.faces = faces;\r\n\r\n\t\t/**\r\n\t\t * @property array faceNormals\r\n\t\t * @memberof CANNON.ConvexPolyhedron\r\n\t\t * @brief Array of CANNON.Vec3\r\n\t\t * @todo Needed?\r\n\t\t */\r\n\t\tthis.faceNormals = normals;\r\n\r\n\t\t/**\r\n\t\t * @property array uniqueEdges\r\n\t\t * @memberof CANNON.ConvexPolyhedron\r\n\t\t * @brief Array of CANNON.Vec3\r\n\t\t */\r\n\t\tthis.uniqueEdges = [];\r\n\r\n\t\tfor(pi in points){\r\n\t\t\tvar p = points[pi];\r\n\t\t\tif(!(p instanceof CANNON.Vec3)){\r\n\t\t\t\tthrow \"Argument 1 must be instance of CANNON.Vec3\";\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tthis.vertices.push(p);\r\n\t\t}\r\n\r\n\t\tfor(var i=0; i<faces.length; i++){\r\n\t\t\tvar numVertices = faces[i].length;\r\n\t\t\tvar NbTris = numVertices;\r\n\t\t\tfor(var j=0; j<NbTris; j++){\r\n\t\t\t\tvar k = ( j+1 ) % numVertices;\r\n\t\t\t\tvar edge = new CANNON.Vec3();\r\n\t\t\t\tthis.vertices[faces[i][j]].vsub(this.vertices[faces[i][k]],edge);\r\n\t\t\t\tedge.normalize();\r\n\t\t\t\tvar found = false;\r\n\t\t\t\tfor(var p=0;p<this.uniqueEdges.length;p++){\r\n\t\t\t\t\tif (this.uniqueEdges[p].almostEquals(edge) ||\r\n\t\t\t\t\t\tthis.uniqueEdges[p].almostEquals(edge)){\r\n\t\t\t\t\t\tfound = true;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// What is this for???\r\n\t\t\t\tif (!found){\r\n\t\t\t\t\tthis.uniqueEdges.push(edge);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (edge) {\r\n\t\t\t\t\tedge.face1 = i;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvar ed;\r\n\t\t\t\t\ted.m_face0 = i;\r\n\t\t\t\t\tedges.insert(vp,ed);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Get max and min dot product of a convex hull at position (pos,quat) projected onto an axis. Results are saved in the array maxmin.\r\n\t\t * @param CANNON.ConvexPolyhedron hull\r\n\t\t * @param CANNON.Vec3 axis\r\n\t\t * @param CANNON.Vec3 pos\r\n\t\t * @param CANNON.Quaternion quat\r\n\t\t * @param array maxmin maxmin[0] and maxmin[1] will be set to maximum and minimum, respectively.\r\n\t\t */\r\n\t\tfunction project(hull,axis,pos,quat,maxmin){\r\n\t\t\tvar n = hull.vertices.length;\r\n\t\t\tvar max = null;\r\n\t\t\tvar min = null;\r\n\t\t\tvar vs = hull.vertices;\r\n\t\t\tvar worldVertex = new CANNON.Vec3();\r\n\t\t\tfor(var i=0; i<n; i++){\r\n\t\t\t\tvs[i].copy(worldVertex);\r\n\t\t\t\t//console.log(\"orig:\",worldVertex.toString());\r\n\t\t\t\tquat.vmult(worldVertex,worldVertex);\r\n\t\t\t\t//console.log(\"after the quat \",quat.toString(),\":\",worldVertex.toString());\r\n\t\t\t\tworldVertex.vadd(pos,worldVertex);\r\n\t\t\t\t//console.log(\"after adding pos\",pos.toString(),\"worldvertex:\",worldVertex.toString());\r\n\t\t\t\tvar val = worldVertex.dot(axis);\r\n\t\t\t\tif(max===null || val>max)\r\n\t\t\t\t\tmax = val;\r\n\t\t\t\tif(min===null || val<min){\r\n\t\t\t\t\tmin = val;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif(min>max){\r\n\t\t\t\t// Inconsistent - swap\r\n\t\t\t\tvar temp = min;\r\n\t\t\t\tmin = max;\r\n\t\t\t\tmax = temp;\r\n\t\t\t}\r\n\r\n\t\t\t// Output\r\n\t\t\tmaxmin[0] = max;\r\n\t\t\tmaxmin[1] = min;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * @fn testSepAxis\r\n\t\t * @memberof CANNON.ConvexPolyhedron\r\n\t\t * @brief Test separating axis against two hulls. Both hulls are projected onto the axis and the overlap size is returned if there is one.\r\n\t\t * @param CANNON.Vec3 axis\r\n\t\t * @param CANNON.ConvexPolyhedron hullB\r\n\t\t * @param CANNON.Vec3 posA\r\n\t\t * @param CANNON.Quaternion quatA\r\n\t\t * @param CANNON.Vec3 posB\r\n\t\t * @param CANNON.Quaternion quatB\r\n\t\t * @return float The overlap depth, or FALSE if no penetration.\r\n\t\t */\r\n\t\tthis.testSepAxis = function(axis, hullB, posA, quatA, posB, quatB){\r\n\t\t\tvar maxminA=[], maxminB=[], hullA=this;\r\n\t\t\tproject(hullA, axis, posA, quatA, maxminA);\r\n\t\t\tproject(hullB, axis, posB, quatB, maxminB);\r\n\t\t\tvar maxA = maxminA[0];\r\n\t\t\tvar minA = maxminA[1];\r\n\t\t\tvar maxB = maxminB[0];\r\n\t\t\tvar minB = maxminB[1];\r\n\t\t\tif(maxA<minB || maxB<minA){\r\n\t\t\t\t//console.log(minA,maxA,minB,maxB);\r\n\t\t\t\treturn false; // Separated\r\n\t\t\t}\r\n\r\n\t\t\tvar d0 = maxA - minB;\r\n\t\t\tvar d1 = maxB - minA;\r\n\t\t\tdepth = d0<d1 ? d0:d1;\r\n\t\t\treturn depth;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * @fn findSeparatingAxis\r\n\t\t * @memberof CANNON.ConvexPolyhedron\r\n\t\t * @brief Find the separating axis between this hull and another\r\n\t\t * @param CANNON.ConvexPolyhedron hullB\r\n\t\t * @param CANNON.Vec3 posA\r\n\t\t * @param CANNON.Quaternion quatA\r\n\t\t * @param CANNON.Vec3 posB\r\n\t\t * @param CANNON.Quaternion quatB\r\n\t\t * @param CANNON.Vec3 target The target vector to save the axis in\r\n\t\t * @return bool Returns false if a separation is found, else true\r\n\t\t */\r\n\t\tthis.findSeparatingAxis = function(hullB,posA,quatA,posB,quatB,target){\r\n\t\t\tvar dmin = Infinity;\r\n\t\t\tvar hullA = this;\r\n\t\t\tvar curPlaneTests=0;\r\n\t\t\tvar numFacesA = hullA.faces.length;\r\n\r\n\t\t\t// Test normals from hullA\r\n\t\t\tvar faceANormalWS = new CANNON.Vec3();\r\n\t\t\tfor(var i=0; i<numFacesA; i++){\r\n\t\t\t\t// Get world face normal\r\n\t\t\t\thullA.faceNormals[i].copy(faceANormalWS);\r\n\t\t\t\tquatA.vmult(faceANormalWS,faceANormalWS);\r\n\t\t\t\t//posA.vadd(faceANormalWS,faceANormalWS); // Needed?\r\n\t\t\t\t//console.log(\"face normal:\",hullA.faceNormals[i].toString(),\"world face normal:\",faceANormalWS);\r\n\r\n\t\t\t\tvar d = hullA.testSepAxis(faceANormalWS, hullB, posA, quatA, posB, quatB);\r\n\t\t\t\tif(d===false){\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(d<dmin){\r\n\t\t\t\t\tdmin = d;\r\n\t\t\t\t\tfaceANormalWS.copy(target);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Test normals from hullB\r\n\t\t\tvar WorldNormal = new CANNON.Vec3();\r\n\t\t\tvar numFacesB = hullB.faces.length;\r\n\t\t\tfor(var i=0;i<numFacesB;i++){\r\n\t\t\t\thullB.faceNormals[i].copy(WorldNormal);\r\n\t\t\t\tquatB.vmult(WorldNormal,WorldNormal);\r\n\t\t\t\t//posB.vadd(WorldNormal,WorldNormal);\r\n\t\t\t\t//console.log(\"facenormal\",hullB.faceNormals[i].toString(),\"world:\",WorldNormal.toString());\r\n\t\t\t\tcurPlaneTests++;\r\n\t\t\t\tvar d = hullA.testSepAxis(WorldNormal, hullB,posA,quatA,posB,quatB);\r\n\t\t\t\tif(d===false){\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(d<dmin){\r\n\t\t\t\t\tdmin = d;\r\n\t\t\t\t\tWorldNormal.copy(target);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tvar edgeAstart,edgeAend,edgeBstart,edgeBend;\r\n\r\n\t\t\tvar curEdgeEdge = 0;\r\n\t\t\t// Test edges\r\n\t\t\tvar WorldEdge0 = new CANNON.Vec3();\r\n\t\t\tvar WorldEdge1 = new CANNON.Vec3();\r\n\t\t\tvar Cross = new CANNON.Vec3();\r\n\t\t\tfor(var e0=0; e0<hullA.uniqueEdges.length; e0++){\r\n\t\t\t\t// Get world edge\r\n\t\t\t\thullA.uniqueEdges[e0].copy(WorldEdge0);\r\n\t\t\t\tquatA.vmult(WorldEdge0,WorldEdge0);\r\n\t\t\t\t//posA.vadd(WorldEdge0,WorldEdge0); // needed?\r\n\r\n\t\t\t\t//console.log(\"edge0:\",WorldEdge0.toString());\r\n\r\n\t\t\t\tfor(var e1=0; e1<hullB.uniqueEdges.length; e1++){\r\n\t\t\t\t\thullB.uniqueEdges[e1].copy(WorldEdge1);\r\n\t\t\t\t\tquatB.vmult(WorldEdge1,WorldEdge1);\r\n\t\t\t\t\t//posB.vadd(WorldEdge1,WorldEdge1); // needed?\r\n\t\t\t\t\t//console.log(\"edge1:\",WorldEdge1.toString());\r\n\r\n\t\t\t\t\tWorldEdge0.cross(WorldEdge1,Cross);\r\n\r\n\t\t\t\t\tcurEdgeEdge++;\r\n\t\t\t\t\tif(!Cross.almostZero()){\r\n\t\t\t\t\t\tCross.normalize();\r\n\t\t\t\t\t\tvar dist = hullA.testSepAxis( Cross, hullB, posA,quatA,posB,quatB);\r\n\t\t\t\t\t\tif(dist===false){\r\n\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif(dist<dmin){\r\n\t\t\t\t\t\t\tdmin = dist;\r\n\t\t\t\t\t\t\tCross.copy(target);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tvar deltaC = new CANNON.Vec3();\r\n\t\t\tposB.vsub(posA,deltaC);\r\n\t\t\tif((deltaC.dot(target))>0.0)\r\n\t\t\t\ttarget.negate(target);\r\n\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * @fn clipAgainstHull\r\n\t\t * @memberof CANNON.ConvexPolyhedron\r\n\t\t * @brief Clip this hull against another hull\r\n\t\t * @param CANNON.Vec3 posA\r\n\t\t * @param CANNON.Quaternion quatA\r\n\t\t * @param CANNON.ConvexPolyhedron hullB\r\n\t\t * @param CANNON.Vec3 posB\r\n\t\t * @param CANNON.Quaternion quatB\r\n\t\t * @param CANNON.Vec3 separatingNormal\r\n\t\t * @param float minDist Clamp distance\r\n\t\t * @param float maxDist\r\n\t\t * @param array result The an array of contact point objects, see clipFaceAgainstHull\r\n\t\t * @see http://bullet.googlecode.com/svn/trunk/src/BulletCollision/NarrowPhaseCollision/btPolyhedralContactClipping.cpp\r\n\t\t */\r\n\t\tthis.clipAgainstHull = function(posA,quatA,hullB,posB,quatB,separatingNormal,minDist,maxDist,result){\r\n\t\t\tif(!(posA instanceof CANNON.Vec3))\r\n\t\t\t\tthrow new Error(\"posA must be Vec3\");\r\n\t\t\tif(!(quatA instanceof CANNON.Quaternion))\r\n\t\t\t\tthrow new Error(\"quatA must be Quaternion\");\r\n\t\t\tvar hullA = this;\r\n\t\t\tvar curMaxDist = maxDist;\r\n\t\t\tvar closestFaceB = -1;\r\n\t\t\tvar dmax = -Infinity;\r\n\t\t\tvar WorldNormal = new CANNON.Vec3();\r\n\t\t\tfor(var face=0; face < hullB.faces.length; face++){\r\n\t\t\t\thullB.faceNormals[face].copy(WorldNormal);\r\n\t\t\t\tquatB.vmult(WorldNormal,WorldNormal);\r\n\t\t\t\tposB.vadd(WorldNormal,WorldNormal);\r\n\r\n\t\t\t\tvar d = WorldNormal.dot(separatingNormal);\r\n\t\t\t\tif (d > dmax){\r\n\t\t\t\t\tdmax = d;\r\n\t\t\t\t\tclosestFaceB = face;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tvar worldVertsB1 = [];\r\n\t\t\tpolyB = hullB.faces[closestFaceB];\r\n\t\t\tvar numVertices = polyB.length;\r\n\t\t\tfor(var e0=0; e0<numVertices; e0++){\r\n\t\t\t\tvar b = hullB.vertices[polyB[e0]];\r\n\t\t\t\tvar worldb = new CANNON.Vec3();\r\n\t\t\t\tb.copy(worldb);\r\n\t\t\t\tquatB.vmult(worldb,worldb);\r\n\t\t\t\tposB.vadd(worldb,worldb);\r\n\t\t\t\tworldVertsB1.push(worldb);\r\n\t\t\t}\r\n\t\t\t//console.log(\"--- clipping face: \",worldVertsB1);\r\n\t\t\tif (closestFaceB>=0)\r\n\t\t\t\tthis.clipFaceAgainstHull(separatingNormal,\r\n\t\t\t\t\tposA,\r\n\t\t\t\t\tquatA,\r\n\t\t\t\t\tworldVertsB1,\r\n\t\t\t\t\tminDist,\r\n\t\t\t\t\tmaxDist,\r\n\t\t\t\t\tresult);\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * @fn clipFaceAgainstHull\r\n\t\t * @memberof CANNON.ConvexPolyhedron\r\n\t\t * @brief Clip a face against a hull.\r\n\t\t * @param CANNON.Vec3 separatingNormal\r\n\t\t * @param CANNON.Vec3 posA\r\n\t\t * @param CANNON.Quaternion quatA\r\n\t\t * @param Array worldVertsB1 An array of CANNON.Vec3 with vertices in the world frame.\r\n\t\t * @param float minDist Distance clamping\r\n\t\t * @param float maxDist\r\n\t\t * @param Array result Array to store resulting contact points in. Will be objects with properties: point, depth, normal. These are represented in world coordinates.\r\n\t\t */\r\n\t\tthis.clipFaceAgainstHull = function(separatingNormal, posA, quatA, worldVertsB1, minDist, maxDist,result){\r\n\t\t\tif(!(separatingNormal instanceof CANNON.Vec3))\r\n\t\t\t\tthrow new Error(\"sep normal must be vector\");\r\n\t\t\tif(!(worldVertsB1 instanceof Array))\r\n\t\t\t\tthrow new Error(\"world verts must be array\");\r\n\t\t\tminDist = Number(minDist);\r\n\t\t\tmaxDist = Number(maxDist);\r\n\t\t\tvar hullA = this;\r\n\t\t\tvar worldVertsB2 = [];\r\n\t\t\tvar pVtxIn = worldVertsB1;\r\n\t\t\tvar pVtxOut = worldVertsB2;\r\n\r\n\t\t\t// Find the face with normal closest to the separating axis\r\n\t\t\tvar closestFaceA = -1;\r\n\t\t\tvar dmin = Infinity;\r\n\t\t\tvar faceANormalWS = new CANNON.Vec3();\r\n\t\t\tfor(var face=0; face<hullA.faces.length; face++){\r\n\t\t\t\thullA.faceNormals[face].copy(faceANormalWS);\r\n\t\t\t\tquatA.vmult(faceANormalWS,faceANormalWS);\r\n\t\t\t\tposA.vadd(faceANormalWS,faceANormalWS);\r\n\t\t\t\tvar d = faceANormalWS.dot(separatingNormal);\r\n\t\t\t\tif (d < dmin){\r\n\t\t\t\t\tdmin = d;\r\n\t\t\t\t\tclosestFaceA = face;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (closestFaceA<0){\r\n\t\t\t\tconsole.log(\"--- did not find any closest face... ---\");\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\t//console.log(\"closest A: \",closestFaceA);\r\n\r\n\t\t\t// Get the face and construct connected faces\r\n\t\t\tvar polyA = hullA.faces[closestFaceA];\r\n\t\t\tpolyA.connectedFaces = [];\r\n\t\t\tfor(var i=0; i<hullA.faces.length; i++)\r\n\t\t\t\tfor(var j=0; j<hullA.faces[i].length; j++)\r\n\t\t\t\t\tif(polyA.indexOf(hullA.faces[i][j])!==-1 && // Sharing a vertex\r\n\t\t\t\t\t\ti!==closestFaceA && // Not the one we are looking for connections from\r\n\t\t\t\t\t\tpolyA.connectedFaces.indexOf(i)===-1 // Not already added\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t\tpolyA.connectedFaces.push(i);\r\n\r\n\t\t\t// Clip the polygon to the back of the planes of all faces of hull A, that are adjacent to the witness face\r\n\t\t\tvar numContacts = pVtxIn.length;\r\n\t\t\tvar numVerticesA = polyA.length;\r\n\t\t\tvar edge0 = new CANNON.Vec3();\r\n\t\t\tvar WorldEdge0 = new CANNON.Vec3();\r\n\t\t\tvar worldPlaneAnormal1 = new CANNON.Vec3();\r\n\t\t\tvar planeNormalWS1 = new CANNON.Vec3();\r\n\t\t\tvar res = [];\r\n\t\t\tfor(var e0=0; e0<numVerticesA; e0++){\r\n\t\t\t\tvar a = hullA.vertices[polyA[e0]];\r\n\t\t\t\tvar b = hullA.vertices[polyA[(e0+1)%numVerticesA]];\r\n\t\t\t\ta.vsub(b,edge0);\r\n\t\t\t\tedge0.copy(WorldEdge0);\r\n\t\t\t\tquatA.vmult(WorldEdge0,WorldEdge0);\r\n\t\t\t\tposA.vadd(WorldEdge0,WorldEdge0);\r\n\t\t\t\tthis.faceNormals[closestFaceA].copy(worldPlaneAnormal1);//transA.getBasis()* btVector3(polyA.m_plane[0],polyA.m_plane[1],polyA.m_plane[2]);\r\n\t\t\t\tquatA.vmult(worldPlaneAnormal1,worldPlaneAnormal1);\r\n\t\t\t\tposA.vadd(worldPlaneAnormal1,worldPlaneAnormal1);\r\n\t\t\t\tWorldEdge0.cross(worldPlaneAnormal1,planeNormalWS1);\r\n\t\t\t\tplaneNormalWS1.negate(planeNormalWS1);\r\n\t\t\t\tvar worldA1 = new CANNON.Vec3();\r\n\t\t\t\ta.copy(worldA1);\r\n\t\t\t\tquatA.vmult(worldA1,worldA1);\r\n\t\t\t\tposA.vadd(worldA1,worldA1);\r\n\t\t\t\tvar planeEqWS1 = -worldA1.dot(planeNormalWS1);\r\n\r\n\t\t\t\tif(true){\r\n\t\t\t\t\tvar otherFace = polyA.connectedFaces[e0];\r\n\t\t\t\t\tvar localPlaneNormal = new CANNON.Vec3();\r\n\t\t\t\t\tthis.faceNormals[otherFace].copy(localPlaneNormal);\r\n\t\t\t\t\tvar localPlaneEq = planeConstant(otherFace);\r\n\r\n\t\t\t\t\tvar planeNormalWS = new CANNON.Vec3();\r\n\t\t\t\t\tlocalPlaneNormal.copy(planeNormalWS);\r\n\t\t\t\t\tquatA.vmult(planeNormalWS,planeNormalWS);\r\n\t\t\t\t\t//posA.vadd(planeNormalWS,planeNormalWS);\r\n\t\t\t\t\tvar planeEqWS = localPlaneEq - planeNormalWS.dot(posA);\r\n\t\t\t\t} else  {\r\n\t\t\t\t\tvar planeNormalWS = planeNormalWS1;\r\n\t\t\t\t\tvar planeEqWS = planeEqWS1;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Clip face against our constructed plane\r\n\t\t\t\t//console.log(\"clipping polygon \",printFace(closestFaceA),\" against plane \",planeNormalWS, planeEqWS);\r\n\t\t\t\tthis.clipFaceAgainstPlane(pVtxIn, pVtxOut, planeNormalWS, planeEqWS);\r\n\t\t\t\t//console.log(\" - clip result: \",pVtxOut);\r\n\r\n\t\t\t\t// Throw away all clipped points, but save the reamining until next clip\r\n\t\t\t\twhile(pVtxIn.length)  pVtxIn.shift();\r\n\t\t\t\twhile(pVtxOut.length) pVtxIn.push(pVtxOut.shift());\r\n\t\t\t}\r\n\r\n\t\t\t//console.log(\"Resulting points after clip:\",pVtxIn);\r\n\r\n\t\t\t// only keep contact points that are behind the witness face\r\n\t\t\tvar localPlaneNormal = new CANNON.Vec3();\r\n\t\t\tthis.faceNormals[closestFaceA].copy(localPlaneNormal);\r\n\r\n\t\t\tvar localPlaneEq = planeConstant(closestFaceA);\r\n\t\t\tvar planeNormalWS = new CANNON.Vec3();\r\n\t\t\tlocalPlaneNormal.copy(planeNormalWS);\r\n\t\t\tquatA.vmult(planeNormalWS,planeNormalWS);\r\n\r\n\t\t\tvar planeEqWS = localPlaneEq - planeNormalWS.dot(posA);\r\n\t\t\tfor (var i=0; i<pVtxIn.length; i++){\r\n\t\t\t\tvar depth = planeNormalWS.dot(pVtxIn[i]) + planeEqWS; //???\r\n\t\t\t\t/*console.log(\"depth calc from normal=\",planeNormalWS.toString(),\" and constant \"+planeEqWS+\" and vertex \",pVtxIn[i].toString(),\" gives \"+depth);*/\r\n\t\t\t\tif (depth <=minDist){\r\n\t\t\t\t\tconsole.log(\"clamped: depth=\"+depth+\" to minDist=\"+(minDist+\"\"));\r\n\t\t\t\t\tdepth = minDist;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (depth <=maxDist){\r\n\t\t\t\t\tvar point = pVtxIn[i];\r\n\t\t\t\t\t/*console.log(\"Got contact point \",point.toString(),\r\n\t\t\t\t\t \", depth=\",depth,\r\n\t\t\t\t\t \"contact normal=\",separatingNormal.toString(),\r\n\t\t\t\t\t \"plane\",planeNormalWS.toString(),\r\n\t\t\t\t\t \"planeConstant\",planeEqWS);*/\r\n\t\t\t\t\tvar p = {\r\n\t\t\t\t\t\tpoint:point,\r\n\t\t\t\t\t\tnormal:planeNormalWS,\r\n\t\t\t\t\t\tdepth: depth,\r\n\t\t\t\t\t};\r\n\t\t\t\t\tresult.push(p);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * @fn clipFaceAgainstPlane\r\n\t\t * @memberof CANNON.ConvexPolyhedron\r\n\t\t * @brief Clip a face in a hull against the back of a plane.\r\n\t\t * @param Array inVertices\r\n\t\t * @param Array outVertices\r\n\t\t * @param CANNON.Vec3 planeNormal\r\n\t\t * @param float planeConstant The constant in the mathematical plane equation\r\n\t\t */\r\n\t\tthis.clipFaceAgainstPlane = function(inVertices,outVertices, planeNormal, planeConstant){\r\n\t\t\tif(!(planeNormal instanceof CANNON.Vec3))\r\n\t\t\t\tthrow new Error(\"planeNormal must be Vec3, \"+planeNormal+\" given\");\r\n\t\t\tif(!(inVertices instanceof Array))\r\n\t\t\t\tthrow new Error(\"invertices must be Array, \"+inVertices+\" given\");\r\n\t\t\tif(!(outVertices instanceof Array))\r\n\t\t\t\tthrow new Error(\"outvertices must be Array, \"+outVertices+\" given\");\r\n\t\t\tvar n_dot_first, n_dot_last;\r\n\t\t\tvar numVerts = inVertices.length;\r\n\r\n\t\t\tif(numVerts < 2)\r\n\t\t\t\treturn outVertices;\r\n\r\n\t\t\tvar firstVertex = inVertices[inVertices.length-1];\r\n\t\t\tvar lastVertex =   inVertices[0];\r\n\r\n\t\t\tn_dot_first = planeNormal.dot(firstVertex) + planeConstant;\r\n\r\n\t\t\tfor(var vi = 0; vi < numVerts; vi++){\r\n\t\t\t\tlastVertex = inVertices[vi];\r\n\t\t\t\tn_dot_last = planeNormal.dot(lastVertex) + planeConstant;\r\n\t\t\t\tif(n_dot_first < 0){\r\n\t\t\t\t\tif(n_dot_last < 0){\r\n\t\t\t\t\t\t// Start < 0, end < 0, so output lastVertex\r\n\t\t\t\t\t\tvar newv = new CANNON.Vec3();\r\n\t\t\t\t\t\tlastVertex.copy(newv);\r\n\t\t\t\t\t\toutVertices.push(newv);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// Start < 0, end >= 0, so output intersection\r\n\t\t\t\t\t\tvar newv = new CANNON.Vec3();\r\n\t\t\t\t\t\tfirstVertex.lerp(lastVertex,\r\n\t\t\t\t\t\t\tn_dot_first / (n_dot_first - n_dot_last),\r\n\t\t\t\t\t\t\tnewv);\r\n\t\t\t\t\t\toutVertices.push(newv);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif(n_dot_last<0){\r\n\t\t\t\t\t\t// Start >= 0, end < 0 so output intersection and end\r\n\t\t\t\t\t\tvar newv = new CANNON.Vec3();\r\n\t\t\t\t\t\tfirstVertex.lerp(lastVertex,\r\n\t\t\t\t\t\t\tn_dot_first / (n_dot_first - n_dot_last),\r\n\t\t\t\t\t\t\tnewv);\r\n\t\t\t\t\t\toutVertices.push(newv);\r\n\t\t\t\t\t\toutVertices.push(lastVertex);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tfirstVertex = lastVertex;\r\n\t\t\t\tn_dot_first = n_dot_last;\r\n\t\t\t}\r\n\t\t\treturn outVertices;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Whether the face is visible from the vertex\r\n\t\t * @param array face\r\n\t\t * @param CANNON.Vec3 vertex\r\n\t\t */\r\n\t\tfunction visible( face, vertex ) {\r\n\t\t\tvar va = that.vertices[ face[ 0 ] ];\r\n\t\t\tvar vb = that.vertices[ face[ 1 ] ];\r\n\t\t\tvar vc = that.vertices[ face[ 2 ] ];\r\n\r\n\t\t\tvar n = new CANNON.Vec3();\r\n\t\t\tnormal( va, vb, vc, n );\r\n\r\n\t\t\t// distance from face to origin\r\n\t\t\tvar dist = n.dot( va );\r\n\r\n\t\t\treturn n.dot( vertex ) >= dist;\r\n\t\t}\r\n\r\n\t\tvar that = this;\r\n\t\tfunction normalOfFace(i,target){\r\n\t\t\tvar f = that.faces[i];\r\n\t\t\tvar va = that.vertices[f[0]];\r\n\t\t\tvar vb = that.vertices[f[1]];\r\n\t\t\tvar vc = that.vertices[f[2]];\r\n\t\t\treturn normal(va,vb,vc,target);\r\n\t\t}\r\n\r\n\t\tfunction planeConstant(face_i,target){\r\n\t\t\tvar f = that.faces[face_i];\r\n\t\t\tvar n = that.faceNormals[face_i];\r\n\t\t\tvar v = that.vertices[f[0]];\r\n\t\t\tvar c = -n.dot(v);\r\n\t\t\treturn c;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * @brief Get face normal given 3 vertices\r\n\t\t * @param CANNON.Vec3 va\r\n\t\t * @param CANNON.Vec3 vb\r\n\t\t * @param CANNON.Vec3 vc\r\n\t\t * @param CANNON.Vec3 target\r\n\t\t * @todo unit test?\r\n\t\t */\r\n\t\tfunction normal( va, vb, vc, target ) {\r\n\t\t\tvar cb = new CANNON.Vec3();\r\n\t\t\tvar ab = new CANNON.Vec3();\r\n\r\n\t\t\tvb.vsub(va,ab);\r\n\t\t\tvc.vsub(vb,cb);\r\n\t\t\tcb.cross(ab,target);\r\n\r\n\t\t\tif ( !target.isZero() ) {\r\n\t\t\t\ttarget.normalize();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction printFace(i){\r\n\t\t\tvar f = that.faces[i], s = \"\";\r\n\t\t\tfor(var j=0; j<f.length; j++)\r\n\t\t\t\ts += \" (\"+that.vertices[f[j]]+\")\";\r\n\t\t\treturn s;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Detect whether two edges are equal.\r\n\t\t * Note that when constructing the convex hull, two same edges can only\r\n\t\t * be of the negative direction.\r\n\t\t * @return bool\r\n\t\t */\r\n\t\tfunction equalEdge( ea, eb ) {\r\n\t\t\treturn ea[ 0 ] === eb[ 1 ] && ea[ 1 ] === eb[ 0 ];\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Create a random offset between -1e-6 and 1e-6.\r\n\t\t * @return float\r\n\t\t */\r\n\t\tfunction randomOffset() {\r\n\t\t\treturn ( Math.random() - 0.5 ) * 2 * 1e-6;\r\n\t\t}\r\n\r\n\t\tthis.calculateLocalInertia = function(mass,target){\r\n\t\t\t// Approximate with box inertia\r\n\t\t\t// Exact inertia calculation is overkill, but see http://geometrictools.com/Documentation/PolyhedralMassProperties.pdf for the correct way to do it\r\n\t\t\tvar x = this.aabbmax.x - this.aabbmin.x,\r\n\t\t\t\ty = this.aabbmax.y - this.aabbmin.y,\r\n\t\t\t\tz = this.aabbmax.z - this.aabbmin.z;\r\n\t\t\ttarget.x = 1.0 / 12.0 * mass * ( 2*y*2*y + 2*z*2*z );\r\n\t\t\ttarget.y = 1.0 / 12.0 * mass * ( 2*x*2*x + 2*z*2*z );\r\n\t\t\ttarget.z = 1.0 / 12.0 * mass * ( 2*y*2*y + 2*x*2*x );\r\n\t\t}\r\n\r\n\t\tthis.computeAABB = function(){\r\n\t\t\tvar n = this.vertices.length,\r\n\t\t\t\taabbmin = this.aabbmin,\r\n\t\t\t\taabbmax = this.aabbmax,\r\n\t\t\t\tvertices = this.vertices;\r\n\t\t\taabbmin.set(Infinity,Infinity,Infinity);\r\n\t\t\taabbmax.set(-Infinity,-Infinity,-Infinity);\r\n\t\t\tfor(var i=0; i<n; i++){\r\n\t\t\t\tvar v = vertices[i];\r\n\t\t\t\tif     (v.x < aabbmin.x) aabbmin.x = v.x;\r\n\t\t\t\telse if(v.x > aabbmax.x) aabbmax.x = v.x;\r\n\t\t\t\tif     (v.y < aabbmin.y) aabbmin.y = v.y;\r\n\t\t\t\telse if(v.y > aabbmax.y) aabbmax.y = v.y;\r\n\t\t\t\tif     (v.z < aabbmin.z) aabbmin.z = v.z;\r\n\t\t\t\telse if(v.z > aabbmax.z) aabbmax.z = v.z;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.boundingSphereRadius = function(){\r\n\t\t\t// Assume points are distributed with local (0,0,0) as center\r\n\t\t\tvar max2 = 0;\r\n\t\t\tfor(var i=0; i<this.vertices.length; i++) {\r\n\t\t\t\tvar norm2 = this.vertices[i].norm2();\r\n\t\t\t\tif(norm2>max2)\r\n\t\t\t\t\tmax2 = norm2;\r\n\t\t\t}\r\n\t\t\treturn Math.sqrt(max2);\r\n\t\t}\r\n\r\n\t\tthis.computeAABB();\r\n\t};\r\n\r\n\tCANNON.ConvexPolyhedron.prototype = new CANNON.Shape();\r\n\tCANNON.ConvexPolyhedron.prototype.constructor = CANNON.ConvexPolyhedron;/*global CANNON:true */\r\n\r\n\t/**\r\n\t * @class CANNON.Solver\r\n\t * @brief Constraint solver.\r\n\t * @todo The spook parameters should be specified for each constraint, not globally.\r\n\t * @author schteppe / https://github.com/schteppe\r\n\t * @see https://www8.cs.umu.se/kurser/5DV058/VT09/lectures/spooknotes.pdf\r\n\t */\r\n\tCANNON.Solver = function(){\r\n\r\n\t\t/**\r\n\t\t * @property int iterations\r\n\t\t * @brief The number of solver iterations determines quality of the constraints in the world. The more iterations, the more correct simulation. More iterations need more computations though. If you have a large gravity force in your world, you will need more iterations.\r\n\t\t * @todo write more about solver and iterations in the wiki\r\n\t\t * @memberof CANNON.Solver\r\n\t\t */\r\n\t\tthis.iterations = 10;\r\n\r\n\t\t/**\r\n\t\t * @property float h\r\n\t\t * @brief Time step size. The larger timestep, the less computationally heavy will your simulation be. But watch out, you don't want your bodies to tunnel each instead of colliding!\r\n\t\t * @memberof CANNON.Solver\r\n\t\t */\r\n\t\tthis.h = 1.0/60.0;\r\n\r\n\t\t/**\r\n\t\t * @property float k\r\n\t\t * @brief SPOOK parameter, spring stiffness\r\n\t\t * @memberof CANNON.Solver\r\n\t\t */\r\n\t\tthis.k = 1000;\r\n\r\n\t\t/**\r\n\t\t * @property float d\r\n\t\t * @brief SPOOK parameter, similar to damping\r\n\t\t * @memberof CANNON.Solver\r\n\t\t */\r\n\t\tthis.d = 4;\r\n\r\n\t\t/**\r\n\t\t * @property float a\r\n\t\t * @brief SPOOK parameter\r\n\t\t * @memberof CANNON.Solver\r\n\t\t */\r\n\t\tthis.a = 0.0;\r\n\r\n\t\t/**\r\n\t\t * @property float b\r\n\t\t * @brief SPOOK parameter\r\n\t\t * @memberof CANNON.Solver\r\n\t\t */\r\n\t\tthis.b = 0.0;\r\n\r\n\t\t/**\r\n\t\t * @property float eps\r\n\t\t * @brief SPOOK parameter\r\n\t\t * @memberof CANNON.Solver\r\n\t\t */\r\n\t\tthis.eps = 0.0;\r\n\r\n\t\tthis.setSpookParams(this.k,this.d);\r\n\t\tthis.reset(0);\r\n\r\n\t\t/**\r\n\t\t * @property bool debug\r\n\t\t * @brief Debug flag, will output solver data to console if true\r\n\t\t * @memberof CANNON.Solver\r\n\t\t */\r\n\t\tthis.debug = false;\r\n\r\n\t\tif(this.debug)\r\n\t\t\tconsole.log(\"a:\",this.a,\"b\",this.b,\"eps\",this.eps,\"k\",this.k,\"d\",this.d);\r\n\t};\r\n\r\n\t/**\r\n\t * @fn setSpookParams\r\n\t * @memberof CANNON.Solver\r\n\t * @brief Sets the SPOOK parameters k and d, and updates the other parameters a, b and eps accordingly.\r\n\t * @param float k\r\n\t * @param float d\r\n\t */\r\n\tCANNON.Solver.prototype.setSpookParams = function(k,d){\r\n\t\tvar h=this.h;\r\n\r\n\t\tthis.k = k;\r\n\t\tthis.d = d;\r\n\t\tthis.a = 4.0 / (h * (1 + 4 * d));\r\n\t\tthis.b = (4.0 * d) / (1 + 4 * d);\r\n\t\tthis.eps = 4.0 / (h * h * k * (1 + 4 * d));\r\n\t};\r\n\r\n\t/**\r\n\t * @fn reset\r\n\t * @memberof CANNON.Solver\r\n\t * @brief Resets the solver, removes all constraints and prepares for a new round of solving\r\n\t * @param int numbodies The number of bodies in the new system\r\n\t * @todo vlambda does not need to be instantiated again if the number of bodies is the same. Set to zero instead.\r\n\t */\r\n\tCANNON.Solver.prototype.reset = function(numbodies){\r\n\r\n\t\t// Don't know number of constraints yet... Use dynamic arrays\r\n\t\tthis.G = [];\r\n\t\tthis.MinvTrace = [];\r\n\t\tthis.Fext = [];\r\n\t\tthis.q = [];\r\n\t\tthis.qdot = [];\r\n\t\tthis.n = 0;\r\n\t\tthis.upper = [];\r\n\t\tthis.lower = [];\r\n\t\tthis.hasupper = [];\r\n\t\tthis.haslower = [];\r\n\t\tthis.i = []; // To keep track of body id's\r\n\t\tthis.j = [];\r\n\r\n\t\tthis.vxlambda = [];\r\n\t\tthis.vylambda = [];\r\n\t\tthis.vzlambda = [];\r\n\t\tthis.wxlambda = [];\r\n\t\tthis.wylambda = [];\r\n\t\tthis.wzlambda = [];\r\n\t\tfor(var i=0; i<numbodies; i++){\r\n\t\t\tthis.vxlambda.push(0);\r\n\t\t\tthis.vylambda.push(0);\r\n\t\t\tthis.vzlambda.push(0);\r\n\t\t\tthis.wxlambda.push(0);\r\n\t\t\tthis.wylambda.push(0);\r\n\t\t\tthis.wzlambda.push(0);\r\n\t\t}\r\n\t};\r\n\r\n\t/**\r\n\t * @fn addConstraint\r\n\t * @memberof CANNON.Solver\r\n\t * @brief Add a constraint to the solver\r\n\t * @param array G Jacobian vector, 12 elements (6 dof per body)\r\n\t * @param array MinvTrace The trace of the Inverse mass matrix (12 elements). The mass matrix is 12x12 elements from the beginning and 6x6 matrix per body (mass matrix and inertia matrix).\r\n\t * @param array q The constraint violation vector in generalized coordinates (12 elements)\r\n\t * @param array qdot The time-derivative of the constraint violation vector q.\r\n\t * @param array Fext External forces (12 elements)\r\n\t * @param float lower Lower constraint force bound\r\n\t * @param float upper Upper constraint force bound\r\n\t * @param int body_i The first body index\r\n\t * @param int body_j The second body index - set to -1 if none\r\n\t * @see https://www8.cs.umu.se/kurser/5DV058/VT09/lectures/spooknotes.pdf\r\n\t */\r\n\tCANNON.Solver.prototype.addConstraint = function(G,MinvTrace,q,qdot,Fext,lower,upper,body_i,body_j){\r\n\t\tif(this.debug){\r\n\t\t\tconsole.log(\"Adding constraint \",this.n,\" between body \",body_i,\" and \",body_j);\r\n\t\t\tconsole.log(\"G:\",G);\r\n\t\t\tconsole.log(\"q:\",q);\r\n\t\t\tconsole.log(\"qdot:\",qdot);\r\n\t\t\tconsole.log(\"Fext:\",Fext);\r\n\t\t\tconsole.log(\"lower:\",lower);\r\n\t\t\tconsole.log(\"upper:\",upper);\r\n\t\t}\r\n\r\n\t\tfor(var i=0; i<12; i++){\r\n\t\t\tthis.q.push(q[i]);\r\n\t\t\tthis.qdot.push(qdot[i]);\r\n\t\t\tthis.MinvTrace.push(MinvTrace[i]);\r\n\t\t\tthis.G.push(G[i]);\r\n\t\t\tthis.Fext.push(Fext[i]);\r\n\t\t}\r\n\r\n\t\tthis.upper.push(upper);\r\n\t\tthis.hasupper.push(!isNaN(upper));\r\n\t\tthis.lower.push(lower);\r\n\t\tthis.haslower.push(!isNaN(lower));\r\n\r\n\t\tthis.i.push(body_i);\r\n\t\tthis.j.push(body_j);\r\n\r\n\t\tthis.n += 1;\r\n\r\n\t\t// Return result index\r\n\t\treturn this.n - 1;\r\n\t};\r\n\r\n\t/**\r\n\t * New version of the addConstraint function, still experimental\r\n\t */\r\n\tCANNON.Solver.prototype.addConstraint2 = function(c,i,j){\r\n\t\tc.update();\r\n\t\tfor(var k=0; k<c.equations.length; k++){\r\n\t\t\tvar e = c.equations[k];\r\n\t\t\tthis.addConstraint([e.G1.x,e.G1.y,e.G1.z,\r\n\t\t\t\te.G2.x,e.G2.y,e.G2.z,\r\n\t\t\t\te.G3.x,e.G3.y,e.G3.z,\r\n\t\t\t\te.G4.x,e.G4.y,e.G4.z],\r\n\r\n\t\t\t\t[e.iM1.x,e.iM1.y,e.iM1.z,\r\n\t\t\t\t\te.iM2.x,e.iM2.y,e.iM2.z,\r\n\t\t\t\t\te.iM3.x,e.iM3.y,e.iM3.z,\r\n\t\t\t\t\te.iM4.x,e.iM4.y,e.iM4.z],\r\n\r\n\t\t\t\t[e.g1.x,e.g1.y,e.g1.z,\r\n\t\t\t\t\te.g2.x,e.g2.y,e.g2.z,\r\n\t\t\t\t\te.g3.x,e.g3.y,e.g3.z,\r\n\t\t\t\t\te.g4.x,e.g4.y,e.g4.z],\r\n\r\n\t\t\t\t[e.W1.x,e.W1.y,e.W1.z,\r\n\t\t\t\t\te.W2.x,e.W2.y,e.W2.z,\r\n\t\t\t\t\te.W3.x,e.W3.y,e.W3.z,\r\n\t\t\t\t\te.W4.x,e.W4.y,e.W4.z],\r\n\r\n\t\t\t\t[e.f1.x,e.f1.y,e.f1.z,\r\n\t\t\t\t\te.f2.x,e.f2.y,e.f2.z,\r\n\t\t\t\t\te.f3.x,e.f3.y,e.f3.z,\r\n\t\t\t\t\te.f4.x,e.f4.y,e.f4.z],\r\n\r\n\t\t\t\te.lambdamin,\r\n\t\t\t\te.lambdamax,\r\n\r\n\t\t\t\ti,\r\n\t\t\t\tj);\r\n\t\t}\r\n\t};\r\n\r\n\r\n\t/**\r\n\t * @fn addNonPenetrationConstraint\r\n\t * @memberof CANNON.Solver\r\n\t * @brief Add a non-penetration constraint to the solver\r\n\t * @param CANNON.Vec3 ni\r\n\t * @param CANNON.Vec3 ri\r\n\t * @param CANNON.Vec3 rj\r\n\t * @param CANNON.Vec3 iMi\r\n\t * @param CANNON.Vec3 iMj\r\n\t * @param CANNON.Vec3 iIi\r\n\t * @param CANNON.Vec3 iIj\r\n\t * @param CANNON.Vec3 v1\r\n\t * @param CANNON.Vec3 v2\r\n\t * @param CANNON.Vec3 w1\r\n\t * @param CANNON.Vec3 w2\r\n\t */\r\n\tCANNON.Solver.prototype.addNonPenetrationConstraint\r\n\t\t= function(i,j,xi,xj,ni,ri,rj,iMi,iMj,iIi,iIj,vi,vj,wi,wj,fi,fj,taui,tauj){\r\n\r\n\t\tvar rxn = ri.cross(ni);\r\n\t\tvar u = vj.vsub(vi); // vj.vadd(rj.cross(wj)).vsub(vi.vadd(ri.cross(wi)));\r\n\r\n\t\t// g = ( xj + rj - xi - ri ) .dot ( ni )\r\n\t\tvar qvec = xj.vadd(rj).vsub(xi.vadd(ri));\r\n\t\tvar q = qvec.dot(ni);\r\n\r\n\t\tif(q<0.0){\r\n\t\t\tif(this.debug){\r\n\t\t\t\tconsole.log(\"i:\",i,\"j\",j,\"xi\",xi.toString(),\"xj\",xj.toString());\r\n\t\t\t\tconsole.log(\"ni\",ni.toString(),\"ri\",ri.toString(),\"rj\",rj.toString());\r\n\t\t\t\tconsole.log(\"iMi\",iMi.toString(),\"iMj\",iMj.toString(),\"iIi\",iIi.toString(),\"iIj\",iIj.toString(),\"vi\",vi.toString(),\"vj\",vj.toString(),\"wi\",wi.toString(),\"wj\",wj.toString(),\"fi\",fi.toString(),\"fj\",fj.toString(),\"taui\",taui.toString(),\"tauj\",tauj.toString());\r\n\t\t\t}\r\n\t\t\tthis.addConstraint( // Non-penetration constraint jacobian\r\n\t\t\t\t[ -ni.x,  -ni.y,  -ni.z,\r\n\t\t\t\t\t-rxn.x, -rxn.y, -rxn.z,\r\n\t\t\t\t\tni.x,   ni.y,   ni.z,\r\n\t\t\t\t\trxn.x,  rxn.y,  rxn.z],\r\n\r\n\t\t\t\t// Inverse mass matrix & inertia\r\n\t\t\t\t[iMi.x, iMi.y, iMi.z,\r\n\t\t\t\t\tiIi.z, iIi.y, iIi.z,\r\n\t\t\t\t\tiMj.x, iMj.y, iMj.z,\r\n\t\t\t\t\tiIj.z, iIj.y, iIj.z],\r\n\r\n\t\t\t\t// q - constraint violation\r\n\t\t\t\t[-qvec.x,-qvec.y,-qvec.z,\r\n\t\t\t\t\t0,0,0,\r\n\t\t\t\t\tqvec.x,qvec.y,qvec.z,\r\n\t\t\t\t\t0,0,0],\r\n\r\n\t\t\t\t// qdot - motion along penetration normal\r\n\t\t\t\t[-u.x, -u.y, -u.z,\r\n\t\t\t\t\t0,0,0,\r\n\t\t\t\t\tu.x, u.y, u.z,\r\n\t\t\t\t\t0,0,0],\r\n\r\n\t\t\t\t// External force - forces & torques\r\n\t\t\t\t[fi.x,fi.y,fi.z,\r\n\t\t\t\t\ttaui.x,taui.y,taui.z,\r\n\t\t\t\t\tfj.x,fj.y,fj.z,\r\n\t\t\t\t\ttauj.x,tauj.y,tauj.z],\r\n\r\n\t\t\t\t0,\r\n\t\t\t\t'inf',\r\n\t\t\t\ti,\r\n\t\t\t\tj);\r\n\t\t}\r\n\t};\r\n\r\n\t/**\r\n\t * @fn solve\r\n\t * @memberof CANNON.Solver\r\n\t * @brief Solves the system, and sets the vlambda and wlambda properties of the Solver object\r\n\t */\r\n\tCANNON.Solver.prototype.solve = function(){\r\n\t\tvar n = this.n,\r\n\t\t\tlambda = [],\r\n\t\t\tdlambda = [],\r\n\t\t\tulambda = [],\r\n\t\t\tB = [],\r\n\t\t\tc = [],\r\n\t\t\tprecomp = [],\r\n\t\t\titerations = this.iterations,\r\n\t\t\tG = this.G,\r\n\t\t\tdebug = this.debug,\r\n\t\t\ta = this.a,\r\n\t\t\teps = this.eps;\r\n\r\n\t\tvar lower = this.lower,\r\n\t\t\thaslower = this.haslower,\r\n\t\t\tupper = this.upper,\r\n\t\t\thasupper = this.hasupper;\r\n\r\n\t\tvar vxlambda = this.vxlambda,\r\n\t\t\tvylambda = this.vylambda,\r\n\t\t\tvzlambda = this.vzlambda,\r\n\t\t\twxlambda = this.wxlambda,\r\n\t\t\twylambda = this.wylambda,\r\n\t\t\twzlambda = this.wzlambda;\r\n\t\tvar MinvTrace = this.MinvTrace;\r\n\r\n\t\tfor(var i=0; i<n; i++){\r\n\t\t\tlambda.push(0);\r\n\t\t\tdlambda.push(0);\r\n\t\t\tB.push(0);\r\n\t\t\tc.push(0);\r\n\t\t\tprecomp.push(0);\r\n\t\t\tfor(var j=0; j<12; j++)\r\n\t\t\t\tdlambda.push(0);\r\n\t\t}\r\n\r\n\t\tfor(var k = 0; k<iterations; k++){\r\n\t\t\tfor(var l=0; l<n; l++){\r\n\r\n\t\t\t\t// Bodies participating in constraint\r\n\t\t\t\tvar body_i = this.i[l];\r\n\t\t\t\tvar body_j = this.j[l];\r\n\r\n\t\t\t\tvar l12 = 12*l;\r\n\r\n\t\t\t\tif(!precomp[l]){\r\n\t\t\t\t\t// Precompute constants c[l] and B[l] for contact l\r\n\t\t\t\t\tvar G_Minv_Gt = 0.0;\r\n\t\t\t\t\tvar Gq = 0.0;\r\n\t\t\t\t\tvar GW = 0.0;\r\n\t\t\t\t\tvar GMinvf = 0.0;\r\n\t\t\t\t\t// Only add normal contributions here? See eq. 27 in spooknotes\r\n\t\t\t\t\tfor(var i=0; i<12; i++){\r\n\t\t\t\t\t\tvar addi = l12+i;\r\n\t\t\t\t\t\tG_Minv_Gt += G[addi] * MinvTrace[addi] * G[addi];\r\n\t\t\t\t\t\tGq +=        G[addi] * this.q[addi];\r\n\t\t\t\t\t\tGW +=        G[addi] * this.qdot[addi];\r\n\t\t\t\t\t\tGMinvf +=    G[addi] * MinvTrace[addi] * this.Fext[addi];\r\n\t\t\t\t\t}\r\n\t\t\t\t\tc[l] = 1.0 / (G_Minv_Gt + eps); // 1.0 / ( G*Minv*Gt + eps)\r\n\t\t\t\t\tB[l] = ( - a * Gq\r\n\t\t\t\t\t\t- this.b * GW\r\n\t\t\t\t\t\t- this.h * GMinvf);\r\n\t\t\t\t\tprecomp[l] = 1;\r\n\r\n\t\t\t\t\tif(debug){\r\n\t\t\t\t\t\tconsole.log(\"G_Minv_Gt[\"+l+\"]:\",G_Minv_Gt);\r\n\t\t\t\t\t\tconsole.log(\"Gq[\"+l+\"]:\",Gq);\r\n\t\t\t\t\t\tconsole.log(\"GW[\"+l+\"]:\",GW);\r\n\t\t\t\t\t\tconsole.log(\"GMinvf[\"+l+\"]:\",GMinvf);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar Gulambda = 0.0;\r\n\r\n\t\t\t\t//console.log(\"debuuug2.1\",vxlambda[0],Gulambda,body_i);\r\n\t\t\t\tif(body_i>=0){\r\n\t\t\t\t\tGulambda += G[0+l12] * vxlambda[body_i]; // previuously calculated lambdas\r\n\t\t\t\t\tGulambda += G[1+l12] * vylambda[body_i];\r\n\t\t\t\t\tGulambda += G[2+l12] * vzlambda[body_i];\r\n\t\t\t\t\tGulambda += G[3+l12] * wxlambda[body_i];\r\n\t\t\t\t\tGulambda += G[4+l12] * wylambda[body_i];\r\n\t\t\t\t\tGulambda += G[5+l12] * wzlambda[body_i];\r\n\t\t\t\t\tif(debug && isNaN(Gulambda))\r\n\t\t\t\t\t\tconsole.log(\"found NaN Gulambda\",vxlambda);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(body_j!==-1){\r\n\t\t\t\t\tGulambda += G[6+l12] * vxlambda[body_j];\r\n\t\t\t\t\tGulambda += G[7+l12] * vylambda[body_j];\r\n\t\t\t\t\tGulambda += G[8+l12] * vzlambda[body_j];\r\n\t\t\t\t\tGulambda += G[9+l12] * wxlambda[body_j];\r\n\t\t\t\t\tGulambda += G[10+l12] * wylambda[body_j];\r\n\t\t\t\t\tGulambda += G[11+l12] * wzlambda[body_j];\r\n\t\t\t\t}\r\n\r\n\t\t\t\tdlambda[l] = c[l] * ( B[l] - Gulambda - eps * lambda[l]);\r\n\t\t\t\tif(debug)\r\n\t\t\t\t\tconsole.log(\"dlambda[\"+l+\"]=\",dlambda[l],\"rest = \",c[l],B[l],Gulambda,eps,lambda[l],l,body_i,body_j);\r\n\t\t\t\tlambda[l] = lambda[l] + dlambda[l];\r\n\r\n\t\t\t\t// Clamp lambda if out of bounds\r\n\t\t\t\t// @todo check if limits are numbers\r\n\t\t\t\tif(haslower[l] && lambda[l]<lower[l]){\r\n\t\t\t\t\tif(debug)\r\n\t\t\t\t\t\tconsole.log(\"hit lower bound for constraint \"+l+\", truncating \"+lambda[l]+\" to the bound \"+lower[l]);\r\n\t\t\t\t\tlambda[l] = lower[l];\r\n\t\t\t\t\tdlambda[l] = lower[l]-lambda[l];\r\n\t\t\t\t}\r\n\t\t\t\tif(hasupper && lambda[l]>upper[l]){\r\n\t\t\t\t\tif(debug)\r\n\t\t\t\t\t\tconsole.log(\"hit upper bound for constraint \"+l+\", truncating \"+lambda[l]+\" to the bound \"+upper[l]);\r\n\t\t\t\t\tlambda[l] = upper[l];\r\n\t\t\t\t\tdlambda[l] = upper[l]-lambda[l];\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Add velocity changes to keep track of them\r\n\t\t\t\tif(body_i!==-1){\r\n\t\t\t\t\tvxlambda[body_i] += dlambda[l] * MinvTrace[l12+0] * G[l12+0];\r\n\t\t\t\t\tvylambda[body_i] += dlambda[l] * MinvTrace[l12+1] * G[l12+1];\r\n\t\t\t\t\tvzlambda[body_i] += dlambda[l] * MinvTrace[l12+2] * G[l12+2];\r\n\t\t\t\t\twxlambda[body_i] += dlambda[l] * MinvTrace[l12+3] * G[l12+3];\r\n\t\t\t\t\twylambda[body_i] += dlambda[l] * MinvTrace[l12+4] * G[l12+4];\r\n\t\t\t\t\twzlambda[body_i] += dlambda[l] * MinvTrace[l12+5] * G[l12+5];\r\n\t\t\t\t}\r\n\t\t\t\tif(body_j!==-1){\r\n\t\t\t\t\tvxlambda[body_j] += dlambda[l] * MinvTrace[l12+6] * G[l12+6];\r\n\t\t\t\t\tvylambda[body_j] += dlambda[l] * MinvTrace[l12+7] * G[l12+7];\r\n\t\t\t\t\tvzlambda[body_j] += dlambda[l] * MinvTrace[l12+8] * G[l12+8];\r\n\t\t\t\t\twxlambda[body_j] += dlambda[l] * MinvTrace[l12+9] * G[l12+9];\r\n\t\t\t\t\twylambda[body_j] += dlambda[l] * MinvTrace[l12+10] * G[l12+10];\r\n\t\t\t\t\twzlambda[body_j] += dlambda[l] * MinvTrace[l12+11] * G[l12+11];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(debug)\r\n\t\t\tfor(var i=0; i<this.vxlambda.length; i++)\r\n\t\t\t\tconsole.log(\"dv[\"+i+\"]=\",\r\n\t\t\t\t\tvxlambda[i],\r\n\t\t\t\t\tvylambda[i],\r\n\t\t\t\t\tvzlambda[i],\r\n\t\t\t\t\twxlambda[i],\r\n\t\t\t\t\twylambda[i],\r\n\t\t\t\t\twzlambda[i]);\r\n\t};\r\n\t/*global CANNON:true */\r\n\r\n\t/**\r\n\t * @class CANNON.EventTarget\r\n\t * @see https://github.com/mrdoob/eventtarget.js/\r\n\t */\r\n\tCANNON.EventTarget = function () {\r\n\r\n\t\tvar listeners = {};\r\n\r\n\t\tthis.addEventListener = function ( type, listener ) {\r\n\r\n\t\t\tif ( listeners[ type ] == undefined ) {\r\n\r\n\t\t\t\tlisteners[ type ] = [];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( listeners[ type ].indexOf( listener ) === - 1 ) {\r\n\r\n\t\t\t\tlisteners[ type ].push( listener );\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t\tthis.dispatchEvent = function ( event ) {\r\n\r\n\t\t\tfor ( var listener in listeners[ event.type ] ) {\r\n\r\n\t\t\t\tlisteners[ event.type ][ listener ]( event );\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t\tthis.removeEventListener = function ( type, listener ) {\r\n\r\n\t\t\tvar index = listeners[ type ].indexOf( listener );\r\n\r\n\t\t\tif ( index !== - 1 ) {\r\n\r\n\t\t\t\tlisteners[ type ].splice( index, 1 );\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t};/*global CANNON:true */\r\n\r\n\t/**\r\n\t * @class CANNON.ObjectPool\r\n\t */\r\n\tCANNON.ObjectPool = function(){\r\n\t\tthis.objects = [];\r\n\t\tthis.type = Object;\r\n\t};\r\n\r\n\tCANNON.ObjectPool.prototype.release = function(){\r\n\t\tfor(var i in arguments)\r\n\t\t\tthis.objects.push(arguments[i]);\r\n\t};\r\n\r\n\tCANNON.ObjectPool.prototype.get = function(){\r\n\t\tif(this.objects.length===0)\r\n\t\t\treturn this.constructObject();\r\n\t\telse\r\n\t\t\treturn this.objects.pop();\r\n\t};\r\n\r\n\tCANNON.ObjectPool.prototype.constructObject = function(){\r\n\t\tthrow new Error(\"constructObject() not implemented in this ObjectPool subclass yet!\");\r\n\t};/*global CANNON:true */\r\n\r\n\t/**\r\n\t * @class CANNON.Vec3Pool\r\n\t */\r\n\tCANNON.Vec3Pool = function(){\r\n\t\tCANNON.ObjectPool.call(this);\r\n\t\tthis.type = CANNON.Vec3;\r\n\t};\r\n\tCANNON.Vec3Pool.prototype = new CANNON.ObjectPool();\r\n\r\n\tCANNON.Vec3Pool.prototype.constructObject = function(){\r\n\t\treturn new CANNON.Vec3();\r\n\t};/*global CANNON:true */\r\n\r\n\t/**\r\n\t * @class CANNON.Material\r\n\t * @brief Defines a physics material.\r\n\t * @param string name\r\n\t * @author schteppe\r\n\t */\r\n\tCANNON.Material = function(name){\r\n\t\t/**\r\n\t\t * @property string name\r\n\t\t * @memberof CANNON.Material\r\n\t\t */\r\n\t\tthis.name = name;\r\n\t\tthis.id = -1;\r\n\t};\r\n\r\n\t/*global CANNON:true */\r\n\r\n\t/**\r\n\t * @class CANNON.ContactMaterial\r\n\t * @brief Defines what happens when two materials meet.\r\n\t * @param CANNON.Material m1\r\n\t * @param CANNON.Material m2\r\n\t * @param float friction\r\n\t * @param float restitution\r\n\t * @todo Contact solving parameters here too?\r\n\t */\r\n\tCANNON.ContactMaterial = function(m1, m2, friction, restitution){\r\n\r\n\t\t/// Contact material index in the world, -1 until added to the world\r\n\t\tthis.id = -1;\r\n\r\n\t\t/// The two materials participating in the contact\r\n\t\tthis.materials = [m1,m2];\r\n\r\n\t\t/// Kinetic friction\r\n\t\tthis.friction = friction!=undefined ? Number(friction) : 0.3;\r\n\r\n\t\t/// Restitution\r\n\t\tthis.restitution =      restitution!=undefined ?      Number(restitution) :      0.3;\r\n\r\n\t};\r\n\r\n\t/*global CANNON:true */\r\n\r\n\t/**\r\n\t * @class CANNON.World\r\n\t * @brief The physics world\r\n\t */\r\n\tCANNON.World = function(){\r\n\r\n\t\tCANNON.EventTarget.apply(this);\r\n\r\n\t\t/// Makes bodies go to sleep when they've been inactive\r\n\t\tthis.allowSleep = false;\r\n\r\n\t\t/// The wall-clock time since simulation start\r\n\t\tthis.time = 0.0;\r\n\r\n\t\t/// Number of timesteps taken since start\r\n\t\tthis.stepnumber = 0;\r\n\r\n\t\t/// Default and last timestep sizes\r\n\t\tthis.default_dt = 1/60;\r\n\t\tthis.last_dt = this.default_dt;\r\n\r\n\t\tthis.nextId = 0;\r\n\t\tthis.gravity = new CANNON.Vec3();\r\n\t\tthis.broadphase = null;\r\n\t\tthis.bodies = [];\r\n\r\n\t\tvar th = this;\r\n\r\n\t\t/// The constraint solver\r\n\t\tthis.solver = new CANNON.Solver();\r\n\r\n\t\t// User defined constraints\r\n\t\tthis.constraints = [];\r\n\r\n\t\t// Contact generator\r\n\t\tthis.contactgen = new CANNON.ContactGenerator();\r\n\r\n\t\t// Materials\r\n\t\tthis.materials = []; // References to all added materials\r\n\t\tthis.contactmaterials = []; // All added contact materials\r\n\t\tthis.mats2cmat = []; // Hash: (mat1_id, mat2_id) => contactmat_id\r\n\r\n\t\tthis.temp = {\r\n\t\t\tgvec:new CANNON.Vec3(),\r\n\t\t\tvi:new CANNON.Vec3(),\r\n\t\t\tvj:new CANNON.Vec3(),\r\n\t\t\twi:new CANNON.Vec3(),\r\n\t\t\twj:new CANNON.Vec3(),\r\n\t\t\tt1:new CANNON.Vec3(),\r\n\t\t\tt2:new CANNON.Vec3(),\r\n\t\t\trixn:new CANNON.Vec3(),\r\n\t\t\trjxn:new CANNON.Vec3(),\r\n\t\t\tstep_q:new CANNON.Quaternion(),\r\n\t\t\tstep_w:new CANNON.Quaternion(),\r\n\t\t\tstep_wq:new CANNON.Quaternion()\r\n\t\t};\r\n\t};\r\n\r\n\t/**\r\n\t * @fn getContactMaterial\r\n\t * @memberof CANNON.World\r\n\t * @brief Get the contact material between materials m1 and m2\r\n\t * @param CANNON.Material m1\r\n\t * @param CANNON.Material m2\r\n\t * @return CANNON.Contactmaterial The contact material if it was found.\r\n\t */\r\n\tCANNON.World.prototype.getContactMaterial = function(m1,m2){\r\n\t\tif((m1 instanceof CANNON.Material) &&\r\n\t\t\t(m2 instanceof CANNON.Material)){\r\n\r\n\t\t\tvar i = m1.id;\r\n\t\t\tvar j = m2.id;\r\n\r\n\t\t\tif(i<j){\r\n\t\t\t\tvar temp = i;\r\n\t\t\t\ti = j;\r\n\t\t\t\tj = temp;\r\n\t\t\t}\r\n\t\t\treturn this.contactmaterials[this.mats2cmat[i+j*this.materials.length]];\r\n\t\t}\r\n\t};\r\n\r\n\t/**\r\n\t * @private\r\n\t * @fn _addImpulse\r\n\t * @memberof CANNON.World\r\n\t * @brief Add an impulse to the colliding bodies i and j\r\n\t * @param int i Body number 1\r\n\t * @param int i Body number 2\r\n\t * @param CANNON.Vec3 ri Vector from body 1's center of mass to the contact point on its surface\r\n\t * @param CANNON.Vec3 ri Vector from body 1's center of mass to the contact point on its surface\r\n\t * @param CANNON.Vec3 ui The relative velocity eg. vj+wj*rj - (vi+wj*rj)\r\n\t * @param CANNON.Vec3 ni The contact normal pointing out from body i.\r\n\t * @param float e The coefficient of restitution\r\n\t * @param float mu The contact friction\r\n\t * @todo Use it in the code!\r\n\t */\r\n\tCANNON.World.prototype._addImpulse = function(i,j,ri,rj,ui,ni,e,mu){\r\n\r\n\t\tvar ri_star = ri.crossmat();\r\n\t\tvar rj_star = rj.crossmat();\r\n\r\n\t\t// Inverse inertia matrices\r\n\t\tvar ii = this.inertiax[i]>0 ? 1.0/this.inertiax[i] : 0.0;\r\n\t\tvar Iinv_i = new CANNON.Mat3([ii,0,0,\r\n\t\t\t0,ii,0,\r\n\t\t\t0,0,ii]);\r\n\t\tii = this.inertiax[j]>0 ? 1.0/this.inertiax[j] : 0.0;\r\n\t\tvar Iinv_j = new CANNON.Mat3([ii,0,0,\r\n\t\t\t0,ii,0,\r\n\t\t\t0,0,ii]);\r\n\r\n\t\t// Collision matrix:\r\n\t\t// K = 1/mi + 1/mj - ri_star*I_inv_i*ri_star - rj_star*I_inv_j*rj_star;\r\n\t\tvar im = this.invm[i] + this.invm[j];\r\n\t\tvar K = new CANNON.Mat3([im,0,0,\r\n\t\t\t0,im,0,\r\n\t\t\t0,0,im]);\r\n\t\tvar rIr_i = ri_star.mmult(Iinv_i.mmult(ri_star));\r\n\t\tvar rIr_j = rj_star.mmult(Iinv_j.mmult(rj_star));\r\n\r\n\t\t/*\r\n\t\t // @todo add back when this works\r\n\t\t for(var el = 0; el<9; el++)\r\n\t\t K.elements[el] -= (rIr_i.elements[el] + rIr_j.elements[el]);\r\n\t\t */\r\n\r\n\t\t// First assume stick friction\r\n\t\t// Final velocity if stick:\r\n\t\tvar v_f = ni.mult(-e * ui.dot(ni));\r\n\r\n\t\tvar J =  K.solve(v_f.vsub(ui));\r\n\r\n\t\t// Check if slide mode (J_t > J_n) - outside friction cone\r\n\t\tvar mu = 0.0; // quick fix\r\n\t\tif(mu>0){\r\n\t\t\tvar J_n = ni.mult(J.dot(ni));\r\n\t\t\tvar J_t = J.vsub(J_n);\r\n\t\t\tif(J_t.norm() > J_n.mult(mu).norm()){\r\n\r\n\t\t\t\t// Calculate impulse j = -(1+e)u_n / nK(n-mu*t)\r\n\t\t\t\tvar v_tang = ui.vsub(ni.mult(ui.dot(ni)));\r\n\t\t\t\tvar tangent = v_tang.mult(1.0/(v_tang.norm() + 0.0001));\r\n\t\t\t\tvar impulse = -(1+e)*(ui.dot(ni))/(ni.dot(K.vmult((ni.vsub(tangent.mult(mu))))));\r\n\t\t\t\tJ = ni.mult(impulse).vsub(tangent.mult(mu * impulse));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Add to velocities\r\n\t\tvar imi = this.invm[i];\r\n\t\tvar imj = this.invm[j];\r\n\r\n\t\t// du = uprim - u\r\n\t\t//   => uprim = du + u\r\n\t\t// vi = vi + J/mi\r\n\t\t// vj = vj - J/mj\r\n\r\n\t\t// Convert back to non-relative velocities:\r\n\t\t// u_rel = vj - vi\r\n\t\t// vi = vj - u_rel\r\n\t\t// vj = vi + u_rel\r\n\r\n\t\tthis.vx[i] +=  J.x * imi - (this.vx[j] - ui.x);\r\n\t\tthis.vy[i] +=  J.y * imi - (this.vy[j] - ui.y);\r\n\t\tthis.vz[i] +=  J.z * imi - (this.vz[j] - ui.z);\r\n\t\tthis.vx[j] -=  J.x * imj + (this.vx[i] + ui.x);\r\n\t\tthis.vy[j] -=  J.y * imj + (this.vy[i] + ui.y);\r\n\t\tthis.vz[j] -=  J.z * imj + (this.vz[i] + ui.z);\r\n\r\n\t\tvar cr = ri.cross(J);\r\n\t\tvar wadd = cr.mult(1.0/this.inertiax[i]);\r\n\r\n\t\t/*\r\n\t\t // Add rotational impulses\r\n\t\t this.wx[i] += wadd.x;\r\n\t\t this.wy[i] += wadd.y;\r\n\t\t this.wz[i] += wadd.z;\r\n\t\t cr = rj.cross(J);\r\n\t\t wadd = cr.mult(1.0/this.inertiax[j]); // @todo fix to suit asymmetric inertia\r\n\t\t this.wx[j] -= wadd.x;\r\n\t\t this.wy[j] -= wadd.y;\r\n\t\t this.wz[j] -= wadd.z;\r\n\t\t */\r\n\t};\r\n\r\n\t/**\r\n\t * @fn numObjects\r\n\t * @memberof CANNON.World\r\n\t * @brief Get number of objects in the world.\r\n\t * @return int\r\n\t */\r\n\tCANNON.World.prototype.numObjects = function(){\r\n\t\treturn this.bodies.length;\r\n\t};\r\n\r\n\t/**\r\n\t * @fn clearCollisionState\r\n\t * @memberof CANNON.World\r\n\t * @brief Clear the contact state for a body.\r\n\t * @param CANNON.Body body\r\n\t */\r\n\tCANNON.World.prototype.clearCollisionState = function(body){\r\n\t\tvar n = this.numObjects();\r\n\t\tvar i = body.id;\r\n\t\tfor(var idx=0; idx<n; idx++){\r\n\t\t\tvar j = idx;\r\n\t\t\tif(i>j) this.collision_matrix[j+i*n] = 0;\r\n\t\t\telse    this.collision_matrix[i+j*n] = 0;\r\n\t\t}\r\n\t};\r\n\r\n\t/**\r\n\t * @fn add\r\n\t * @memberof CANNON.World\r\n\t * @brief Add a rigid body to the simulation.\r\n\t * @param CANNON.Body body\r\n\t * @todo If the simulation has not yet started, why recrete and copy arrays for each body? Accumulate in dynamic arrays in this case.\r\n\t * @todo Adding an array of bodies should be possible. This would save some loops too\r\n\t */\r\n\tCANNON.World.prototype.add = function(body){\r\n\t\tvar n = this.numObjects();\r\n\t\tthis.bodies.push(body);\r\n\t\tbody.id = this.id();\r\n\t\tbody.world = this;\r\n\t\tbody.position.copy(body.initPosition);\r\n\t\tbody.velocity.copy(body.initVelocity);\r\n\t\tif(body instanceof CANNON.RigidBody){\r\n\t\t\tbody.angularVelocity.copy(body.initAngularVelocity);\r\n\t\t\tbody.quaternion.copy(body.initQuaternion);\r\n\t\t}\r\n\r\n\t\t// Create collision matrix\r\n\t\tthis.collision_matrix = new Int16Array((n+1)*(n+1));\r\n\t};\r\n\r\n\t/**\r\n\t * @fn addConstraint\r\n\t * @memberof CANNON.World\r\n\t * @brief Add a constraint to the simulation.\r\n\t * @param CANNON.Constraint c\r\n\t */\r\n\tCANNON.World.prototype.addConstraint = function(c){\r\n\t\tif(c instanceof CANNON.Constraint){\r\n\t\t\tthis.constraints.push(c);\r\n\t\t\tc.id = this.id();\r\n\t\t}\r\n\t};\r\n\r\n\t/**\r\n\t * @fn id\r\n\t * @memberof CANNON.World\r\n\t * @brief Generate a new unique integer identifyer\r\n\t * @return int\r\n\t */\r\n\tCANNON.World.prototype.id = function(){\r\n\t\treturn this.nextId++;\r\n\t};\r\n\r\n\t/**\r\n\t * @fn remove\r\n\t * @memberof CANNON.World\r\n\t * @brief Remove a rigid body from the simulation.\r\n\t * @param CANNON.Body body\r\n\t */\r\n\tCANNON.World.prototype.remove = function(body){\r\n\t\tbody.world = null;\r\n\t\tvar n = this.numObjects();\r\n\t\tvar bodies = this.bodies;\r\n\t\tfor(var i in bodies)\r\n\t\t\tif(bodies[i].id == body.id)\r\n\t\t\t\tbodies.splice(i,1);\r\n\r\n\t\t// Reset collision matrix\r\n\t\tthis.collision_matrix = new Int16Array((n-1)*(n-1));\r\n\t};\r\n\r\n\t/**\r\n\t * @fn addMaterial\r\n\t * @memberof CANNON.World\r\n\t * @brief Adds a material to the World. A material can only be added once, it's added more times then nothing will happen.\r\n\t * @param CANNON.Material m\r\n\t */\r\n\tCANNON.World.prototype.addMaterial = function(m){\r\n\t\tif(m.id==-1){\r\n\t\t\tthis.materials.push(m);\r\n\t\t\tm.id = this.materials.length-1;\r\n\r\n\t\t\t// Enlarge matrix\r\n\t\t\tvar newcm = new Int16Array((this.materials.length)\r\n\t\t\t\t* (this.materials.length));\r\n\t\t\tfor(var i=0; i<newcm.length; i++)\r\n\t\t\t\tnewcm[i] = -1;\r\n\r\n\t\t\t// Copy over old values\r\n\t\t\tfor(var i=0; i<this.materials.length-1; i++)\r\n\t\t\t\tfor(var j=0; j<this.materials.length-1; j++)\r\n\t\t\t\t\tnewcm[i+this.materials.length*j] = this.mats2cmat[i+(this.materials.length-1)*j];\r\n\t\t\tthis.mats2cmat = newcm;\r\n\r\n\t\t}\r\n\t};\r\n\r\n\t/**\r\n\t * @fn addContactMaterial\r\n\t * @memberof CANNON.World\r\n\t * @brief Adds a contact material to the World\r\n\t * @param CANNON.ContactMaterial cmat\r\n\t */\r\n\tCANNON.World.prototype.addContactMaterial = function(cmat) {\r\n\r\n\t\t// Add materials if they aren't already added\r\n\t\tthis.addMaterial(cmat.materials[0]);\r\n\t\tthis.addMaterial(cmat.materials[1]);\r\n\r\n\t\t// Save (material1,material2) -> (contact material) reference for easy access later\r\n\t\t// Make sure i>j, ie upper right matrix\r\n\t\tif(cmat.materials[0].id > cmat.materials[1].id){\r\n\t\t\ti = cmat.materials[0].id;\r\n\t\t\tj = cmat.materials[1].id;\r\n\t\t} else {\r\n\t\t\tj = cmat.materials[0].id;\r\n\t\t\ti = cmat.materials[1].id;\r\n\t\t}\r\n\r\n\t\t// Add contact material\r\n\t\tthis.contactmaterials.push(cmat);\r\n\t\tcmat.id = this.contactmaterials.length-1;\r\n\r\n\t\t// Add current contact material to the material table\r\n\t\tthis.mats2cmat[i+this.materials.length*j] = cmat.id; // index of the contact material\r\n\t};\r\n\r\n// Get the index given body id. Returns -1 on fail\r\n\tCANNON.World.prototype._id2index = function(id){\r\n\t\t// ugly but works\r\n\t\tfor(var j=0; j<this.bodies.length; j++)\r\n\t\t\tif(this.bodies[j].id === id)\r\n\t\t\t\treturn j;\r\n\t\treturn -1;\r\n\t};\r\n\r\n\t/**\r\n\t * @fn step\r\n\t * @memberof CANNON.World\r\n\t * @brief Step the simulation\r\n\t * @param float dt\r\n\t */\r\n\tCANNON.World.prototype.step = function(dt){\r\n\t\tvar world = this,\r\n\t\t\tthat = this,\r\n\t\t\tN = this.numObjects(),\r\n\t\t\tbodies = this.bodies;\r\n\r\n\t\tif(dt==undefined){\r\n\t\t\tif(this.last_dt)\r\n\t\t\t\tdt = this.last_dt;\r\n\t\t\telse\r\n\t\t\t\tdt = this.default_dt;\r\n\t\t}\r\n\r\n\t\t// Add gravity to all objects\r\n\t\tfor(var i=0; i<N; i++){\r\n\t\t\tvar bi = bodies[i];\r\n\t\t\tif(bi.motionstate & CANNON.Body.DYNAMIC){ // Only for dynamic bodies\r\n\t\t\t\tvar f = bodies[i].force, m = bodies[i].mass;\r\n\t\t\t\tf.x += world.gravity.x * m;\r\n\t\t\t\tf.y += world.gravity.y * m;\r\n\t\t\t\tf.z += world.gravity.z * m;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// 1. Collision detection\r\n\t\tvar pairs = this.broadphase.collisionPairs(this);\r\n\t\tvar p1 = pairs[0];\r\n\t\tvar p2 = pairs[1];\r\n\r\n\t\t// Get references to things that are accessed often. Will save some lookup time.\r\n\t\tvar SPHERE = CANNON.Shape.types.SPHERE;\r\n\t\tvar PLANE = CANNON.Shape.types.PLANE;\r\n\t\tvar BOX = CANNON.Shape.types.BOX;\r\n\t\tvar COMPOUND = CANNON.Shape.types.COMPOUND;\r\n\r\n\t\t// Keep track of contacts for current and previous timestep\r\n\t\t// 0: No contact between i and j\r\n\t\t// 1: Contact\r\n\t\tfunction collisionMatrixGet(i,j,current){\r\n\t\t\tif(typeof(current)==\"undefined\") current = true;\r\n\t\t\t// i == column\r\n\t\t\t// j == row\r\n\t\t\tif((current && i<j) || // Current uses upper part of the matrix\r\n\t\t\t\t(!current && i>j)){ // Previous uses lower part of the matrix\r\n\t\t\t\tvar temp = j;\r\n\t\t\t\tj = i;\r\n\t\t\t\ti = temp;\r\n\t\t\t}\r\n\t\t\treturn that.collision_matrix[i+j*N];\r\n\t\t}\r\n\r\n\t\tfunction collisionMatrixSet(i,j,value,current){\r\n\t\t\tif(typeof(current)==\"undefined\") current = true;\r\n\t\t\tif((current && i<j) || // Current uses upper part of the matrix\r\n\t\t\t\t(!current && i>j)){ // Previous uses lower part of the matrix\r\n\t\t\t\tvar temp = j;\r\n\t\t\t\tj = i;\r\n\t\t\t\ti = temp;\r\n\t\t\t}\r\n\t\t\tthat.collision_matrix[i+j*N] = parseInt(value);\r\n\t\t}\r\n\r\n\t\t// transfer old contact state data to T-1\r\n\t\tfunction collisionMatrixTick(){\r\n\t\t\tfor(var i=0; i<bodies.length; i++){\r\n\t\t\t\tfor(var j=0; j<i; j++){\r\n\t\t\t\t\tvar currentState = collisionMatrixGet(i,j,true);\r\n\t\t\t\t\tcollisionMatrixSet(i,j,currentState,false);\r\n\t\t\t\t\tcollisionMatrixSet(i,j,0,true);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tcollisionMatrixTick();\r\n\r\n\t\t// Reset contact solver\r\n\t\tthis.solver.reset(N);\r\n\r\n\t\t// Generate contacts\r\n\t\tvar oldcontacts = this.contacts;\r\n\t\tthis.contacts = [];\r\n\t\tthis.contactgen.getContacts(p1,p2,\r\n\t\t\tthis,\r\n\t\t\tthis.contacts,\r\n\t\t\toldcontacts // To be reused\r\n\t\t);\r\n\r\n\t\t// Loop over all collisions\r\n\t\tvar temp = this.temp;\r\n\t\tfor(var k=0; k<this.contacts.length; k++){\r\n\r\n\t\t\t// Current contact\r\n\t\t\tvar c = this.contacts[k];\r\n\r\n\t\t\t// Get current collision indeces\r\n\t\t\tvar bi = c.bi,\r\n\t\t\t\tbj = c.bj;\r\n\r\n\t\t\t// Resolve indeces\r\n\t\t\tvar i = this._id2index(bi.id),\r\n\t\t\t\tj = this._id2index(bj.id);\r\n\r\n\t\t\t// Check last step stats\r\n\t\t\tvar lastCollisionState = collisionMatrixGet(i,j,false);\r\n\r\n\t\t\t// Get collision properties\r\n\t\t\tvar mu = 0.3, e = 0.2;\r\n\t\t\tvar cm = this.getContactMaterial(bi.material,\r\n\t\t\t\tbj.material);\r\n\t\t\tif(cm){\r\n\t\t\t\tmu = cm.friction;\r\n\t\t\t\te = cm.restitution;\r\n\t\t\t}\r\n\r\n\t\t\t// g = ( xj + rj - xi - ri ) .dot ( ni )\r\n\t\t\tvar gvec = temp.gvec;\r\n\t\t\tgvec.set(bj.position.x + c.rj.x - bi.position.x - c.ri.x,\r\n\t\t\t\tbj.position.y + c.rj.y - bi.position.y - c.ri.y,\r\n\t\t\t\tbj.position.z + c.rj.z - bi.position.z - c.ri.z);\r\n\t\t\tvar g = gvec.dot(c.ni); // Gap, negative if penetration\r\n\r\n\t\t\t// Action if penetration\r\n\t\t\tif(g<0.0){\r\n\t\t\t\t// Now we know that i and j are in contact. Set collision matrix state\r\n\t\t\t\tcollisionMatrixSet(i,j,1,true);\r\n\r\n\t\t\t\tif(collisionMatrixGet(i,j,true)!=collisionMatrixGet(i,j,false)){\r\n\t\t\t\t\tbi.dispatchEvent({type:\"collide\", \"with\":bj});\r\n\t\t\t\t\tbj.dispatchEvent({type:\"collide\", \"with\":bi});\r\n\t\t\t\t\tbi.wakeUp();\r\n\t\t\t\t\tbj.wakeUp();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar vi = bi.velocity;\r\n\t\t\t\tvar wi = bi.angularVelocity;\r\n\t\t\t\tvar vj = bj.velocity;\r\n\t\t\t\tvar wj = bj.angularVelocity;\r\n\r\n\t\t\t\tvar n = c.ni;\r\n\t\t\t\tvar tangents = [temp.t1, temp.t2];\r\n\t\t\t\tn.tangents(tangents[0],tangents[1]);\r\n\r\n\t\t\t\tvar v_contact_i = vi.vadd(wi.cross(c.ri));\r\n\t\t\t\tvar v_contact_j = vj.vadd(wj.cross(c.rj));\r\n\t\t\t\tvar u_rel = v_contact_j.vsub(v_contact_i);\r\n\t\t\t\tvar w_rel = wj.cross(c.rj).vsub(wi.cross(c.ri));\r\n\r\n\t\t\t\tvar u = (vj.vsub(vi)); // Contact velo\r\n\t\t\t\tvar uw = (c.rj.cross(wj)).vsub(c.ri.cross(wi));\r\n\t\t\t\tu.vsub(uw,u);\r\n\r\n\t\t\t\t// Get mass properties\r\n\t\t\t\tvar iMi = bi.invMass;\r\n\t\t\t\tvar iMj = bj.invMass;\r\n\t\t\t\tvar iIxi = bi.invInertia.x;\r\n\t\t\t\tvar iIyi = bi.invInertia.y;\r\n\t\t\t\tvar iIzi = bi.invInertia.z;\r\n\t\t\t\tvar iIxj = bj.invInertia.x;\r\n\t\t\t\tvar iIyj = bj.invInertia.y;\r\n\t\t\t\tvar iIzj = bj.invInertia.z;\r\n\r\n\t\t\t\t// Add contact constraint\r\n\t\t\t\tvar rixn = temp.rixn;\r\n\t\t\t\tvar rjxn = temp.rjxn;\r\n\t\t\t\tc.ri.cross(n,rixn);\r\n\t\t\t\tc.rj.cross(n,rjxn);\r\n\r\n\t\t\t\tvar un_rel = n.mult(u_rel.dot(n)*0.5);\r\n\t\t\t\tvar u_rixn_rel = rixn.unit().mult(w_rel.dot(rixn.unit()));\r\n\t\t\t\tvar u_rjxn_rel = rjxn.unit().mult(-w_rel.dot(rjxn.unit()));\r\n\r\n\t\t\t\tvar gn = c.ni.mult(g);\r\n\t\t\t\tthis.solver\r\n\t\t\t\t\t.addConstraint( // Non-penetration constraint jacobian\r\n\t\t\t\t\t[-n.x,-n.y,-n.z,\r\n\t\t\t\t\t\t-rixn.x,-rixn.y,-rixn.z,\r\n\t\t\t\t\t\tn.x,n.y,n.z,\r\n\t\t\t\t\t\trjxn.x,rjxn.y,rjxn.z],\r\n\r\n\t\t\t\t\t// Inverse mass matrix\r\n\t\t\t\t\t[iMi,iMi,iMi,\r\n\t\t\t\t\t\tiIxi,iIyi,iIzi,\r\n\t\t\t\t\t\tiMj,iMj,iMj,\r\n\t\t\t\t\t\tiIxj,iIyj,iIzj],\r\n\r\n\t\t\t\t\t// g - constraint violation / gap\r\n\t\t\t\t\t[-gn.x,-gn.y,-gn.z,\r\n\t\t\t\t\t\t0,0,0,//-gn.x,-gn.y,-gn.z,\r\n\t\t\t\t\t\tgn.x,gn.y,gn.z,\r\n\t\t\t\t\t\t0,0,0//gn.x,gn.y,gn.z\r\n\t\t\t\t\t],\r\n\r\n\t\t\t\t\t[-un_rel.x,-un_rel.y,-un_rel.z,\r\n\t\t\t\t\t\t0,0,0,//-u_rixn_rel.x,-u_rixn_rel.y,-u_rixn_rel.z,\r\n\t\t\t\t\t\tun_rel.x,un_rel.y,un_rel.z,\r\n\t\t\t\t\t\t0,0,0//u_rjxn_rel.x,u_rjxn_rel.y,u_rjxn_rel.z\r\n\t\t\t\t\t],\r\n\r\n\t\t\t\t\t// External force - forces & torques\r\n\t\t\t\t\t[bi.force.x,bi.force.y,bi.force.z,\r\n\t\t\t\t\t\tbi.tau.x,bi.tau.y,bi.tau.z,\r\n\t\t\t\t\t\t-bj.force.x,-bj.force.y,-bj.force.z,\r\n\t\t\t\t\t\t-bj.tau.x,-bj.tau.y,-bj.tau.z],\r\n\t\t\t\t\t0,\r\n\t\t\t\t\t'inf',\r\n\t\t\t\t\ti, // These are id's, not indeces...\r\n\t\t\t\t\tj);\r\n\r\n\t\t\t\t// Friction constraints\r\n\t\t\t\tif(mu>0.0){\r\n\t\t\t\t\tvar g = that.gravity.norm();\r\n\t\t\t\t\tfor(var ti=0; ti<tangents.length; ti++){\r\n\t\t\t\t\t\tvar t = tangents[ti];\r\n\t\t\t\t\t\tvar rixt = c.ri.cross(t);\r\n\t\t\t\t\t\tvar rjxt = c.rj.cross(t);\r\n\r\n\t\t\t\t\t\tvar ut_rel = t.mult(u_rel.dot(t));\r\n\t\t\t\t\t\tvar u_rixt_rel = rixt.unit().mult(u_rel.dot(rixt.unit()));\r\n\t\t\t\t\t\tvar u_rjxt_rel = rjxt.unit().mult(-u_rel.dot(rjxt.unit()));\r\n\t\t\t\t\t\tthis.solver\r\n\t\t\t\t\t\t\t.addConstraint( // Non-penetration constraint jacobian\r\n\t\t\t\t\t\t\t[-t.x,-t.y,-t.z,\r\n\t\t\t\t\t\t\t\t-rixt.x,-rixt.y,-rixt.z,\r\n\t\t\t\t\t\t\t\tt.x,t.y,t.z,\r\n\t\t\t\t\t\t\t\trjxt.x,rjxt.y,rjxt.z\r\n\t\t\t\t\t\t\t],\r\n\r\n\t\t\t\t\t\t\t// Inverse mass matrix\r\n\t\t\t\t\t\t\t[iMi,iMi,iMi,\r\n\t\t\t\t\t\t\t\tiIxi,iIyi,iIzi,\r\n\t\t\t\t\t\t\t\tiMj,iMj,iMj,\r\n\t\t\t\t\t\t\t\tiIxj,iIyj,iIzj],\r\n\r\n\t\t\t\t\t\t\t// g - constraint violation / gap\r\n\t\t\t\t\t\t\t[0,0,0,\r\n\t\t\t\t\t\t\t\t0,0,0,\r\n\t\t\t\t\t\t\t\t0,0,0,\r\n\t\t\t\t\t\t\t\t0,0,0],\r\n\r\n\t\t\t\t\t\t\t[-ut_rel.x,-ut_rel.y,-ut_rel.z,\r\n\t\t\t\t\t\t\t\t0,0,0,//-u_rixt_rel.x,-u_rixt_rel.y,-u_rixt_rel.z,\r\n\t\t\t\t\t\t\t\tut_rel.x,ut_rel.y,ut_rel.z,\r\n\t\t\t\t\t\t\t\t0,0,0//u_rjxt_rel.x,u_rjxt_rel.y,u_rjxt_rel.z\r\n\t\t\t\t\t\t\t],\r\n\r\n\t\t\t\t\t\t\t// External force - forces & torques\r\n\t\t\t\t\t\t\t[bi.force.x,bi.force.y,bi.force.z,\r\n\t\t\t\t\t\t\t\tbi.tau.x,bi.tau.y,bi.tau.z,\r\n\t\t\t\t\t\t\t\tbj.force.x,bj.force.y,bj.force.z,\r\n\t\t\t\t\t\t\t\tbj.tau.x,bj.tau.y,bj.tau.z],\r\n\r\n\t\t\t\t\t\t\t-mu*100*(bi.mass+bj.mass),\r\n\t\t\t\t\t\t\tmu*100*(bi.mass+bj.mass),\r\n\r\n\t\t\t\t\t\t\ti, // id, not index\r\n\t\t\t\t\t\t\tj);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Add user-defined constraints\r\n\t\tfor(var i=0; i<this.constraints.length; i++){\r\n\t\t\t// Preliminary - ugly but works\r\n\t\t\tvar bj=-1, bi=-1;\r\n\t\t\tfor(var j=0; j<this.bodies.length; j++)\r\n\t\t\t\tif(this.bodies[j].id === this.constraints[i].body_i.id)\r\n\t\t\t\t\tbi = j;\r\n\t\t\t\telse if(this.bodies[j].id === this.constraints[i].body_j.id)\r\n\t\t\t\t\tbj = j;\r\n\t\t\tthis.solver.addConstraint2(this.constraints[i],bi,bj);\r\n\t\t}\r\n\r\n\t\tvar bi;\r\n\t\tif(this.solver.n){\r\n\r\n\t\t\tthis.solver.h = dt;\r\n\t\t\tthis.solver.solve();\r\n\r\n\t\t\t// Apply constraint velocities\r\n\t\t\tfor(var i=0; i<N; i++){\r\n\t\t\t\tbi = bodies[i];\r\n\t\t\t\tif(bi.motionstate & CANNON.Body.DYNAMIC){ // Only for dynamic bodies\r\n\t\t\t\t\tvar b = bodies[i];\r\n\t\t\t\t\tb.velocity.x += this.solver.vxlambda[i];\r\n\t\t\t\t\tb.velocity.y += this.solver.vylambda[i];\r\n\t\t\t\t\tb.velocity.z += this.solver.vzlambda[i];\r\n\t\t\t\t\tif(b.angularVelocity){\r\n\t\t\t\t\t\tb.angularVelocity.x += this.solver.wxlambda[i];\r\n\t\t\t\t\t\tb.angularVelocity.y += this.solver.wylambda[i];\r\n\t\t\t\t\t\tb.angularVelocity.z += this.solver.wzlambda[i];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Apply damping\r\n\t\tfor(var i=0; i<N; i++){\r\n\t\t\tbi = bodies[i];\r\n\t\t\tif(bi.motionstate & CANNON.Body.DYNAMIC){ // Only for dynamic bodies\r\n\t\t\t\tvar ld = 1.0 - bi.linearDamping;\r\n\t\t\t\tvar ad = 1.0 - bi.angularDamping;\r\n\t\t\t\tbi.velocity.mult(ld,bi.velocity);\r\n\t\t\t\tif(bi.angularVelocity)\r\n\t\t\t\t\tbi.angularVelocity.mult(ad,bi.angularVelocity);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthat.dispatchEvent({type:\"preStep\"});\r\n\r\n\t\t// Invoke pre-step callbacks\r\n\t\tfor(var i in bodies){\r\n\t\t\tvar bi = bodies[i];\r\n\t\t\tbi.preStep && bi.preStep.call(bi);\r\n\t\t}\r\n\r\n\t\t// Leap frog\r\n\t\t// vnew = v + h*f/m\r\n\t\t// xnew = x + h*vnew\r\n\t\tvar q = temp.step_q;\r\n\t\tvar w = temp.step_w;\r\n\t\tvar wq = temp.step_wq;\r\n\t\tvar DYNAMIC_OR_KINEMATIC = CANNON.Body.DYNAMIC | CANNON.Body.KINEMATIC;\r\n\t\tfor(var i=0; i<N; i++){\r\n\t\t\tvar b = bodies[i];\r\n\t\t\tif((b.motionstate & DYNAMIC_OR_KINEMATIC)){ // Only for dynamic\r\n\r\n\t\t\t\tb.velocity.x += b.force.x * b.invMass * dt;\r\n\t\t\t\tb.velocity.y += b.force.y * b.invMass * dt;\r\n\t\t\t\tb.velocity.z += b.force.z * b.invMass * dt;\r\n\r\n\t\t\t\tif(b.angularVelocity){\r\n\t\t\t\t\tb.angularVelocity.x += b.tau.x * b.invInertia.x * dt;\r\n\t\t\t\t\tb.angularVelocity.y += b.tau.y * b.invInertia.y * dt;\r\n\t\t\t\t\tb.angularVelocity.z += b.tau.z * b.invInertia.z * dt;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Use new velocity  - leap frog\r\n\t\t\t\tif(!b.isSleeping()){\r\n\t\t\t\t\tb.position.x += b.velocity.x * dt;\r\n\t\t\t\t\tb.position.y += b.velocity.y * dt;\r\n\t\t\t\t\tb.position.z += b.velocity.z * dt;\r\n\r\n\t\t\t\t\tif(b.angularVelocity){\r\n\t\t\t\t\t\tw.set(b.angularVelocity.x,\r\n\t\t\t\t\t\t\tb.angularVelocity.y,\r\n\t\t\t\t\t\t\tb.angularVelocity.z,\r\n\t\t\t\t\t\t\t0);\r\n\t\t\t\t\t\tw.mult(b.quaternion,wq);\r\n\r\n\t\t\t\t\t\tb.quaternion.x += dt * 0.5 * wq.x;\r\n\t\t\t\t\t\tb.quaternion.y += dt * 0.5 * wq.y;\r\n\t\t\t\t\t\tb.quaternion.z += dt * 0.5 * wq.z;\r\n\t\t\t\t\t\tb.quaternion.w += dt * 0.5 * wq.w;\r\n\t\t\t\t\t\tif(world.stepnumber % 3 === 0)\r\n\t\t\t\t\t\t\tb.quaternion.normalizeFast();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tb.force.set(0,0,0);\r\n\t\t\tif(b.tau) b.tau.set(0,0,0);\r\n\t\t}\r\n\r\n\t\t// Update world time\r\n\t\tworld.time += dt;\r\n\t\tworld.stepnumber += 1;\r\n\r\n\t\tthat.dispatchEvent({type:\"postStep\"});\r\n\r\n\t\t// Invoke post-step callbacks\r\n\t\tfor(var i in bodies){\r\n\t\t\tvar bi = bodies[i];\r\n\t\t\tbi.postStep && bi.postStep.call(bi);\r\n\t\t}\r\n\r\n\t\t// Sleeping update\r\n\t\tif(world.allowSleep){\r\n\t\t\tfor(var i=0; i<N; i++){\r\n\t\t\t\tvar bi = bodies[i];\r\n\t\t\t\tbi.sleepTick();\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\t/**\r\n\t * @class ContactPoint\r\n\t * @brief A representation of a contact point between two bodies. Should be generated by the ContactGenerator\r\n\t * @param CANNON.Body bi\r\n\t * @param CANNON.Body bj\r\n\t * @param CANNON.Vec3 ri Optional. The vector from the center of mass of bi to the contact.\r\n\t * @param CANNON.Vec3 rj Optional. The vector from the center of mass of bj to the contact.\r\n\t * @param CANNON.Vec3 ni Optional. Contact normal vector, pointing out of body bi.\r\n\t */\r\n\tCANNON.ContactPoint = function(bi,bj,ri,rj,ni){\r\n\t\t/**\r\n\t\t * @property CANNON.Vec3 ri\r\n\t\t * @memberof CANNON.ContactPoint\r\n\t\t */\r\n\t\tthis.ri = new CANNON.Vec3();\r\n\r\n\t\t/**\r\n\t\t * @property CANNON.Vec3 rj\r\n\t\t * @memberof CANNON.ContactPoint\r\n\t\t */\r\n\t\tthis.rj = new CANNON.Vec3();\r\n\r\n\t\t/**\r\n\t\t * @property CANNON.Vec3 ni\r\n\t\t * @memberof CANNON.ContactPoint\r\n\t\t */\r\n\t\tthis.ni = new CANNON.Vec3();\r\n\r\n\t\t// Copy over data if arguments were passed\r\n\t\tif(ri) ri.copy(this.ri);\r\n\t\tif(rj) rj.copy(this.rj);\r\n\t\tif(ni) ni.copy(this.ni);\r\n\r\n\t\t/**\r\n\t\t * @property CANNON.Body bi\r\n\t\t * @memberof CANNON.ContactPoint\r\n\t\t */\r\n\t\tthis.bi = bi;\r\n\r\n\t\t/**\r\n\t\t * @property CANNON.Body bj\r\n\t\t * @memberof CANNON.ContactPoint\r\n\t\t */\r\n\t\tthis.bj = bj;\r\n\t};/*global CANNON:true */\r\n\r\n\t/**\r\n\t * @class CANNON.ContactGenerator\r\n\t * @brief Helper class for the World. Generates ContactPoints.\r\n\t */\r\n\tCANNON.ContactGenerator = function(){\r\n\r\n\t\t/**\r\n\t\t * @property bool contactReduction\r\n\t\t * @memberof CANNON.ContactGenerator\r\n\t\t * @brief Turns on or off contact reduction. Can be handy to turn off when debugging new collision types.\r\n\t\t */\r\n\t\tthis.contactReduction = true;\r\n\r\n\t\t// Contact point objects that can be reused\r\n\t\tvar contactPointPool = [];\r\n\r\n\t\tvar v3pool = new CANNON.Vec3Pool();\r\n\r\n\t\t/**\r\n\t\t * Near phase calculation, get the contact point, normal, etc.\r\n\t\t * @param array result The result one will get back with all the contact point information\r\n\t\t * @param Shape si Colliding shape\r\n\t\t * @param Shape sj\r\n\t\t * @param Vec3 xi Position of the center of mass\r\n\t\t * @param Vec3 xj\r\n\t\t * @param Quaternion qi Rotation around the center of mass\r\n\t\t * @param Quaternion qj\r\n\t\t * @todo All collision cases\r\n\t\t */\r\n\t\tfunction nearPhase(result,si,sj,xi,xj,qi,qj,bi,bj){\r\n\t\t\tvar swapped = false;\r\n\t\t\tif(si.type>sj.type){\r\n\t\t\t\tvar temp;\r\n\t\t\t\ttemp=sj;   sj=si;   si=temp;\r\n\t\t\t\ttemp=xj;   xj=xi;   xi=temp;\r\n\t\t\t\ttemp=qj;   qj=qi;   qi=temp;\r\n\t\t\t\ttemp=bj;   bj=bi;   bi=temp;\r\n\t\t\t\tswapped = true;\r\n\t\t\t}\r\n\r\n\t\t\t/**\r\n\t\t\t * Make a contact object.\r\n\t\t\t * @return object\r\n\t\t\t * @todo reuse old contact point objects\r\n\t\t\t */\r\n\t\t\tfunction makeResult(bi,bj){\r\n\t\t\t\tif(contactPointPool.length){\r\n\t\t\t\t\tvar c = contactPointPool.pop();\r\n\t\t\t\t\tc.bi = bi;\r\n\t\t\t\t\tc.bj = bj;\r\n\t\t\t\t\treturn c;\r\n\t\t\t\t} else\r\n\t\t\t\t\treturn new CANNON.ContactPoint(bi,bj);\r\n\t\t\t}\r\n\r\n\t\t\t/**\r\n\t\t\t * Swaps the body references in the contact\r\n\t\t\t * @param object r\r\n\t\t\t */\r\n\t\t\tfunction swapResult(r){\r\n\t\t\t\tvar temp;\r\n\t\t\t\ttemp = r.ri; r.ri = r.rj; r.rj = temp;\r\n\t\t\t\tr.ni.negate(r.ni);\r\n\t\t\t\ttemp = r.bi; r.bi = r.bj; r.bj = temp;\r\n\t\t\t}\r\n\r\n\t\t\t/**\r\n\t\t\t * Go recursive for compound shapes\r\n\t\t\t * @param Shape si\r\n\t\t\t * @param CompoundShape sj\r\n\t\t\t */\r\n\t\t\tfunction recurseCompound(result,si,sj,xi,xj,qi,qj,bi,bj){\r\n\t\t\t\tfor(var i=0; i<sj.childShapes.length; i++){\r\n\t\t\t\t\tvar r = [];\r\n\t\t\t\t\tnearPhase(r,\r\n\t\t\t\t\t\tsi,\r\n\t\t\t\t\t\tsj.childShapes[i],\r\n\t\t\t\t\t\txi,\r\n\t\t\t\t\t\txj.vadd(qj.vmult(sj.childOffsets[i])), // Transform the shape to its local frame\r\n\t\t\t\t\t\tqi,\r\n\t\t\t\t\t\tqj.mult(sj.childOrientations[i]),\r\n\t\t\t\t\t\tbi,\r\n\t\t\t\t\t\tbj);\r\n\t\t\t\t\t// Transform back\r\n\t\t\t\t\tfor(var j=0; j<r.length; j++){\r\n\t\t\t\t\t\tr[j].rj.vadd(qj.vmult(sj.childOffsets[i]),r[j].rj);\r\n\t\t\t\t\t\tresult.push(r[j]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif(si.type==CANNON.Shape.types.SPHERE){\r\n\t\t\t\tif(sj.type==CANNON.Shape.types.SPHERE){ // sphere-sphere\r\n\r\n\t\t\t\t\t// We will have one contact in this case\r\n\t\t\t\t\tvar r = makeResult(bi,bj);\r\n\r\n\t\t\t\t\t// Contact normal\r\n\t\t\t\t\txj.vsub(xi,r.ni);\r\n\t\t\t\t\tr.ni.normalize();\r\n\r\n\t\t\t\t\t// Contact point locations\r\n\t\t\t\t\tr.ni.copy(r.ri);\r\n\t\t\t\t\tr.ni.copy(r.rj);\r\n\t\t\t\t\tr.ri.mult(si.radius,r.ri);\r\n\t\t\t\t\tr.rj.mult(-sj.radius,r.rj);\r\n\t\t\t\t\tresult.push(r);\r\n\r\n\t\t\t\t} else if(sj.type==CANNON.Shape.types.PLANE){ // sphere-plane\r\n\r\n\t\t\t\t\t// We will have one contact in this case\r\n\t\t\t\t\tvar r = makeResult(bi,bj);\r\n\r\n\t\t\t\t\t// Contact normal\r\n\t\t\t\t\tsj.normal.copy(r.ni);\r\n\t\t\t\t\tqj.vmult(r.ni,r.ni);\r\n\t\t\t\t\tr.ni.negate(r.ni); // body i is the sphere, flip normal\r\n\t\t\t\t\tr.ni.normalize();\r\n\r\n\t\t\t\t\t// Vector from sphere center to contact point\r\n\t\t\t\t\tr.ni.mult(si.radius,r.ri);\r\n\r\n\t\t\t\t\t// Project down sphere on plane\r\n\t\t\t\t\tvar point_on_plane_to_sphere = xi.vsub(xj);\r\n\t\t\t\t\tvar plane_to_sphere_ortho = r.ni.mult(r.ni.dot(point_on_plane_to_sphere));\r\n\t\t\t\t\tr.rj = point_on_plane_to_sphere.vsub(plane_to_sphere_ortho); // The sphere position projected to plane\r\n\t\t\t\t\tif(plane_to_sphere_ortho.norm() <= si.radius)\r\n\t\t\t\t\t\tresult.push(r);\r\n\r\n\t\t\t\t} else if(sj.type==CANNON.Shape.types.BOX){ // sphere-box\r\n\r\n\t\t\t\t\t// we refer to the box as body j\r\n\t\t\t\t\tvar box_to_sphere =  xi.vsub(xj);\r\n\t\t\t\t\tvar sides = sj.getSideNormals(true,qj);\r\n\t\t\t\t\tvar R =     si.radius;\r\n\t\t\t\t\tvar penetrating_sides = [];\r\n\r\n\t\t\t\t\t// Check side (plane) intersections\r\n\t\t\t\t\tvar found = false;\r\n\t\t\t\t\tfor(var idx=0; idx<sides.length && !found; idx++){ // Max 3 penetrating sides\r\n\t\t\t\t\t\tvar ns = sides[idx].copy();\r\n\t\t\t\t\t\tvar h = ns.norm();\r\n\t\t\t\t\t\tns.normalize();\r\n\t\t\t\t\t\tvar dot = box_to_sphere.dot(ns);\r\n\t\t\t\t\t\tif(dot<h+R && dot>0){\r\n\t\t\t\t\t\t\t// Intersects plane. Now check the other two dimensions\r\n\t\t\t\t\t\t\tvar ns1 = sides[(idx+1)%3].copy();\r\n\t\t\t\t\t\t\tvar ns2 = sides[(idx+2)%3].copy();\r\n\t\t\t\t\t\t\tvar h1 = ns1.norm();\r\n\t\t\t\t\t\t\tvar h2 = ns2.norm();\r\n\t\t\t\t\t\t\tns1.normalize();\r\n\t\t\t\t\t\t\tns2.normalize();\r\n\t\t\t\t\t\t\tvar dot1 = box_to_sphere.dot(ns1);\r\n\t\t\t\t\t\t\tvar dot2 = box_to_sphere.dot(ns2);\r\n\t\t\t\t\t\t\tif(dot1<h1 && dot1>-h1 && dot2<h2 && dot2>-h2){\r\n\t\t\t\t\t\t\t\tfound = true;\r\n\t\t\t\t\t\t\t\tvar r = makeResult(bi,bj);\r\n\t\t\t\t\t\t\t\tns.mult(-R,r.ri); // Sphere r\r\n\t\t\t\t\t\t\t\tns.copy(r.ni);\r\n\t\t\t\t\t\t\t\tr.ni.negate(r.ni); // Normal should be out of sphere\r\n\t\t\t\t\t\t\t\tns.mult(h).vadd(ns1.mult(dot1)).vadd(ns2.mult(dot2),r.rj); // box\r\n\t\t\t\t\t\t\t\tresult.push(r);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Check corners\r\n\t\t\t\t\tvar rj = v3pool.get();\r\n\t\t\t\t\tfor(var j=0; j<2 && !found; j++){\r\n\t\t\t\t\t\tfor(var k=0; k<2 && !found; k++){\r\n\t\t\t\t\t\t\tfor(var l=0; l<2 && !found; l++){\r\n\t\t\t\t\t\t\t\trj.set(0,0,0);\r\n\t\t\t\t\t\t\t\tif(j) rj.vadd(sides[0],rj);\r\n\t\t\t\t\t\t\t\telse  rj.vsub(sides[0],rj);\r\n\t\t\t\t\t\t\t\tif(k) rj.vadd(sides[1],rj);\r\n\t\t\t\t\t\t\t\telse  rj.vsub(sides[1],rj);\r\n\t\t\t\t\t\t\t\tif(l) rj.vadd(sides[2],rj);\r\n\t\t\t\t\t\t\t\telse  rj.vsub(sides[2],rj);\r\n\r\n\t\t\t\t\t\t\t\t// World position of corner\r\n\t\t\t\t\t\t\t\tvar sphere_to_corner = xj.vadd(rj).vsub(xi);\r\n\t\t\t\t\t\t\t\tif(sphere_to_corner.norm()<R){\r\n\t\t\t\t\t\t\t\t\tfound = true;\r\n\t\t\t\t\t\t\t\t\tvar r = makeResult(bi,bj);\r\n\t\t\t\t\t\t\t\t\tsphere_to_corner.copy(r.ri);\r\n\t\t\t\t\t\t\t\t\tr.ri.normalize();\r\n\t\t\t\t\t\t\t\t\tr.ri.copy(r.ni);\r\n\t\t\t\t\t\t\t\t\tr.ri.mult(R,r.ri);\r\n\t\t\t\t\t\t\t\t\trj.copy(r.rj);\r\n\t\t\t\t\t\t\t\t\tresult.push(r);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tv3pool.release(rj);\r\n\t\t\t\t\trj = null;\r\n\r\n\t\t\t\t\t// Check edges\r\n\t\t\t\t\tvar edgeTangent = v3pool.get();\r\n\t\t\t\t\tvar edgeCenter = v3pool.get();\r\n\t\t\t\t\tvar r = v3pool.get(); // r = edge center to sphere center\r\n\t\t\t\t\tvar orthogonal = v3pool.get();\r\n\t\t\t\t\tvar dist = v3pool.get();\r\n\t\t\t\t\tfor(var j=0; j<sides.length && !found; j++){\r\n\t\t\t\t\t\tfor(var k=0; k<sides.length && !found; k++){\r\n\t\t\t\t\t\t\tif(j%3!=k%3){\r\n\t\t\t\t\t\t\t\t// Get edge tangent\r\n\t\t\t\t\t\t\t\tsides[k].cross(sides[j],edgeTangent);\r\n\t\t\t\t\t\t\t\tedgeTangent.normalize();\r\n\t\t\t\t\t\t\t\tsides[j].vadd(sides[k], edgeCenter);\r\n\t\t\t\t\t\t\t\txi.copy(r);\r\n\t\t\t\t\t\t\t\tr.vsub(edgeCenter,r);\r\n\t\t\t\t\t\t\t\tr.vsub(xj,r);\r\n\t\t\t\t\t\t\t\tvar orthonorm = r.dot(edgeTangent); // distance from edge center to sphere center in the tangent direction\r\n\t\t\t\t\t\t\t\tedgeTangent.mult(orthonorm,orthogonal); // Vector from edge center to sphere center in the tangent direction\r\n\r\n\t\t\t\t\t\t\t\t// Find the third side orthogonal to this one\r\n\t\t\t\t\t\t\t\tvar l = 0;\r\n\t\t\t\t\t\t\t\twhile(l==j%3 || l==k%3) l++;\r\n\r\n\t\t\t\t\t\t\t\t// vec from edge center to sphere projected to the plane orthogonal to the edge tangent\r\n\t\t\t\t\t\t\t\txi.copy(dist);\r\n\t\t\t\t\t\t\t\tdist.vsub(orthogonal,dist);\r\n\t\t\t\t\t\t\t\tdist.vsub(edgeCenter,dist);\r\n\t\t\t\t\t\t\t\tdist.vsub(xj,dist);\r\n\r\n\t\t\t\t\t\t\t\t// Distances in tangent direction and distance in the plane orthogonal to it\r\n\t\t\t\t\t\t\t\tvar tdist = Math.abs(orthonorm);\r\n\t\t\t\t\t\t\t\tvar ndist = dist.norm();\r\n\r\n\t\t\t\t\t\t\t\tif(tdist < sides[l].norm() && ndist<R){\r\n\t\t\t\t\t\t\t\t\tfound = true;\r\n\t\t\t\t\t\t\t\t\tvar res = makeResult(bi,bj);\r\n\t\t\t\t\t\t\t\t\tedgeCenter.vadd(orthogonal,res.rj); // box rj\r\n\t\t\t\t\t\t\t\t\tres.rj.copy(res.rj);\r\n\t\t\t\t\t\t\t\t\tdist.negate(res.ni);\r\n\t\t\t\t\t\t\t\t\tres.ni.normalize();\r\n\r\n\t\t\t\t\t\t\t\t\tres.rj.copy(res.ri);\r\n\t\t\t\t\t\t\t\t\tres.ri.vadd(xj,res.ri);\r\n\t\t\t\t\t\t\t\t\tres.ri.vsub(xi,res.ri);\r\n\t\t\t\t\t\t\t\t\tres.ri.normalize();\r\n\t\t\t\t\t\t\t\t\tres.ri.mult(R,res.ri);\r\n\r\n\t\t\t\t\t\t\t\t\tresult.push(res);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tv3pool.release(edgeTangent,edgeCenter,r,orthogonal,dist);\r\n\r\n\t\t\t\t} else if(sj.type==CANNON.Shape.types.COMPOUND){ // sphere-compound\r\n\t\t\t\t\trecurseCompound(result,si,sj,xi,xj,qi,qj,bi,bj);\r\n\r\n\t\t\t\t} else if(sj.type==CANNON.Shape.types.CONVEXPOLYHEDRON){ // sphere-convexpolyhedron\r\n\t\t\t\t\tthrow new Error(\"sphere/convexpolyhedron contacts not implemented yet.\");\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if(si.type==CANNON.Shape.types.PLANE){\r\n\r\n\t\t\t\tif(sj.type==CANNON.Shape.types.PLANE){ // plane-plane\r\n\t\t\t\t\tthrow \"Plane-plane collision... wait, you did WHAT?\";\r\n\r\n\t\t\t\t} else if(sj.type==CANNON.Shape.types.BOX){ // plane-box\r\n\r\n\t\t\t\t\t// Collision normal\r\n\t\t\t\t\tvar n = si.normal.copy();\r\n\r\n\t\t\t\t\t// Loop over corners\r\n\t\t\t\t\tvar numcontacts = 0;\r\n\t\t\t\t\tvar corners = sj.getCorners(qj);\r\n\t\t\t\t\tfor(var idx=0; idx<corners.length && numcontacts<=4; idx++){ // max 4 corners against plane\r\n\t\t\t\t\t\tvar r = makeResult(bi,bj);\r\n\t\t\t\t\t\tvar worldCorner = corners[idx].vadd(xj);\r\n\t\t\t\t\t\tcorners[idx].copy(r.rj);\r\n\r\n\t\t\t\t\t\t// Project down corner to plane to get xj\r\n\t\t\t\t\t\tvar point_on_plane_to_corner = worldCorner.vsub(xi);\r\n\t\t\t\t\t\tvar d = n.dot(point_on_plane_to_corner);\r\n\t\t\t\t\t\tif(d<=0){\r\n\t\t\t\t\t\t\tnumcontacts++;\r\n\t\t\t\t\t\t\tvar plane_to_corner = n.mult(d);\r\n\t\t\t\t\t\t\tpoint_on_plane_to_corner.vsub(plane_to_corner,r.ri);\r\n\r\n\t\t\t\t\t\t\t// Set contact normal\r\n\t\t\t\t\t\t\tn.copy(r.ni);\r\n\r\n\t\t\t\t\t\t\t// Add contact\r\n\t\t\t\t\t\t\tresult.push(r);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else if(sj.type==CANNON.Shape.types.COMPOUND){ // plane-compound\r\n\t\t\t\t\trecurseCompound(result,si,sj,xi,xj,qi,qj,bi,bj);\r\n\r\n\t\t\t\t} else if(sj.type==CANNON.Shape.types.CONVEXPOLYHEDRON){ // plane-convex polyhedron\r\n\t\t\t\t\t// Separating axis is the plane normal\r\n\t\t\t\t\t// Create a virtual box polyhedron for the plane\r\n\t\t\t\t\tvar t1 = v3pool.get();\r\n\t\t\t\t\tvar t2 = v3pool.get();\r\n\t\t\t\t\tsi.normal.tangents(t1,t2);\r\n\t\t\t\t\tt1.mult(100000,t1);\r\n\t\t\t\t\tt2.mult(100000,t2);\r\n\t\t\t\t\tvar n = v3pool.get();\r\n\t\t\t\t\tsi.normal.copy(n);\r\n\t\t\t\t\tvar verts = [new CANNON.Vec3(-t1.x -t2.x -n.x, -t1.y -t2.y -n.y, -t1.z -t2.z -n.z), // ---\r\n\t\t\t\t\t\tnew CANNON.Vec3( t1.x -t2.x +0*n.x,  t1.y -t2.y +0*n.y,  t1.z -t2.z +0*n.z), // +-+\r\n\t\t\t\t\t\tnew CANNON.Vec3( t1.x +t2.x -n.x,  t1.y +t2.y -n.y,  t1.z +t2.z -n.z), // ++- \r\n\t\t\t\t\t\tnew CANNON.Vec3(-t1.x +t2.x -n.x, -t1.y +t2.y -n.y, -t1.z +t2.z -n.z), // -+-\r\n\t\t\t\t\t\tnew CANNON.Vec3(-t1.x -t2.x +0*n.x, -t1.y -t2.y +0*n.y, -t1.z -t2.z +0*n.z), // --+\r\n\t\t\t\t\t\tnew CANNON.Vec3(+t1.x -t2.x +0*n.x,  t1.y -t2.y +0*n.y,  t1.z -t2.z +0*n.z), // +-+\r\n\t\t\t\t\t\tnew CANNON.Vec3(+t1.x +t2.x +0*n.x, +t1.y +t2.y +0*n.y,  t1.z +t2.z +0*n.z), // +++\r\n\t\t\t\t\t\tnew CANNON.Vec3(-t1.x +t2.x +0*n.x, -t1.y +t2.y +0*n.y, -t1.z +t2.z +0*n.z)]; // -++\r\n\t\t\t\t\tt1.normalize();\r\n\t\t\t\t\tt2.normalize();\r\n\t\t\t\t\tvar planehull = new CANNON.ConvexPolyhedron(verts,\r\n\t\t\t\t\t\t[\r\n\t\t\t\t\t\t\t[0,1,2,3], // -z\r\n\t\t\t\t\t\t\t[4,5,6,7], // +z\r\n\t\t\t\t\t\t\t[0,1,4,5], // -y\r\n\t\t\t\t\t\t\t[2,3,6,7], // +y\r\n\t\t\t\t\t\t\t[0,3,4,7], // -x\r\n\t\t\t\t\t\t\t[1,2,5,6], // +x\r\n\t\t\t\t\t\t],\r\n\r\n\t\t\t\t\t\t[new CANNON.Vec3( -n.x, -n.y, -n.z),\r\n\t\t\t\t\t\t\tnew CANNON.Vec3(  n.x,  n.y,  n.z),\r\n\t\t\t\t\t\t\tnew CANNON.Vec3(-t2.x,-t2.y,-t2.z),\r\n\t\t\t\t\t\t\tnew CANNON.Vec3( t2.x, t2.y, t2.z),\r\n\t\t\t\t\t\t\tnew CANNON.Vec3(-t1.x,-t1.y,-t1.z),\r\n\t\t\t\t\t\t\tnew CANNON.Vec3( t1.x, t1.y, t1.z)]);\r\n\r\n\t\t\t\t\tvar sepAxis = v3pool.get();\r\n\t\t\t\t\tn.negate(sepAxis);\r\n\t\t\t\t\tvar q = v3pool.get();\r\n\t\t\t\t\tif(sj.testSepAxis(sepAxis,planehull,xj,qj,xi,qi)!==false){\r\n\t\t\t\t\t\tvar res = [];\r\n\t\t\t\t\t\tplanehull.clipAgainstHull(xi,qi,sj,xj,qj,sepAxis,-100,100,res);\r\n\t\t\t\t\t\tfor(var j=0; j<res.length; j++){\r\n\t\t\t\t\t\t\tvar r = makeResult(bi,bj);\r\n\t\t\t\t\t\t\tsepAxis.negate(r.ni);\r\n\t\t\t\t\t\t\tres[j].normal.negate(q);\r\n\t\t\t\t\t\t\tq.mult(res[j].depth,q);\r\n\t\t\t\t\t\t\tr.ri.set(res[j].point.x + q.x,\r\n\t\t\t\t\t\t\t\tres[j].point.y + q.y,\r\n\t\t\t\t\t\t\t\tres[j].point.z + q.z);\r\n\t\t\t\t\t\t\tr.rj.set(res[j].point.x,\r\n\t\t\t\t\t\t\t\tres[j].point.y,\r\n\t\t\t\t\t\t\t\tres[j].point.z);\r\n\t\t\t\t\t\t\t// Contact points are in world coordinates. Transform back to relative\r\n\t\t\t\t\t\t\tr.rj.vsub(xj,r.rj);\r\n\t\t\t\t\t\t\tr.ri.vsub(xi,r.ri);\r\n\t\t\t\t\t\t\tresult.push(r);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tv3pool.release(q,t1,t2,sepAxis,n);\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if(si.type==CANNON.Shape.types.BOX){\r\n\r\n\t\t\t\tif(sj.type==CANNON.Shape.types.BOX){ // box-box\r\n\t\t\t\t\t// Do convex polyhedron instead\r\n\t\t\t\t\tnearPhase(result,\r\n\t\t\t\t\t\tsi.convexPolyhedronRepresentation,\r\n\t\t\t\t\t\tsj.convexPolyhedronRepresentation,\r\n\t\t\t\t\t\txi,xj,qi,qj,bi,bj);\r\n\r\n\t\t\t\t} else if(sj.type==CANNON.Shape.types.COMPOUND){ // box-compound\r\n\t\t\t\t\trecurseCompound(result,si,sj,xi,xj,qi,qj,bi,bj);\r\n\r\n\t\t\t\t} else if(sj.type==CANNON.Shape.types.CONVEXPOLYHEDRON){ // box-convexpolyhedron\r\n\t\t\t\t\tnearPhase(result,\r\n\t\t\t\t\t\tsi.convexPolyhedronRepresentation,\r\n\t\t\t\t\t\tsj,xi,xj,qi,qj,bi,bj);\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if(si.type==CANNON.Shape.types.COMPOUND){\r\n\r\n\t\t\t\tif(sj.type==CANNON.Shape.types.COMPOUND){ // compound-compound\r\n\t\t\t\t\trecurseCompound(result,si,sj,xi,xj,qi,qj,bi,bj);\r\n\r\n\t\t\t\t} else if(sj.type==CANNON.Shape.types.CONVEXPOLYHEDRON){ // compound-convex polyhedron\r\n\t\t\t\t\trecurseCompound(result,sj,si,xj,xi,qj,qi,bj,bi);\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if(si.type==CANNON.Shape.types.CONVEXPOLYHEDRON){\r\n\r\n\t\t\t\tif(sj.type==CANNON.Shape.types.CONVEXPOLYHEDRON){ // convex polyhedron - convex polyhedron\r\n\t\t\t\t\tvar sepAxis = new CANNON.Vec3();\r\n\t\t\t\t\tif(si.findSeparatingAxis(sj,xi,qi,xj,qj,sepAxis)){\r\n\t\t\t\t\t\tvar res = [];\r\n\t\t\t\t\t\tvar q = new CANNON.Vec3();\r\n\t\t\t\t\t\tsi.clipAgainstHull(xi,qi,sj,xj,qj,sepAxis,-100,100,res);\r\n\t\t\t\t\t\tfor(var j=0; j<res.length; j++){\r\n\t\t\t\t\t\t\tvar r = makeResult(bi,bj);\r\n\t\t\t\t\t\t\tsepAxis.negate(r.ni);\r\n\t\t\t\t\t\t\tres[j].normal.negate(q);\r\n\t\t\t\t\t\t\tq.mult(res[j].depth,q);\r\n\t\t\t\t\t\t\tr.ri.set(res[j].point.x + q.x,\r\n\t\t\t\t\t\t\t\tres[j].point.y + q.y,\r\n\t\t\t\t\t\t\t\tres[j].point.z + q.z);\r\n\t\t\t\t\t\t\tr.rj.set(res[j].point.x,\r\n\t\t\t\t\t\t\t\tres[j].point.y,\r\n\t\t\t\t\t\t\t\tres[j].point.z);\r\n\t\t\t\t\t\t\t// Contact points are in world coordinates. Transform back to relative\r\n\t\t\t\t\t\t\tr.rj.vsub(xj,r.rj);\r\n\t\t\t\t\t\t\tr.ri.vsub(xi,r.ri);\r\n\t\t\t\t\t\t\tresult.push(r);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Swap back if we swapped bodies in the beginning\r\n\t\t\tfor(var i=0; swapped && i<result.length; i++)\r\n\t\t\t\tswapResult(result[i]);\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * @fn reduceContacts\r\n\t\t * @memberof CANNON.ContactGenerator\r\n\t\t * @brief Removes unnecessary members of an array of CANNON.ContactPoint.\r\n\t\t */\r\n\t\tthis.reduceContacts = function(contacts){\r\n\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * @fn getContacts\r\n\t\t * @memberof CANNON.ContactGenerator\r\n\t\t * @param array p1 Array of body indices\r\n\t\t * @param array p2 Array of body indices\r\n\t\t * @param CANNON.World world\r\n\t\t * @param array result Array to store generated contacts\r\n\t\t * @param array oldcontacts Optional. Array of reusable contact objects\r\n\t\t */\r\n\t\tthis.getContacts = function(p1,p2,world,result,oldcontacts){\r\n\r\n\t\t\t// Save old contact objects\r\n\t\t\tfor(var i=0; oldcontacts && i<oldcontacts.length; i++)\r\n\t\t\t\tcontactPointPool.push(oldcontacts[i]);\r\n\r\n\t\t\tfor(var k=0; k<p1.length; k++){\r\n\t\t\t\t// Get current collision indeces\r\n\t\t\t\tvar bi = p1[k],\r\n\t\t\t\t\tbj = p2[k];\r\n\r\n\t\t\t\t// Get contacts\r\n\t\t\t\tnearPhase(result,\r\n\t\t\t\t\tbi.shape,\r\n\t\t\t\t\tbj.shape,\r\n\t\t\t\t\tbi.position,\r\n\t\t\t\t\tbj.position,\r\n\t\t\t\t\tbi.quaternion,\r\n\t\t\t\t\tbj.quaternion,\r\n\t\t\t\t\tbi,\r\n\t\t\t\t\tbj\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t}\r\n\t};/*global CANNON:true */\r\n\r\n\t/**\r\n\t * Constraint base class\r\n\t * @author schteppe\r\n\t */\r\n\tCANNON.Constraint = function(){\r\n\r\n\t\t/**\r\n\t\t * @property array equations\r\n\t\t * @brief A number of CANNON.Equation's that belongs to this Constraint\r\n\t\t */\r\n\t\tthis.equations = [];\r\n\r\n\t\tthis.id = -1;\r\n\r\n\t};\r\n\tCANNON.Constraint.prototype.constructor = CANNON.Constraint;\r\n\r\n\t/**\r\n\t * @brief Updates the internal numbers, calculates the Jacobian etc.\r\n\t */\r\n\tCANNON.Constraint.prototype.update = function(){\r\n\t\tthrow \"update() not implemented in this Constraint subclass!\";\r\n\t};\r\n\t/**\r\n\t * Contact constraint class\r\n\t * @author schteppe\r\n\t * @param CANNON.RigidBody bodyA\r\n\t * @param CANNON.RigidBody bodyB\r\n\t * @param float friction\r\n\t * @todo test\r\n\t */\r\n\tCANNON.ContactConstraint = function(bodyA,bodyB,slipForce){\r\n\t\tCANNON.Constraint.call(this);\r\n\t\tthis.body_i = bodyA;\r\n\t\tthis.body_j = bodyB;\r\n\t\tthis.contact = contact;\r\n\t\tthis.slipForce = slipForce;\r\n\t\tthis.unused_equations = [];\r\n\t\tthis.temp = {\r\n\t\t\trixn:new CANNON.Vec3(),\r\n\t\t\trjxn:new CANNON.Vec3(),\r\n\t\t\tt1:new CANNON.Vec3(),\r\n\t\t\tt2:new CANNON.Vec3()\r\n\t\t};\r\n\t};\r\n\r\n\tCANNON.ContactConstraint.prototype = new CANNON.Constraint();\r\n\tCANNON.ContactConstraint.prototype.constructor = CANNON.ContactConstraint;\r\n\r\n\tCANNON.ContactConstraint.prototype.update = function(){\r\n\r\n\t\t/*\r\n\t\t if(friction>0.0){\r\n\t\t for(var i=0; i<3; i++)\r\n\t\t this.equations.push(new CANNON.Equation(bodyA,bodyB)); // Normal+2tangents\r\n\t\t } else\r\n\t\t this.equations.push(new CANNON.Equation(bodyA,bodyB)); // Normal\r\n\t\t */\r\n\r\n\t\tvar bi = this.body_i,\r\n\t\t\tbj = this.body_j;\r\n\r\n\t\tvar vi = bi.velocity,\r\n\t\t\twi = bi.angularVelocity,\r\n\t\t\tvj = bj.velocity,\r\n\t\t\twj = bj.angularVelocity;\r\n\r\n\t\tvar tangents = [this.temp.t1, this.temp.t2];\r\n\t\tfor(var i in bi.contacts){\r\n\t\t\tfor(var j in bj.contacts){\r\n\t\t\t\tif(bi.contacts[i].to.id==bj.id && bj.contacts[j].to.id==bi.id){\r\n\t\t\t\t\tvar ri = bi.contacts[i].r,\r\n\t\t\t\t\t\trj = bj.contacts[j].r,\r\n\t\t\t\t\t\tni = bi.contacts[i].n; // normals should be the same anyways\r\n\r\n\t\t\t\t\tn.tangents(tangents[0],tangents[1]);\r\n\r\n\t\t\t\t\tvar v_contact_i = vi.vadd(wi.cross(c.ri));\r\n\t\t\t\t\tvar v_contact_j = vj.vadd(wj.cross(c.rj));\r\n\t\t\t\t\tvar u_rel = v_contact_j.vsub(v_contact_i);\r\n\t\t\t\t\tvar w_rel = wj.cross(c.rj).vsub(wi.cross(c.ri));\r\n\r\n\t\t\t\t\tvar u = (vj.vsub(vi));\r\n\t\t\t\t\tvar uw = (c.rj.cross(wj)).vsub(c.ri.cross(wi));\r\n\t\t\t\t\tu.vsub(uw,u);\r\n\r\n\t\t\t\t\t// Get mass properties\r\n\t\t\t\t\tvar iMi = bi.invMass;\r\n\t\t\t\t\tvar iMj = bj.invMass;\r\n\t\t\t\t\tvar iIxi = bi.invInertia.x;\r\n\t\t\t\t\tvar iIyi = bi.invInertia.y;\r\n\t\t\t\t\tvar iIzi = bi.invInertia.z;\r\n\t\t\t\t\tvar iIxj = bj.invInertia.x;\r\n\t\t\t\t\tvar iIyj = bj.invInertia.y;\r\n\t\t\t\t\tvar iIzj = bj.invInertia.z;\r\n\r\n\t\t\t\t\t// Add contact constraint\r\n\t\t\t\t\tvar rixn = this.temp.rixn;\r\n\t\t\t\t\tvar rjxn = this.temp.rjxn;\r\n\t\t\t\t\tc.ri.cross(n,rixn);\r\n\t\t\t\t\tc.rj.cross(n,rjxn);\r\n\r\n\t\t\t\t\tvar un_rel = n.mult(u_rel.dot(n));\r\n\t\t\t\t\tvar u_rixn_rel = rixn.unit().mult(w_rel.dot(rixn.unit()));\r\n\t\t\t\t\tvar u_rjxn_rel = rjxn.unit().mult(-w_rel.dot(rjxn.unit()));\r\n\r\n\t\t\t\t\tvar gn = c.ni.mult(g);\r\n\r\n\t\t\t\t\t// Jacobian, eq. 25 in spooknotes\r\n\t\t\t\t\tn.negate(eq.G1);\r\n\t\t\t\t\trixn.negate(eq.G2);\r\n\t\t\t\t\tn.copy(eq.G3);\r\n\t\t\t\t\trjxn.copy(eq.G4);\r\n\r\n\t\t\t\t\teq.setDefaultMassProps();\r\n\r\n\t\t\t\t\t// g - constraint violation / gap\r\n\t\t\t\t\tgn.negate(eq.g1);\r\n\t\t\t\t\tgn.copy(eq.g3);\r\n\r\n\t\t\t\t\t// W\r\n\t\t\t\t\tun_rel.negate(eq.W1);\r\n\t\t\t\t\tun_rel.copy(eq.W3);\r\n\r\n\t\t\t\t\t// External force - forces & torques\r\n\t\t\t\t\tbi.force.copy(eq.f1);\r\n\t\t\t\t\tbi.tau.copy(eq.f2);\r\n\t\t\t\t\tbj.force.copy(eq.f3);\r\n\t\t\t\t\tbj.tau.copy(eq.f4);\r\n\r\n\t\t\t\t\teq.lambdamin = 0;\r\n\t\t\t\t\teq.lambdamax = 'inf';\r\n\t\t\t\t\t/*\r\n\t\t\t\t\t // Friction constraints\r\n\t\t\t\t\t if(mu>0.0){\r\n\t\t\t\t\t var g = that.gravity.norm();\r\n\t\t\t\t\t for(var ti=0; ti<tangents.length; ti++){\r\n\t\t\t\t\t var t = tangents[ti];\r\n\t\t\t\t\t var rixt = c.ri.cross(t);\r\n\t\t\t\t\t var rjxt = c.rj.cross(t);\r\n\r\n\t\t\t\t\t var ut_rel = t.mult(u_rel.dot(t));\r\n\t\t\t\t\t var u_rixt_rel = rixt.unit().mult(u_rel.dot(rixt.unit()));\r\n\t\t\t\t\t var u_rjxt_rel = rjxt.unit().mult(-u_rel.dot(rjxt.unit()));\r\n\t\t\t\t\t this.solver\r\n\t\t\t\t\t .addConstraint( // Non-penetration constraint jacobian\r\n\t\t\t\t\t [-t.x,-t.y,-t.z,\r\n\t\t\t\t\t -rixt.x,-rixt.y,-rixt.z,\r\n\t\t\t\t\t t.x,t.y,t.z,\r\n\t\t\t\t\t rjxt.x,rjxt.y,rjxt.z\r\n\t\t\t\t\t ],\r\n\r\n\t\t\t\t\t // Inverse mass matrix\r\n\t\t\t\t\t [iMi,iMi,iMi,\r\n\t\t\t\t\t iIxi,iIyi,iIzi,\r\n\t\t\t\t\t iMj,iMj,iMj,\r\n\t\t\t\t\t iIxj,iIyj,iIzj],\r\n\r\n\t\t\t\t\t // g - constraint violation / gap\r\n\t\t\t\t\t [0,0,0,\r\n\t\t\t\t\t 0,0,0,\r\n\t\t\t\t\t 0,0,0,\r\n\t\t\t\t\t 0,0,0],\r\n\r\n\t\t\t\t\t [-ut_rel.x,-ut_rel.y,-ut_rel.z,\r\n\t\t\t\t\t 0,0,0,//-u_rixt_rel.x,-u_rixt_rel.y,-u_rixt_rel.z,\r\n\t\t\t\t\t ut_rel.x,ut_rel.y,ut_rel.z,\r\n\t\t\t\t\t 0,0,0//u_rjxt_rel.x,u_rjxt_rel.y,u_rjxt_rel.z\r\n\t\t\t\t\t ],\r\n\r\n\t\t\t\t\t // External force - forces & torques\r\n\t\t\t\t\t [bi.force.x,bi.force.y,bi.force.z,\r\n\t\t\t\t\t bi.tau.x,bi.tau.y,bi.tau.z,\r\n\t\t\t\t\t bj.force.x,bj.force.y,bj.force.z,\r\n\t\t\t\t\t bj.tau.x,bj.tau.y,bj.tau.z],\r\n\r\n\t\t\t\t\t -mu*g*(bi.mass+bj.mass),\r\n\t\t\t\t\t mu*g*(bi.mass+bj.mass),\r\n\r\n\t\t\t\t\t i,\r\n\t\t\t\t\t j);\r\n\t\t\t\t\t }\r\n\t\t\t\t\t }\r\n\t\t\t\t\t */\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\t/**\r\n\t * Distance constraint class\r\n\t * @author schteppe\r\n\t * @param CANNON.Body bodyA\r\n\t * @param CANNON.Body bodyB Could optionally be a CANNON.Vec3 to constrain a body to a static point in space\r\n\t * @param float distance\r\n\t * @todo test\r\n\t */\r\n\tCANNON.DistanceConstraint = function(bodyA,bodyB,distance){\r\n\t\tCANNON.Constraint.call(this);\r\n\t\tthis.body_i = bodyA;\r\n\t\tthis.body_j = bodyB;\r\n\t\tthis.distance = Number(distance);\r\n\t\tvar eq = new CANNON.Equation(bodyA, bodyB instanceof CANNON.Vec3 ? null : bodyB);\r\n\t\tthis.equations.push(eq);\r\n\t};\r\n\r\n\tCANNON.DistanceConstraint.prototype = new CANNON.Constraint();\r\n\tCANNON.DistanceConstraint.prototype.constructor = CANNON.DistanceConstraint;\r\n\r\n\tCANNON.DistanceConstraint.prototype.update = function(){\r\n\t\tvar eq = this.equations[0], bi = this.body_i, bj = this.body_j;\r\n\t\tvar pair = typeof(bj.mass)==\"number\";\r\n\r\n\t\t// Jacobian is the distance unit vector\r\n\t\tif(pair)\r\n\t\t\tbj.position.vsub(bi.position, eq.G1);\r\n\t\telse{\r\n\t\t\tbi.position.vsub(bj,eq.G1);\r\n\t\t}\r\n\t\teq.G1.normalize();\r\n\t\tif(eq.G1.isZero()) eq.G1.set(1,0,0);\r\n\t\teq.G1.negate(eq.G3);\r\n\t\t//console.log(eq.G1.toString());\r\n\r\n\t\t// Mass properties\r\n\t\teq.setDefaultMassProps();\r\n\t\teq.setDefaultForce();\r\n\r\n\t\t// Constraint violation\r\n\t\teq.g1.set((pair ? bj.position.x : bj.x) - bi.position.x - eq.G1.x*this.distance,\r\n\t\t\t(pair ? bj.position.y : bj.y) - bi.position.y - eq.G1.y*this.distance,\r\n\t\t\t(pair ? bj.position.z : bj.z) - bi.position.z - eq.G1.z*this.distance);\r\n\t\teq.g1.negate(eq.g1);\r\n\t\teq.g1.negate(eq.g3);\r\n\t};\r\n\r\n\tCANNON.DistanceConstraint.prototype.setMaxForce = function(f){\r\n\t\t// @todo rescale with masses\r\n\t\tthis.equations[0].lambdamax = Math.abs(f);\r\n\t\tthis.equations[0].lambdamin = -this.equations[0].lambdamax;\r\n\t};/**\r\n\t * Equation class\r\n\t * @author schteppe\r\n\t * @brief Something for the solver to chew on. Its mostly a holder of vectors\r\n\t * @todo try with the solver\r\n\t * @param CANNON.Body bi Could optionally be null\r\n\t * @param CANNON.Body bj Could optionally be null\r\n\t */\r\n\tCANNON.Equation = function(bi,bj){\r\n\r\n\t\t// Jacobian\r\n\t\tthis.G1 = new CANNON.Vec3();\r\n\t\tthis.G2 = new CANNON.Vec3();\r\n\t\tthis.G3 = new CANNON.Vec3();\r\n\t\tthis.G4 = new CANNON.Vec3();\r\n\r\n\t\t// Inverse mass matrix\r\n\t\tthis.iM1 = new CANNON.Vec3();\r\n\t\tthis.iM2 = new CANNON.Vec3();\r\n\t\tthis.iM3 = new CANNON.Vec3();\r\n\t\tthis.iM4 = new CANNON.Vec3();\r\n\r\n\t\t// Constraint violation, g\r\n\t\tthis.g1 = new CANNON.Vec3();\r\n\t\tthis.g2 = new CANNON.Vec3();\r\n\t\tthis.g3 = new CANNON.Vec3();\r\n\t\tthis.g4 = new CANNON.Vec3();\r\n\r\n\t\t// Derivative of g, gdot\r\n\t\tthis.W1 = new CANNON.Vec3();\r\n\t\tthis.W2 = new CANNON.Vec3();\r\n\t\tthis.W3 = new CANNON.Vec3();\r\n\t\tthis.W4 = new CANNON.Vec3();\r\n\r\n\t\t// External force, f\r\n\t\tthis.f1 = new CANNON.Vec3();\r\n\t\tthis.f2 = new CANNON.Vec3();\r\n\t\tthis.f3 = new CANNON.Vec3();\r\n\t\tthis.f4 = new CANNON.Vec3();\r\n\r\n\t\t// Clamping for multipliers (see as max constraint force)\r\n\t\tthis.lambdamax =  1e6;\r\n\t\tthis.lambdamin = -1e6;\r\n\r\n\t\t// Bodies to apply the constraint forces on\r\n\t\tthis.body_i = bi;\r\n\t\tthis.body_j = bj;\r\n\t};\r\n\r\n\tCANNON.Equation.prototype.setDefaultMassProps = function(){\r\n\t\tvar bi = this.body_i, bj = this.body_j;\r\n\t\tif(bi){\r\n\t\t\tthis.iM1.set(bi.invMass,\r\n\t\t\t\tbi.invMass,\r\n\t\t\t\tbi.invMass);\r\n\t\t\tif(bi.invInertia)\r\n\t\t\t\tbi.invInertia.copy(this.iM2);\r\n\t\t}\r\n\t\tif(bj){\r\n\t\t\tthis.iM3.set(bj.invMass,\r\n\t\t\t\tbj.invMass,\r\n\t\t\t\tbj.invMass);\r\n\t\t\tif(bj.invInertia)\r\n\t\t\t\tbj.invInertia.copy(this.iM4);\r\n\t\t}\r\n\t};\r\n\r\n\tCANNON.Equation.prototype.setDefaultForce = function(){\r\n\t\tvar bi = this.body_i, bj = this.body_j;\r\n\t\tif(bi){\r\n\t\t\tbi.force.copy(this.f1);\r\n\t\t\tif(bi.tau) bi.tau.copy(this.f2);\r\n\t\t}\r\n\t\tif(bj){\r\n\t\t\tbj.force.copy(this.f3);\r\n\t\t\tif(bj.tau) bj.tau.copy(this.f4);\r\n\t\t}\r\n\t};/*global CANNON:true */\r\n\r\n\t/**\r\n\t * Point to point constraint class\r\n\t * @author schteppe\r\n\t * @param CANNON.Body bodyA\r\n\t * @param CANNON.Vec3 pivotA The point relative to the center of mass of bodyA which bodyA is constrained to.\r\n\t * @param CANNON.Body bodyB Optional. If specified, pivotB must also be specified, and bodyB will be constrained in a similar way to the same point as bodyA. We will therefore get sort of a link between bodyA and bodyB. If not specified, bodyA will be constrained to a static point.\r\n\t * @param CANNON.Vec3 pivotB Optional.\r\n\t */\r\n\tCANNON.PointToPointConstraint = function(bodyA,pivotA,bodyB,pivotB){\r\n\t\tCANNON.Constraint.call(this);\r\n\t\tthis.body_i = bodyA;\r\n\t\tthis.body_j = bodyB;\r\n\t\tthis.pivot_i = pivotA;\r\n\t\tthis.pivot_j = pivotB;\r\n\r\n\t\t// Need 3 equations, 1 normal + 2 tangent\r\n\t\tfor(var i=0; i<3; i++)\r\n\t\t\tthis.equations.push(new Equation(bodyA,bodyB));\r\n\t};\r\n\r\n\tCANNON.PointToPointConstraint.prototype = new CANNON.Constraint();\r\n\tCANNON.PointToPointConstraint.prototype.constructor = CANNON.PointToPointConstraint;\r\n\r\n\t/**\r\n\t * @todo\r\n\t */\r\n\tCANNON.PointToPointConstraint.prototype.update = function(){\r\n\t\t/*\r\n\t\t var eq = this.equations[0], bi = this.body_i, bj = this.body_j;\r\n\r\n\t\t // Jacobian is the distance unit vector\r\n\t\t bj.position.vsub(bi.position,eq.G1);\r\n\t\t eq.G1.normalize();\r\n\t\t eq.G1.negate(eq.G3);\r\n\r\n\t\t // Mass properties\r\n\t\t eq.setDefaultMassProps();\r\n\t\t eq.setDefaultForce();\r\n\r\n\t\t // Constraint violation\r\n\t\t eq.g1.set(bj.position.x - bi.position.x - eq.G1.x*dist,\r\n\t\t bj.position.y - bi.position.y - eq.G1.y*dist,\r\n\t\t bj.position.z - bi.position.z - eq.G1.z*dist);\r\n\t\t eq.g1.negate(eq.g3);  \r\n\t\t */\r\n\t};if (typeof module !== 'undefined') {\r\n\t\t// export for node\r\n\t\tmodule.exports = CANNON;\r\n\t} else {\r\n\t\t// assign to window\r\n\t\tthis.CANNON = CANNON;\r\n\t}\r\n\r\n}).apply(this);","var IgeCannonComponent = IgeEventingClass.extend({\r\n\tclassId: 'IgeCannonComponent',\r\n\tcomponentId: 'cannon',\r\n\r\n\tinit: function (entity, options) {\r\n\t\tthis._entity = entity;\r\n\t\tthis._options = options;\r\n\r\n\t\tthis._active = true;\r\n\t\tthis._sleep = true;\r\n\t\tthis._scaleRatio = 1;\r\n\t\tthis._solverIterations = 10;\r\n\t\tthis._gravity = new CANNON.Vec3(0, 0, -60);\r\n\t\tthis._broadphase = new CANNON.NaiveBroadphase();\r\n\r\n\t\tthis._removeWhenReady = [];\r\n\r\n\t\t// Materials\r\n\t\tthis._normalMaterial = new CANNON.Material(\"normalMaterial\");\r\n\r\n\t\t// Create a slippery material (friction coefficient = 0.0)\r\n\t\tthis._slipperyMaterial = new CANNON.Material(\"slipperyMaterial\");\r\n\r\n\t\t// The ContactMaterial defines what happens when two materials meet.\r\n\t\t// In this case we want friction coefficient = 0.0 when the slippery material touches ground.\r\n\t\tthis._slipperyNormalCm = new CANNON.ContactMaterial(\r\n\t\t\tthis._normalMaterial,\r\n\t\t\tthis._slipperyMaterial,\r\n\t\t\t0.0, // friction coefficient\r\n\t\t\t0.3  // restitution\r\n\t\t);\r\n\r\n\t\t// Add the cannon behaviour to the ige\r\n\t\tige.addBehaviour('cannonStep', this._behaviour);\r\n\t},\r\n\r\n\t/**\r\n\t * Gets / sets if the world should allow sleep or not.\r\n\t * @param {Boolean=} val\r\n\t * @return {*}\r\n\t */\r\n\tsleep: function (val) {\r\n\t\tif (val !== undefined) {\r\n\t\t\tthis._sleep = val;\r\n\t\t\treturn this._entity;\r\n\t\t}\r\n\r\n\t\treturn this._sleep;\r\n\t},\r\n\r\n\t/**\r\n\t * Gets / sets the current engine to cannon scaling ratio.\r\n\t * @param val\r\n\t * @return {*}\r\n\t */\r\n\tscaleRatio: function (val) {\r\n\t\tif (val !== undefined) {\r\n\t\t\tthis._scaleRatio = val;\r\n\t\t\treturn this._entity;\r\n\t\t}\r\n\r\n\t\treturn this._scaleRatio;\r\n\t},\r\n\r\n\t/**\r\n\t * Gets / sets the gravity vector.\r\n\t * @return {*}\r\n\t */\r\n\tgravity: function (x, y, z) {\r\n\t\tif (x !== undefined && y !== undefined) {\r\n\t\t\tthis._gravity = new CANNON.Vec3(x, y, z);\r\n\t\t\tif (this._world) {\r\n\t\t\t\tthis._world.gravity.set(this._gravity.x, this._gravity.y, this._gravity.z);\r\n\t\t\t}\r\n\t\t\treturn this._entity;\r\n\t\t}\r\n\r\n\t\treturn this._gravity;\r\n\t},\r\n\r\n\tsolverIterations: function () {\r\n\t\tif (val !== undefined) {\r\n\t\t\tthis._solverIterations = val;\r\n\t\t\treturn this._entity;\r\n\t\t}\r\n\r\n\t\treturn this._solverIterations;\r\n\t},\r\n\r\n\tcreateWorld: function () {\r\n\t\tthis._world = new CANNON.World();\r\n\t\tthis._world.gravity.set(this._gravity.x, this._gravity.y, this._gravity.z);\r\n\t\tthis._world.broadphase = this._broadphase;\r\n\t\tthis._world.solver.iterations = this._solverIterations;\r\n\t\tthis._world.allowSleep = this._sleep;\r\n\r\n\t\t// We must add the contact materials to the world\r\n\t\tthis._world.addContactMaterial(this._slipperyNormalCm);\r\n\r\n\t\treturn this._entity;\r\n\t},\r\n\r\n\tcreateFloor: function (normalX, normalY, normalZ) {\r\n\t\tvar groundShape = new CANNON.Plane(new CANNON.Vec3(normalX, normalY, normalZ)),\r\n\t\t\tgroundBody = new CANNON.RigidBody(0, groundShape, this._slipperyMaterial);\r\n\r\n\t\tthis._world.add(groundBody);\r\n\t},\r\n\r\n\tcreateBody: function (entity, body) {\r\n\t\tvar param,\r\n\t\t\ttype,\r\n\t\t\tfixtureDef,\r\n\t\t\ttempShape,\r\n\t\t\ttempBod,\r\n\t\t\ti;\r\n\r\n\t\t// Process body definition and create a cannon body for it\r\n\t\tswitch (body.type) {\r\n\t\t\tcase 'static':\r\n\t\t\t\ttype = CANNON.Body.STATIC;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'kinematic':\r\n\t\t\t\ttype = CANNON.Body.KINEMATIC;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'dynamic':\r\n\t\t\t\ttype = CANNON.Body.DYNAMIC;\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\t// Now apply any post-creation attributes we need to\r\n\t\tfor (param in body) {\r\n\t\t\tif (body.hasOwnProperty(param)) {\r\n\t\t\t\tswitch (param) {\r\n\t\t\t\t\tcase 'fixtures':\r\n\t\t\t\t\t\tfor (i = 0; i < body.fixtures.length; i++) {\r\n\t\t\t\t\t\t\t// Grab the fixture definition\r\n\t\t\t\t\t\t\tfixtureDef = body.fixtures[i];\r\n\r\n\t\t\t\t\t\t\t// Check for a shape definition for the fixture\r\n\t\t\t\t\t\t\tif (fixtureDef.shape) {\r\n\t\t\t\t\t\t\t\t// Create based on the shape type\r\n\t\t\t\t\t\t\t\tswitch (fixtureDef.shape.type) {\r\n\t\t\t\t\t\t\t\t\tcase 'box':\r\n\t\t\t\t\t\t\t\t\t\tif (fixtureDef.shape.data) {\r\n\t\t\t\t\t\t\t\t\t\t\t// Use defined data to create the shape\r\n\t\t\t\t\t\t\t\t\t\t\tif (fixtureDef.shape.data.sizeX !== undefined && fixtureDef.shape.data.sizeY !== undefined && fixtureDef.shape.data.sizeZ !== undefined) {\r\n\t\t\t\t\t\t\t\t\t\t\t\ttempShape = new CANNON.Box(new CANNON.Vec3(fixtureDef.shape.data.sizeX / this._scaleRatio, fixtureDef.shape.data.sizeY / this._scaleRatio, fixtureDef.shape.data.sizeZ / this._scaleRatio));\r\n\t\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\t\ttempShape = new CANNON.Box(new CANNON.Vec3(entity._bounds3d.x2 + 1 / this._scaleRatio, entity._bounds3d.y2 / this._scaleRatio, entity._bounds3d.z2 / this._scaleRatio));\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\ttempShape = new CANNON.Box(new CANNON.Vec3(entity._bounds3d.x2 + 1 / this._scaleRatio, entity._bounds3d.y2 + 1 / this._scaleRatio, entity._bounds3d.z2 + 1 / this._scaleRatio));\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\ttempBod = new CANNON.RigidBody(body.mass, tempShape, this._normalMaterial);\r\n\t\ttempBod.sleepSpeedLimit = 0.1;\r\n\t\ttempBod.sleepTimeLimit = 1000;\r\n\r\n\t\tif (body.allowSleep !== undefined) { tempBod.allowSleep = body.allowSleep; }\r\n\t\tif (body.sleepSpeedLimit !== undefined) { tempBod.sleepSpeedLimit = body.sleepSpeedLimit; }\r\n\t\tif (body.sleepTimeLimit !== undefined) { tempBod.sleepTimeLimit = body.sleepTimeLimit; }\r\n\r\n\t\tif (body.angularDamping !== undefined) { tempBod.angularDamping = body.angularDamping; }\r\n\t\tif (body.linearDamping !== undefined) { tempBod.linearDamping = body.linearDamping; }\r\n\r\n\t\t// Set the position\r\n\t\ttempBod.position.set(entity._translate.x / this._scaleRatio, entity._translate.y / this._scaleRatio, (entity._translate.z + entity._bounds3d.z2)  / this._scaleRatio);\r\n\r\n\t\t// Store the entity that is linked to this body\r\n\t\ttempBod._igeEntity = entity;\r\n\r\n\t\t// Add the body to the world\r\n\t\tthis._world.add(tempBod);\r\n\r\n\t\treturn tempBod;\r\n\t},\r\n\r\n\tenableDebug: function (canvasId) {\r\n\t\t// Define the debug drawing instance\r\n\t\tvar debugDraw = new this.b2DebugDraw();\r\n\t\tthis._cannonDebug = true;\r\n\t\tthis._debugCanvas = document.getElementById(canvasId);\r\n\t\tthis._debugCtx = this._debugCanvas.getContext('2d');\r\n\r\n\t\tdebugDraw.SetSprite(this._debugCtx);\r\n\t\tdebugDraw.SetDrawScale(this._scaleRatio);\r\n\t\tdebugDraw.SetFillAlpha(0.3);\r\n\t\tdebugDraw.SetLineThickness(1.0);\r\n\t\tdebugDraw.SetFlags(\r\n\t\t\tthis.b2DebugDraw.e_controllerBit\r\n\t\t\t| this.b2DebugDraw.e_jointBit\r\n\t\t\t| this.b2DebugDraw.e_pairBit\r\n\t\t\t| this.b2DebugDraw.e_shapeBit\r\n\t\t\t//| this.b2DebugDraw.e_aabbBit\r\n\t\t\t//| this.b2DebugDraw.e_centerOfMassBit\r\n\t\t);\r\n\r\n\t\t// Set the debug draw for the world\r\n\t\tthis._world.SetDebugDraw(debugDraw);\r\n\t},\r\n\r\n\t/** step - Step the simulation forward. {\r\n\t category:\"method\",\r\n\t } **/\r\n\t_behaviour: function (ctx) {\r\n\t\tvar self = ige.cannon,\r\n\t\t\tbodiesArr = self._world.bodies,\r\n\t\t\tbodyCount = bodiesArr.length,\r\n\t\t\ttempBod, entity;\r\n\r\n\t\tif (self._active) {\r\n\t\t\t// Call the world step\r\n\t\t\tself._world.step(1 / 60);\r\n\r\n\t\t\twhile (bodyCount--) {\r\n\t\t\t\ttempBod = bodiesArr[bodyCount];\r\n\r\n\t\t\t\t// Check if the body has an IGE entity attached to it\r\n\t\t\t\tif (tempBod._igeEntity) {\r\n\t\t\t\t\tif (tempBod.isAwake()) {\r\n\t\t\t\t\t\tentity = tempBod._igeEntity;\r\n\r\n\t\t\t\t\t\t// Update the entity data to match the body data\r\n\t\t\t\t\t\ttempBod._igeUpdating = true;\r\n\t\t\t\t\t\tentity.translateTo(Math.ceil(tempBod.position.x * self._scaleRatio), Math.ceil(tempBod.position.y * self._scaleRatio), Math.ceil((tempBod.position.z * self._scaleRatio) - entity._bounds3d.z2));\r\n\t\t\t\t\t\t//entity.rotateTo(entity._rotate.x, entity._rotate.y, tempBod.GetAngle());\r\n\t\t\t\t\t\ttempBod._igeUpdating = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t/*// Remove any bodies that were queued for removal\r\n\t\t\tremoveWhenReady = self._removeWhenReady;\r\n\t\t\tcount = removeWhenReady.length;\r\n\r\n\t\t\tif (count) {\r\n\t\t\t\tdestroyBody = self._world.DestroyBody;\r\n\t\t\t\twhile (count--) {\r\n\t\t\t\t\tdestroyBody.apply(self._world, [removeWhenReady[count]]);\r\n\t\t\t\t}\r\n\t\t\t\tself._removeWhenReady = [];\r\n\t\t\t\tremoveWhenReady = null;\r\n\t\t\t}\r\n\r\n\t\t\t// Call the world step; frame-rate, velocity iterations, position iterations\r\n\t\t\tself._world.Step(1 / 60, 8, 8);\r\n\r\n\t\t\t// Loop the physics objects and move the entities they are assigned to\r\n\t\t\ttempBod = self._world.GetBodyList();\r\n\t\t\twhile (tempBod) {\r\n\t\t\t\tif (tempBod._entity) {\r\n\t\t\t\t\t// Body has an entity assigned to it\r\n\t\t\t\t\tentity = tempBod._entity; //self.ige.entities.read(tempBod.m_userData);\r\n\t\t\t\t\tentityCannonBody = entity._cannonBody;\r\n\r\n\t\t\t\t\t// Check if the body is awake and is dynamic (we don't transform static bodies)\r\n\t\t\t\t\tif (tempBod.IsAwake()) {\r\n\t\t\t\t\t\t// Update the entity data to match the body data\r\n\t\t\t\t\t\tentityCannonBody.updating = true;\r\n\t\t\t\t\t\tentity.translateTo(tempBod.m_xf.position.x * self._scaleRatio, tempBod.m_xf.position.y * self._scaleRatio, entity._translate.z);\r\n\t\t\t\t\t\tentity.rotateTo(entity._rotate.x, entity._rotate.y, tempBod.GetAngle());\r\n\t\t\t\t\t\tentityCannonBody.updating = false;\r\n\r\n\t\t\t\t\t\tif (entityCannonBody.asleep) {\r\n\t\t\t\t\t\t\t// The body was asleep last frame, fire an awake event\r\n\t\t\t\t\t\t\tentityCannonBody.asleep = false;\r\n\t\t\t\t\t\t\tself.emit('afterAwake', entity);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tif (!entityCannonBody.asleep) {\r\n\t\t\t\t\t\t\t// The body was awake last frame, fire an asleep event\r\n\t\t\t\t\t\t\tentityCannonBody.asleep = true;\r\n\t\t\t\t\t\t\tself.emit('afterAsleep', entity);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttempBod = tempBod.GetNext();\r\n\t\t\t}\r\n\r\n\t\t\tif (self._cannonDebug && this._currentCamera) {\r\n\t\t\t\t// Draw the debug data\r\n\t\t\t\tself._debugCanvas.width = ige._bounds2d.x;\r\n\t\t\t\tself._debugCanvas.height = ige._bounds2d.y;\r\n\r\n\t\t\t\tself._debugCtx.save();\r\n\t\t\t\tthis._currentCamera._transformContext(self._debugCtx);\r\n\t\t\t\tself._debugCtx.translate(ige._bounds2d.x2, ige._bounds2d.y2);\r\n\t\t\t\tself._world.DrawDebugData();\r\n\t\t\t\tself._debugCtx.restore();\r\n\t\t\t}\r\n\r\n\t\t\t// Clear forces because we have ended our physics simulation frame\r\n\t\t\tself._world.ClearForces();\r\n\r\n\t\t\ttempBod = null;\r\n\t\t\tentity = null;*/\r\n\r\n\t\t\tif (typeof(self._updateCallback) === 'function') {\r\n\t\t\t\tself._updateCallback();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n});\r\n\r\nif (typeof(module) !== 'undefined' && typeof(module.exports) !== 'undefined') { module.exports = IgeCannonComponent; }\r\n","/**\r\n * Adds client/server time sync capabilities to the network system.\r\n * This handles calculating the time difference between the clock\r\n * on the server and the clock on connected clients.\r\n */\r\nvar IgeTimeSyncExtension = {\r\n\t/**\r\n\t * Gets / sets the number of milliseconds between client/server\r\n\t * clock sync events. The shorter the time, the more accurate the\r\n\t * client simulation will be but the more network traffic you\r\n\t * will transceive. Default value of ten seconds (10000) is usually\r\n\t * enough to provide very accurate results without over-using the\r\n\t * bandwidth.\r\n\t * @param val\r\n\t * @return {*}\r\n\t */\r\n\ttimeSyncInterval: function (val) {\r\n\t\tif (val !== undefined) {\r\n\t\t\tthis._timeSyncInterval = val;\r\n\t\t\treturn this._entity;\r\n\t\t}\r\n\r\n\t\treturn this._timeSyncInterval;\r\n\t},\r\n\r\n\t/* CEXCLUDE */\r\n\ttimeSyncStart: function () {\r\n\t\tif (ige.isServer) {\r\n\t\t\tthis._timeSyncStarted = true;\r\n\r\n\t\t\t// Send a time sync request now so we\r\n\t\t\t// have a starting value to work with\r\n\t\t\tthis._sendTimeSync();\r\n\r\n\t\t\tvar self = this;\r\n\r\n\t\t\tthis.log('Starting client/server clock sync...');\r\n\t\t\tthis._timeSyncTimer = setInterval(function () { self._sendTimeSync(); }, this._timeSyncInterval);\r\n\t\t}\r\n\r\n\t\treturn this._entity;\r\n\t},\r\n\r\n\ttimeSyncStop: function () {\r\n\t\tthis.log('Stopping client/server clock sync...');\r\n\t\tclearInterval(this._timeSyncTimer);\r\n\t\tthis._timeSyncStarted = false;\r\n\r\n\t\treturn this._entity;\r\n\t},\r\n\t/* CEXCLUDE */\r\n\t\r\n\t_sendTimeSync: function (data, clientId) {\r\n\t\tif (!data) {\r\n\t\t\tdata = ige._currentTime;\r\n\t\t}\r\n\r\n\t\t// Send the time sync command\r\n\t\tthis.send('_igeNetTimeSync', data, clientId);\r\n\t},\r\n\r\n\t/**\r\n\t * Converts a timestamp on the client to approx. time\r\n\t * on the server using the difference in client/server\r\n\t * clocks and the network latency between this client\r\n\t * and the server.\r\n\t * @param {Number} time The client timestamp (usually\r\n\t * the result of new Date().getTime() or\r\n\t * ige.currentTime()).\r\n\t */\r\n\ttimeToServerTime: function (time) {\r\n\t\tif (time !== undefined) {\r\n\t\t\treturn time + this._latency;\r\n\t\t}\r\n\r\n\t\treturn this._latency;\r\n\t},\r\n\r\n\t_onTimeSync: function (data, clientId) {\r\n\t\tvar localTime = Math.floor(ige._currentTime),\r\n\t\t\tsendTime,\r\n\t\t\troundTrip,\r\n\t\t\tdirection;\r\n\r\n\t\tif (ige.isClient) {\r\n\t\t\tsendTime = parseInt(data, 10);\r\n\r\n\t\t\tthis._latency = localTime - sendTime;\r\n\r\n\t\t\t/*if (localTime < sendTime) {\r\n\t\t\t\tdirection = 'behind';\r\n\t\t\t} else if (localTime > sendTime) {\r\n\t\t\t\tdirection = 'in front of';\r\n\t\t\t} else {\r\n\t\t\t\tdirection = 'same as';\r\n\t\t\t}\r\n\r\n\t\t\tthis.log('Time sync, client clock ' + (localTime - sendTime) + 'ms ' + direction + ' server, send timestamp: ' + sendTime + ', local timestamp: ' + localTime);*/\r\n\r\n\t\t\t// Send a response with out current clock time to the server\r\n\t\t\tthis._sendTimeSync([data, localTime]);\r\n\t\t}\r\n\t\t\r\n\t\t/* CEXCLUDE */\r\n\t\tif (ige.isServer) {\r\n\t\t\tsendTime = parseInt(data[1], 10);\r\n\t\t\troundTrip = (localTime - parseInt(data[0], 10));\r\n\r\n\t\t\t/*if (localTime < sendTime) {\r\n\t\t\t\tdirection = 'behind';\r\n\t\t\t} else if (localTime > sendTime) {\r\n\t\t\t\tdirection = 'in front of';\r\n\t\t\t} else {\r\n\t\t\t\tdirection = 'same as';\r\n\t\t\t}\r\n\r\n\t\t\tthis.log('Time sync, server clock ' + (localTime - sendTime) + 'ms ' + direction + ' client, roundtrip: ' + roundTrip + 'ms, send timestamp: ' + parseInt(data[0], 10) + ', local timestamp: ' + localTime);*/\r\n\r\n\t\t\tthis._timeSyncLog[clientId] = localTime - sendTime;\r\n\t\t}\r\n\t\t/* CEXCLUDE */\r\n\t}\r\n};\r\n\r\nif (typeof(module) !== 'undefined' && typeof(module.exports) !== 'undefined') { module.exports = IgeTimeSyncExtension; }","/**\r\n * Adds stream capabilities to the network system.\r\n */\r\nvar IgeStreamComponent = IgeEventingClass.extend({\r\n\tclassId: 'IgeStreamComponent',\r\n\tcomponentId: 'stream',\r\n\r\n\t/**\r\n\t * @constructor\r\n\t * @param entity\r\n\t * @param options\r\n\t */\r\n\tinit: function (entity, options) {\r\n\t\tthis._entity = entity;\r\n\t\tthis._options = options;\r\n\r\n\t\tvar self = this;\r\n\t\t\r\n\t\t// Set the stream data section designator character\r\n\t\tthis._sectionDesignator = '¬';\r\n\r\n\t\t/* CEXCLUDE */\r\n\t\tif (ige.isServer) {\r\n\t\t\t// Define the network stream command\r\n\t\t\tthis._entity.define('_igeStreamCreate');\r\n\t\t\tthis._entity.define('_igeStreamDestroy');\r\n\t\t\tthis._entity.define('_igeStreamData');\r\n\t\t\tthis._entity.define('_igeStreamTime');\r\n\r\n\t\t\t// Define the object that will hold the stream data queue\r\n\t\t\tthis._queuedData = {};\r\n\r\n\t\t\t// Set some stream data containers\r\n\t\t\tthis._streamClientData = {};\r\n\t\t\tthis._streamClientCreated = {};\r\n\t\t}\r\n\t\t/* CEXCLUDE */\r\n\r\n\t\tif (ige.isClient) {\r\n\t\t\t// Define the network stream command\r\n\t\t\tthis._entity.define('_igeStreamCreate', function () { self._onStreamCreate.apply(self, arguments); });\r\n\t\t\tthis._entity.define('_igeStreamDestroy', function () { self._onStreamDestroy.apply(self, arguments); });\r\n\t\t\tthis._entity.define('_igeStreamData', function () { self._onStreamData.apply(self, arguments); });\r\n\t\t\tthis._entity.define('_igeStreamTime', function () { self._onStreamTime.apply(self, arguments); });\r\n\t\t}\r\n\r\n\t\t// Set some defaults\r\n\t\tthis._renderLatency = 100;\r\n\t\tthis._streamInterval = 50;\r\n\t},\r\n\r\n\t/**\r\n\t * Gets /Sets the amount of milliseconds in the past that the renderer will\r\n\t * show updates from the stream. This allows us to interpolate from a previous\r\n\t * position to the next position in the stream update. Updates come in and\r\n\t * are already in the past when they are received so we need to set this\r\n\t * latency value to something greater than the highest level of acceptable\r\n\t * network latency. Usually this is a value between 100 and 200ms. If your\r\n\t * game requires much tighter latency you will have to reduce the number of\r\n\t * players / network updates / data size in order to compensate. A value of\r\n\t * 100 in this call is the standard that most triple-A FPS games accept as\r\n\t * normal render latency and should be OK for your game.\r\n\t *\r\n\t * @param latency\r\n\t */\r\n\trenderLatency: function (latency) {\r\n\t\tif (latency !== undefined) {\r\n\t\t\tthis._renderLatency = latency;\r\n\t\t\treturn this._entity;\r\n\t\t}\r\n\r\n\t\treturn this._renderLatency;\r\n\t},\r\n\r\n\t/* CEXCLUDE */\r\n\t/**\r\n\t * Gets / sets the interval by which updates to the game world are packaged\r\n\t * and transmitted to connected clients. The greater the value, the less\r\n\t * updates are sent per second.\r\n\t * @param {Number=} ms The number of milliseconds between stream messages.\r\n\t */\r\n\tsendInterval: function (ms) {\r\n\t\tif (ms !== undefined) {\r\n\t\t\tthis.log('Setting delta stream interval to ' + (ms / ige._timeScale) + 'ms');\r\n\t\t\tthis._streamInterval = ms / ige._timeScale;\r\n\t\t\treturn this._entity;\r\n\t\t}\r\n\r\n\t\treturn this._streamInterval;\r\n\t},\r\n\r\n\t/**\r\n\t * Starts the stream of world updates to connected clients.\r\n\t */\r\n\tstart: function () {\r\n\t\tvar self = this;\r\n\r\n\t\tthis.log('Starting delta stream...');\r\n\t\tthis._streamTimer = setInterval(function () { self._sendQueue(); }, this._streamInterval);\r\n\r\n\t\treturn this._entity;\r\n\t},\r\n\r\n\t/**\r\n\t * Stops the stream of world updates to connected clients.\r\n\t */\r\n\tstop: function () {\r\n\t\tthis._stopTimeSync();\r\n\r\n\t\tthis.log('Stopping delta stream...');\r\n\t\tclearInterval(this._streamTimer);\r\n\r\n\t\treturn this._entity;\r\n\t},\r\n\r\n\t/**\r\n\t * Queues stream data to be sent during the next stream data interval.\r\n\t * @param {String} id The id of the entity that this data belongs to.\r\n\t * @param {String} data The data queued for delivery to the client.\r\n\t * @param {String} clientId The client id this data is queued for.\r\n\t * @return {*}\r\n\t */\r\n\tqueue: function (id, data, clientId) {\r\n\t\tthis._queuedData[id] = [data, clientId];\r\n\t\treturn this._entity;\r\n\t},\r\n\r\n\t/**\r\n\t * Asks the server to send the data packets for all the queued stream\r\n\t * data to the specified clients.\r\n\t * @private\r\n\t */\r\n\t_sendQueue: function () {\r\n\t\tvar st = new Date().getTime(),\r\n\t\t\tct,\r\n\t\t\tdt,\r\n\t\t\tarr = this._queuedData,\r\n\t\t\tarrIndex,\r\n\t\t\tnetwork = this._entity,\r\n\t\t\titem, currentTime = ige._currentTime,\r\n\t\t\tclientSentTimeData = {};\r\n\r\n\t\t// Send the stream data\r\n\t\tfor (arrIndex in arr) {\r\n\t\t\tif (arr.hasOwnProperty(arrIndex)) {\r\n\t\t\t\titem = arr[arrIndex];\r\n\r\n\t\t\t\t// Check if we've already sent this client the starting\r\n\t\t\t\t// time of the stream data\r\n\t\t\t\tif (!clientSentTimeData[item[1]]) {\r\n\t\t\t\t\t// Send the stream start time\r\n\t\t\t\t\tnetwork.send('_igeStreamTime', currentTime, item[1]);\r\n\t\t\t\t\tclientSentTimeData[item[1]] = true;\r\n\t\t\t\t}\r\n\t\t\t\tnetwork.send('_igeStreamData', item[0], item[1]);\r\n\r\n\t\t\t\tdelete arr[arrIndex];\r\n\t\t\t}\r\n\r\n\t\t\tct = new Date().getTime();\r\n\t\t\tdt = ct - st;\r\n\r\n\t\t\tif (dt > this._streamInterval) {\r\n\t\t\t\tconsole.log('WARNING, Stream send is taking too long: ' + dt + 'ms');\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\t/* CEXCLUDE */\r\n\r\n\t/**\r\n\t * Handles receiving the start time of the stream data.\r\n\t * @param data\r\n\t * @private\r\n\t */\r\n\t_onStreamTime: function (data) {\r\n\t\tthis._streamDataTime = data;\r\n\t},\r\n\r\n\t_onStreamCreate: function (data) {\r\n\t\tvar classId = data[0],\r\n\t\t\tentityId = data[1],\r\n\t\t\tparentId = data[2],\r\n\t\t\ttransformData = data[3],\r\n\t\t\tcreateData = data[4],\r\n\t\t\tparent = ige.$(parentId),\r\n\t\t\tclassConstructor,\r\n\t\t\tentity;\r\n\r\n\t\t// Check the required class exists\r\n\t\tif (parent) {\r\n\t\t\t// Check that the entity doesn't already exist\r\n\t\t\tif (!ige.$(entityId)) {\r\n\t\t\t\tclassConstructor = igeClassStore[classId];\r\n\r\n\t\t\t\tif (classConstructor) {\r\n\t\t\t\t\t// The entity does not currently exist so create it!\r\n\t\t\t\t\tentity = new classConstructor(createData)\r\n\t\t\t\t\t\t.id(entityId)\r\n\t\t\t\t\t\t.mount(parent);\r\n\t\t\t\t\t\r\n\t\t\t\t\tentity.streamSectionData('transform', transformData, true);\r\n\r\n\t\t\t\t\t// Set the just created flag which will stop the renderer\r\n\t\t\t\t\t// from handling this entity until after the first stream\r\n\t\t\t\t\t// data has been received for it\r\n\t\t\t\t\tentity._streamJustCreated = true;\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (entity._streamEmitCreated) {\r\n\t\t\t\t\t\tentity.emit('streamCreated');\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Since we just created an entity through receiving stream\r\n\t\t\t\t\t// data, inform any interested listeners\r\n\t\t\t\t\tthis.emit('entityCreated', entity);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tige.network.stop();\r\n\t\t\t\t\tige.stop();\r\n\r\n\t\t\t\t\tthis.log('Network stream cannot create entity with class ' + classId + ' because the class has not been defined! The engine will now stop.', 'error');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthis.log('Cannot properly handle network streamed entity with id ' + entityId + ' because it\\'s parent with id ' + parentId + ' does not exist on the scenegraph!', 'warning');\r\n\t\t}\r\n\t},\r\n\r\n\t_onStreamDestroy: function (data) {\r\n\t\tvar entity = ige.$(data[1]),\r\n\t\t\tself = this;\r\n\t\t\r\n\t\tif (entity) {\r\n\t\t\t// Calculate how much time we have left before the entity\r\n\t\t\t// should be removed from the simulation given the render\r\n\t\t\t// latency setting and the current time\r\n\t\t\tvar destroyDelta = ige.network.stream._renderLatency + (ige._currentTime - data[0]);\r\n\t\t\t\r\n\t\t\tif (destroyDelta > 0) {\r\n\t\t\t\t// Give the entity a lifespan to destroy it in x ms\r\n\t\t\t\tentity.lifeSpan(destroyDelta, function () {\r\n\t\t\t\t\tself.emit('entityDestroyed', entity);\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\t// Destroy immediately\r\n\t\t\t\tself.emit('entityDestroyed', entity);\r\n\t\t\t\tentity.destroy();\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Called when the client receives data from the stream system.\r\n\t * Handles decoding the data and calling the relevant entity\r\n\t * _onStreamData() methods.\r\n\t * @param data\r\n\t * @private\r\n\t */\r\n\t_onStreamData: function (data) {\r\n\t\t// Read the packet data into variables\r\n\t\tvar entityId,\r\n\t\t\tentity,\r\n\t\t\tsectionArr,\r\n\t\t\tsectionDataArr = data.split(ige.network.stream._sectionDesignator),\r\n\t\t\tsectionDataCount = sectionDataArr.length,\r\n\t\t\tsectionIndex,\r\n\t\t\tjustCreated;\r\n\r\n\t\t// We know the first bit of data will always be the\r\n\t\t// target entity's ID\r\n\t\tentityId = sectionDataArr.shift();\r\n\r\n\t\t// Check if the entity with this ID currently exists\r\n\t\tentity = ige.$(entityId);\r\n\r\n\t\tif (entity) {\r\n\t\t\t// Hold the entity's just created flag\r\n\t\t\tjustCreated = entity._streamJustCreated;\r\n\r\n\t\t\t// Get the entity stream section array\r\n\t\t\tsectionArr = entity._streamSections;\r\n\r\n\t\t\t// Now loop the data sections array and compile the rest of the\r\n\t\t\t// data string from the data section return data\r\n\t\t\tfor (sectionIndex = 0; sectionIndex < sectionDataCount; sectionIndex++) {\r\n\t\t\t\t// Tell the entity to handle this section's data\r\n\t\t\t\tentity.streamSectionData(sectionArr[sectionIndex], sectionDataArr[sectionIndex], justCreated);\r\n\t\t\t}\r\n\r\n\t\t\t// Now that the entity has had it's first bit of data\r\n\t\t\t// reset the just created flag\r\n\t\t\tdelete entity._streamJustCreated;\r\n\t\t} else {\r\n\t\t\tthis.log('+++ Stream: Data received for unknown entity (' + entityId +')');\r\n\t\t}\r\n\t}\r\n});\r\n\r\nif (typeof(module) !== 'undefined' && typeof(module.exports) !== 'undefined') { module.exports = IgeStreamComponent; }","/*! Socket.IO.min.js build:0.9.11, production. Copyright(c) 2011 LearnBoost <dev@learnboost.com> MIT Licensed */\r\nvar io=\"undefined\"==typeof module?{}:module.exports;(function(){(function(a,b){var c=a;c.version=\"0.9.11\",c.protocol=1,c.transports=[],c.j=[],c.sockets={},c.connect=function(a,d){var e=c.util.parseUri(a),f,g;b&&b.location&&(e.protocol=e.protocol||b.location.protocol.slice(0,-1),e.host=e.host||(b.document?b.document.domain:b.location.hostname),e.port=e.port||b.location.port),f=c.util.uniqueUri(e);var h={host:e.host,secure:\"https\"==e.protocol,port:e.port||(\"https\"==e.protocol?443:80),query:e.query||\"\"};c.util.merge(h,d);if(h[\"force new connection\"]||!c.sockets[f])g=new c.Socket(h);return!h[\"force new connection\"]&&g&&(c.sockets[f]=g),g=g||c.sockets[f],g.of(e.path.length>1?e.path:\"\")}})(\"object\"==typeof module?module.exports:this.io={},this),function(a,b){var c=a.util={},d=/^(?:(?![^:@]+:[^:@\\/]*@)([^:\\/?#.]+):)?(?:\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/,e=[\"source\",\"protocol\",\"authority\",\"userInfo\",\"user\",\"password\",\"host\",\"port\",\"relative\",\"path\",\"directory\",\"file\",\"query\",\"anchor\"];c.parseUri=function(a){var b=d.exec(a||\"\"),c={},f=14;while(f--)c[e[f]]=b[f]||\"\";return c},c.uniqueUri=function(a){var c=a.protocol,d=a.host,e=a.port;return\"document\"in b?(d=d||document.domain,e=e||(c==\"https\"&&document.location.protocol!==\"https:\"?443:document.location.port)):(d=d||\"localhost\",!e&&c==\"https\"&&(e=443)),(c||\"http\")+\"://\"+d+\":\"+(e||80)},c.query=function(a,b){var d=c.chunkQuery(a||\"\"),e=[];c.merge(d,c.chunkQuery(b||\"\"));for(var f in d)d.hasOwnProperty(f)&&e.push(f+\"=\"+d[f]);return e.length?\"?\"+e.join(\"&\"):\"\"},c.chunkQuery=function(a){var b={},c=a.split(\"&\"),d=0,e=c.length,f;for(;d<e;++d)f=c[d].split(\"=\"),f[0]&&(b[f[0]]=f[1]);return b};var f=!1;c.load=function(a){if(\"document\"in b&&document.readyState===\"complete\"||f)return a();c.on(b,\"load\",a,!1)},c.on=function(a,b,c,d){a.attachEvent?a.attachEvent(\"on\"+b,c):a.addEventListener&&a.addEventListener(b,c,d)},c.request=function(a){if(a&&\"undefined\"!=typeof XDomainRequest&&!c.ua.hasCORS)return new XDomainRequest;if(\"undefined\"!=typeof XMLHttpRequest&&(!a||c.ua.hasCORS))return new XMLHttpRequest;if(!a)try{return new(window[[\"Active\"].concat(\"Object\").join(\"X\")])(\"Microsoft.XMLHTTP\")}catch(b){}return null},\"undefined\"!=typeof window&&c.load(function(){f=!0}),c.defer=function(a){if(!c.ua.webkit||\"undefined\"!=typeof importScripts)return a();c.load(function(){setTimeout(a,100)})},c.merge=function(b,d,e,f){var g=f||[],h=typeof e==\"undefined\"?2:e,i;for(i in d)d.hasOwnProperty(i)&&c.indexOf(g,i)<0&&(typeof b[i]!=\"object\"||!h?(b[i]=d[i],g.push(d[i])):c.merge(b[i],d[i],h-1,g));return b},c.mixin=function(a,b){c.merge(a.prototype,b.prototype)},c.inherit=function(a,b){function c(){}c.prototype=b.prototype,a.prototype=new c},c.isArray=Array.isArray||function(a){return Object.prototype.toString.call(a)===\"[object Array]\"},c.intersect=function(a,b){var d=[],e=a.length>b.length?a:b,f=a.length>b.length?b:a;for(var g=0,h=f.length;g<h;g++)~c.indexOf(e,f[g])&&d.push(f[g]);return d},c.indexOf=function(a,b,c){for(var d=a.length,c=c<0?c+d<0?0:c+d:c||0;c<d&&a[c]!==b;c++);return d<=c?-1:c},c.toArray=function(a){var b=[];for(var c=0,d=a.length;c<d;c++)b.push(a[c]);return b},c.ua={},c.ua.hasCORS=\"undefined\"!=typeof XMLHttpRequest&&function(){try{var a=new XMLHttpRequest}catch(b){return!1}return a.withCredentials!=undefined}(),c.ua.webkit=\"undefined\"!=typeof navigator&&/webkit/i.test(navigator.userAgent),c.ua.iDevice=\"undefined\"!=typeof navigator&&/iPad|iPhone|iPod/i.test(navigator.userAgent)}(\"undefined\"!=typeof io?io:module.exports,this),function(a,b){function c(){}a.EventEmitter=c,c.prototype.on=function(a,c){return this.$events||(this.$events={}),this.$events[a]?b.util.isArray(this.$events[a])?this.$events[a].push(c):this.$events[a]=[this.$events[a],c]:this.$events[a]=c,this},c.prototype.addListener=c.prototype.on,c.prototype.once=function(a,b){function d(){c.removeListener(a,d),b.apply(this,arguments)}var c=this;return d.listener=b,this.on(a,d),this},c.prototype.removeListener=function(a,c){if(this.$events&&this.$events[a]){var d=this.$events[a];if(b.util.isArray(d)){var e=-1;for(var f=0,g=d.length;f<g;f++)if(d[f]===c||d[f].listener&&d[f].listener===c){e=f;break}if(e<0)return this;d.splice(e,1),d.length||delete this.$events[a]}else(d===c||d.listener&&d.listener===c)&&delete this.$events[a]}return this},c.prototype.removeAllListeners=function(a){return a===undefined?(this.$events={},this):(this.$events&&this.$events[a]&&(this.$events[a]=null),this)},c.prototype.listeners=function(a){return this.$events||(this.$events={}),this.$events[a]||(this.$events[a]=[]),b.util.isArray(this.$events[a])||(this.$events[a]=[this.$events[a]]),this.$events[a]},c.prototype.emit=function(a){if(!this.$events)return!1;var c=this.$events[a];if(!c)return!1;var d=Array.prototype.slice.call(arguments,1);if(\"function\"==typeof c)c.apply(this,d);else{if(!b.util.isArray(c))return!1;var e=c.slice();for(var f=0,g=e.length;f<g;f++)e[f].apply(this,d)}return!0}}(\"undefined\"!=typeof io?io:module.exports,\"undefined\"!=typeof io?io:module.parent.exports),function(exports,nativeJSON){function f(a){return a<10?\"0\"+a:a}function date(a,b){return isFinite(a.valueOf())?a.getUTCFullYear()+\"-\"+f(a.getUTCMonth()+1)+\"-\"+f(a.getUTCDate())+\"T\"+f(a.getUTCHours())+\":\"+f(a.getUTCMinutes())+\":\"+f(a.getUTCSeconds())+\"Z\":null}function quote(a){return escapable.lastIndex=0,escapable.test(a)?'\"'+a.replace(escapable,function(a){var b=meta[a];return typeof b==\"string\"?b:\"\\\\u\"+(\"0000\"+a.charCodeAt(0).toString(16)).slice(-4)})+'\"':'\"'+a+'\"'}function str(a,b){var c,d,e,f,g=gap,h,i=b[a];i instanceof Date&&(i=date(a)),typeof rep==\"function\"&&(i=rep.call(b,a,i));switch(typeof i){case\"string\":return quote(i);case\"number\":return isFinite(i)?String(i):\"null\";case\"boolean\":case\"null\":return String(i);case\"object\":if(!i)return\"null\";gap+=indent,h=[];if(Object.prototype.toString.apply(i)===\"[object Array]\"){f=i.length;for(c=0;c<f;c+=1)h[c]=str(c,i)||\"null\";return e=h.length===0?\"[]\":gap?\"[\\n\"+gap+h.join(\",\\n\"+gap)+\"\\n\"+g+\"]\":\"[\"+h.join(\",\")+\"]\",gap=g,e}if(rep&&typeof rep==\"object\"){f=rep.length;for(c=0;c<f;c+=1)typeof rep[c]==\"string\"&&(d=rep[c],e=str(d,i),e&&h.push(quote(d)+(gap?\": \":\":\")+e))}else for(d in i)Object.prototype.hasOwnProperty.call(i,d)&&(e=str(d,i),e&&h.push(quote(d)+(gap?\": \":\":\")+e));return e=h.length===0?\"{}\":gap?\"{\\n\"+gap+h.join(\",\\n\"+gap)+\"\\n\"+g+\"}\":\"{\"+h.join(\",\")+\"}\",gap=g,e}}\"use strict\";if(nativeJSON&&nativeJSON.parse)return exports.JSON={parse:nativeJSON.parse,stringify:nativeJSON.stringify};var JSON=exports.JSON={},cx=/[\\u0000\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]/g,escapable=/[\\\\\\\"\\x00-\\x1f\\x7f-\\x9f\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]/g,gap,indent,meta={\"\\b\":\"\\\\b\",\"\\t\":\"\\\\t\",\"\\n\":\"\\\\n\",\"\\f\":\"\\\\f\",\"\\r\":\"\\\\r\",'\"':'\\\\\"',\"\\\\\":\"\\\\\\\\\"},rep;JSON.stringify=function(a,b,c){var d;gap=\"\",indent=\"\";if(typeof c==\"number\")for(d=0;d<c;d+=1)indent+=\" \";else typeof c==\"string\"&&(indent=c);rep=b;if(!b||typeof b==\"function\"||typeof b==\"object\"&&typeof b.length==\"number\")return str(\"\",{\"\":a});throw new Error(\"JSON.stringify\")},JSON.parse=function(text,reviver){function walk(a,b){var c,d,e=a[b];if(e&&typeof e==\"object\")for(c in e)Object.prototype.hasOwnProperty.call(e,c)&&(d=walk(e,c),d!==undefined?e[c]=d:delete e[c]);return reviver.call(a,b,e)}var j;text=String(text),cx.lastIndex=0,cx.test(text)&&(text=text.replace(cx,function(a){return\"\\\\u\"+(\"0000\"+a.charCodeAt(0).toString(16)).slice(-4)}));if(/^[\\],:{}\\s]*$/.test(text.replace(/\\\\(?:[\"\\\\\\/bfnrt]|u[0-9a-fA-F]{4})/g,\"@\").replace(/\"[^\"\\\\\\n\\r]*\"|true|false|null|-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?/g,\"]\").replace(/(?:^|:|,)(?:\\s*\\[)+/g,\"\")))return j=eval(\"(\"+text+\")\"),typeof reviver==\"function\"?walk({\"\":j},\"\"):j;throw new SyntaxError(\"JSON.parse\")}}(\"undefined\"!=typeof io?io:module.exports,typeof JSON!=\"undefined\"?JSON:undefined),function(a,b){var c=a.parser={},d=c.packets=[\"disconnect\",\"connect\",\"heartbeat\",\"message\",\"json\",\"event\",\"ack\",\"error\",\"noop\"],e=c.reasons=[\"transport not supported\",\"client not handshaken\",\"unauthorized\"],f=c.advice=[\"reconnect\"],g=b.JSON,h=b.util.indexOf;c.encodePacket=function(a){var b=h(d,a.type),c=a.id||\"\",i=a.endpoint||\"\",j=a.ack,k=null;switch(a.type){case\"error\":var l=a.reason?h(e,a.reason):\"\",m=a.advice?h(f,a.advice):\"\";if(l!==\"\"||m!==\"\")k=l+(m!==\"\"?\"+\"+m:\"\");break;case\"message\":a.data!==\"\"&&(k=a.data);break;case\"event\":var n={name:a.name};a.args&&a.args.length&&(n.args=a.args),k=g.stringify(n);break;case\"json\":k=g.stringify(a.data);break;case\"connect\":a.qs&&(k=a.qs);break;case\"ack\":k=a.ackId+(a.args&&a.args.length?\"+\"+g.stringify(a.args):\"\")}var o=[b,c+(j==\"data\"?\"+\":\"\"),i];return k!==null&&k!==undefined&&o.push(k),o.join(\":\")},c.encodePayload=function(a){var b=\"\";if(a.length==1)return a[0];for(var c=0,d=a.length;c<d;c++){var e=a[c];b+=\"\\ufffd\"+e.length+\"\\ufffd\"+a[c]}return b};var i=/([^:]+):([0-9]+)?(\\+)?:([^:]+)?:?([\\s\\S]*)?/;c.decodePacket=function(a){var b=a.match(i);if(!b)return{};var c=b[2]||\"\",a=b[5]||\"\",h={type:d[b[1]],endpoint:b[4]||\"\"};c&&(h.id=c,b[3]?h.ack=\"data\":h.ack=!0);switch(h.type){case\"error\":var b=a.split(\"+\");h.reason=e[b[0]]||\"\",h.advice=f[b[1]]||\"\";break;case\"message\":h.data=a||\"\";break;case\"event\":try{var j=g.parse(a);h.name=j.name,h.args=j.args}catch(k){}h.args=h.args||[];break;case\"json\":try{h.data=g.parse(a)}catch(k){}break;case\"connect\":h.qs=a||\"\";break;case\"ack\":var b=a.match(/^([0-9]+)(\\+)?(.*)/);if(b){h.ackId=b[1],h.args=[];if(b[3])try{h.args=b[3]?g.parse(b[3]):[]}catch(k){}}break;case\"disconnect\":case\"heartbeat\":}return h},c.decodePayload=function(a){if(a.charAt(0)==\"\\ufffd\"){var b=[];for(var d=1,e=\"\";d<a.length;d++)a.charAt(d)==\"\\ufffd\"?(b.push(c.decodePacket(a.substr(d+1).substr(0,e))),d+=Number(e)+1,e=\"\"):e+=a.charAt(d);return b}return[c.decodePacket(a)]}}(\"undefined\"!=typeof io?io:module.exports,\"undefined\"!=typeof io?io:module.parent.exports),function(a,b){function c(a,b){this.socket=a,this.sessid=b}a.Transport=c,b.util.mixin(c,b.EventEmitter),c.prototype.heartbeats=function(){return!0},c.prototype.onData=function(a){this.clearCloseTimeout(),(this.socket.connected||this.socket.connecting||this.socket.reconnecting)&&this.setCloseTimeout();if(a!==\"\"){var c=b.parser.decodePayload(a);if(c&&c.length)for(var d=0,e=c.length;d<e;d++)this.onPacket(c[d])}return this},c.prototype.onPacket=function(a){return this.socket.setHeartbeatTimeout(),a.type==\"heartbeat\"?this.onHeartbeat():(a.type==\"connect\"&&a.endpoint==\"\"&&this.onConnect(),a.type==\"error\"&&a.advice==\"reconnect\"&&(this.isOpen=!1),this.socket.onPacket(a),this)},c.prototype.setCloseTimeout=function(){if(!this.closeTimeout){var a=this;this.closeTimeout=setTimeout(function(){a.onDisconnect()},this.socket.closeTimeout)}},c.prototype.onDisconnect=function(){return this.isOpen&&this.close(),this.clearTimeouts(),this.socket.onDisconnect(),this},c.prototype.onConnect=function(){return this.socket.onConnect(),this},c.prototype.clearCloseTimeout=function(){this.closeTimeout&&(clearTimeout(this.closeTimeout),this.closeTimeout=null)},c.prototype.clearTimeouts=function(){this.clearCloseTimeout(),this.reopenTimeout&&clearTimeout(this.reopenTimeout)},c.prototype.packet=function(a){this.send(b.parser.encodePacket(a))},c.prototype.onHeartbeat=function(a){this.packet({type:\"heartbeat\"})},c.prototype.onOpen=function(){this.isOpen=!0,this.clearCloseTimeout(),this.socket.onOpen()},c.prototype.onClose=function(){var a=this;this.isOpen=!1,this.socket.onClose(),this.onDisconnect()},c.prototype.prepareUrl=function(){var a=this.socket.options;return this.scheme()+\"://\"+a.host+\":\"+a.port+\"/\"+a.resource+\"/\"+b.protocol+\"/\"+this.name+\"/\"+this.sessid},c.prototype.ready=function(a,b){b.call(this)}}(\"undefined\"!=typeof io?io:module.exports,\"undefined\"!=typeof io?io:module.parent.exports),function(a,b,c){function d(a){this.options={port:80,secure:!1,document:\"document\"in c?document:!1,resource:\"socket.io\",transports:b.transports,\"connect timeout\":1e4,\"try multiple transports\":!0,reconnect:!0,\"reconnection delay\":500,\"reconnection limit\":Infinity,\"reopen delay\":3e3,\"max reconnection attempts\":10,\"sync disconnect on unload\":!1,\"auto connect\":!0,\"flash policy port\":10843,manualFlush:!1},b.util.merge(this.options,a),this.connected=!1,this.open=!1,this.connecting=!1,this.reconnecting=!1,this.namespaces={},this.buffer=[],this.doBuffer=!1;if(this.options[\"sync disconnect on unload\"]&&(!this.isXDomain()||b.util.ua.hasCORS)){var d=this;b.util.on(c,\"beforeunload\",function(){d.disconnectSync()},!1)}this.options[\"auto connect\"]&&this.connect()}function e(){}a.Socket=d,b.util.mixin(d,b.EventEmitter),d.prototype.of=function(a){return this.namespaces[a]||(this.namespaces[a]=new b.SocketNamespace(this,a),a!==\"\"&&this.namespaces[a].packet({type:\"connect\"})),this.namespaces[a]},d.prototype.publish=function(){this.emit.apply(this,arguments);var a;for(var b in this.namespaces)this.namespaces.hasOwnProperty(b)&&(a=this.of(b),a.$emit.apply(a,arguments))},d.prototype.handshake=function(a){function f(b){b instanceof Error?(c.connecting=!1,c.onError(b.message)):a.apply(null,b.split(\":\"))}var c=this,d=this.options,g=[\"http\"+(d.secure?\"s\":\"\")+\":/\",d.host+\":\"+d.port,d.resource,b.protocol,b.util.query(this.options.query,\"t=\"+ +(new Date))].join(\"/\");if(this.isXDomain()&&!b.util.ua.hasCORS){var h=document.getElementsByTagName(\"script\")[0],i=document.createElement(\"script\");i.src=g+\"&jsonp=\"+b.j.length,h.parentNode.insertBefore(i,h),b.j.push(function(a){f(a),i.parentNode.removeChild(i)})}else{var j=b.util.request();j.open(\"GET\",g,!0),this.isXDomain()&&(j.withCredentials=!0),j.onreadystatechange=function(){j.readyState==4&&(j.onreadystatechange=e,j.status==200?f(j.responseText):j.status==403?c.onError(j.responseText):(c.connecting=!1,!c.reconnecting&&c.onError(j.responseText)))},j.send(null)}},d.prototype.getTransport=function(a){var c=a||this.transports,d;for(var e=0,f;f=c[e];e++)if(b.Transport[f]&&b.Transport[f].check(this)&&(!this.isXDomain()||b.Transport[f].xdomainCheck(this)))return new b.Transport[f](this,this.sessionid);return null},d.prototype.connect=function(a){if(this.connecting)return this;var c=this;return c.connecting=!0,this.handshake(function(d,e,f,g){function h(a){c.transport&&c.transport.clearTimeouts(),c.transport=c.getTransport(a);if(!c.transport)return c.publish(\"connect_failed\");c.transport.ready(c,function(){c.connecting=!0,c.publish(\"connecting\",c.transport.name),c.transport.open(),c.options[\"connect timeout\"]&&(c.connectTimeoutTimer=setTimeout(function(){if(!c.connected){c.connecting=!1;if(c.options[\"try multiple transports\"]){var a=c.transports;while(a.length>0&&a.splice(0,1)[0]!=c.transport.name);a.length?h(a):c.publish(\"connect_failed\")}}},c.options[\"connect timeout\"]))})}c.sessionid=d,c.closeTimeout=f*1e3,c.heartbeatTimeout=e*1e3,c.transports||(c.transports=c.origTransports=g?b.util.intersect(g.split(\",\"),c.options.transports):c.options.transports),c.setHeartbeatTimeout(),h(c.transports),c.once(\"connect\",function(){clearTimeout(c.connectTimeoutTimer),a&&typeof a==\"function\"&&a()})}),this},d.prototype.setHeartbeatTimeout=function(){clearTimeout(this.heartbeatTimeoutTimer);if(this.transport&&!this.transport.heartbeats())return;var a=this;this.heartbeatTimeoutTimer=setTimeout(function(){a.transport.onClose()},this.heartbeatTimeout)},d.prototype.packet=function(a){return this.connected&&!this.doBuffer?this.transport.packet(a):this.buffer.push(a),this},d.prototype.setBuffer=function(a){this.doBuffer=a,!a&&this.connected&&this.buffer.length&&(this.options.manualFlush||this.flushBuffer())},d.prototype.flushBuffer=function(){this.transport.payload(this.buffer),this.buffer=[]},d.prototype.disconnect=function(){if(this.connected||this.connecting)this.open&&this.of(\"\").packet({type:\"disconnect\"}),this.onDisconnect(\"booted\");return this},d.prototype.disconnectSync=function(){var a=b.util.request(),c=[\"http\"+(this.options.secure?\"s\":\"\")+\":/\",this.options.host+\":\"+this.options.port,this.options.resource,b.protocol,\"\",this.sessionid].join(\"/\")+\"/?disconnect=1\";a.open(\"GET\",c,!1),a.send(null),this.onDisconnect(\"booted\")},d.prototype.isXDomain=function(){var a=c.location.port||(\"https:\"==c.location.protocol?443:80);return this.options.host!==c.location.hostname||this.options.port!=a},d.prototype.onConnect=function(){this.connected||(this.connected=!0,this.connecting=!1,this.doBuffer||this.setBuffer(!1),this.emit(\"connect\"))},d.prototype.onOpen=function(){this.open=!0},d.prototype.onClose=function(){this.open=!1,clearTimeout(this.heartbeatTimeoutTimer)},d.prototype.onPacket=function(a){this.of(a.endpoint).onPacket(a)},d.prototype.onError=function(a){a&&a.advice&&a.advice===\"reconnect\"&&(this.connected||this.connecting)&&(this.disconnect(),this.options.reconnect&&this.reconnect()),this.publish(\"error\",a&&a.reason?a.reason:a)},d.prototype.onDisconnect=function(a){var b=this.connected,c=this.connecting;this.connected=!1,this.connecting=!1,this.open=!1;if(b||c)this.transport.close(),this.transport.clearTimeouts(),b&&(this.publish(\"disconnect\",a),\"booted\"!=a&&this.options.reconnect&&!this.reconnecting&&this.reconnect())},d.prototype.reconnect=function(){function e(){if(a.connected){for(var b in a.namespaces)a.namespaces.hasOwnProperty(b)&&\"\"!==b&&a.namespaces[b].packet({type:\"connect\"});a.publish(\"reconnect\",a.transport.name,a.reconnectionAttempts)}clearTimeout(a.reconnectionTimer),a.removeListener(\"connect_failed\",f),a.removeListener(\"connect\",f),a.reconnecting=!1,delete a.reconnectionAttempts,delete a.reconnectionDelay,delete a.reconnectionTimer,delete a.redoTransports,a.options[\"try multiple transports\"]=c}function f(){if(!a.reconnecting)return;if(a.connected)return e();if(a.connecting&&a.reconnecting)return a.reconnectionTimer=setTimeout(f,1e3);a.reconnectionAttempts++>=b?a.redoTransports?(a.publish(\"reconnect_failed\"),e()):(a.on(\"connect_failed\",f),a.options[\"try multiple transports\"]=!0,a.transports=a.origTransports,a.transport=a.getTransport(),a.redoTransports=!0,a.connect()):(a.reconnectionDelay<d&&(a.reconnectionDelay*=2),a.connect(),a.publish(\"reconnecting\",a.reconnectionDelay,a.reconnectionAttempts),a.reconnectionTimer=setTimeout(f,a.reconnectionDelay))}this.reconnecting=!0,this.reconnectionAttempts=0,this.reconnectionDelay=this.options[\"reconnection delay\"];var a=this,b=this.options[\"max reconnection attempts\"],c=this.options[\"try multiple transports\"],d=this.options[\"reconnection limit\"];this.options[\"try multiple transports\"]=!1,this.reconnectionTimer=setTimeout(f,this.reconnectionDelay),this.on(\"connect\",f)}}(\"undefined\"!=typeof io?io:module.exports,\"undefined\"!=typeof io?io:module.parent.exports,this),function(a,b){function c(a,b){this.socket=a,this.name=b||\"\",this.flags={},this.json=new d(this,\"json\"),this.ackPackets=0,this.acks={}}function d(a,b){this.namespace=a,this.name=b}a.SocketNamespace=c,b.util.mixin(c,b.EventEmitter),c.prototype.$emit=b.EventEmitter.prototype.emit,c.prototype.of=function(){return this.socket.of.apply(this.socket,arguments)},c.prototype.packet=function(a){return a.endpoint=this.name,this.socket.packet(a),this.flags={},this},c.prototype.send=function(a,b){var c={type:this.flags.json?\"json\":\"message\",data:a};return\"function\"==typeof b&&(c.id=++this.ackPackets,c.ack=!0,this.acks[c.id]=b),this.packet(c)},c.prototype.emit=function(a){var b=Array.prototype.slice.call(arguments,1),c=b[b.length-1],d={type:\"event\",name:a};return\"function\"==typeof c&&(d.id=++this.ackPackets,d.ack=\"data\",this.acks[d.id]=c,b=b.slice(0,b.length-1)),d.args=b,this.packet(d)},c.prototype.disconnect=function(){return this.name===\"\"?this.socket.disconnect():(this.packet({type:\"disconnect\"}),this.$emit(\"disconnect\")),this},c.prototype.onPacket=function(a){function d(){c.packet({type:\"ack\",args:b.util.toArray(arguments),ackId:a.id})}var c=this;switch(a.type){case\"connect\":this.$emit(\"connect\");break;case\"disconnect\":this.name===\"\"?this.socket.onDisconnect(a.reason||\"booted\"):this.$emit(\"disconnect\",a.reason);break;case\"message\":case\"json\":var e=[\"message\",a.data];a.ack==\"data\"?e.push(d):a.ack&&this.packet({type:\"ack\",ackId:a.id}),this.$emit.apply(this,e);break;case\"event\":var e=[a.name].concat(a.args);a.ack==\"data\"&&e.push(d),this.$emit.apply(this,e);break;case\"ack\":this.acks[a.ackId]&&(this.acks[a.ackId].apply(this,a.args),delete this.acks[a.ackId]);break;case\"error\":a.advice?this.socket.onError(a):a.reason==\"unauthorized\"?this.$emit(\"connect_failed\",a.reason):this.$emit(\"error\",a.reason)}},d.prototype.send=function(){this.namespace.flags[this.name]=!0,this.namespace.send.apply(this.namespace,arguments)},d.prototype.emit=function(){this.namespace.flags[this.name]=!0,this.namespace.emit.apply(this.namespace,arguments)}}(\"undefined\"!=typeof io?io:module.exports,\"undefined\"!=typeof io?io:module.parent.exports),function(a,b,c){function d(a){b.Transport.apply(this,arguments)}a.websocket=d,b.util.inherit(d,b.Transport),d.prototype.name=\"websocket\",d.prototype.open=function(){var a=b.util.query(this.socket.options.query),d=this,e;return e||(e=c.MozWebSocket||c.WebSocket),this.websocket=new e(this.prepareUrl()+a),this.websocket.onopen=function(){d.onOpen(),d.socket.setBuffer(!1)},this.websocket.onmessage=function(a){d.onData(a.data)},this.websocket.onclose=function(){d.onClose(),d.socket.setBuffer(!0)},this.websocket.onerror=function(a){d.onError(a)},this},b.util.ua.iDevice?d.prototype.send=function(a){var b=this;return setTimeout(function(){b.websocket.send(a)},0),this}:d.prototype.send=function(a){return this.websocket.send(a),this},d.prototype.payload=function(a){for(var b=0,c=a.length;b<c;b++)this.packet(a[b]);return this},d.prototype.close=function(){return this.websocket.close(),this},d.prototype.onError=function(a){this.socket.onError(a)},d.prototype.scheme=function(){return this.socket.options.secure?\"wss\":\"ws\"},d.check=function(){return\"WebSocket\"in c&&!(\"__addTask\"in WebSocket)||\"MozWebSocket\"in c},d.xdomainCheck=function(){return!0},b.transports.push(\"websocket\")}(\"undefined\"!=typeof io?io.Transport:module.exports,\"undefined\"!=typeof io?io:module.parent.exports,this),function(a,b){function c(){b.Transport.websocket.apply(this,arguments)}a.flashsocket=c,b.util.inherit(c,b.Transport.websocket),c.prototype.name=\"flashsocket\",c.prototype.open=function(){var a=this,c=arguments;return WebSocket.__addTask(function(){b.Transport.websocket.prototype.open.apply(a,c)}),this},c.prototype.send=function(){var a=this,c=arguments;return WebSocket.__addTask(function(){b.Transport.websocket.prototype.send.apply(a,c)}),this},c.prototype.close=function(){return WebSocket.__tasks.length=0,b.Transport.websocket.prototype.close.call(this),this},c.prototype.ready=function(a,d){function e(){var b=a.options,e=b[\"flash policy port\"],g=[\"http\"+(b.secure?\"s\":\"\")+\":/\",b.host+\":\"+b.port,b.resource,\"static/flashsocket\",\"WebSocketMain\"+(a.isXDomain()?\"Insecure\":\"\")+\".swf\"];c.loaded||(typeof WEB_SOCKET_SWF_LOCATION==\"undefined\"&&(WEB_SOCKET_SWF_LOCATION=g.join(\"/\")),e!==843&&WebSocket.loadFlashPolicyFile(\"xmlsocket://\"+b.host+\":\"+e),WebSocket.__initialize(),c.loaded=!0),d.call(f)}var f=this;if(document.body)return e();b.util.load(e)},c.check=function(){return typeof WebSocket!=\"undefined\"&&\"__initialize\"in WebSocket&&!!swfobject?swfobject.getFlashPlayerVersion().major>=10:!1},c.xdomainCheck=function(){return!0},typeof window!=\"undefined\"&&(WEB_SOCKET_DISABLE_AUTO_INITIALIZATION=!0),b.transports.push(\"flashsocket\")}(\"undefined\"!=typeof io?io.Transport:module.exports,\"undefined\"!=typeof io?io:module.parent.exports);if(\"undefined\"!=typeof window)var swfobject=function(){function A(){if(t)return;try{var a=i.getElementsByTagName(\"body\")[0].appendChild(Q(\"span\"));a.parentNode.removeChild(a)}catch(b){return}t=!0;var c=l.length;for(var d=0;d<c;d++)l[d]()}function B(a){t?a():l[l.length]=a}function C(b){if(typeof h.addEventListener!=a)h.addEventListener(\"load\",b,!1);else if(typeof i.addEventListener!=a)i.addEventListener(\"load\",b,!1);else if(typeof h.attachEvent!=a)R(h,\"onload\",b);else if(typeof h.onload==\"function\"){var c=h.onload;h.onload=function(){c(),b()}}else h.onload=b}function D(){k?E():F()}function E(){var c=i.getElementsByTagName(\"body\")[0],d=Q(b);d.setAttribute(\"type\",e);var f=c.appendChild(d);if(f){var g=0;(function(){if(typeof f.GetVariable!=a){var b=f.GetVariable(\"$version\");b&&(b=b.split(\" \")[1].split(\",\"),y.pv=[parseInt(b[0],10),parseInt(b[1],10),parseInt(b[2],10)])}else if(g<10){g++,setTimeout(arguments.callee,10);return}c.removeChild(d),f=null,F()})()}else F()}function F(){var b=m.length;if(b>0)for(var c=0;c<b;c++){var d=m[c].id,e=m[c].callbackFn,f={success:!1,id:d};if(y.pv[0]>0){var g=P(d);if(g)if(S(m[c].swfVersion)&&!(y.wk&&y.wk<312))U(d,!0),e&&(f.success=!0,f.ref=G(d),e(f));else if(m[c].expressInstall&&H()){var h={};h.data=m[c].expressInstall,h.width=g.getAttribute(\"width\")||\"0\",h.height=g.getAttribute(\"height\")||\"0\",g.getAttribute(\"class\")&&(h.styleclass=g.getAttribute(\"class\")),g.getAttribute(\"align\")&&(h.align=g.getAttribute(\"align\"));var i={},j=g.getElementsByTagName(\"param\"),k=j.length;for(var l=0;l<k;l++)j[l].getAttribute(\"name\").toLowerCase()!=\"movie\"&&(i[j[l].getAttribute(\"name\")]=j[l].getAttribute(\"value\"));I(h,i,d,e)}else J(g),e&&e(f)}else{U(d,!0);if(e){var n=G(d);n&&typeof n.SetVariable!=a&&(f.success=!0,f.ref=n),e(f)}}}}function G(c){var d=null,e=P(c);if(e&&e.nodeName==\"OBJECT\")if(typeof e.SetVariable!=a)d=e;else{var f=e.getElementsByTagName(b)[0];f&&(d=f)}return d}function H(){return!u&&S(\"6.0.65\")&&(y.win||y.mac)&&!(y.wk&&y.wk<312)}function I(b,c,d,e){u=!0,r=e||null,s={success:!1,id:d};var g=P(d);if(g){g.nodeName==\"OBJECT\"?(p=K(g),q=null):(p=g,q=d),b.id=f;if(typeof b.width==a||!/%$/.test(b.width)&&parseInt(b.width,10)<310)b.width=\"310\";if(typeof b.height==a||!/%$/.test(b.height)&&parseInt(b.height,10)<137)b.height=\"137\";i.title=i.title.slice(0,47)+\" - Flash Player Installation\";var j=y.ie&&y.win?[\"Active\"].concat(\"\").join(\"X\"):\"PlugIn\",k=\"MMredirectURL=\"+h.location.toString().replace(/&/g,\"%26\")+\"&MMplayerType=\"+j+\"&MMdoctitle=\"+i.title;typeof c.flashvars!=a?c.flashvars+=\"&\"+k:c.flashvars=k;if(y.ie&&y.win&&g.readyState!=4){var l=Q(\"div\");d+=\"SWFObjectNew\",l.setAttribute(\"id\",d),g.parentNode.insertBefore(l,g),g.style.display=\"none\",function(){g.readyState==4?g.parentNode.removeChild(g):setTimeout(arguments.callee,10)}()}L(b,c,d)}}function J(a){if(y.ie&&y.win&&a.readyState!=4){var b=Q(\"div\");a.parentNode.insertBefore(b,a),b.parentNode.replaceChild(K(a),b),a.style.display=\"none\",function(){a.readyState==4?a.parentNode.removeChild(a):setTimeout(arguments.callee,10)}()}else a.parentNode.replaceChild(K(a),a)}function K(a){var c=Q(\"div\");if(y.win&&y.ie)c.innerHTML=a.innerHTML;else{var d=a.getElementsByTagName(b)[0];if(d){var e=d.childNodes;if(e){var f=e.length;for(var g=0;g<f;g++)(e[g].nodeType!=1||e[g].nodeName!=\"PARAM\")&&e[g].nodeType!=8&&c.appendChild(e[g].cloneNode(!0))}}}return c}function L(c,d,f){var g,h=P(f);if(y.wk&&y.wk<312)return g;if(h){typeof c.id==a&&(c.id=f);if(y.ie&&y.win){var i=\"\";for(var j in c)c[j]!=Object.prototype[j]&&(j.toLowerCase()==\"data\"?d.movie=c[j]:j.toLowerCase()==\"styleclass\"?i+=' class=\"'+c[j]+'\"':j.toLowerCase()!=\"classid\"&&(i+=\" \"+j+'=\"'+c[j]+'\"'));var k=\"\";for(var l in d)d[l]!=Object.prototype[l]&&(k+='<param name=\"'+l+'\" value=\"'+d[l]+'\" />');h.outerHTML='<object classid=\"clsid:D27CDB6E-AE6D-11cf-96B8-444553540000\"'+i+\">\"+k+\"</object>\",n[n.length]=c.id,g=P(c.id)}else{var m=Q(b);m.setAttribute(\"type\",e);for(var o in c)c[o]!=Object.prototype[o]&&(o.toLowerCase()==\"styleclass\"?m.setAttribute(\"class\",c[o]):o.toLowerCase()!=\"classid\"&&m.setAttribute(o,c[o]));for(var p in d)d[p]!=Object.prototype[p]&&p.toLowerCase()!=\"movie\"&&M(m,p,d[p]);h.parentNode.replaceChild(m,h),g=m}}return g}function M(a,b,c){var d=Q(\"param\");d.setAttribute(\"name\",b),d.setAttribute(\"value\",c),a.appendChild(d)}function N(a){var b=P(a);b&&b.nodeName==\"OBJECT\"&&(y.ie&&y.win?(b.style.display=\"none\",function(){b.readyState==4?O(a):setTimeout(arguments.callee,10)}()):b.parentNode.removeChild(b))}function O(a){var b=P(a);if(b){for(var c in b)typeof b[c]==\"function\"&&(b[c]=null);b.parentNode.removeChild(b)}}function P(a){var b=null;try{b=i.getElementById(a)}catch(c){}return b}function Q(a){return i.createElement(a)}function R(a,b,c){a.attachEvent(b,c),o[o.length]=[a,b,c]}function S(a){var b=y.pv,c=a.split(\".\");return c[0]=parseInt(c[0],10),c[1]=parseInt(c[1],10)||0,c[2]=parseInt(c[2],10)||0,b[0]>c[0]||b[0]==c[0]&&b[1]>c[1]||b[0]==c[0]&&b[1]==c[1]&&b[2]>=c[2]?!0:!1}function T(c,d,e,f){if(y.ie&&y.mac)return;var g=i.getElementsByTagName(\"head\")[0];if(!g)return;var h=e&&typeof e==\"string\"?e:\"screen\";f&&(v=null,w=null);if(!v||w!=h){var j=Q(\"style\");j.setAttribute(\"type\",\"text/css\"),j.setAttribute(\"media\",h),v=g.appendChild(j),y.ie&&y.win&&typeof i.styleSheets!=a&&i.styleSheets.length>0&&(v=i.styleSheets[i.styleSheets.length-1]),w=h}y.ie&&y.win?v&&typeof v.addRule==b&&v.addRule(c,d):v&&typeof i.createTextNode!=a&&v.appendChild(i.createTextNode(c+\" {\"+d+\"}\"))}function U(a,b){if(!x)return;var c=b?\"visible\":\"hidden\";t&&P(a)?P(a).style.visibility=c:T(\"#\"+a,\"visibility:\"+c)}function V(b){var c=/[\\\\\\\"<>\\.;]/,d=c.exec(b)!=null;return d&&typeof encodeURIComponent!=a?encodeURIComponent(b):b}var a=\"undefined\",b=\"object\",c=\"Shockwave Flash\",d=\"ShockwaveFlash.ShockwaveFlash\",e=\"application/x-shockwave-flash\",f=\"SWFObjectExprInst\",g=\"onreadystatechange\",h=window,i=document,j=navigator,k=!1,l=[D],m=[],n=[],o=[],p,q,r,s,t=!1,u=!1,v,w,x=!0,y=function(){var f=typeof i.getElementById!=a&&typeof i.getElementsByTagName!=a&&typeof i.createElement!=a,g=j.userAgent.toLowerCase(),l=j.platform.toLowerCase(),m=l?/win/.test(l):/win/.test(g),n=l?/mac/.test(l):/mac/.test(g),o=/webkit/.test(g)?parseFloat(g.replace(/^.*webkit\\/(\\d+(\\.\\d+)?).*$/,\"$1\")):!1,p=!1,q=[0,0,0],r=null;if(typeof j.plugins!=a&&typeof j.plugins[c]==b)r=j.plugins[c].description,r&&(typeof j.mimeTypes==a||!j.mimeTypes[e]||!!j.mimeTypes[e].enabledPlugin)&&(k=!0,p=!1,r=r.replace(/^.*\\s+(\\S+\\s+\\S+$)/,\"$1\"),q[0]=parseInt(r.replace(/^(.*)\\..*$/,\"$1\"),10),q[1]=parseInt(r.replace(/^.*\\.(.*)\\s.*$/,\"$1\"),10),q[2]=/[a-zA-Z]/.test(r)?parseInt(r.replace(/^.*[a-zA-Z]+(.*)$/,\"$1\"),10):0);else if(typeof h[[\"Active\"].concat(\"Object\").join(\"X\")]!=a)try{var s=new(window[[\"Active\"].concat(\"Object\").join(\"X\")])(d);s&&(r=s.GetVariable(\"$version\"),r&&(p=!0,r=r.split(\" \")[1].split(\",\"),q=[parseInt(r[0],10),parseInt(r[1],10),parseInt(r[2],10)]))}catch(t){}return{w3:f,pv:q,wk:o,ie:p,win:m,mac:n}}(),z=function(){if(!y.w3)return;(typeof i.readyState!=a&&i.readyState==\"complete\"||typeof i.readyState==a&&(i.getElementsByTagName(\"body\")[0]||i.body))&&A(),t||(typeof i.addEventListener!=a&&i.addEventListener(\"DOMContentLoaded\",A,!1),y.ie&&y.win&&(i.attachEvent(g,function(){i.readyState==\"complete\"&&(i.detachEvent(g,arguments.callee),A())}),h==top&&function(){if(t)return;try{i.documentElement.doScroll(\"left\")}catch(a){setTimeout(arguments.callee,0);return}A()}()),y.wk&&function(){if(t)return;if(!/loaded|complete/.test(i.readyState)){setTimeout(arguments.callee,0);return}A()}(),C(A))}(),W=function(){y.ie&&y.win&&window.attachEvent(\"onunload\",function(){var a=o.length;for(var b=0;b<a;b++)o[b][0].detachEvent(o[b][1],o[b][2]);var c=n.length;for(var d=0;d<c;d++)N(n[d]);for(var e in y)y[e]=null;y=null;for(var f in swfobject)swfobject[f]=null;swfobject=null})}();return{registerObject:function(a,b,c,d){if(y.w3&&a&&b){var e={};e.id=a,e.swfVersion=b,e.expressInstall=c,e.callbackFn=d,m[m.length]=e,U(a,!1)}else d&&d({success:!1,id:a})},getObjectById:function(a){if(y.w3)return G(a)},embedSWF:function(c,d,e,f,g,h,i,j,k,l){var m={success:!1,id:d};y.w3&&!(y.wk&&y.wk<312)&&c&&d&&e&&f&&g?(U(d,!1),B(function(){e+=\"\",f+=\"\";var n={};if(k&&typeof k===b)for(var o in k)n[o]=k[o];n.data=c,n.width=e,n.height=f;var p={};if(j&&typeof j===b)for(var q in j)p[q]=j[q];if(i&&typeof i===b)for(var r in i)typeof p.flashvars!=a?p.flashvars+=\"&\"+r+\"=\"+i[r]:p.flashvars=r+\"=\"+i[r];if(S(g)){var s=L(n,p,d);n.id==d&&U(d,!0),m.success=!0,m.ref=s}else{if(h&&H()){n.data=h,I(n,p,d,l);return}U(d,!0)}l&&l(m)})):l&&l(m)},switchOffAutoHideShow:function(){x=!1},ua:y,getFlashPlayerVersion:function(){return{major:y.pv[0],minor:y.pv[1],release:y.pv[2]}},hasFlashPlayerVersion:S,createSWF:function(a,b,c){return y.w3?L(a,b,c):undefined},showExpressInstall:function(a,b,c,d){y.w3&&H()&&I(a,b,c,d)},removeSWF:function(a){y.w3&&N(a)},createCSS:function(a,b,c,d){y.w3&&T(a,b,c,d)},addDomLoadEvent:B,addLoadEvent:C,getQueryParamValue:function(a){var b=i.location.search||i.location.hash;if(b){/\\?/.test(b)&&(b=b.split(\"?\")[1]);if(a==null)return V(b);var c=b.split(\"&\");for(var d=0;d<c.length;d++)if(c[d].substring(0,c[d].indexOf(\"=\"))==a)return V(c[d].substring(c[d].indexOf(\"=\")+1))}return\"\"},expressInstallCallback:function(){if(u){var a=P(f);a&&p&&(a.parentNode.replaceChild(p,a),q&&(U(q,!0),y.ie&&y.win&&(p.style.display=\"block\")),r&&r(s)),u=!1}}}}();(function(){if(\"undefined\"==typeof window||window.WebSocket)return;var a=window.console;if(!a||!a.log||!a.error)a={log:function(){},error:function(){}};if(!swfobject.hasFlashPlayerVersion(\"10.0.0\")){a.error(\"Flash Player >= 10.0.0 is required.\");return}location.protocol==\"file:\"&&a.error(\"WARNING: web-socket-js doesn't work in file:///... URL unless you set Flash Security Settings properly. Open the page via Web server i.e. http://...\"),WebSocket=function(a,b,c,d,e){var f=this;f.__id=WebSocket.__nextId++,WebSocket.__instances[f.__id]=f,f.readyState=WebSocket.CONNECTING,f.bufferedAmount=0,f.__events={},b?typeof b==\"string\"&&(b=[b]):b=[],setTimeout(function(){WebSocket.__addTask(function(){WebSocket.__flash.create(f.__id,a,b,c||null,d||0,e||null)})},0)},WebSocket.prototype.send=function(a){if(this.readyState==WebSocket.CONNECTING)throw\"INVALID_STATE_ERR: Web Socket connection has not been established\";var b=WebSocket.__flash.send(this.__id,encodeURIComponent(a));return b<0?!0:(this.bufferedAmount+=b,!1)},WebSocket.prototype.close=function(){if(this.readyState==WebSocket.CLOSED||this.readyState==WebSocket.CLOSING)return;this.readyState=WebSocket.CLOSING,WebSocket.__flash.close(this.__id)},WebSocket.prototype.addEventListener=function(a,b,c){a in this.__events||(this.__events[a]=[]),this.__events[a].push(b)},WebSocket.prototype.removeEventListener=function(a,b,c){if(!(a in this.__events))return;var d=this.__events[a];for(var e=d.length-1;e>=0;--e)if(d[e]===b){d.splice(e,1);break}},WebSocket.prototype.dispatchEvent=function(a){var b=this.__events[a.type]||[];for(var c=0;c<b.length;++c)b[c](a);var d=this[\"on\"+a.type];d&&d(a)},WebSocket.prototype.__handleEvent=function(a){\"readyState\"in a&&(this.readyState=a.readyState),\"protocol\"in a&&(this.protocol=a.protocol);var b;if(a.type==\"open\"||a.type==\"error\")b=this.__createSimpleEvent(a.type);else if(a.type==\"close\")b=this.__createSimpleEvent(\"close\");else{if(a.type!=\"message\")throw\"unknown event type: \"+a.type;var c=decodeURIComponent(a.message);b=this.__createMessageEvent(\"message\",c)}this.dispatchEvent(b)},WebSocket.prototype.__createSimpleEvent=function(a){if(document.createEvent&&window.Event){var b=document.createEvent(\"Event\");return b.initEvent(a,!1,!1),b}return{type:a,bubbles:!1,cancelable:!1}},WebSocket.prototype.__createMessageEvent=function(a,b){if(document.createEvent&&window.MessageEvent&&!window.opera){var c=document.createEvent(\"MessageEvent\");return c.initMessageEvent(\"message\",!1,!1,b,null,null,window,null),c}return{type:a,data:b,bubbles:!1,cancelable:!1}},WebSocket.CONNECTING=0,WebSocket.OPEN=1,WebSocket.CLOSING=2,WebSocket.CLOSED=3,WebSocket.__flash=null,WebSocket.__instances={},WebSocket.__tasks=[],WebSocket.__nextId=0,WebSocket.loadFlashPolicyFile=function(a){WebSocket.__addTask(function(){WebSocket.__flash.loadManualPolicyFile(a)})},WebSocket.__initialize=function(){if(WebSocket.__flash)return;WebSocket.__swfLocation&&(window.WEB_SOCKET_SWF_LOCATION=WebSocket.__swfLocation);if(!window.WEB_SOCKET_SWF_LOCATION){a.error(\"[WebSocket] set WEB_SOCKET_SWF_LOCATION to location of WebSocketMain.swf\");return}var b=document.createElement(\"div\");b.id=\"webSocketContainer\",b.style.position=\"absolute\",WebSocket.__isFlashLite()?(b.style.left=\"0px\",b.style.top=\"0px\"):(b.style.left=\"-100px\",b.style.top=\"-100px\");var c=document.createElement(\"div\");c.id=\"webSocketFlash\",b.appendChild(c),document.body.appendChild(b),swfobject.embedSWF(WEB_SOCKET_SWF_LOCATION,\"webSocketFlash\",\"1\",\"1\",\"10.0.0\",null,null,{hasPriority:!0,swliveconnect:!0,allowScriptAccess:\"always\"},null,function(b){b.success||a.error(\"[WebSocket] swfobject.embedSWF failed\")})},WebSocket.__onFlashInitialized=function(){setTimeout(function(){WebSocket.__flash=document.getElementById(\"webSocketFlash\"),WebSocket.__flash.setCallerUrl(location.href),WebSocket.__flash.setDebug(!!window.WEB_SOCKET_DEBUG);for(var a=0;a<WebSocket.__tasks.length;++a)WebSocket.__tasks[a]();WebSocket.__tasks=[]},0)},WebSocket.__onFlashEvent=function(){return setTimeout(function(){try{var b=WebSocket.__flash.receiveEvents();for(var c=0;c<b.length;++c)WebSocket.__instances[b[c].webSocketId].__handleEvent(b[c])}catch(d){a.error(d)}},0),!0},WebSocket.__log=function(b){a.log(decodeURIComponent(b))},WebSocket.__error=function(b){a.error(decodeURIComponent(b))},WebSocket.__addTask=function(a){WebSocket.__flash?a():WebSocket.__tasks.push(a)},WebSocket.__isFlashLite=function(){if(!window.navigator||!window.navigator.mimeTypes)return!1;var a=window.navigator.mimeTypes[\"application/x-shockwave-flash\"];return!a||!a.enabledPlugin||!a.enabledPlugin.filename?!1:a.enabledPlugin.filename.match(/flashlite/i)?!0:!1},window.WEB_SOCKET_DISABLE_AUTO_INITIALIZATION||(window.addEventListener?window.addEventListener(\"load\",function(){WebSocket.__initialize()},!1):window.attachEvent(\"onload\",function(){WebSocket.__initialize()}))})(),function(a,b,c){function d(a){if(!a)return;b.Transport.apply(this,arguments),this.sendBuffer=[]}function e(){}a.XHR=d,b.util.inherit(d,b.Transport),d.prototype.open=function(){return this.socket.setBuffer(!1),this.onOpen(),this.get(),this.setCloseTimeout(),this},d.prototype.payload=function(a){var c=[];for(var d=0,e=a.length;d<e;d++)c.push(b.parser.encodePacket(a[d]));this.send(b.parser.encodePayload(c))},d.prototype.send=function(a){return this.post(a),this},d.prototype.post=function(a){function d(){this.readyState==4&&(this.onreadystatechange=e,b.posting=!1,this.status==200?b.socket.setBuffer(!1):b.onClose())}function f(){this.onload=e,b.socket.setBuffer(!1)}var b=this;this.socket.setBuffer(!0),this.sendXHR=this.request(\"POST\"),c.XDomainRequest&&this.sendXHR instanceof XDomainRequest?this.sendXHR.onload=this.sendXHR.onerror=f:this.sendXHR.onreadystatechange=d,this.sendXHR.send(a)},d.prototype.close=function(){return this.onClose(),this},d.prototype.request=function(a){var c=b.util.request(this.socket.isXDomain()),d=b.util.query(this.socket.options.query,\"t=\"+ +(new Date));c.open(a||\"GET\",this.prepareUrl()+d,!0);if(a==\"POST\")try{c.setRequestHeader?c.setRequestHeader(\"Content-type\",\"text/plain;charset=UTF-8\"):c.contentType=\"text/plain\"}catch(e){}return c},d.prototype.scheme=function(){return this.socket.options.secure?\"https\":\"http\"},d.check=function(a,d){try{var e=b.util.request(d),f=c.XDomainRequest&&e instanceof XDomainRequest,g=a&&a.options&&a.options.secure?\"https:\":\"http:\",h=c.location&&g!=c.location.protocol;if(e&&(!f||!h))return!0}catch(i){}return!1},d.xdomainCheck=function(a){return d.check(a,!0)}}(\"undefined\"!=typeof io?io.Transport:module.exports,\"undefined\"!=typeof io?io:module.parent.exports,this),function(a,b){function c(a){b.Transport.XHR.apply(this,arguments)}a.htmlfile=c,b.util.inherit(c,b.Transport.XHR),c.prototype.name=\"htmlfile\",c.prototype.get=function(){this.doc=new(window[[\"Active\"].concat(\"Object\").join(\"X\")])(\"htmlfile\"),this.doc.open(),this.doc.write(\"<html></html>\"),this.doc.close(),this.doc.parentWindow.s=this;var a=this.doc.createElement(\"div\");a.className=\"socketio\",this.doc.body.appendChild(a),this.iframe=this.doc.createElement(\"iframe\"),a.appendChild(this.iframe);var c=this,d=b.util.query(this.socket.options.query,\"t=\"+ +(new Date));this.iframe.src=this.prepareUrl()+d,b.util.on(window,\"unload\",function(){c.destroy()})},c.prototype._=function(a,b){this.onData(a);try{var c=b.getElementsByTagName(\"script\")[0];c.parentNode.removeChild(c)}catch(d){}},c.prototype.destroy=function(){if(this.iframe){try{this.iframe.src=\"about:blank\"}catch(a){}this.doc=null,this.iframe.parentNode.removeChild(this.iframe),this.iframe=null,CollectGarbage()}},c.prototype.close=function(){return this.destroy(),b.Transport.XHR.prototype.close.call(this)},c.check=function(a){if(typeof window!=\"undefined\"&&[\"Active\"].concat(\"Object\").join(\"X\")in window)try{var c=new(window[[\"Active\"].concat(\"Object\").join(\"X\")])(\"htmlfile\");return c&&b.Transport.XHR.check(a)}catch(d){}return!1},c.xdomainCheck=function(){return!1},b.transports.push(\"htmlfile\")}(\"undefined\"!=typeof io?io.Transport:module.exports,\"undefined\"!=typeof io?io:module.parent.exports),function(a,b,c){function d(){b.Transport.XHR.apply(this,arguments)}function e(){}a[\"xhr-polling\"]=d,b.util.inherit(d,b.Transport.XHR),b.util.merge(d,b.Transport.XHR),d.prototype.name=\"xhr-polling\",d.prototype.heartbeats=function(){return!1},d.prototype.open=function(){var a=this;return b.Transport.XHR.prototype.open.call(a),!1},d.prototype.get=function(){function b(){this.readyState==4&&(this.onreadystatechange=e,this.status==200?(a.onData(this.responseText),a.get()):a.onClose())}function d(){this.onload=e,this.onerror=e,a.retryCounter=1,a.onData(this.responseText),a.get()}function f(){a.retryCounter++,!a.retryCounter||a.retryCounter>3?a.onClose():a.get()}if(!this.isOpen)return;var a=this;this.xhr=this.request(),c.XDomainRequest&&this.xhr instanceof XDomainRequest?(this.xhr.onload=d,this.xhr.onerror=f):this.xhr.onreadystatechange=b,this.xhr.send(null)},d.prototype.onClose=function(){b.Transport.XHR.prototype.onClose.call(this);if(this.xhr){this.xhr.onreadystatechange=this.xhr.onload=this.xhr.onerror=e;try{this.xhr.abort()}catch(a){}this.xhr=null}},d.prototype.ready=function(a,c){var d=this;b.util.defer(function(){c.call(d)})},b.transports.push(\"xhr-polling\")}(\"undefined\"!=typeof io?io.Transport:module.exports,\"undefined\"!=typeof io?io:module.parent.exports,this),function(a,b,c){function e(a){b.Transport[\"xhr-polling\"].apply(this,arguments),this.index=b.j.length;var c=this;b.j.push(function(a){c._(a)})}var d=c.document&&\"MozAppearance\"in c.document.documentElement.style;a[\"jsonp-polling\"]=e,b.util.inherit(e,b.Transport[\"xhr-polling\"]),e.prototype.name=\"jsonp-polling\",e.prototype.post=function(a){function i(){j(),c.socket.setBuffer(!1)}function j(){c.iframe&&c.form.removeChild(c.iframe);try{h=document.createElement('<iframe name=\"'+c.iframeId+'\">')}catch(a){h=document.createElement(\"iframe\"),h.name=c.iframeId}h.id=c.iframeId,c.form.appendChild(h),c.iframe=h}var c=this,d=b.util.query(this.socket.options.query,\"t=\"+ +(new Date)+\"&i=\"+this.index);if(!this.form){var e=document.createElement(\"form\"),f=document.createElement(\"textarea\"),g=this.iframeId=\"socketio_iframe_\"+this.index,h;e.className=\"socketio\",e.style.position=\"absolute\",e.style.top=\"0px\",e.style.left=\"0px\",e.style.display=\"none\",e.target=g,e.method=\"POST\",e.setAttribute(\"accept-charset\",\"utf-8\"),f.name=\"d\",e.appendChild(f),document.body.appendChild(e),this.form=e,this.area=f}this.form.action=this.prepareUrl()+d,j(),this.area.value=b.JSON.stringify(a);try{this.form.submit()}catch(k){}this.iframe.attachEvent?h.onreadystatechange=function(){c.iframe.readyState==\"complete\"&&i()}:this.iframe.onload=i,this.socket.setBuffer(!0)},e.prototype.get=function(){var a=this,c=document.createElement(\"script\"),e=b.util.query(this.socket.options.query,\"t=\"+ +(new Date)+\"&i=\"+this.index);this.script&&(this.script.parentNode.removeChild(this.script),this.script=null),c.async=!0,c.src=this.prepareUrl()+e,c.onerror=function(){a.onClose()};var f=document.getElementsByTagName(\"script\")[0];f.parentNode.insertBefore(c,f),this.script=c,d&&setTimeout(function(){var a=document.createElement(\"iframe\");document.body.appendChild(a),document.body.removeChild(a)},100)},e.prototype._=function(a){return this.onData(a),this.isOpen&&this.get(),this},e.prototype.ready=function(a,c){var e=this;if(!d)return c.call(this);b.util.load(function(){c.call(e)})},e.check=function(){return\"document\"in c},e.xdomainCheck=function(){return!0},b.transports.push(\"jsonp-polling\")}(\"undefined\"!=typeof io?io.Transport:module.exports,\"undefined\"!=typeof io?io:module.parent.exports,this),typeof define==\"function\"&&define.amd&&define([],function(){return io})})()","/**\r\n * The client-side socket.io component. Handles all client-side\r\n * networking systems.\r\n */\r\nvar IgeSocketIoClient = {\r\n\t_initDone: false,\r\n\t_idCounter: 0,\r\n\t_requests: {},\r\n\r\n\t/**\r\n\t * Gets the current socket id.\r\n\t * @returns {String} The id of the socket connection to the server.\r\n\t */\r\n\tid: function () {\r\n\t\tif (this._io && this._io.socket) {\r\n\t\t\treturn this._io.socket.sessionid;\r\n\t\t} else {\r\n\t\t\treturn '';\r\n\t\t}\r\n\t},\r\n\t\r\n\t/**\r\n\t * Starts the network for the client.\r\n\t * @param {*} data The game server URL.\r\n\t * @param {Function=} callback A callback method to call once the\r\n\t * network has started.\r\n\t */\r\n\tstart: function (data, callback) {\r\n\t\tvar self = this;\r\n\r\n\t\t// Check if the io library exists and use ioNoDom otherwise\r\n\t\tif (typeof(io) === 'undefined') {\r\n\t\t\tio = ioNoDom;\r\n\t\t}\r\n\r\n\t\tself._startCallback = callback;\r\n\r\n\t\tif (typeof(data) !== 'undefined') {\r\n\t\t\tthis._port = data;\r\n\t\t}\r\n\r\n\t\tthis.log('Connecting to socket.io server at \"' + this._port + '\"...');\r\n\r\n\t\tthis._io = io.connect(data);\r\n\r\n\t\t// Define connect listener\r\n\t\tthis._io.on('connect', function () {\r\n\t\t\tself._onConnectToServer.apply(self, arguments);\r\n\t\t});\r\n\r\n\t\t// Define message listener\r\n\t\tthis._io.on('message', function (data) {\r\n\t\t\tif (!self._initDone) {\r\n\t\t\t\tvar i, commandCount = 0;\r\n\r\n\t\t\t\t// Check if the data is an init packet\r\n\t\t\t\tif (data.cmd === 'init') {\r\n\t\t\t\t\t// Set flag to show we've now received an init command\r\n\t\t\t\t\tself._initDone = true;\r\n\r\n\t\t\t\t\t// Setup the network commands storage\r\n\t\t\t\t\tself._networkCommandsLookup = data.ncmds;\r\n\r\n\t\t\t\t\t// Fill the reverse lookup on the commands\r\n\t\t\t\t\tfor (i in self._networkCommandsLookup) {\r\n\t\t\t\t\t\tif (self._networkCommandsLookup.hasOwnProperty(i)) {\r\n\t\t\t\t\t\t\tself._networkCommandsIndex[self._networkCommandsLookup[i]] = i;\r\n\t\t\t\t\t\t\tcommandCount++;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Setup default command listeners\r\n\t\t\t\t\tself.define('_igeRequest', function () { self._onRequest.apply(self, arguments); });\r\n\t\t\t\t\tself.define('_igeResponse', function () { self._onResponse.apply(self, arguments); });\r\n\t\t\t\t\tself.define('_igeNetTimeSync', function () { self._onTimeSync.apply(self, arguments); });\r\n\r\n\t\t\t\t\tself.log('Received network command list with count: ' + commandCount);\r\n\r\n\t\t\t\t\t// Now fire the start() callback\r\n\t\t\t\t\tif (typeof(self._startCallback) === 'function') {\r\n\t\t\t\t\t\tself._startCallback();\r\n\t\t\t\t\t\tdelete self._startCallback;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tself._onMessageFromServer.apply(self, arguments);\r\n\t\t});\r\n\r\n\t\t// Define disconnect listener\r\n\t\tthis._io.on('disconnect', function () {\r\n\t\t\tself._onDisconnectFromServer.apply(self, arguments);\r\n\t\t});\r\n\t},\r\n\r\n\t/**\r\n\t * Gets / sets a network command and callback. When a network command\r\n\t * is received by the client, the callback set up for that command will\r\n\t * automatically be called and passed the data from the incoming network\r\n\t * packet.\r\n\t * @param {String} commandName The name of the command to define.\r\n\t * @param {Function} callback A function to call when the defined network\r\n\t * command is received by the network.\r\n\t * @return {*}\r\n\t */\r\n\tdefine: function (commandName, callback) {\r\n\t\tif (commandName !== undefined && callback !== undefined) {\r\n\t\t\t// Check if this command has been defined by the server\r\n\t\t\tif (this._networkCommandsLookup[commandName] !== undefined) {\r\n\t\t\t\tthis._networkCommands[commandName] = callback;\r\n\t\t\t} else {\r\n\t\t\t\tthis.log('Cannot define network command \"' + commandName + '\" because it does not exist on the server. Please edit your server code and define the network command there before trying to define it on the client!', 'error');\r\n\t\t\t}\r\n\r\n\t\t\treturn this._entity;\r\n\t\t} else {\r\n\t\t\tthis.log('Cannot define network command either the commandName or callback parameters were undefined!', 'error');\r\n\t\t}\r\n\t},\r\n\r\n\tsend: function (commandName, data) {\r\n\t\tvar commandIndex = this._networkCommandsLookup[commandName];\r\n\r\n\t\tif (commandIndex !== undefined) {\r\n\t\t\tthis._io.json.send([commandIndex, data]);\r\n\t\t} else {\r\n\t\t\tthis.log('Cannot send network packet with command \"' + commandName + '\" because the command has not been defined!', 'error');\r\n\t\t}\r\n\t},\r\n\t\r\n\t/**\r\n\t * Sends a network request. This is different from a standard\r\n\t * call to send() because the recipient code will be able to\r\n\t * respond by calling ige.network.response(). When the response\r\n\t * is received, the callback method that was passed in the\r\n\t * callback parameter will be fired with the response data.\r\n\t * @param {String} commandName\r\n\t * @param {Object} data\r\n\t * @param {Function} callback\r\n\t */\r\n\trequest: function (commandName, data, callback) {\r\n\t\t// Build the request object\r\n\t\tvar req = {\r\n\t\t\tid: this.newIdHex(),\r\n\t\t\tcmd: commandName,\r\n\t\t\tdata: data,\r\n\t\t\tcallback: callback,\r\n\t\t\ttimestamp: new Date().getTime()\r\n\t\t};\r\n\r\n\t\t// Store the request object\r\n\t\tthis._requests[req.id] = req;\r\n\r\n\t\t// Send the network request packet\r\n\t\tthis.send(\r\n\t\t\t'_igeRequest',\r\n\t\t\t{\r\n\t\t\t\tid: req.id,\r\n\t\t\t\tcmd: commandName,\r\n\t\t\t\tdata: req.data\r\n\t\t\t}\r\n\t\t);\r\n\t},\r\n\r\n\t/**\r\n\t * Sends a response to a network request.\r\n\t * @param {String} requestId\r\n\t * @param {Object} data\r\n\t */\r\n\tresponse: function (requestId, data) {\r\n\t\t// Grab the original request object\r\n\t\tvar req = this._requests[requestId];\r\n\r\n\t\tif (req) {\r\n\t\t\t// Send the network response packet\r\n\t\t\tthis.send(\r\n\t\t\t\t'_igeResponse',\r\n\t\t\t\t{\r\n\t\t\t\t\tid: requestId,\r\n\t\t\t\t\tcmd: req.commandName,\r\n\t\t\t\t\tdata: data\r\n\t\t\t\t}\r\n\t\t\t);\r\n\r\n\t\t\t// Remove the request as we've now responded!\r\n\t\t\tdelete this._requests[requestId];\r\n\t\t}\r\n\t},\r\n\t\r\n\t/**\r\n\t * Generates a new 16-character hexadecimal unique ID\r\n\t * @return {String}\r\n\t */\r\n\tnewIdHex: function () {\r\n\t\tthis._idCounter++;\r\n\t\treturn (this._idCounter + (Math.random() * Math.pow(10, 17) + Math.random() * Math.pow(10, 17) + Math.random() * Math.pow(10, 17) + Math.random() * Math.pow(10, 17))).toString(16);\r\n\t},\r\n\t\r\n\t_onRequest: function (data) {\r\n\t\t// The message is a network request so fire\r\n\t\t// the command event with the request id and\r\n\t\t// the request data\r\n\t\tthis._requests[data.id] = data;\r\n\r\n\t\tif (this.debug()) {\r\n\t\t\tconsole.log('onRequest', data);\r\n\t\t\tthis._debugCounter++;\r\n\t\t}\r\n\r\n\t\tif (this._networkCommands[data.cmd]) {\r\n\t\t\tthis._networkCommands[data.cmd](data.id, data.data);\r\n\t\t}\r\n\r\n\t\tthis.emit(data.cmd, [data.id, data.data]);\r\n\t},\r\n\r\n\t_onResponse: function (data) {\r\n\t\t// The message is a network response\r\n\t\t// to a request we sent earlier\r\n\t\tvar id = data.id;\r\n\r\n\t\t// Get the original request object from\r\n\t\t// the request id\r\n\t\tvar req = this._requests[id];\r\n\r\n\t\tif (this.debug()) {\r\n\t\t\tconsole.log('onResponse', data);\r\n\t\t\tthis._debugCounter++;\r\n\t\t}\r\n\r\n\t\tif (req) {\r\n\t\t\t// Fire the request callback!\r\n\t\t\tif (req.callback) {\r\n\t\t\t\treq.callback(req.cmd, data.data);\r\n\t\t\t}\r\n\r\n\t\t\t// Delete the request from memory\r\n\t\t\tdelete this._requests[id];\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Called when the network connects to the server.\r\n\t * @private\r\n\t */\r\n\t_onConnectToServer: function () {\r\n\t\tthis.log('Connected to server!');\r\n\t\tthis.emit('connected');\r\n\t},\r\n\r\n\t/**\r\n\t * Called when data from the server is received on the client.\r\n\t * @param data\r\n\t * @private\r\n\t */\r\n\t_onMessageFromServer: function (data) {\r\n\t\tvar commandName = this._networkCommandsIndex[data[0]];\r\n\t\tif (this._networkCommands[commandName]) {\r\n\t\t\tthis._networkCommands[commandName](data[1]);\r\n\t\t}\r\n\t\tthis.emit(commandName, data[1]);\r\n\t},\r\n\r\n\t/**\r\n\t * Called when the client is disconnected from the server.\r\n\t * @param data\r\n\t * @private\r\n\t */\r\n\t_onDisconnectFromServer: function (data) {\r\n\t\tif (data === 'booted') {\r\n\t\t\tthis.log('Server rejected our connection because it is not accepting connections at this time!', 'warning');\r\n\t\t} else {\r\n\t\t\tthis.log('Disconnected from server!');\r\n\t\t}\r\n\t\tthis.emit('disconnected');\r\n\t}\r\n};\r\n\r\nif (typeof(module) !== 'undefined' && typeof(module.exports) !== 'undefined') { module.exports = IgeSocketIoClient; }\r\n","var IgeSocketIoComponent = IgeEventingClass.extend([\r\n\t{extension: IgeTimeSyncExtension, overwrite: false}\r\n], {\r\n\tclassId: 'IgeSocketIoComponent',\r\n\tcomponentId: 'network',\r\n\r\n\tinit: function (entity, options) {\r\n\t\tthis._entity = entity;\r\n\t\tthis._options = options;\r\n\r\n\t\t// Setup the network commands storage\r\n\t\tthis._networkCommands = {};\r\n\t\tthis._networkCommandsIndex = [];\r\n\t\tthis._networkCommandsLookup = {};\r\n\r\n\t\t// Set some defaults\r\n\t\tthis._port = 8000;\r\n\t\tthis._debug = false;\r\n\t\tthis._debugMax = 0;\r\n\t\tthis._clientRooms = {};\r\n\r\n\t\t// Time sync defaults\r\n\t\tthis._timeSyncInterval = 10000; // Sync the client/server clocks every ten seconds by default\r\n\t\tthis._timeSyncLog = {};\r\n\t\tthis._latency = 0;\r\n\r\n\t\t/* CEXCLUDE */\r\n\t\tif (ige.isServer) {\r\n\t\t\tthis.implement(IgeSocketIoServer);\r\n\t\t\tthis._socketio = require('../../../' + modulePath + 'socket.io');\r\n\t\t\tthis._acceptConnections = false;\r\n\t\t}\r\n\t\t/* CEXCLUDE */\r\n\r\n\t\tif (ige.isClient) {\r\n\t\t\tthis._socketio = IgeSocketIoClient;\r\n\t\t\tthis.implement(IgeSocketIoClient);\r\n\t\t}\r\n\r\n\t\tthis.log('Network component initiated with socket.io version: ' + this._socketio.version);\r\n\t},\r\n\r\n\t/**\r\n\t * Gets / sets debug flag that determines if debug output\r\n\t * is logged to the console.\r\n\t * @param {Boolean=} val\r\n\t * @return {*}\r\n\t */\r\n\tdebug: function (val) {\r\n\t\tif (val !== undefined) {\r\n\t\t\tthis._debug = val;\r\n\t\t\treturn this._entity;\r\n\t\t}\r\n\r\n\t\t// Check the debug counter settings\r\n\t\tif (this._debugMax > 0 && this._debugCounter >= this._debugMax) {\r\n\t\t\tthis._debug = false;\r\n\t\t\tthis._debugCounter = 0;\r\n\t\t}\r\n\r\n\t\treturn this._debug;\r\n\t},\r\n\r\n\t/**\r\n\t * Gets / sets the maximum number of debug messages that\r\n\t * should be allowed to be output to the console before\r\n\t * debugging is automatically turned off. This is useful\r\n\t * if you want to sample a certain number of outputs and\r\n\t * then automatically disable output so your console is\r\n\t * not flooded.\r\n\t * @param {Number=} val Number of debug messages to allow\r\n\t * to be output to the console. Set to zero to allow\r\n\t * infinite amounts.\r\n\t * @return {*}\r\n\t */\r\n\tdebugMax: function (val) {\r\n\t\tif (val !== undefined) {\r\n\t\t\tthis._debugMax = val;\r\n\t\t\treturn this._entity;\r\n\t\t}\r\n\r\n\t\treturn this._debugMax;\r\n\t}\r\n});\r\n\r\nif (typeof(module) !== 'undefined' && typeof(module.exports) !== 'undefined') { module.exports = IgeSocketIoComponent; }","// Our namespace\r\nvar NetIo = {};\r\n\r\n/**\r\n * Define the debug options object.\r\n * @type {Object}\r\n * @private\r\n */\r\nNetIo._debug = {\r\n\t_enabled: true,\r\n\t_node: typeof(module) !== 'undefined' && typeof(module.exports) !== 'undefined',\r\n\t_level: ['log', 'warning', 'error'],\r\n\t_stacks: false,\r\n\t_throwErrors: true,\r\n\t_trace: {\r\n\t\tsetup: false,\r\n\t\tenabled: false,\r\n\t\tmatch: ''\r\n\t},\r\n\tenabled: function (val) {\r\n\t\tif (val !== undefined) {\r\n\t\t\tthis._enabled = val;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\treturn this._enabled;\r\n\t}\r\n};\r\n\r\n/**\r\n * Define the class system.\r\n * @type {*}\r\n */\r\nNetIo.Class = IgeClass;\r\n\r\nNetIo.EventingClass = IgeEventingClass;\r\n\r\nNetIo.Client = NetIo.EventingClass.extend({\r\n\tclassId: 'NetIo.Client',\r\n\r\n\tinit: function (url, options) {\r\n\t\tthis.log('Net.io client starting...');\r\n\t\tthis._options = options || {};\r\n\t\tthis._socket = null;\r\n\t\tthis._state = 0;\r\n\t\tthis._debug = false;\r\n\t\tthis._connectionAttempts = 0;\r\n\r\n\t\t// Set some default options\r\n\t\tif (this._options.connectionRetry === undefined) { this._options.connectionRetry = true; }\r\n\t\tif (this._options.connectionRetryMax === undefined) { this._options.connectionRetryMax = 10; }\r\n\t\tif (this._options.reconnect === undefined) { this._options.reconnect = true; }\r\n\r\n\t\t// If we were passed a url, connect to it\r\n\t\tif (url !== undefined) {\r\n\t\t\tthis.connect(url);\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Gets / sets the debug flag. If set to true, net.io\r\n\t * will output debug data about every network event as\r\n\t * it occurs to the console.\r\n\t * @param {Boolean=} val\r\n\t * @return {*}\r\n\t */\r\n\tdebug: function (val) {\r\n\t\tif (val !== undefined) {\r\n\t\t\tthis._debug = val;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\treturn this._debug;\r\n\t},\r\n\r\n\tconnect: function (url) {\r\n\t\tthis.log('Connecting to server at ' + url);\r\n\t\tvar self = this;\r\n\r\n\t\t// Set the state to connecting\r\n\t\tthis._state = 1;\r\n\r\n\t\t// Replace http:// with ws://\r\n\t\turl = url.replace('http://', 'ws://');\r\n\r\n\t\t// Create new websocket to the url\r\n\t\tthis._socket = new WebSocket(url, 'netio1');\r\n\r\n\t\t// Setup event listeners\r\n\t\tthis._socket.onopen = function () { self._onOpen.apply(self, arguments); };\r\n\t\tthis._socket.onmessage = function () { self._onData.apply(self, arguments); };\r\n\t\tthis._socket.onclose = function () { self._onClose.apply(self, arguments); };\r\n\t\tthis._socket.onerror = function () { self._onError.apply(self, arguments); };\r\n\t},\r\n\r\n\tdisconnect: function (reason) {\r\n\t\tthis._socket.close(1000, reason);\r\n\t},\r\n\r\n\tsend: function (data) {\r\n\t\tthis._socket.send(this._encode(data));\r\n\t},\r\n\r\n\t_onOpen: function () {\r\n\t\tthis._state = 2;\r\n\t},\r\n\r\n\t_onData: function (data) {\r\n\t\t// Decode packet and emit message event\r\n\t\tvar packet = this._decode(data.data);\r\n\r\n\t\t// Output debug if required\r\n\t\tif (this._debug) {\r\n\t\t\tconsole.log('Incoming data (event, decoded data):', data, packet);\r\n\t\t}\r\n\r\n\t\tif (packet._netioCmd) {\r\n\t\t\t// The packet is a netio command\r\n\t\t\tswitch (packet._netioCmd) {\r\n\t\t\t\tcase 'id':\r\n\t\t\t\t\t// Store the new id in the socket\r\n\t\t\t\t\tthis.id = packet.data;\r\n\r\n\t\t\t\t\t// Now we have an id, set the state to connected\r\n\t\t\t\t\tthis._state = 3;\r\n\r\n\t\t\t\t\t// Emit the connect event\r\n\t\t\t\t\tthis.emit('connect', this.id);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'close':\r\n\t\t\t\t\t// The server told us our connection has been closed\r\n\t\t\t\t\t// so store the reason the server gave us!\r\n\t\t\t\t\tthis._disconnectReason = packet.data;\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t// The packet is normal data\r\n\t\t\tthis.emit('message', [packet]);\r\n\t\t}\r\n\t},\r\n\r\n\t_onClose: function (code, reason, wasClean) {\r\n\t\t// If we are already connected and have an id...\r\n\t\tif (this._state === 3) {\r\n\t\t\tthis._state = 0;\r\n\t\t\tthis.emit('disconnect', {reason: this._disconnectReason, wasClean: wasClean, code:code});\r\n\t\t}\r\n\r\n\t\t// If we are connected but have no id...\r\n\t\tif (this._state === 2) {\r\n\t\t\tthis._state = 0;\r\n\t\t\tthis.emit('disconnect', {reason: this._disconnectReason, wasClean: wasClean, code:code});\r\n\t\t}\r\n\r\n\t\t// If we were trying to connect...\r\n\t\tif (this._state === 1) {\r\n\t\t\tthis._state = 0;\r\n\t\t\tthis.emit('error', {reason: 'Cannot establish connection, is server running?'});\r\n\t\t}\r\n\r\n\t\t// Remove the last disconnect reason\r\n\t\tdelete this._disconnectReason;\r\n\t},\r\n\r\n\t_onError: function () {\r\n\t\tthis.log('An error occurred with the net.io socket!', 'error', arguments);\r\n\t\tthis.emit('error', arguments);\r\n\t},\r\n\r\n\t_encode: function (data) {\r\n\t\treturn JSON.stringify(data);\r\n\t},\r\n\r\n\t_decode: function (data) {\r\n\t\treturn JSON.parse(data);\r\n\t}\r\n});","/**\r\n * The client-side net.io component. Handles all client-side\r\n * networking systems.\r\n */\r\nvar IgeNetIoClient = {\r\n\tversion: '1.0.0',\r\n\t_initDone: false,\r\n\t_idCounter: 0,\r\n\t_requests: {},\r\n\t_state: 0,\r\n\r\n\t/**\r\n\t * Gets the current socket id.\r\n\t * @returns {String} The id of the socket connection to the server.\r\n\t */\r\n\tid: function () {\r\n\t\treturn this._id || '';\r\n\t},\r\n\t\r\n\t/**\r\n\t * Starts the network for the client.\r\n\t * @param {*} url The game server URL.\r\n\t * @param {Function=} callback A callback method to call once the\r\n\t * network has started.\r\n\t */\r\n\tstart: function (url, callback) {\r\n\t\tif (this._state === 3) {\r\n\t\t\t// We're already connected\r\n\t\t\tif (typeof(callback) === 'function') {\r\n\t\t\t\tcallback();\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tvar self = this;\r\n\r\n\t\t\tself._startCallback = callback;\r\n\r\n\t\t\tif (typeof(url) !== 'undefined') {\r\n\t\t\t\tthis._url = url;\r\n\t\t\t}\r\n\r\n\t\t\tthis.log('Connecting to net.io server at \"' + this._url + '\"...');\r\n\r\n\t\t\tif (typeof(WebSocket) !== 'undefined') {\r\n\t\t\t\tthis._io = new NetIo.Client(url);\r\n\t\t\t\tself._state = 1; // Connecting\r\n\r\n\t\t\t\t// Define connect listener\r\n\t\t\t\tthis._io.on('connect', function (clientId) {\r\n\t\t\t\t\tself._state = 2; // Connected\r\n\t\t\t\t\tself._id = clientId;\r\n\t\t\t\t\tself._onConnectToServer.apply(self, arguments);\r\n\t\t\t\t});\r\n\r\n\t\t\t\t// Define message listener\r\n\t\t\t\tthis._io.on('message', function (data) {\r\n\t\t\t\t\tif (!self._initDone) {\r\n\t\t\t\t\t\tvar i, commandCount = 0;\r\n\r\n\t\t\t\t\t\t// Check if the data is an init packet\r\n\t\t\t\t\t\tif (data.cmd === 'init') {\r\n\t\t\t\t\t\t\t// Set flag to show we've now received an init command\r\n\t\t\t\t\t\t\tself._initDone = true;\r\n\t\t\t\t\t\t\tself._state = 3; // Connected and init done\r\n\r\n\t\t\t\t\t\t\t// Setup the network commands storage\r\n\t\t\t\t\t\t\tself._networkCommandsLookup = data.ncmds;\r\n\r\n\t\t\t\t\t\t\t// Fill the reverse lookup on the commands\r\n\t\t\t\t\t\t\tfor (i in self._networkCommandsLookup) {\r\n\t\t\t\t\t\t\t\tif (self._networkCommandsLookup.hasOwnProperty(i)) {\r\n\t\t\t\t\t\t\t\t\tself._networkCommandsIndex[self._networkCommandsLookup[i]] = i;\r\n\t\t\t\t\t\t\t\t\tcommandCount++;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t// Setup default commands\r\n\t\t\t\t\t\t\tself.define('_igeRequest', function () { self._onRequest.apply(self, arguments); });\r\n\t\t\t\t\t\t\tself.define('_igeResponse', function () { self._onResponse.apply(self, arguments); });\r\n\t\t\t\t\t\t\tself.define('_igeNetTimeSync', function () { self._onTimeSync.apply(self, arguments); });\r\n\r\n\t\t\t\t\t\t\tself.log('Received network command list with count: ' + commandCount);\r\n\r\n\t\t\t\t\t\t\t// Setup time scale and current time\r\n\t\t\t\t\t\t\tige.timeScale(parseFloat(data.ts));\r\n\t\t\t\t\t\t\tige._currentTime = parseInt(data.ct);\r\n\r\n\t\t\t\t\t\t\t// Now fire the start() callback\r\n\t\t\t\t\t\t\tif (typeof(self._startCallback) === 'function') {\r\n\t\t\t\t\t\t\t\tself._startCallback();\r\n\t\t\t\t\t\t\t\tdelete self._startCallback;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tself._onMessageFromServer.apply(self, arguments);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\t// Define disconnect listener\r\n\t\t\t\tthis._io.on('disconnect', function () {\r\n\t\t\t\t\tself._state = 0; // Disconnected\r\n\t\t\t\t\tself._onDisconnectFromServer.apply(self, arguments);\r\n\t\t\t\t});\r\n\r\n\t\t\t\t// Define error listener\r\n\t\t\t\tthis._io.on('error', function () {\r\n\t\t\t\t\tself._onError.apply(self, arguments);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\tstop: function () {\r\n\t\t// Check we are connected\r\n\t\tif (self._state === 3) {\r\n\t\t\tthis._io.disconnect('Client requested disconnect');\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Gets / sets a network command and callback. When a network command\r\n\t * is received by the client, the callback set up for that command will\r\n\t * automatically be called and passed the data from the incoming network\r\n\t * packet.\r\n\t * @param {String} commandName The name of the command to define.\r\n\t * @param {Function} callback A function to call when the defined network\r\n\t * command is received by the network.\r\n\t * @return {*}\r\n\t */\r\n\tdefine: function (commandName, callback) {\r\n\t\tif (commandName !== undefined && callback !== undefined) {\r\n\t\t\t// Check if this command has been defined by the server\r\n\t\t\tif (this._networkCommandsLookup[commandName] !== undefined) {\r\n\t\t\t\tthis._networkCommands[commandName] = callback;\r\n\t\t\t} else {\r\n\t\t\t\tthis.log('Cannot define network command \"' + commandName + '\" because it does not exist on the server. Please edit your server code and define the network command there before trying to define it on the client!', 'error');\r\n\t\t\t}\r\n\r\n\t\t\treturn this._entity;\r\n\t\t} else {\r\n\t\t\tthis.log('Cannot define network command either the commandName or callback parameters were undefined!', 'error');\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Sends a network message with the given command name\r\n\t * and data.\r\n\t * @param commandName\r\n\t * @param data\r\n\t */\r\n\tsend: function (commandName, data) {\r\n\t\tvar commandIndex = this._networkCommandsLookup[commandName],\r\n\t\t\tciEncoded;\r\n\r\n\t\tif (commandIndex !== undefined) {\r\n\t\t\tif (this.debug()) {\r\n\t\t\t\tconsole.log('Sending \"' + commandName + '\" (index ' + commandIndex + ') with data:', data);\r\n\t\t\t\tthis._debugCounter++;\r\n\t\t\t}\r\n\t\t\tciEncoded = String.fromCharCode(commandIndex);\r\n\t\t\tthis._io.send([ciEncoded, data]);\r\n\t\t} else {\r\n\t\t\tthis.log('Cannot send network packet with command \"' + commandName + '\" because the command has not been defined!', 'error');\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Sends a network request. This is different from a standard\r\n\t * call to send() because the recipient code will be able to\r\n\t * respond by calling ige.network.response(). When the response\r\n\t * is received, the callback method that was passed in the\r\n\t * callback parameter will be fired with the response data.\r\n\t * @param {String} commandName\r\n\t * @param {Object} data\r\n\t * @param {Function} callback\r\n\t */\r\n\trequest: function (commandName, data, callback) {\r\n\t\t// Build the request object\r\n\t\tvar req = {\r\n\t\t\tid: this.newIdHex(),\r\n\t\t\tcmd: commandName,\r\n\t\t\tdata: data,\r\n\t\t\tcallback: callback,\r\n\t\t\ttimestamp: new Date().getTime()\r\n\t\t};\r\n\r\n\t\t// Store the request object\r\n\t\tthis._requests[req.id] = req;\r\n\r\n\t\t// Send the network request packet\r\n\t\tthis.send(\r\n\t\t\t'_igeRequest',\r\n\t\t\t{\r\n\t\t\t\tid: req.id,\r\n\t\t\t\tcmd: commandName,\r\n\t\t\t\tdata: req.data\r\n\t\t\t}\r\n\t\t);\r\n\t},\r\n\r\n\t/**\r\n\t * Sends a response to a network request.\r\n\t * @param {String} requestId\r\n\t * @param {Object} data\r\n\t */\r\n\tresponse: function (requestId, data) {\r\n\t\t// Grab the original request object\r\n\t\tvar req = this._requests[requestId];\r\n\r\n\t\tif (req) {\r\n\t\t\t// Send the network response packet\r\n\t\t\tthis.send(\r\n\t\t\t\t'_igeResponse',\r\n\t\t\t\t{\r\n\t\t\t\t\tid: requestId,\r\n\t\t\t\t\tcmd: req.commandName,\r\n\t\t\t\t\tdata: data\r\n\t\t\t\t}\r\n\t\t\t);\r\n\r\n\t\t\t// Remove the request as we've now responded!\r\n\t\t\tdelete this._requests[requestId];\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Generates a new 16-character hexadecimal unique ID\r\n\t * @return {String}\r\n\t */\r\n\tnewIdHex: function () {\r\n\t\tthis._idCounter++;\r\n\t\treturn (this._idCounter + (Math.random() * Math.pow(10, 17) + Math.random() * Math.pow(10, 17) + Math.random() * Math.pow(10, 17) + Math.random() * Math.pow(10, 17))).toString(16);\r\n\t},\r\n\r\n\t_onRequest: function (data) {\r\n\t\t// The message is a network request so fire\r\n\t\t// the command event with the request id and\r\n\t\t// the request data\r\n\t\tthis._requests[data.id] = data;\r\n\r\n\t\tif (this.debug()) {\r\n\t\t\tconsole.log('onRequest', data);\r\n\t\t\tthis._debugCounter++;\r\n\t\t}\r\n\r\n\t\tif (this._networkCommands[data.cmd]) {\r\n\t\t\tthis._networkCommands[data.cmd](data.id, data.data);\r\n\t\t}\r\n\r\n\t\tthis.emit(data.cmd, [data.id, data.data]);\r\n\t},\r\n\r\n\t_onResponse: function (data) {\r\n\t\tvar id,\r\n\t\t\treq;\r\n\t\t\r\n\t\t// The message is a network response\r\n\t\t// to a request we sent earlier\r\n\t\tid = data.id;\r\n\r\n\t\t// Get the original request object from\r\n\t\t// the request id\r\n\t\treq = this._requests[id];\r\n\r\n\t\tif (this.debug()) {\r\n\t\t\tconsole.log('onResponse', data);\r\n\t\t\tthis._debugCounter++;\r\n\t\t}\r\n\r\n\t\tif (req) {\r\n\t\t\t// Fire the request callback!\r\n\t\t\treq.callback(req.cmd, data.data);\r\n\r\n\t\t\t// Delete the request from memory\r\n\t\t\tdelete this._requests[id];\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Called when the network connects to the server.\r\n\t * @private\r\n\t */\r\n\t_onConnectToServer: function () {\r\n\t\tthis.log('Connected to server!');\r\n\t\tthis.emit('connected');\r\n\t},\r\n\r\n\t/**\r\n\t * Called when data from the server is received on the client.\r\n\t * @param data\r\n\t * @private\r\n\t */\r\n\t_onMessageFromServer: function (data) {\r\n\t\tvar ciDecoded = data[0].charCodeAt(0),\r\n\t\t\tcommandName = this._networkCommandsIndex[ciDecoded];\r\n\r\n\t\tif (this._networkCommands[commandName]) {\r\n\t\t\tif (this.debug()) {\r\n\t\t\t\tconsole.log('Received \"' + commandName + '\" (index ' + ciDecoded + ') with data:', data[1]);\r\n\t\t\t\tthis._debugCounter++;\r\n\t\t\t}\r\n\r\n\t\t\tthis._networkCommands[commandName](data[1]);\r\n\t\t}\r\n\r\n\t\tthis.emit(commandName, data[1]);\r\n\t},\r\n\r\n\t/**\r\n\t * Called when the client is disconnected from the server.\r\n\t * @param data\r\n\t * @private\r\n\t */\r\n\t_onDisconnectFromServer: function (data) {\r\n\t\tif (data === 'booted') {\r\n\t\t\tthis.log('Server rejected our connection because it is not accepting connections at this time!', 'warning');\r\n\t\t} else {\r\n\t\t\tthis.log('Disconnected from server!');\r\n\t\t}\r\n\t\tthis.emit('disconnected');\r\n\t},\r\n\r\n\t/**\r\n\t * Called when the client has an error with the connection.\r\n\t * @param {Object} data\r\n\t * @private\r\n\t */\r\n\t_onError: function (data) {\r\n\t\tthis.log('Error with connection: ' + data.reason, 'error');\r\n\t}\r\n};\r\n\r\nif (typeof(module) !== 'undefined' && typeof(module.exports) !== 'undefined') { module.exports = IgeNetIoClient; }","var IgeNetIoComponent = IgeEventingClass.extend([\r\n\t{extension: IgeTimeSyncExtension, overwrite: false}\r\n], {\r\n\tclassId: 'IgeNetIoComponent',\r\n\tcomponentId: 'network',\r\n\r\n\tinit: function (entity, options) {\r\n\t\tthis._entity = entity;\r\n\t\tthis._options = options;\r\n\r\n\t\t// Setup the network commands storage\r\n\t\tthis._networkCommands = {};\r\n\t\tthis._networkCommandsIndex = [];\r\n\t\tthis._networkCommandsLookup = {};\r\n\r\n\t\t// Set some defaults\r\n\t\tthis._port = 8000;\r\n\t\tthis._debug = false;\r\n\t\tthis._debugCounter = 0;\r\n\t\tthis._debugMax = 0;\r\n\t\tthis._clientRooms = {};\r\n\r\n\t\t// Time sync defaults\r\n\t\tthis._timeSyncInterval = 10000; // Sync the client/server clocks every ten seconds by default\r\n\t\tthis._timeSyncLog = {};\r\n\t\tthis._latency = 0;\r\n\r\n\t\t/* CEXCLUDE */\r\n\t\tif (ige.isServer) {\r\n\t\t\tthis.implement(IgeNetIoServer);\r\n\t\t\tthis._netio = require('../../../' + modulePath + 'net.io-server').Server;\r\n\t\t\tthis._acceptConnections = false;\r\n\t\t}\r\n\t\t/* CEXCLUDE */\r\n\r\n\t\tif (ige.isClient) {\r\n\t\t\tthis._netio = IgeNetIoClient;\r\n\t\t\tthis.implement(IgeNetIoClient);\r\n\t\t}\r\n\r\n\t\tthis.log('Network component initiated with Net.IO version: ' + this._netio.version);\r\n\t},\r\n\r\n\t/**\r\n\t * Gets / sets debug flag that determines if debug output\r\n\t * is logged to the console.\r\n\t * @param {Boolean=} val\r\n\t * @return {*}\r\n\t */\r\n\tdebug: function (val) {\r\n\t\tif (val !== undefined) {\r\n\t\t\tthis._debug = val;\r\n\t\t\treturn this._entity;\r\n\t\t}\r\n\r\n\t\t// Check the debug counter settings\r\n\t\tif (this._debugMax > 0 && this._debugCounter >= this._debugMax) {\r\n\t\t\tthis._debug = false;\r\n\t\t\tthis._debugCounter = 0;\r\n\t\t}\r\n\r\n\t\treturn this._debug;\r\n\t},\r\n\r\n\t/**\r\n\t * Gets / sets the maximum number of debug messages that\r\n\t * should be allowed to be output to the console before\r\n\t * debugging is automatically turned off. This is useful\r\n\t * if you want to sample a certain number of outputs and\r\n\t * then automatically disable output so your console is\r\n\t * not flooded.\r\n\t * @param {Number=} val Number of debug messages to allow\r\n\t * to be output to the console. Set to zero to allow\r\n\t * infinite amounts.\r\n\t * @return {*}\r\n\t */\r\n\tdebugMax: function (val) {\r\n\t\tif (val !== undefined) {\r\n\t\t\tthis._debugMax = val;\r\n\t\t\treturn this._entity;\r\n\t\t}\r\n\r\n\t\treturn this._debugMax;\r\n\t}\r\n});\r\n\r\nif (typeof(module) !== 'undefined' && typeof(module.exports) !== 'undefined') { module.exports = IgeNetIoComponent; }","/**\r\n * The client-side chat component. Handles all client-side\r\n * chat methods and events.\r\n */\r\nvar IgeChatClient = {\r\n\t/**\r\n\t * Asks the serve to let us join the room specified.\r\n\t * @param {String} roomId The room id of the room to join.\r\n\t */\r\n\tjoinRoom: function (roomId) {\r\n\t\tige.network.send('igeChatJoinRoom', roomId);\r\n\t},\r\n\r\n\tsendToRoom: function (roomId, message, to) {\r\n\t\tif (roomId !== undefined && message !== undefined) {\r\n\t\t\tmsg = {\r\n\t\t\t\troomId: roomId,\r\n\t\t\t\ttext: message,\r\n\t\t\t\tto: to\r\n\t\t\t};\r\n\r\n\t\t\tige.network.send('igeChatMsg', msg);\r\n\t\t}\r\n\t},\r\n\r\n\t_onMessageFromServer: function (data) {\r\n\t\tvar self = ige.chat;\r\n\r\n\t\t// Emit the event and if it wasn't cancelled (by returning true) then\r\n\t\t// process this ourselves\r\n\t\tif (!self.emit('messageFromServer', [data])) {\r\n\t\t\tconsole.log('Server sent us a message in the room \"' + data.roomId + '\" from the user id \"' + data.from + '\":', data.text);\r\n\t\t}\r\n\t},\r\n\r\n\t_onJoinedRoom: function (data) {\r\n\t\tvar self = ige.chat;\r\n\r\n\t\t// Emit the event and if it wasn't cancelled (by returning true) then\r\n\t\t// process this ourselves\r\n\t\tif (!self.emit('joinedRoom', [data])) {\r\n\t\t\tif (data.joined === true) {\r\n\t\t\t\tconsole.log('Server says we have joined room:', data.roomId);\r\n\t\t\t} else {\r\n\t\t\t\tconsole.log('Server says we failed to join room:', data.roomId);\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\t_onLeftRoom: function (data) {\r\n\t\tvar self = ige.chat;\r\n\r\n\t\t// Emit the event and if it wasn't cancelled (by returning true) then\r\n\t\t// process this ourselves\r\n\t\tif (!self.emit('leftRoom', [data])) {\r\n\t\t\tconsole.log('We have left room:', data);\r\n\t\t}\r\n\t},\r\n\r\n\t_onServerSentRoomList: function (data) {\r\n\t\tvar self = ige.chat;\r\n\r\n\t\t// Emit the event and if it wasn't cancelled (by returning true) then\r\n\t\t// process this ourselves\r\n\t\tif (!self.emit('roomList', [data])) {\r\n\t\t\tconsole.log('Server sent room list:', data);\r\n\t\t}\r\n\t},\r\n\r\n\t_onServerSentRoomUserList: function (data) {\r\n\t\tvar self = ige.chat;\r\n\r\n\t\t// Emit the event and if it wasn't cancelled (by returning true) then\r\n\t\t// process this ourselves\r\n\t\tif (!self.emit('roomUserList', [data])) {\r\n\t\t\tconsole.log('Server sent room user list:', data);\r\n\t\t}\r\n\t},\r\n\r\n\t_onRoomCreated: function (data) {\r\n\t\tvar self = ige.chat;\r\n\r\n\t\t// Emit the event and if it wasn't cancelled (by returning true) then\r\n\t\t// process this ourselves\r\n\t\tif (!self.emit('roomCreated', [data])) {\r\n\t\t\tconsole.log('Server told us room was created:', data);\r\n\t\t}\r\n\t},\r\n\r\n\t_onRoomRemoved: function (data) {\r\n\t\tvar self = ige.chat;\r\n\t\t\r\n\t\t// Emit the event and if it wasn't cancelled (by returning true) then\r\n\t\t// process this ourselves\r\n\t\tif (!self.emit('roomRemoved', [data])) {\r\n\t\t\tconsole.log('Server told us room was removed:', data);\r\n\t\t}\r\n\t}\r\n};\r\n\r\nif (typeof(module) !== 'undefined' && typeof(module.exports) !== 'undefined') { module.exports = IgeChatClient; }","var IgeChatComponent = IgeEventingClass.extend({\r\n    classId: 'IgeChatComponent',\r\n    componentId: 'chat',\r\n\r\n    init: function (entity, options) {\r\n        this._entity = entity;\r\n        this._options = options;\r\n\r\n        this._rooms = {};\r\n\r\n        /* CEXCLUDE */\r\n        if (ige.isServer) {\r\n            this.implement(IgeChatServer);\r\n\r\n            // Define the chat system network commands\r\n            this._entity\r\n\t\t\t\t.network.define('igeChatMsg', this._onMessageFromClient)\r\n\t\t\t\t.network.define('igeChatJoinRoom', this._onJoinRoomRequestFromClient)\r\n\t\t\t\t.network.define('igeChatLeaveRoom', this._onLeaveRoomRequestFromClient)\r\n\t\t\t\t.network.define('igeChatRoomList', this._onClientWantsRoomList)\r\n\t\t\t\t.network.define('igeChatRoomUserList', this._onClientWantsRoomUserList)\r\n\t\t\t\t.network.define('igeChatRoomCreated')\r\n\t\t\t\t.network.define('igeChatRoomRemoved');\r\n        }\r\n        /* CEXCLUDE */\r\n\r\n        if (ige.isClient) {\r\n            this.implement(IgeChatClient);\r\n\r\n            // Define the chat system network command listeners\r\n            this._entity\r\n\t\t\t\t.network.define('igeChatMsg', this._onMessageFromServer)\r\n\t\t\t\t.network.define('igeChatJoinRoom', this._onJoinedRoom)\r\n\t\t\t\t.network.define('igeChatLeaveRoom', this._onLeftRoom)\r\n\t\t\t\t.network.define('igeChatRoomList', this._onServerSentRoomList)\r\n\t\t\t\t.network.define('igeChatRoomUserList', this._onServerSentRoomUserList)\r\n\t\t\t\t.network.define('igeChatRoomCreated', this._onRoomCreated)\r\n\t\t\t\t.network.define('igeChatRoomRemoved', this._onRoomRemoved);\r\n        }\r\n\r\n\t\tthis.log('Chat component initiated!');\r\n    }\r\n});\r\n\r\nif (typeof(module) !== 'undefined' && typeof(module.exports) !== 'undefined') { module.exports = IgeChatComponent; }","var IgeCocoonJsComponent = IgeEventingClass.extend({\r\n\tclassId: 'IgeCocoonJsComponent',\r\n\tcomponentId: 'cocoonJs',\r\n\r\n\tinit: function () {\r\n\t\tthis.detected = typeof(ext) !== 'undefined' && typeof(ext.IDTK_APP) !== 'undefined';\r\n\r\n\t\tif (this.detected) {\r\n\t\t\tthis.log('CocoonJS support enabled!');\r\n\t\t}\r\n\t},\r\n\r\n\t// TODO: Finish keyboard implementation\r\n\tshowInputDialog: function(title, message, initialValue, type, cancelText, okText) {\r\n\t\tif (this.detected) {\r\n\t\t\ttitle = title || '';\r\n\t\t\tmessage = message || '';\r\n\t\t\tinitialValue = initialValue || '';\r\n\t\t\ttype = type || 'text';\r\n\t\t\tcancelText = cancelText || 'Cancel';\r\n\t\t\tokText = okText || 'OK';\r\n\r\n\t\t\text.IDTK_APP.makeCall(\r\n\t\t\t\t'showTextDialog',\r\n\t\t\t\ttitle,\r\n\t\t\t\tmessage,\r\n\t\t\t\tinitialValue,\r\n\t\t\t\ttype,\r\n\t\t\t\tcancelText,\r\n\t\t\t\tokText\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\tthis.log('Cannot open CocoonJS input dialog! CocoonJS is not detected!', 'error');\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Asks the API to load the url and show the web view.\r\n\t * @param url\r\n\t */\r\n\tshowWebView: function (url) {\r\n\t\tif (this.detected) {\r\n\t\t\t// Forward a JS call to the webview IDTK API\r\n\t\t\text.IDTK_APP.makeCall(\"forward\", \"ext.IDTK_APP.makeCall('loadPath', '\" + url + \"')\");\r\n\t\t\text.IDTK_APP.makeCall(\"forward\", \"ext.IDTK_APP.makeCall('show');\");\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Asks the API to hide the web view.\r\n\t */\r\n\thideWebView: function () {\r\n\t\tif (this.detected) {\r\n\t\t\t// Forward a JS call to the webview IDTK API\r\n\t\t\text.IDTK_APP.makeCall(\"forward\", \"ext.IDTK_APP.makeCall('hide');\");\r\n\t\t}\r\n\t}\r\n});","var IgeUiPositionExtension = {\r\n\t/**\r\n\t * Gets / sets the entity's x position relative to the left of\r\n\t * the canvas.\r\n\t * @param {Number} px\r\n\t * @param {Boolean=} noUpdate\r\n\t * @return {Number}\r\n\t */\r\n\tleft: function (px, noUpdate) {\r\n\t\tif (px !== undefined) {\r\n\t\t\tif (px === null) {\r\n\t\t\t\t// Remove all data\r\n\t\t\t\tdelete this._uiLeft;\r\n\t\t\t\tdelete this._uiLeftPercent;\r\n\t\t\t} else {\r\n\t\t\t\tdelete this._uiCenter;\r\n\t\t\t\tdelete this._uiCenterPercent;\r\n\t\t\t\t\r\n\t\t\t\tif (typeof(px) === 'string') {\r\n\t\t\t\t\t// Store the percentage value\r\n\t\t\t\t\tthis._uiLeftPercent = px;\r\n\t\t\t\t\t\r\n\t\t\t\t\t// Check if we are already mounted\r\n\t\t\t\t\tvar parentWidth,\r\n\t\t\t\t\t\tval = parseInt(px, 10),\r\n\t\t\t\t\t\tnewVal;\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (this._parent) {\r\n\t\t\t\t\t\t// We have a parent, use it's geometry\r\n\t\t\t\t\t\tparentWidth = this._parent._bounds2d.x;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// We don't have a parent so use the main canvas\r\n\t\t\t\t\t\t// as a reference\r\n\t\t\t\t\t\tparentWidth = ige._bounds2d.x;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t// Calculate real width from percentage\r\n\t\t\t\t\tnewVal = (parentWidth / 100 * val) | 0;\r\n\t\r\n\t\t\t\t\tthis._uiLeft = newVal;\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// The value passed is not a percentage, directly assign it\r\n\t\t\t\t\tthis._uiLeft = px;\r\n\t\t\t\t\tdelete this._uiLeftPercent;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (!noUpdate) {\r\n\t\t\t\tthis._updateUiPosition();\r\n\t\t\t}\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\treturn this._uiLeft;\r\n\t},\r\n\t\r\n\t/**\r\n\t * Gets / sets the entity's x position relative to the right of\r\n\t * the canvas.\r\n\t * @param {Number} px\r\n\t * @param {Boolean=} noUpdate\r\n\t * @return {Number}\r\n\t */\r\n\tright: function (px, noUpdate) {\r\n\t\tif (px !== undefined) {\r\n\t\t\tif (px === null) {\r\n\t\t\t\t// Remove all data\r\n\t\t\t\tdelete this._uiRight;\r\n\t\t\t\tdelete this._uiRightPercent;\r\n\t\t\t} else {\r\n\t\t\t\tdelete this._uiCenter;\r\n\t\t\t\tdelete this._uiCenterPercent;\r\n\t\t\t\t\r\n\t\t\t\tif (typeof(px) === 'string') {\r\n\t\t\t\t\t// Store the percentage value\r\n\t\t\t\t\tthis._uiRightPercent = px;\r\n\t\t\t\t\t\r\n\t\t\t\t\t// Check if we are already mounted\r\n\t\t\t\t\tvar parentWidth,\r\n\t\t\t\t\t\tval = parseInt(px, 10),\r\n\t\t\t\t\t\tnewVal;\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (this._parent) {\r\n\t\t\t\t\t\t// We have a parent, use it's geometry\r\n\t\t\t\t\t\tparentWidth = this._parent._bounds2d.x;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// We don't have a parent so use the main canvas\r\n\t\t\t\t\t\t// as a reference\r\n\t\t\t\t\t\tparentWidth = ige._bounds2d.x;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t// Calculate real width from percentage\r\n\t\t\t\t\tnewVal = (parentWidth / 100 * val) | 0;\r\n\t\r\n\t\t\t\t\tthis._uiRight = newVal;\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// The value passed is not a percentage, directly assign it\r\n\t\t\t\t\tthis._uiRight = px;\r\n\t\t\t\t\tdelete this._uiRightPercent;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (!noUpdate) {\r\n\t\t\t\tthis._updateUiPosition();\r\n\t\t\t}\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\treturn this._uiRight;\r\n\t},\r\n\r\n\t/**\r\n\t * Gets / sets the viewport's x position relative to the center of\r\n\t * the entity parent.\r\n\t * @param {Number} px\r\n\t * @param {Boolean=} noUpdate\r\n\t * @return {Number}\r\n\t */\r\n\tcenter: function (px, noUpdate) {\r\n\t\tif (px !== undefined) {\r\n\t\t\tif (px === null) {\r\n\t\t\t\t// Remove all data\r\n\t\t\t\tdelete this._uiCenter;\r\n\t\t\t\tdelete this._uiCenterPercent;\r\n\t\t\t} else {\r\n\t\t\t\tdelete this._uiLeft;\r\n\t\t\t\tdelete this._uiLeftPercent;\r\n\t\t\t\tdelete this._uiRight;\r\n\t\t\t\tdelete this._uiRightPercent;\r\n\t\t\t\t\r\n\t\t\t\tif (typeof(px) === 'string') {\r\n\t\t\t\t\t// Store the percentage value\r\n\t\t\t\t\tthis._uiCenterPercent = px;\r\n\t\t\t\t\t\r\n\t\t\t\t\t// Check if we are already mounted\r\n\t\t\t\t\tvar parentWidth,\r\n\t\t\t\t\t\tval = parseInt(px, 10),\r\n\t\t\t\t\t\tnewVal;\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (this._parent) {\r\n\t\t\t\t\t\t// We have a parent, use it's geometry\r\n\t\t\t\t\t\tparentWidth = this._parent._bounds2d.x2;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// We don't have a parent so use the main canvas\r\n\t\t\t\t\t\t// as a reference\r\n\t\t\t\t\t\tparentWidth = ige._bounds2d.x2;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t// Calculate real width from percentage\r\n\t\t\t\t\tnewVal = (parentWidth / 100 * val) | 0;\r\n\t\r\n\t\t\t\t\tthis._uiCenter = newVal;\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// The value passed is not a percentage, directly assign it\r\n\t\t\t\t\tthis._uiCenter = px;\r\n\t\t\t\t\tdelete this._uiCenterPercent;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (!noUpdate) {\r\n\t\t\t\tthis._updateUiPosition();\r\n\t\t\t}\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\treturn this._uiCenter;\r\n\t},\r\n\r\n\t/**\r\n\t * Gets / sets the entity's y position relative to the top of\r\n\t * the canvas.\r\n\t * @param {Number} px\r\n\t * @param {Boolean=} noUpdate\r\n\t * @return {Number}\r\n\t */\r\n\ttop: function (px, noUpdate) {\r\n\t\tif (px !== undefined) {\r\n\t\t\tif (px === null) {\r\n\t\t\t\t// Remove all data\r\n\t\t\t\tdelete this._uiTop;\r\n\t\t\t\tdelete this._uiTopPercent;\r\n\t\t\t} else {\r\n\t\t\t\tdelete this._uiMiddle;\r\n\t\t\t\tdelete this._uiMiddlePercent;\r\n\t\t\t\t\r\n\t\t\t\tif (typeof(px) === 'string') {\r\n\t\t\t\t\t// Store the percentage value\r\n\t\t\t\t\tthis._uiTopPercent = px;\r\n\t\t\t\t\t\r\n\t\t\t\t\t// Check if we are already mounted\r\n\t\t\t\t\tvar parentHeight,\r\n\t\t\t\t\t\tval = parseInt(px, 10),\r\n\t\t\t\t\t\tnewVal;\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (this._parent) {\r\n\t\t\t\t\t\t// We have a parent, use it's geometry\r\n\t\t\t\t\t\tparentHeight = this._parent._bounds2d.y;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// We don't have a parent so use the main canvas\r\n\t\t\t\t\t\t// as a reference\r\n\t\t\t\t\t\tparentHeight = ige._bounds2d.y;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t// Calculate real width from percentage\r\n\t\t\t\t\tnewVal = (parentHeight / 100 * val) | 0;\r\n\t\r\n\t\t\t\t\tthis._uiTop = newVal;\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// The value passed is not a percentage, directly assign it\r\n\t\t\t\t\tthis._uiTop = px;\r\n\t\t\t\t\tdelete this._uiTopPercent;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (!noUpdate) {\r\n\t\t\t\tthis._updateUiPosition();\r\n\t\t\t}\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\treturn this._uiTop;\r\n\t},\r\n\r\n\t/**\r\n\t * Gets / sets the entity's y position relative to the bottom of\r\n\t * the canvas.\r\n\t * @param {Number} px\r\n\t * @param {Boolean=} noUpdate\r\n\t * @return {Number}\r\n\t */\r\n\tbottom: function (px, noUpdate) {\r\n\t\tif (px !== undefined) {\r\n\t\t\tif (px === null) {\r\n\t\t\t\t// Remove all data\r\n\t\t\t\tdelete this._uiBottom;\r\n\t\t\t\tdelete this._uiBottomPercent;\r\n\t\t\t} else {\r\n\t\t\t\tdelete this._uiMiddle;\r\n\t\t\t\tdelete this._uiMiddlePercent;\r\n\t\t\t\t\r\n\t\t\t\tif (typeof(px) === 'string') {\r\n\t\t\t\t\t// Store the percentage value\r\n\t\t\t\t\tthis._uiBottomPercent = px;\r\n\t\t\t\t\t\r\n\t\t\t\t\t// Check if we are already mounted\r\n\t\t\t\t\tvar parentHeight,\r\n\t\t\t\t\t\tval = parseInt(px, 10),\r\n\t\t\t\t\t\tnewVal;\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (this._parent) {\r\n\t\t\t\t\t\t// We have a parent, use it's geometry\r\n\t\t\t\t\t\tparentHeight = this._parent._bounds2d.y;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// We don't have a parent so use the main canvas\r\n\t\t\t\t\t\t// as a reference\r\n\t\t\t\t\t\tparentHeight = ige._bounds2d.y;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t// Calculate real width from percentage\r\n\t\t\t\t\tnewVal = (parentHeight / 100 * val) | 0;\r\n\t\r\n\t\t\t\t\tthis._uiBottom = newVal;\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// The value passed is not a percentage, directly assign it\r\n\t\t\t\t\tthis._uiBottom = px;\r\n\t\t\t\t\tdelete this._uiBottomPercent;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (!noUpdate) {\r\n\t\t\t\tthis._updateUiPosition();\r\n\t\t\t}\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\treturn this._uiBottom;\r\n\t},\r\n\t\r\n\t/**\r\n\t * Gets / sets the viewport's y position relative to the middle of\r\n\t * the canvas.\r\n\t * @param {Number} px\r\n\t * @param {Boolean=} noUpdate\r\n\t * @return {Number}\r\n\t */\r\n\tmiddle: function (px, noUpdate) {\r\n\t\tif (px !== undefined) {\r\n\t\t\tif (px === null) {\r\n\t\t\t\t// Remove all data\r\n\t\t\t\tdelete this._uiMiddle;\r\n\t\t\t\tdelete this._uiMiddlePercent;\r\n\t\t\t} else {\r\n\t\t\t\tdelete this._uiTop;\r\n\t\t\t\tdelete this._uiTopPercent;\r\n\t\t\t\tdelete this._uiBottom;\r\n\t\t\t\tdelete this._uiBottomPercent;\r\n\t\t\t\t\r\n\t\t\t\tif (typeof(px) === 'string') {\r\n\t\t\t\t\t// Store the percentage value\r\n\t\t\t\t\tthis._uiMiddlePercent = px;\r\n\t\t\t\t\t\r\n\t\t\t\t\t// Check if we are already mounted\r\n\t\t\t\t\tvar parentWidth,\r\n\t\t\t\t\t\tval = parseInt(px, 10),\r\n\t\t\t\t\t\tnewVal;\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (this._parent) {\r\n\t\t\t\t\t\t// We have a parent, use it's geometry\r\n\t\t\t\t\t\tparentWidth = this._parent._bounds2d.y2;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// We don't have a parent so use the main canvas\r\n\t\t\t\t\t\t// as a reference\r\n\t\t\t\t\t\tparentWidth = ige._bounds2d.y2;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t// Calculate real width from percentage\r\n\t\t\t\t\tnewVal = (parentWidth / 100 * val) | 0;\r\n\t\r\n\t\t\t\t\tthis._uiMiddle = newVal;\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// The value passed is not a percentage, directly assign it\r\n\t\t\t\t\tthis._uiMiddle = px;\r\n\t\t\t\t\tdelete this._uiMiddlePercent;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (!noUpdate) {\r\n\t\t\t\tthis._updateUiPosition();\r\n\t\t\t}\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\treturn this._uiMiddle;\r\n\t},\r\n\r\n\t/**\r\n\t * Gets / sets the geometry.x in pixels.\r\n\t * @param {Number, String=} px Either the width in pixels or a percentage\r\n\t * @param {Boolean=} lockAspect\r\n\t * @param {Number=} modifier A value to add to the final width. Useful when\r\n\t * you want to alter a percentage value by a certain number of pixels after\r\n\t * it has been calculated.\r\n\t * @param {Boolean=} noUpdate\r\n\t * @return {*}\r\n\t */\r\n\twidth: function (px, lockAspect, modifier, noUpdate) {\r\n\t\tif (px !== undefined) {\r\n\t\t\tif (px === null) {\r\n\t\t\t\t// Remove all data\r\n\t\t\t\tdelete this._uiWidth;\r\n\t\t\t\tthis._bounds2d.x = 0;\r\n\t\t\t\tthis._bounds2d.x2 = 0;\r\n\t\t\t} else {\r\n\t\t\t\tthis._uiWidth = px;\r\n\t\t\t\tthis._widthModifier = modifier !== undefined ? modifier : 0;\r\n\t\r\n\t\t\t\tif (typeof(px) === 'string') {\r\n\t\t\t\t\tif (this._parent) {\r\n\t\t\t\t\t\t// Percentage\r\n\t\t\t\t\t\tvar parentWidth = this._parent._bounds2d.x,\r\n\t\t\t\t\t\t\tval = parseInt(px, 10),\r\n\t\t\t\t\t\t\tnewVal,\r\n\t\t\t\t\t\t\tratio;\r\n\t\r\n\t\t\t\t\t\t// Calculate real width from percentage\r\n\t\t\t\t\t\tnewVal = (parentWidth / 100 * val) + this._widthModifier | 0;\r\n\t\r\n\t\t\t\t\t\tif (lockAspect) {\r\n\t\t\t\t\t\t\t// Calculate the height from the change in width\r\n\t\t\t\t\t\t\tratio = newVal / this._bounds2d.x;\r\n\t\t\t\t\t\t\tthis.height(this._bounds2d.y / ratio, false, 0, noUpdate);\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tthis._bounds2d.x = newVal;\r\n\t\t\t\t\t\tthis._bounds2d.x2 = Math.floor(this._bounds2d.x / 2);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// We don't have a parent so use the main canvas\r\n\t\t\t\t\t\t// as a reference\r\n\t\t\t\t\t\tvar parentWidth = ige._bounds2d.x,\r\n\t\t\t\t\t\t\tval = parseInt(px, 10);\r\n\t\r\n\t\t\t\t\t\t// Calculate real height from percentage\r\n\t\t\t\t\t\tthis._bounds2d.x = (parentWidth / 100 * val) + this._widthModifier | 0;\r\n\t\t\t\t\t\tthis._bounds2d.x2 = Math.floor(this._bounds2d.x / 2);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (lockAspect) {\r\n\t\t\t\t\t\t// Calculate the height from the change in width\r\n\t\t\t\t\t\tvar ratio = px / this._bounds2d.x;\r\n\t\t\t\t\t\tthis.height(this._bounds2d.y * ratio, false, 0, noUpdate);\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tthis._bounds2d.x = px;\r\n\t\t\t\t\tthis._bounds2d.x2 = Math.floor(this._bounds2d.x / 2);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (!noUpdate) {\r\n\t\t\t\tthis._updateUiPosition();\r\n\t\t\t}\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\treturn this._bounds2d.x;\r\n\t},\r\n\r\n\t/**\r\n\t * Gets / sets the geometry.y in pixels.\r\n\t * @param {Number=} px\r\n\t * @param {Boolean=} lockAspect\r\n\t * @param {Number=} modifier A value to add to the final height. Useful when\r\n\t * you want to alter a percentage value by a certain number of pixels after\r\n\t * it has been calculated.\r\n\t * @param {Boolean=} noUpdate\r\n\t * @return {*}\r\n\t */\r\n\theight: function (px, lockAspect, modifier, noUpdate) {\r\n\t\tif (px !== undefined) {\r\n\t\t\tif (px === null) {\r\n\t\t\t\t// Remove all data\r\n\t\t\t\tdelete this._uiHeight;\r\n\t\t\t\tthis._bounds2d.y = 0;\r\n\t\t\t\tthis._bounds2d.y2 = 0;\r\n\t\t\t} else {\r\n\t\t\t\tthis._uiHeight = px;\r\n\t\t\t\tthis._heightModifier = modifier !== undefined ? modifier : 0;\r\n\t\r\n\t\t\t\tif (typeof(px) === 'string') {\r\n\t\t\t\t\tif (this._parent) {\r\n\t\t\t\t\t\t// Percentage\r\n\t\t\t\t\t\tvar parentHeight = this._parent._bounds2d.y,\r\n\t\t\t\t\t\t\tval = parseInt(px, 10),\r\n\t\t\t\t\t\t\tnewVal,\r\n\t\t\t\t\t\t\tratio;\r\n\t\r\n\t\t\t\t\t\t// Calculate real height from percentage\r\n\t\t\t\t\t\t// Calculate real width from percentage\r\n\t\t\t\t\t\tnewVal = (parentHeight / 100 * val) + this._heightModifier | 0;\r\n\t\r\n\t\t\t\t\t\tif (lockAspect) {\r\n\t\t\t\t\t\t\t// Calculate the height from the change in width\r\n\t\t\t\t\t\t\tratio = newVal / this._bounds2d.y;\r\n\t\t\t\t\t\t\tthis.width(this._bounds2d.x / ratio, false, 0, noUpdate);\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tthis._bounds2d.y = newVal;\r\n\t\t\t\t\t\tthis._bounds2d.y2 = Math.floor(this._bounds2d.y / 2);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// We don't have a parent so use the main canvas\r\n\t\t\t\t\t\t// as a reference\r\n\t\t\t\t\t\tvar parentHeight = ige._bounds2d.y,\r\n\t\t\t\t\t\t\tval = parseInt(px, 10);\r\n\t\r\n\t\t\t\t\t\t// Calculate real height from percentage\r\n\t\t\t\t\t\tthis._bounds2d.y = (parentHeight / 100 * val) + this._heightModifier | 0;\r\n\t\t\t\t\t\tthis._bounds2d.y2 = Math.floor(this._bounds2d.y / 2);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (lockAspect) {\r\n\t\t\t\t\t\t// Calculate the height from the change in width\r\n\t\t\t\t\t\tvar ratio = px / this._bounds2d.y;\r\n\t\t\t\t\t\tthis.width(this._bounds2d.x * ratio, false, 0, noUpdate);\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tthis._bounds2d.y = px;\r\n\t\t\t\t\tthis._bounds2d.y2 = Math.floor(this._bounds2d.y / 2);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (!noUpdate) {\r\n\t\t\t\tthis._updateUiPosition();\r\n\t\t\t}\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\treturn this._bounds2d.y;\r\n\t},\r\n\t\r\n\tautoScaleX: function (val, lockAspect) {\r\n\t\tif (val !== undefined) {\r\n\t\t\tthis._autoScaleX = val;\r\n\t\t\tthis._autoScaleLockAspect = lockAspect;\r\n\r\n\t\t\tthis._updateUiPosition();\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\treturn this._autoScaleX;\r\n\t},\r\n\r\n\tautoScaleY: function (val, lockAspect) {\r\n\t\tif (val !== undefined) {\r\n\t\t\tthis._autoScaleY = val;\r\n\t\t\tthis._autoScaleLockAspect = lockAspect;\r\n\r\n\t\t\tthis._updateUiPosition();\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\treturn this._autoScaleY;\r\n\t},\r\n\r\n\t/**\r\n\t * Updates the UI position of every child entity down the scenegraph\r\n\t * for this UI entity.\r\n\t * @return {*}\r\n\t */\r\n\tupdateUiChildren: function () {\r\n\t\tvar arr = this._children,\r\n\t\t\tarrCount,\r\n\t\t\tarrItem;\r\n\t\t\r\n\t\tif (arr) {\r\n\t\t\tarrCount = arr.length;\r\n\t\t\t\r\n\t\t\twhile (arrCount--) {\r\n\t\t\t\tarrItem = arr[arrCount];\r\n\t\t\t\tif (arrItem._updateUiPosition) {\r\n\t\t\t\t\tarrItem._updateUiPosition();\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif (typeof(arrItem.updateUiChildren) === 'function') {\r\n\t\t\t\t\tarrItem.updateUiChildren();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * Sets the correct translate x and y for the viewport's left, right\r\n\t * top and bottom co-ordinates.\r\n\t * @private\r\n\t */\r\n\t_updateUiPosition: function () {\r\n\t\tif (this._parent) {\r\n\t\t\tvar parentGeom = this._parent._bounds2d,\r\n\t\t\t\tgeomScaled = this._bounds2d.multiplyPoint(this._scale),\r\n\t\t\t\tpercent,\r\n\t\t\t\tnewVal,\r\n\t\t\t\tratio;\r\n\t\t\t\r\n\t\t\t/*if (this._ignoreCamera && ige._currentCamera) {\r\n\t\t\t\t// Handle cam ignore when calculating \r\n\t\t\t\tparentGeom = parentGeom.dividePoint(ige._currentCamera._scale);\r\n\t\t\t}*/\r\n\t\t\t\r\n\t\t\tif (this._autoScaleX) {\r\n\t\t\t\t// Get the percentage as an integer\r\n\t\t\t\tpercent = parseInt(this._autoScaleX, 10);\r\n\t\r\n\t\t\t\t// Calculate new width from percentage\r\n\t\t\t\tnewVal = (parentGeom.x / 100 * percent);\r\n\t\r\n\t\t\t\t// Calculate scale ratio\r\n\t\t\t\tratio = newVal / this._bounds2d.x;\r\n\t\r\n\t\t\t\t// Set the new scale\r\n\t\t\t\tthis._scale.x = ratio;\r\n\t\t\t\t\r\n\t\t\t\tif (this._autoScaleLockAspect) {\r\n\t\t\t\t\tthis._scale.y = ratio;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (this._autoScaleY) {\r\n\t\t\t\t// Get the percentage as an integer\r\n\t\t\t\tpercent = parseInt(this._autoScaleY, 10);\r\n\r\n\t\t\t\t// Calculate new height from percentage\r\n\t\t\t\tnewVal = (parentGeom.y / 100 * percent);\r\n\r\n\t\t\t\t// Calculate scale ratio\r\n\t\t\t\tratio = newVal / this._bounds2d.y;\r\n\r\n\t\t\t\t// Set the new scale\r\n\t\t\t\tthis._scale.y = ratio;\r\n\r\n\t\t\t\tif (this._autoScaleLockAspect) {\r\n\t\t\t\t\tthis._scale.x = ratio;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (this._uiWidth) { this.width(this._uiWidth, false, this._widthModifier, true); }\r\n\t\t\tif (this._uiHeight) { this.height(this._uiHeight, false, this._heightModifier, true); }\r\n\t\t\t\r\n\t\t\tif (this._uiCenterPercent) { this.center(this._uiCenterPercent, true); }\r\n\t\t\tif (this._uiMiddlePercent) { this.middle(this._uiMiddlePercent, true); }\r\n\t\t\tif (this._uiLeftPercent) { this.left(this._uiLeftPercent, true); }\r\n\t\t\tif (this._uiRightPercent) { this.right(this._uiRightPercent, true); }\r\n\t\t\tif (this._uiTopPercent) { this.top(this._uiTopPercent, true); }\r\n\t\t\tif (this._uiBottomPercent) { this.bottom(this._uiBottomPercent, true); }\r\n\t\t\t\r\n\t\t\tif (this._uiCenter !== undefined) {\r\n\t\t\t\t// The element is center-aligned\r\n\t\t\t\tthis._translate.x = Math.floor(this._uiCenter);\r\n\t\t\t} else {\r\n\t\t\t\t// The element is not center-aligned, process left and right\r\n\t\t\t\tif (this._uiLeft !== undefined && this._uiRight !== undefined) {\r\n\t\t\t\t\t// Both left and right values are set, position left and assign width to reach right\r\n\t\t\t\t\tthis.width((parentGeom.x) - this._uiLeft - this._uiRight, false, 0, true);\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t// Update translation\r\n\t\t\t\t\tthis._translate.x = Math.floor(this._uiLeft + geomScaled.x2 - (parentGeom.x2));\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (this._uiLeft !== undefined) {\r\n\t\t\t\t\t\t// Position left aligned\r\n\t\t\t\t\t\tthis._translate.x = Math.floor(this._uiLeft + geomScaled.x2 - (parentGeom.x2));\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (this._uiRight !== undefined) {\r\n\t\t\t\t\t\t// Position right aligned\r\n\t\t\t\t\t\tthis._translate.x = Math.floor(parentGeom.x2 - geomScaled.x2 - this._uiRight);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (this._uiMiddle !== undefined) {\r\n\t\t\t\t// The element is middle-aligned\r\n\t\t\t\tthis._translate.y = Math.floor(this._uiMiddle);\r\n\t\t\t} else {\r\n\t\t\t\t// The element is not middle-aligned, process top and bottom\r\n\t\t\t\tif (this._uiTop !== undefined && this._uiBottom !== undefined) {\r\n\t\t\t\t\t// Both top and bottom values are set, position top and assign height to reach bottom\r\n\t\t\t\t\tthis.height((parentGeom.y) - this._uiTop - this._uiBottom, false, 0, true);\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t// Update translation\r\n\t\t\t\t\tthis._translate.y = Math.floor(this._uiTop + geomScaled.y2 - (parentGeom.y2));\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (this._uiTop !== undefined) {\r\n\t\t\t\t\t\t// Position top aligned\r\n\t\t\t\t\t\tthis._translate.y = Math.floor(this._uiTop + geomScaled.y2 - (parentGeom.y2));\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (this._uiBottom !== undefined) {\r\n\t\t\t\t\t\t// Position bottom aligned\r\n\t\t\t\t\t\tthis._translate.y = Math.floor(parentGeom.y2 - geomScaled.y2 - this._uiBottom);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis.emit('uiUpdate');\r\n\t\t\t\r\n\t\t\tthis.cacheDirty(true);\r\n\t\t}\r\n\t}\r\n};\r\n\r\nif (typeof(module) !== 'undefined' && typeof(module.exports) !== 'undefined') { module.exports = IgeUiPositionExtension; }","// TODO: Add \"overflow\" with automatic scroll-bars\r\nvar IgeUiStyleExtension = {\r\n\t/**\r\n\t * Gets / sets the color to use as the font color.\r\n\t * @param {CSSColor, CanvasGradient, CanvasPattern=} color\r\n\t * @return {*} Returns this when setting the value or the current value if none is specified.\r\n\t */\r\n\tcolor: function (color) {\r\n\t\tif (color !== undefined) {\r\n\t\t\tthis._color = color;\r\n\t\t\tthis.cacheDirty(true);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\treturn this._color;\r\n\t},\r\n\t\r\n\t/**\r\n\t * Sets the current background texture and the repeatType\r\n\t * to determine in which axis the image should be repeated.\r\n\t * @param {IgeTexture=} texture\r\n\t * @param {String=} repeatType Accepts \"repeat\", \"repeat-x\",\r\n\t * \"repeat-y\" and \"no-repeat\".\r\n\t * @return {*} Returns this if any parameter is specified or\r\n\t * the current background image if no parameters are specified.\r\n\t */\r\n\tbackgroundImage: function (texture, repeatType) {\r\n\t\tif (texture && texture.image) {\r\n\t\t\tif (!repeatType) { repeatType = 'no-repeat'; }\r\n\r\n\t\t\t// Store the repeatType\r\n\t\t\tthis._patternRepeat = repeatType;\r\n\r\n\t\t\t// Store the texture\r\n\t\t\tthis._patternTexture = texture;\r\n\r\n\t\t\t// Resize the image if required\r\n\t\t\tif (this._backgroundSize) {\r\n\t\t\t\ttexture.resize(this._backgroundSize.x, this._backgroundSize.y);\r\n\t\t\t\tthis._patternWidth = this._backgroundSize.x;\r\n\t\t\t\tthis._patternHeight = this._backgroundSize.y;\r\n\t\t\t} else {\r\n\t\t\t\tthis._patternWidth = texture.image.width;\r\n\t\t\t\tthis._patternHeight = texture.image.height;\r\n\t\t\t}\r\n\r\n\t\t\tif (this._cell > 1) {\r\n\t\t\t\t// We are using a cell sheet, render the cell to a\r\n\t\t\t\t// temporary canvas and set that as the pattern image\r\n\t\t\t\tvar canvas = document.createElement('canvas'),\r\n\t\t\t\t\tctx = canvas.getContext('2d'),\r\n\t\t\t\t\tcellData = texture._cells[this._cell];\r\n\r\n\t\t\t\tcanvas.width = cellData[2];\r\n\t\t\t\tcanvas.height = cellData[3];\r\n\r\n\t\t\t\tctx.drawImage(\r\n\t\t\t\t\ttexture.image,\r\n\t\t\t\t\tcellData[0],\r\n\t\t\t\t\tcellData[1],\r\n\t\t\t\t\tcellData[2],\r\n\t\t\t\t\tcellData[3],\r\n\t\t\t\t\t0,\r\n\t\t\t\t\t0,\r\n\t\t\t\t\tcellData[2],\r\n\t\t\t\t\tcellData[3]\r\n\t\t\t\t);\r\n\r\n\t\t\t\t// Create the pattern from the texture cell\r\n\t\t\t\tthis._patternFill = ige._ctx.createPattern(canvas, repeatType);\r\n\t\t\t} else {\r\n\t\t\t\t// Create the pattern from the texture\r\n\t\t\t\tthis._patternFill = ige._ctx.createPattern(texture.image, repeatType);\r\n\t\t\t}\r\n\r\n\t\t\ttexture.restoreOriginal();\r\n\t\t\tthis.cacheDirty(true);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\treturn this._patternFill;\r\n\t},\r\n\r\n\tbackgroundSize: function (x, y) {\r\n\t\tif (x !== undefined && y !== undefined) {\r\n\r\n\t\t\tif (typeof(x) === 'string' && x !== 'auto') {\r\n\t\t\t\t// Work out the actual size in pixels\r\n\t\t\t\t// from the percentage\r\n\t\t\t\tx = this._bounds2d.x / 100 * parseInt(x, 10);\r\n\t\t\t}\r\n\r\n\t\t\tif (typeof(y) === 'string' && y !== 'auto') {\r\n\t\t\t\t// Work out the actual size in pixels\r\n\t\t\t\t// from the percentage\r\n\t\t\t\ty = this._bounds2d.y / 100 * parseInt(y, 10);\r\n\t\t\t}\r\n\r\n\t\t\tif (x === 'auto' && y === 'auto') {\r\n\t\t\t\tthis.log('Cannot set background x and y both to auto!', 'error');\r\n\t\t\t\treturn this;\r\n\t\t\t} else if(x === 'auto') {\r\n\t\t\t\tif(this._patternTexture && this._patternTexture.image) {\r\n\t\t\t\t\t// find out y change and apply it to the x\r\n\t\t\t\t\tx = this._patternTexture.image.width * (y / this._patternTexture.image.height);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tx = this._bounds2d.x * (y / this._bounds2d.y);\r\n\t\t\t\t}\r\n\t\t\t} else if(y === 'auto') {\r\n\t\t\t\tif(this._patternTexture && this._patternTexture.image) {\r\n\t\t\t\t\t// find out x change and apply it to the y\r\n\t\t\t\t\ty = this._patternTexture.image.height * (x / this._patternTexture.image.width);\r\n\t\t\t\t} else {\r\n\t\t\t\t\ty = this._bounds2d.y * (x / this._bounds2d.x);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (x !== 0 && y !== 0) {\r\n\t\t\t\tthis._backgroundSize = {x: x, y: y};\r\n\t\r\n\t\t\t\t// Reset the background image\r\n\t\t\t\tif (this._patternTexture && this._patternRepeat) {\r\n\t\t\t\t\tthis.backgroundImage(this._patternTexture, this._patternRepeat);\r\n\t\t\t\t}\r\n\t\t\t\tthis.cacheDirty(true);\r\n\t\t\t} else {\r\n\t\t\t\tthis.log('Cannot set background to zero-sized x or y!', 'error');\r\n\t\t\t}\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\treturn this._backgroundSize;\r\n\t},\r\n\r\n\t/**\r\n\t * Gets / sets the color to use as a background when\r\n\t * rendering the UI element.\r\n\t * @param {CSSColor, CanvasGradient, CanvasPattern=} color\r\n\t * @return {*} Returns this when setting the value or the current value if none is specified.\r\n\t */\r\n\tbackgroundColor: function (color) {\r\n\t\tif (color !== undefined) {\r\n\t\t\tthis._backgroundColor = color;\r\n\t\t\tthis.cacheDirty(true);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\treturn this._backgroundColor;\r\n\t},\r\n\r\n\t/**\r\n\t * Gets / sets the position to start rendering the background image at.\r\n\t * @param {Number=} x\r\n\t * @param {Number=} y\r\n\t * @return {*} Returns this when setting the value or the current value if none is specified.\r\n\t */\r\n\tbackgroundPosition: function (x, y) {\r\n\t\tif (x !== undefined && y !== undefined) {\r\n\t\t\tthis._backgroundPosition = {x: x, y: y};\r\n\t\t\tthis.cacheDirty(true);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\treturn this._backgroundPosition;\r\n\t},\r\n\r\n\tborderColor: function (color) {\r\n\t\tif (color !== undefined) {\r\n\t\t\tthis._borderColor = color;\r\n\t\t\tthis._borderLeftColor = color;\r\n\t\t\tthis._borderTopColor = color;\r\n\t\t\tthis._borderRightColor = color;\r\n\t\t\tthis._borderBottomColor = color;\r\n\t\t\tthis.cacheDirty(true);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\treturn this._borderColor;\r\n\t},\r\n\r\n\tborderLeftColor: function (color) {\r\n\t\tif (color !== undefined) {\r\n\t\t\tthis._borderLeftColor = color;\r\n\t\t\tthis.cacheDirty(true);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\treturn this._borderLeftColor;\r\n\t},\r\n\r\n\tborderTopColor: function (color) {\r\n\t\tif (color !== undefined) {\r\n\t\t\tthis._borderTopColor = color;\r\n\t\t\tthis.cacheDirty(true);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\treturn this._borderTopColor;\r\n\t},\r\n\r\n\tborderRightColor: function (color) {\r\n\t\tif (color !== undefined) {\r\n\t\t\tthis._borderRightColor = color;\r\n\t\t\tthis.cacheDirty(true);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\treturn this._borderRightColor;\r\n\t},\r\n\r\n\tborderBottomColor: function (color) {\r\n\t\tif (color !== undefined) {\r\n\t\t\tthis._borderBottomColor = color;\r\n\t\t\tthis.cacheDirty(true);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\treturn this._borderBottomColor;\r\n\t},\r\n\r\n\tborderWidth: function (px) {\r\n\t\tif (px !== undefined) {\r\n\t\t\tthis._borderWidth = px;\r\n\t\t\tthis._borderLeftWidth = px;\r\n\t\t\tthis._borderTopWidth = px;\r\n\t\t\tthis._borderRightWidth = px;\r\n\t\t\tthis._borderBottomWidth = px;\r\n\t\t\tthis.cacheDirty(true);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\treturn this._borderWidth;\r\n\t},\r\n\r\n\tborderLeftWidth: function (px) {\r\n\t\tif (px !== undefined) {\r\n\t\t\tthis._borderLeftWidth = px;\r\n\t\t\tthis.cacheDirty(true);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\treturn this._borderLeftWidth;\r\n\t},\r\n\r\n\tborderTopWidth: function (px) {\r\n\t\tif (px !== undefined) {\r\n\t\t\tthis._borderTopWidth = px;\r\n\t\t\tthis.cacheDirty(true);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\treturn this._borderTopWidth;\r\n\t},\r\n\r\n\tborderRightWidth: function (px) {\r\n\t\tif (px !== undefined) {\r\n\t\t\tthis._borderRightWidth = px;\r\n\r\n\t\t\tthis.cacheDirty(true);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\treturn this._borderRightWidth;\r\n\t},\r\n\r\n\tborderBottomWidth: function (px) {\r\n\t\tif (px !== undefined) {\r\n\t\t\tthis._borderBottomWidth = px;\r\n\r\n\t\t\tthis.cacheDirty(true);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\treturn this._borderBottomWidth;\r\n\t},\r\n\r\n\tborderRadius: function (px) {\r\n\t\tif (px !== undefined) {\r\n\t\t\tthis._borderRadius = px;\r\n\t\t\tthis._borderTopLeftRadius = px;\r\n\t\t\tthis._borderTopRightRadius = px;\r\n\t\t\tthis._borderBottomRightRadius = px;\r\n\t\t\tthis._borderBottomLeftRadius = px;\r\n\r\n\t\t\tthis.cacheDirty(true);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\treturn this._borderRadius;\r\n\t},\r\n\r\n\tpadding: function (left, top, right, bottom) {\r\n\t\tthis._paddingLeft = left;\r\n\t\tthis._paddingTop = top;\r\n\t\tthis._paddingRight = right;\r\n\t\tthis._paddingBottom = bottom;\r\n\r\n\t\tthis.cacheDirty(true);\r\n\t\treturn this;\r\n\t},\r\n\r\n\tpaddingLeft: function (px) {\r\n\t\tif (px !== undefined) {\r\n\t\t\tthis._paddingLeft = px;\r\n\r\n\t\t\tthis.cacheDirty(true);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\treturn this._paddingLeft;\r\n\t},\r\n\r\n\tpaddingTop: function (px) {\r\n\t\tif (px !== undefined) {\r\n\t\t\tthis._paddingTop = px;\r\n\r\n\t\t\tthis.cacheDirty(true);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\treturn this._paddingTop;\r\n\t},\r\n\r\n\tpaddingRight: function (px) {\r\n\t\tif (px !== undefined) {\r\n\t\t\tthis._paddingRight = px;\r\n\r\n\t\t\tthis.cacheDirty(true);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\treturn this._paddingRight;\r\n\t},\r\n\r\n\tpaddingBottom: function (px) {\r\n\t\tif (px !== undefined) {\r\n\t\t\tthis._paddingBottom = px;\r\n\r\n\t\t\tthis.cacheDirty(true);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\treturn this._paddingBottom;\r\n\t}\r\n};\r\n\r\nif (typeof(module) !== 'undefined' && typeof(module.exports) !== 'undefined') { module.exports = IgeUiStyleExtension; }","/**\r\n * A simple finite state machine implementation.\r\n */\r\nvar IgeFSM = IgeClass.extend({\r\n\tclassId: 'IgeFSM',\r\n\r\n\tinit: function () {\r\n\t\tvar self = this;\r\n\t\t\r\n\t\tthis._states = {};\r\n\t\tthis._transitions = {};\r\n\r\n\t\t// Track states by name.\r\n\t\tthis._initialStateName = '';\r\n\t\tthis._currentStateName = '';\r\n\t\tthis._previousStateName = '';\r\n\t\t\r\n\t\tthis._debug = false;\r\n\t},\r\n\r\n\t/**\r\n\t * Returns the name of the initial state.\r\n\t * @returns {string}\r\n\t */\r\n\tinitialStateName: function () {\r\n\t\treturn this._currentStateName;\r\n\t},\r\n\r\n\t/**\r\n\t * Returns the name of the previous state.\r\n\t * @returns {string}\r\n\t */\r\n\tpreviousStateName: function () {\r\n\t\treturn this._currentStateName;\r\n\t},\r\n\r\n\t/**\r\n\t * Returns the name of the current state.\r\n\t * @returns {string}\r\n\t */\r\n\tcurrentStateName: function () {\r\n\t\treturn this._currentStateName;\r\n\t},\r\n\r\n\t/**\r\n\t * Gets / sets the debug flag. If set to true will enable console logging\r\n\t * of state changes / events.\r\n\t * @param {Boolean=} val Set to true to enable.\r\n\t * @returns {*}\r\n\t */\r\n\tdebug: function (val) {\r\n\t\tif (val !== undefined) {\r\n\t\t\tthis._debug = val;\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\treturn this._debug;\r\n\t},\r\n\r\n\t/**\r\n\t * Defines a state with a name and a state definition.\r\n\t * @param {String} name The name of the state to define.\r\n\t * @param {Object} definition The state definition object.\r\n\t * @example #Define a state\r\n\t *     var fsm = new IgeFSM();\r\n\t *     \r\n\t *     // Define an \"idle\" state\r\n\t *     fsm.defineState('idle', {\r\n\t *         enter: function (data, completeCallback) {\r\n\t *             console.log('entered idle state');\r\n\t *             completeCallback();\r\n\t *         },\r\n\t *         exit: function (data, completeCallback) {\r\n\t *             console.log('exited idle state');\r\n\t *             completeCallback();\r\n\t *         }\r\n\t *     });\r\n\t * @returns {IgeFSM}\r\n\t */\r\n\tdefineState: function (name, definition) {\r\n\t\tthis._states[name] = definition;\r\n\r\n\t\tif (!this._initialStateName) {\r\n\t\t\tthis._initialStateName = name;\r\n\t\t}\r\n\t\t\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * Defines a transition between two states.\r\n\t * @param {String} fromState The state name the transition is from.\r\n\t * @param {String} toState The state name the transition is to.\r\n\t * @param {Function} transitionCheck A method to call just before this transition\r\n\t * between the two specified states is executed, that will call the callback method\r\n\t * passed to it in the second parameter and include either true to allow the\r\n\t * transition to continue, or false to cancel it in the first parameter.\r\n\t * @example #Define a state transition\r\n\t *     var fsm = new IgeFSM();\r\n\t *     \r\n\t *     // Define an \"idle\" state\r\n\t *     fsm.defineState('idle', {\r\n\t *         enter: function (data, completeCallback) {\r\n\t *             console.log('entered idle state');\r\n\t *             completeCallback();\r\n\t *         },\r\n\t *         exit: function (data, completeCallback) {\r\n\t *             console.log('exited idle state');\r\n\t *             completeCallback();\r\n\t *         }\r\n\t *     });\r\n\t *     \r\n\t *     // Define a \"moving\" state\r\n\t *     fsm.defineState('moving', {\r\n\t *         enter: function (data, completeCallback) {\r\n\t *             console.log('entered moving state');\r\n\t *             completeCallback();\r\n\t *         },\r\n\t *         exit: function (data, completeCallback) {\r\n\t *             console.log('exited moving state');\r\n\t *             completeCallback();\r\n\t *         }\r\n\t *     });\r\n\t *     \r\n\t *     // Define a transition between the two methods\r\n\t *     fsm.defineTransition('idle', 'moving', function (data, callback) {\r\n\t *         // Check some data we were passed\r\n\t *         if (data === 'ok') {\r\n\t *             // Callback the listener and tell them there was no error\r\n\t *             // (first argument is an err flag, set to false for no error)\r\n\t *             callback(false);\r\n\t *         } else {\r\n\t *             // Callback and say there was an error by passing anything other\r\n\t *             // than false in the first argument\r\n\t *             callback('Some error string, or true or any data');\r\n\t *         }\r\n\t *     });\r\n\t *     \r\n\t *     // Now change states and cause it to fail\r\n\t *     fsm.enterState('moving', 'notOk', function (err, data) {\r\n\t *         if (!err) {\r\n\t *             // There was no error, the state changed successfully\r\n\t *             console.log('State changed!', fsm.currentStateName());\r\n\t *         } else {\r\n\t *             // There was an error, the state did not change\r\n\t *             console.log('State did NOT change!', fsm.currentStateName());\r\n\t *         }\r\n\t *     });\r\n\t *     \r\n\t *     // Now change states and pass \"ok\" in the data to make it proceed\r\n\t *     fsm.enterState('moving', 'ok', function (err, data) {\r\n\t *         if (!err) {\r\n\t *             // There was no error, the state changed successfully\r\n\t *             console.log('State changed!', fsm.currentStateName());\r\n\t *         } else {\r\n\t *             // There was an error, the state did not change\r\n\t *             console.log('State did NOT change!', fsm.currentStateName());\r\n\t *         }\r\n\t *     });\r\n\t * @returns {*}\r\n\t */\r\n\tdefineTransition: function (fromState, toState, transitionCheck) {\r\n\t\tif (fromState && toState && transitionCheck) {\r\n\t\t\tif (!this._states[fromState]) {\r\n\t\t\t\tthis.log('fromState \"' + fromState + '\" specified is not defined as a state!', 'error');\r\n\t\t\t}\r\n\t\r\n\t\t\tif (!this._states[toState]) {\r\n\t\t\t\tthis.log('toState \"' + toState + '\" specified is not defined as a state!', 'error');\r\n\t\t\t}\r\n\t\r\n\t\t\tthis._transitions[fromState] = this._transitions[fromState] || {};\r\n\t\t\tthis._transitions[fromState][toState] = transitionCheck;\r\n\t\t\t\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\treturn false;\r\n\t},\r\n\r\n\t/**\r\n\t * After defining your states, call this with the state name and the initial\r\n\t * state of the FSM will be set.\r\n\t * @param {String} stateName The state to set as the initial state.\r\n\t * @param {*=} data Any data you wish to pass the state's \"enter\" method.\r\n\t * @param {Function=} callback An optional callback method that will be called\r\n\t * once the state has been entered successfully, or if there was an error.\r\n\t */\r\n\tinitialState: function (stateName, data, callback) {\r\n\t\tvar newStateObj = this.getState(stateName);\r\n\t\t\r\n\t\tthis._currentStateName = stateName;\r\n\t\t\r\n\t\tif (this._debug) { this.log('Entering initial state: ' + stateName); }\r\n\t\t\r\n\t\tif (newStateObj.enter) {\r\n\t\t\tnewStateObj.enter.apply(newStateObj, [data, function (enterErr, enterData) {\r\n\t\t\t\tif (callback) { callback(enterErr, enterData); }\r\n\t\t\t}]);\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Gets the state definition object for the specified state name.\r\n\t * @param {String} stateName The name of the state who's definition object should\r\n\t * be looked up and returned.\r\n\t * @returns {Object} The state definition object or undefined if no state exists\r\n\t * with that name.\r\n\t */\r\n\tgetState: function (stateName) {\r\n\t\treturn this._states[stateName];\r\n\t},\r\n\r\n\t/**\r\n\t * Tell the FSM to enter the state specified.\r\n\t * @param {String} newStateName The new state to enter.\r\n\t * @param {*} data Any data to pass to the exit and enter methods.\r\n\t * @param {Function=} callback The optional callback method to call on completion.\r\n\t */\r\n\tenterState: function (newStateName, data, callback) {\r\n\t\tvar self = this;\r\n\t\t\r\n\t\tif (self._transitions[self._currentStateName] && self._transitions[self._currentStateName][newStateName]) {\r\n\t\t\t// There is a transition check method, call it to see if we can change states\r\n\t\t\tself._transitions[self._currentStateName][newStateName](data, function (err) {\r\n\t\t\t\tif (!err) {\r\n\t\t\t\t\t// State change allowed\r\n\t\t\t\t\tself._transitionStates(self._currentStateName, newStateName, data, callback);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// State change not allowed or error\r\n\t\t\t\t\tif (callback ) { callback(err); }\r\n\t\t\t\t\t\r\n\t\t\t\t\tthis.log('Cannot transition from \"' + self._currentStateName + '\" to \"' + newStateName + '\" states.', 'warning');\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\t// No transition check method exists, continue to change states\r\n\t\t\tself._transitionStates(self._currentStateName, newStateName, data, callback);\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Tell the FSM to exit the current state and enter the previous state.\r\n\t * @param {Function=} callback Optional callback method once exiting the state\r\n\t * has been executed.\r\n\t */\r\n\texitState: function (callback) {\r\n\t\tthis.enterState(this._previousStateName, null, callback);\r\n\t},\r\n\r\n\t/**\r\n\t * Handles changing states from one to another by checking for transitions and\r\n\t * handling callbacks.\r\n\t * @param {String} oldStateName The name of the state we are transitioning from.\r\n\t * @param {String} newStateName The name of the state we are transitioning to.\r\n\t * @param {*=} data Optional data to pass to the exit and enter methods of each state.\r\n\t * @param {Function=} callback Optional callback method to execute once the transition\r\n\t * has been completed.\r\n\t * @private\r\n\t */\r\n\t_transitionStates: function (oldStateName, newStateName, data, callback) {\r\n\t\tvar self = this,\r\n\t\t\tcurrentStateObj = self.getState(self._currentStateName),\r\n\t\t\tnewStateObj = self.getState(newStateName);\r\n\t\t\r\n\t\tif (currentStateObj && newStateObj) {\r\n\t\t\tif (self._debug) { self.log('Exiting state: ' + self._currentStateName); }\r\n\t\t\tif (currentStateObj.exit) {\r\n\t\t\t\tcurrentStateObj.exit.apply(currentStateObj, [data, function (exitStateErr, exitStateData) {\r\n\t\t\t\t\tself._previousStateName = self._currentStateName;\r\n\t\t\t\t\tself._currentStateName = newStateName;\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (self._debug) { self.log('Entering state: ' + newStateName); }\r\n\t\t\t\t\tif (newStateObj.enter) {\r\n\t\t\t\t\t\tnewStateObj.enter.apply(newStateObj, [data, function (enterStateErr, enterStateData) {\r\n\t\t\t\t\t\t\tif (callback) { callback(enterStateErr, data); }\r\n\t\t\t\t\t\t}]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}]);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (callback) { callback('Cannot change states from \"' + self._currentStateName + '\" to \"' + newStateName + '\" states.'); }\r\n\t\t\tself.log('Cannot change states from \"' + self._currentStateName + '\" to \"' + newStateName + '\" states.', 'warning');\r\n\t\t}\r\n\t}\r\n});\r\n\r\nif (typeof(module) !== 'undefined' && typeof(module.exports) !== 'undefined') { module.exports = IgeFSM; }","var IgeSceneGraph = IgeClass.extend({\r\n\tclassId: 'IgeSceneGraph',\r\n\tinterfaceImplements: [\r\n\t\t'addGraph',\r\n\t\t'removeGraph'\r\n\t],\r\n\t\r\n\t/**\r\n\t * Called when loading the graph data via ige.addGraph().\r\n\t * @param {Object=} options The options that were passed with the call\r\n\t * to ige.addGraph().\r\n\t */\r\n\taddGraph: function (options) {\r\n\t\t\r\n\t},\r\n\t\r\n\t/**\r\n\t * The method called when the graph items are to be removed from the\r\n\t * active graph.\r\n\t */\r\n\tremoveGraph: function () {\r\n\t\t\r\n\t}\r\n});\r\n\r\nif (typeof(module) !== 'undefined' && typeof(module.exports) !== 'undefined') { module.exports = IgeSceneGraph; }","/**\r\n * When loaded into memory using ige.addGraph('IgeBaseScene') will create\r\n * the scene \"baseScene\" and the viewport \"vp1\" that are used in almost all\r\n * examples and can be used as the base for your scenegraph as well.\r\n */\r\nvar IgeBaseScene = IgeSceneGraph.extend({\r\n\tclassId: 'IgeBaseScene',\r\n\t\r\n\tinit: function () {},\r\n\r\n\t/**\r\n\t * Called when loading the graph data via ige.addGraph().\r\n\t * @param options\r\n\t */\r\n\taddGraph: function (options) {\r\n\t\t// Clear existing graph data\r\n\t\tif (ige.$('baseScene')) {\r\n\t\t\tthis.destroyGraph();\r\n\t\t}\r\n\t\t\r\n\t\t// Create the scene\r\n\t\tvar baseScene = new IgeScene2d()\r\n\t\t\t.id('baseScene');\r\n\r\n\t\t// Create the main viewport to look at \"baseScene\"\r\n\t\tnew IgeViewport()\r\n\t\t\t.id('vp1')\r\n\t\t\t.autoSize(true)\r\n\t\t\t.scene(baseScene)\r\n\t\t\t.drawBounds(false)\r\n\t\t\t.mount(ige);\r\n\t},\r\n\r\n\t/**\r\n\t * The method called when the graph items are to be removed from the\r\n\t * active graph.\r\n\t */\r\n\tremoveGraph: function () {\r\n\t\t// Destroy the viewport\r\n\t\tige.$('vp1').destroy();\r\n\t\t\r\n\t\t// Destroy the baseScene\r\n\t\tige.$('baseScene').destroy();\r\n\t}\r\n});\r\n\r\nif (typeof(module) !== 'undefined' && typeof(module.exports) !== 'undefined') { module.exports = IgeBaseScene; }","var nullMethod = function () {},\r\n\tIgeDummyCanvas = function () {\r\n\t\tthis.dummy = true;\r\n\t\tthis.width = 0;\r\n\t\tthis.height = 0;\r\n\t};\r\n\r\nIgeDummyCanvas.prototype.getContext = function () {\r\n\treturn IgeDummyContext;\r\n};\r\n\r\nif (typeof(module) !== 'undefined' && typeof(module.exports) !== 'undefined') { module.exports = IgeDummyCanvas; }","var nullMethod = function () {},\r\n\tIgeDummyContext = {\r\n\t\tdummy: true,\r\n\t\tsave: nullMethod,\r\n\t\trestore: nullMethod,\r\n\t\ttranslate: nullMethod,\r\n\t\trotate: nullMethod,\r\n\t\tscale: nullMethod,\r\n\t\tdrawImage: nullMethod,\r\n\t\tfillRect: nullMethod,\r\n\t\tstrokeRect: nullMethod,\r\n\t\tstroke: nullMethod,\r\n\t\tfill: nullMethod,\r\n\t\trect: nullMethod,\r\n\t\tmoveTo: nullMethod,\r\n\t\tlineTo: nullMethod,\r\n\t\tarc: nullMethod,\r\n\t\tclearRect: nullMethod,\r\n\t\tbeginPath: nullMethod,\r\n\t\tclip: nullMethod,\r\n\t\ttransform: nullMethod,\r\n\t\tsetTransform: nullMethod,\r\n\t\tfillText: nullMethod\r\n\t};\r\n\r\nif (typeof(module) !== 'undefined' && typeof(module.exports) !== 'undefined') { module.exports = IgeDummyContext; }","/**\r\n * Creates a new path node for use with the IgePathFinder class.\r\n */\r\nvar IgePathNode = IgePoint3d.extend({\r\n\tclassId: 'IgePathNode',\r\n\r\n\t/**\r\n\t * @constructor\r\n\t * @param {Number} x\r\n\t * @param {Number} y\r\n\t * @param {Number} g\r\n\t * @param {Number} moveCost\r\n\t * @param {Number} h\r\n\t * @param {Object} parent\r\n\t * @param {String} direction\r\n\t */\r\n\tinit: function(x, y, g, moveCost, h, parent, direction) {\r\n\t\tthis.z = 0; // Compat with IgePoint3d\r\n\t\t\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\t\tthis.g = g + moveCost; // Cost of moving from the start point along the path to this node (parentNode.g + moveCost)\r\n\t\tthis.h = h; // Rough distance to target node\r\n\t\tthis.moveCost = moveCost;\r\n\t\tthis.f = g + h; // Result of g + h\r\n\t\tthis.link = parent;\r\n\t\tthis.hash = x + ',' + y;\r\n\t\tthis.listType = 0;\r\n\t\tthis.direction = direction;\r\n\t\tthis.mode = 0;\r\n\t},\r\n\r\n\t/**\r\n\t * Gets / sets the path node mode. The mode determines if the co-ordinates\r\n\t * will be in tile or absolute co-ordinates.\r\n\t * @param {Number=} val 0 = tile based, 1 = absolute based.\r\n\t * @return {*}\r\n\t */\r\n\tmode: function (val) {\r\n\t\tif (val !== undefined) {\r\n\t\t\tthis.mode = val;\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\treturn this.mode;\r\n\t}\r\n});\r\n\r\nif (typeof(module) !== 'undefined' && typeof(module.exports) !== 'undefined') { module.exports = IgePathNode; }","/**\r\n * Creates a new path using the A* path-finding algorithm.\r\n */\r\nvar IgePathFinder = IgeEventingClass.extend({\r\n\tclassId: 'IgePathFinder',\r\n\r\n\tinit: function() {\r\n\t\tthis._neighbourLimit = 1000;\r\n\t\tthis._squareCost = 10;\r\n\t\tthis._diagonalCost = 10;\r\n\t},\r\n\r\n\t/**\r\n\t * Gets / sets the cost of movement over a square (left,\r\n\t * right, up, down) adjacent tile.\r\n\t * @param {Number=} val\r\n\t * @return {*}\r\n\t */\r\n\tsquareCost: function (val) {\r\n\t\tif (val !== undefined) {\r\n\t\t\tthis._squareCost = val;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\treturn this._squareCost;\r\n\t},\r\n\r\n\t/**\r\n\t * Gets / sets the cost of movement over a diagonal (nw,\r\n\t * ne, sw, se) adjacent tile.\r\n\t * @param {Number=} val\r\n\t * @return {*}\r\n\t */\r\n\tdiagonalCost: function (val) {\r\n\t\tif (val !== undefined) {\r\n\t\t\tthis._diagonalCost = val;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\treturn this._diagonalCost;\r\n\t},\r\n\r\n\t/**\r\n\t * Gets / sets the limit on the number of neighbour nodes\r\n\t * that the path-finder will analyse before reaching it's\r\n\t * target tile. On large maps this limit should be increased\r\n\t * to allow pathing where many neighbours need to be\r\n\t * considered.\r\n\t * @param val\r\n\t * @return {*}\r\n\t */\r\n\tneighbourLimit: function (val) {\r\n\t\tif (val !== undefined) {\r\n\t\t\tthis._neighbourLimit = val;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\treturn this._neighbourLimit;\r\n\t},\r\n\t\r\n\taStar: function () {\r\n\t\tthis.log('The \"IgePathFinder.aStar\" method has been renamed to \"generate\". Please update your code.', 'error');\r\n\t},\r\n\r\n\t/**\r\n\t * Uses the A* algorithm to generate path data between two points.\r\n\t * @param {IgeCollisionMap2d} tileMap The tile map to use when generating the path.\r\n\t * @param {IgePoint3d} startPoint The point on the map to start path-finding from.\r\n\t * @param {IgePoint3d} endPoint The point on the map to try to path-find to.\r\n\t * @param {Function} comparisonCallback The callback function that will decide if each tile that is being considered for use in the path is allowed or not based on the tile map's data stored for that tile which is passed to this method as the first parameter. Must return a boolean value.\r\n\t * @param {Boolean} allowSquare Whether to allow neighboring tiles along a square axis. Defaults to true if undefined.\r\n\t * @param {Boolean} allowDiagonal Whether to allow neighboring tiles along a diagonal axis. Defaults to false if undefined.\r\n\t * @param {Boolean=} allowInvalidDestination If the path finder cannot path to the destination tile, if this is true the closest path will be returned instead.\r\n\t * @return {Array} An array of objects each containing an x, y co-ordinate that describes the path from the starting point to the end point in order.\r\n\t */\r\n\tgenerate: function (tileMap, startPoint, endPoint, comparisonCallback, allowSquare, allowDiagonal, allowInvalidDestination) {\r\n\t\tvar openList = [],\r\n\t\t\tclosedList = [],\r\n\t\t\tlistHash = {},\r\n\t\t\tstartNode,\r\n\t\t\tlowestFScoringIndex,\r\n\t\t\topenCount,\r\n\t\t\tcurrentNode,\r\n\t\t\tpathPoint,\r\n\t\t\tfinalPath,\r\n\t\t\tneighbourList,\r\n\t\t\tneighbourCount,\r\n\t\t\tneighbourNode,\r\n\t\t\tendPointCheckTile,\r\n\t\t\ttileMapData,\r\n\t\t\texistingNode,\r\n\t\t\tlowestHNode;\r\n\r\n\t\t// Set some defaults\r\n\t\tif (allowSquare === undefined) { allowSquare = true; }\r\n\t\tif (allowDiagonal === undefined) { allowDiagonal = false; }\r\n\r\n\t\t// Check that the end point on the map is actually allowed to be pathed to!\r\n\t\ttileMapData = tileMap.map._mapData;\r\n\t\tendPointCheckTile = tileMapData[endPoint.y] && tileMapData[endPoint.y][endPoint.x] ? tileMapData[endPoint.y][endPoint.x] : null;\r\n\t\tif (!allowInvalidDestination && !comparisonCallback(endPointCheckTile, endPoint.x, endPoint.y)) {\r\n\t\t\t// There is no path to the end point because the end point\r\n\t\t\t// is not allowed to be pathed to!\r\n\t\t\tthis.emit('noPathFound');\r\n\t\t\t//this.log('Cannot path to destination because the destination tile is not pathable!');\r\n\t\t\treturn [];\r\n\t\t}\r\n\r\n\t\t// Starting point to open list\r\n\t\tstartNode = new IgePathNode(startPoint.x, startPoint.y, 0, 0, this._heuristic(startPoint.x, startPoint.y, endPoint.x, endPoint.y, 10));\r\n\t\tstartNode.link = 1;\r\n\t\topenList.push(startNode);\r\n\t\tlistHash[startNode.hash] = startNode;\r\n\t\tstartNode.listType = 1;\r\n\r\n\t\tlowestHNode = startNode;\r\n\r\n\t\t// Loop as long as there are more points to process in our open list\r\n\t\twhile (openList.length) {\r\n\t\t\t// Check for some major error\r\n\t\t\tif (openList.length > this._neighbourLimit) {\r\n\t\t\t\t//this.log('Path finder error, open list nodes exceeded ' + this._neighbourLimit + '!', 'warning');\r\n\t\t\t\tthis.emit('exceededLimit');\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\t// Grab the lowest f scoring node from the open list\r\n\t\t\t// to process next\r\n\t\t\tlowestFScoringIndex = 0;\r\n\t\t\topenCount = openList.length;\r\n\r\n\t\t\twhile (openCount--) {\r\n\t\t\t\tif(openList[openCount].f < openList[lowestFScoringIndex].f) { lowestFScoringIndex = openCount; }\r\n\t\t\t}\r\n\r\n\t\t\tcurrentNode = openList[lowestFScoringIndex];\r\n\r\n\t\t\t// Check if the current node is the end point\r\n\t\t\tif (currentNode.x === endPoint.x && currentNode.y === endPoint.y) {\r\n\t\t\t\t// We have reached the end point\r\n\t\t\t\tpathPoint = currentNode;\r\n\t\t\t\tfinalPath = [];\r\n\r\n\t\t\t\twhile(pathPoint.link) {\r\n\t\t\t\t\tfinalPath.push(pathPoint);\r\n\t\t\t\t\tpathPoint = pathPoint.link;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.emit('pathFound', finalPath);\r\n\r\n\t\t\t\treturn finalPath.reverse();\r\n\t\t\t} else {\r\n\t\t\t\t// Remove the current node from the open list\r\n\t\t\t\topenList.splice(lowestFScoringIndex, 1);\r\n\r\n\t\t\t\t// Add the current node to the closed list\r\n\t\t\t\tclosedList.push(currentNode);\r\n\t\t\t\tcurrentNode.listType = -1;\r\n\r\n\t\t\t\t// Get the current node's neighbors\r\n\t\t\t\tneighbourList = this._getNeighbours(currentNode, endPoint, tileMap, comparisonCallback, allowSquare, allowDiagonal);\r\n\t\t\t\tneighbourCount = neighbourList.length;\r\n\r\n\t\t\t\t// Loop the neighbours and add each one to the open list\r\n\t\t\t\twhile (neighbourCount--) {\r\n\t\t\t\t\tneighbourNode = neighbourList[neighbourCount];\r\n\t\t\t\t\texistingNode = listHash[neighbourNode.hash];\r\n\r\n\t\t\t\t\t// Check that the neighbour is not on the closed list\r\n\t\t\t\t\tif (!existingNode || existingNode.listType !== -1) {\r\n\t\t\t\t\t\t// The neighbour is not on the closed list so\r\n\t\t\t\t\t\t// check if it is already on the open list\r\n\t\t\t\t\t\tif (existingNode && existingNode.listType === 1) {\r\n\t\t\t\t\t\t\t// The neighbour is already on the open list\r\n\t\t\t\t\t\t\t// so check if our new path is a better score\r\n\t\t\t\t\t\t\tif (existingNode.g > neighbourNode.g) {\r\n\t\t\t\t\t\t\t\t// Pathing from the current node through this neighbour\r\n\t\t\t\t\t\t\t\t// costs less that any way we've calculated before\r\n\t\t\t\t\t\t\t\texistingNode.link = neighbourNode.link;\r\n\t\t\t\t\t\t\t\texistingNode.g = neighbourNode.g;\r\n\t\t\t\t\t\t\t\texistingNode.f = neighbourNode.f;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t// Add the neighbour to the open list\r\n\t\t\t\t\t\t\topenList.push(neighbourNode);\r\n\t\t\t\t\t\t\tlistHash[neighbourNode.hash] = neighbourNode;\r\n\t\t\t\t\t\t\tneighbourNode.listType = 1;\r\n\t\t\t\t\t\t\texistingNode = neighbourNode;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Check if this neighbour node has the lowest\r\n\t\t\t\t\t// h value (distance from target) and store it\r\n\t\t\t\t\tif (!lowestHNode || existingNode.h < lowestHNode.h) {\r\n\t\t\t\t\t\tlowestHNode = existingNode;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif (!allowInvalidDestination || (allowInvalidDestination && !lowestHNode)) {\r\n\t\t\t// Could not find a path, return an empty array!\r\n\t\t\t//this.log('Could not find a path to destination!');\r\n\t\t\tthis.emit('noPathFound');\r\n\t\t\treturn [];\r\n\t\t} else {\r\n\t\t\t// We couldn't path to the destination so return\r\n\t\t\t// the closest detected end point\r\n\t\t\tpathPoint = lowestHNode;\r\n\t\t\tfinalPath = [];\r\n\r\n\t\t\twhile(pathPoint.link) {\r\n\t\t\t\tfinalPath.push(pathPoint);\r\n\t\t\t\tpathPoint = pathPoint.link;\r\n\t\t\t}\r\n\r\n\t\t\t// Reverse the final path so it is from\r\n\t\t\t// start to finish\r\n\t\t\tfinalPath = finalPath.reverse();\r\n\r\n\t\t\tthis.emit('pathFound', finalPath);\r\n\t\t\treturn finalPath;\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Get all the neighbors of a node for the A* algorithm.\r\n\t * @param {IgePathNode} currentNode The current node along the path to evaluate neighbors for.\r\n\t * @param {IgePathNode} endPoint The end point of the path.\r\n\t * @param {IgeCollisionMap2d} tileMap The tile map to use when evaluating neighbours.\r\n\t * @param {Function} comparisonCallback The callback function that will decide if the tile data at the neighbouring node is to be used or not. Must return a boolean value.\r\n\t * @param {Boolean} allowSquare Whether to allow neighboring tiles along a square axis.\r\n\t * @param {Boolean} allowDiagonal Whether to allow neighboring tiles along a diagonal axis.\r\n\t * @return {Array} An array containing nodes describing the neighbouring tiles of the current node.\r\n\t * @private\r\n\t */\r\n\t_getNeighbours: function (currentNode, endPoint, tileMap, comparisonCallback, allowSquare, allowDiagonal) {\r\n\t\tvar list = [],\r\n\t\t\tx = currentNode.x,\r\n\t\t\ty = currentNode.y,\r\n\t\t\tnewX = 0,\r\n\t\t\tnewY = 0,\r\n\t\t\tnewNode,\r\n\t\t\tmapData = tileMap.map._mapData,\r\n\t\t\tcurrentNodeData = mapData[y] && mapData[y][x] ? mapData[y][x] : undefined,\r\n\t\t\ttileData;\r\n\r\n\t\tif (allowSquare) {\r\n\t\t\tnewX = x - 1; newY = y;\r\n\t\t\ttileData = mapData[newY] && mapData[newY][newX] ? mapData[newY][newX] : null;\r\n\t\t\tif (comparisonCallback(tileData, newX, newY, currentNodeData, x, y)) {\r\n\t\t\t\tnewNode = new IgePathNode(newX, newY, currentNode.g, this._squareCost, this._heuristic(newX, newY, endPoint.x, endPoint.y, this._squareCost), currentNode, 'W');\r\n\t\t\t\tlist.push(newNode);\r\n\t\t\t}\r\n\r\n\t\t\tnewX = x + 1; newY = y;\r\n\t\t\ttileData = mapData[newY] && mapData[newY][newX] ? mapData[newY][newX] : null;\r\n\t\t\tif (comparisonCallback(tileData, newX, newY, currentNodeData, x, y)) {\r\n\t\t\t\tnewNode = new IgePathNode(newX, newY, currentNode.g, this._squareCost, this._heuristic(newX, newY, endPoint.x, endPoint.y, this._squareCost), currentNode, 'E');\r\n\t\t\t\tlist.push(newNode);\r\n\t\t\t}\r\n\r\n\t\t\tnewX = x; newY = y - 1;\r\n\t\t\ttileData = mapData[newY] && mapData[newY][newX] ? mapData[newY][newX] : null;\r\n\t\t\tif (comparisonCallback(tileData, newX, newY, currentNodeData, x, y)) {\r\n\t\t\t\tnewNode = new IgePathNode(newX, newY, currentNode.g, this._squareCost, this._heuristic(newX, newY, endPoint.x, endPoint.y, this._squareCost), currentNode, 'N');\r\n\t\t\t\tlist.push(newNode);\r\n\t\t\t}\r\n\r\n\t\t\tnewX = x; newY = y + 1;\r\n\t\t\ttileData = mapData[newY] && mapData[newY][newX] ? mapData[newY][newX] : null;\r\n\t\t\tif (comparisonCallback(tileData, newX, newY, currentNodeData, x, y)) {\r\n\t\t\t\tnewNode = new IgePathNode(newX, newY, currentNode.g, this._squareCost, this._heuristic(newX, newY, endPoint.x, endPoint.y, this._squareCost), currentNode, 'S');\r\n\t\t\t\tlist.push(newNode);\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif (allowDiagonal) {\r\n\t\t\tnewX = x - 1; newY = y - 1;\r\n\t\t\ttileData = mapData[newY] && mapData[newY][newX] ? mapData[newY][newX] : null;\r\n\t\t\tif (comparisonCallback(tileData, newX, newY, currentNodeData, x, y)) {\r\n\t\t\t\tnewNode = new IgePathNode(newX, newY, currentNode.g, this._diagonalCost, this._heuristic(newX, newY, endPoint.x, endPoint.y, this._diagonalCost), currentNode, 'NW');\r\n\t\t\t\tlist.push(newNode);\r\n\t\t\t}\r\n\r\n\t\t\tnewX = x + 1; newY = y - 1;\r\n\t\t\ttileData = mapData[newY] && mapData[newY][newX] ? mapData[newY][newX] : null;\r\n\t\t\tif (comparisonCallback(tileData, newX, newY, currentNodeData, x, y)) {\r\n\t\t\t\tnewNode = new IgePathNode(newX, newY, currentNode.g, this._diagonalCost, this._heuristic(newX, newY, endPoint.x, endPoint.y, this._diagonalCost), currentNode, 'NE');\r\n\t\t\t\tlist.push(newNode);\r\n\t\t\t}\r\n\r\n\t\t\tnewX = x - 1; newY = y + 1;\r\n\t\t\ttileData = mapData[newY] && mapData[newY][newX] ? mapData[newY][newX] : null;\r\n\t\t\tif (comparisonCallback(tileData, newX, newY, currentNodeData, x, y)) {\r\n\t\t\t\tnewNode = new IgePathNode(newX, newY, currentNode.g, this._diagonalCost, this._heuristic(newX, newY, endPoint.x, endPoint.y, this._diagonalCost), currentNode, 'SW');\r\n\t\t\t\tlist.push(newNode);\r\n\t\t\t}\r\n\r\n\t\t\tnewX = x + 1; newY = y + 1;\r\n\t\t\ttileData = mapData[newY] && mapData[newY][newX] ? mapData[newY][newX] : null;\r\n\t\t\tif (comparisonCallback(tileData, newX, newY, currentNodeData, x, y)) {\r\n\t\t\t\tnewNode = new IgePathNode(newX, newY, currentNode.g, this._diagonalCost, this._heuristic(newX, newY, endPoint.x, endPoint.y, this._diagonalCost), currentNode, 'SE');\r\n\t\t\t\tlist.push(newNode);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn list;\r\n\t},\r\n\r\n\t/**\r\n\t * The heuristic to calculate the rough cost of pathing from the\r\n\t * x1, y1 to x2, y2.\r\n\t * @param {Number} x1 The first x co-ordinate.\r\n\t * @param {Number} y1 The first y co-ordinate.\r\n\t * @param {Number} x2 The second x co-ordinate.\r\n\t * @param {Number} y2 The second y co-ordinate.\r\n\t * @param {Number} moveCost The cost multiplier to multiply by.\r\n\t * @return {Number} Returns the heuristic cost between the co-ordinates specified.\r\n\t * @private\r\n\t */\r\n\t_heuristic: function (x1, y1, x2, y2, moveCost) {\r\n\t\treturn moveCost * (Math.abs(x1 - x2) + Math.abs(y1 - y2));\r\n\t},\r\n\r\n\tas: function (map, fromNode, toNode) {\r\n\t\tvar openList = [],\r\n\t\t\tclosedList = [];\r\n\r\n\t\t// Add start point to open list\r\n\t\topenList.push(fromNode);\r\n\r\n\r\n\t},\r\n\r\n\t_as: function (openList, closedList, currentNode, toNode) {\r\n\r\n\t}\r\n});\r\n\r\nif (typeof(module) !== 'undefined' && typeof(module.exports) !== 'undefined') { module.exports = IgePathFinder; }","/**\r\n * Creates a new tween instance.\r\n */\r\nvar IgeTween = IgeClass.extend({\r\n\tclassId: 'IgeTween',\r\n\r\n\tinit: function (targetObj, propertyObj, durationMs, options) {\r\n\t\t// Create a new tween object and return it\r\n\t\t// so the user can decide when to start it\r\n\t\tthis._targetObj = targetObj;\r\n\t\tthis._steps = [];\r\n\t\tthis._currentStep = -1;\r\n\t\tif (propertyObj !== undefined) {\r\n\t\t\tthis.stepTo(propertyObj);\r\n\t\t}\r\n\t\tthis._durationMs = durationMs !== undefined ? durationMs : 0;\r\n\t\tthis._started = false;\r\n\t\tthis._stepDirection = false;\r\n\r\n\t\t// Sort out the options\r\n\t\tif (options && options.easing) { this.easing(options.easing); } else { this.easing('none'); }\r\n\t\tif (options && options.startTime !== undefined) { this.startTime(options.startTime); }\r\n\t\tif (options && options.beforeTween !== undefined) { this.beforeTween(options.beforeTween); }\r\n\t\tif (options && options.afterTween !== undefined) { this.afterTween(options.afterTween); }\r\n\t},\r\n\r\n\t/**\r\n\t * Sets the object in which the properties to tween exist.\r\n\t * @param targetObj\r\n\t * @return {*}\r\n\t */\r\n\ttargetObj: function (targetObj) {\r\n\t\tif (targetObj !== undefined) {\r\n\t\t\tthis._targetObj = targetObj;\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * Sets the tween's target properties to tween to.\r\n\t * @param propertyObj\r\n\t * @return {*}\r\n\t */\r\n\tproperties: function (propertyObj) {\r\n\t\tif (propertyObj !== undefined) {\r\n\t\t\t// Reset any existing steps and add this new one\r\n\t\t\tthis._steps = [];\r\n\t\t\tthis._currentStep = -1;\r\n\t\t\tthis.stepTo(propertyObj);\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * Gets / sets the repeat mode for the tween. If the mode\r\n\t * is set to 1 the tween will repeat from the first step.\r\n\t * If set to 2 the tween will reverse the order of the steps\r\n\t * each time the repeat occurs. The count determines the\r\n\t * number of times the tween will be repeated before stopping.\r\n\t * Setting the count to -1 will make it repeat infinitely.\r\n\t * @param val\r\n\t * @param count\r\n\t * @return {*}\r\n\t */\r\n\trepeatMode: function (val, count) {\r\n\t\tif (val !== undefined) {\r\n\t\t\tthis._repeatMode = val;\r\n\t\t\tthis.repeatCount(count);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\treturn this._repeatMode;\r\n\t},\r\n\r\n\t/**\r\n\t * Gets / sets the repeat count. The count determines the\r\n\t * number of times the tween will be repeated before stopping.\r\n\t * Setting the count to -1 will make it repeat infinitely.\r\n\t * This setting is used in conjunction with the repeatMode()\r\n\t * method. If you just set a repeat count and no mode then\r\n\t * the tween will not repeat.\r\n\t * @param val\r\n\t * @return {*}\r\n\t */\r\n\trepeatCount: function (val) {\r\n\t\tif (val !== undefined) {\r\n\t\t\tthis._repeatCount = val;\r\n\t\t\tthis._repeatedCount = 0;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\treturn this._repeatCount;\r\n\t},\r\n\r\n\t/**\r\n\t * DEPRECIATED, Renamed to stepTo().\r\n\t */\r\n\tstep: function (propertyObj, durationMs, easing) {\r\n\t\tthis.log('The step method has been renamed to stepTo(). Please update your code as the step() method will soon be removed.', 'warning');\r\n\t\tthis.stepTo(propertyObj, durationMs, easing);\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * Defines a step in a multi-stage tween. Uses the properties\r\n\t * as destination value.\r\n\t * @param {Object} propertyObj The properties to\r\n\t * tween during this step.\r\n\t * @param {Number=} durationMs The number of milliseconds\r\n\t * to spend tweening this step, or if not provided uses\r\n\t * the current tween durationMs setting.\r\n\t * @param {String=} easing The name of the easing method\r\n\t * to use during this step.\r\n\t * @param {Boolean=} delta If true will set the step to use\r\n\t * delta values instead of absolute values as the destination.\r\n\t * @return {*}\r\n\t */\r\n\tstepTo: function (propertyObj, durationMs, easing, delta) {\r\n\t\tif (propertyObj !== undefined) {\r\n\t\t\t// Check if we have already been given a standard\r\n\t\t\t// non-staged property\r\n\t\t\tthis._steps.push({\r\n\t\t\t\tprops: propertyObj,\r\n\t\t\t\tdurationMs: durationMs,\r\n\t\t\t\teasing: easing,\r\n\t\t\t\tisDelta: delta\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\t/**\r\n\t * Defines a step in a multi-stage tween. Uses the properties\r\n\t * as deltas, not as destination values\r\n\t * @param {Object} propertyObj The properties to\r\n\t * tween during this step.\r\n\t * @param {Number=} durationMs The number of milliseconds\r\n\t * to spend tweening this step, or if not provided uses\r\n\t * the current tween durationMs setting.\r\n\t * @param {String=} easing The name of the easing method\r\n\t * to use during this step.\r\n\t * @return {*}\r\n\t */\r\n\tstepBy: function (propertyObj, durationMs, easing) {\r\n\t\tthis.stepTo(\r\n\t\t\tpropertyObj,\r\n\t\t\tdurationMs,\r\n\t\t\teasing,\r\n\t\t\ttrue\r\n\t\t);\r\n\t\t\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * Sets the duration of the tween in milliseconds.\r\n\t * @param durationMs\r\n\t * @return {*}\r\n\t */\r\n\tduration: function (durationMs) {\r\n\t\tif (durationMs !== undefined) {\r\n\t\t\tthis._durationMs = durationMs;\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * Sets the method to be called just before the tween has started.\r\n\t * @param callback\r\n\t * @return {*}\r\n\t */\r\n\tbeforeTween: function (callback) {\r\n\t\tif (callback !== undefined) {\r\n\t\t\tthis._beforeTween = callback;\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * Sets the method to be called just after the tween has ended.\r\n\t * @param callback\r\n\t * @return {*}\r\n\t */\r\n\tafterTween: function (callback) {\r\n\t\tif (callback !== undefined) {\r\n\t\t\tthis._afterTween = callback;\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * Sets the method to be called just before a tween step has\r\n\t * started.\r\n\t * @param callback\r\n\t * @return {*}\r\n\t */\r\n\tbeforeStep: function (callback) {\r\n\t\tif (callback !== undefined) {\r\n\t\t\tthis._beforeStep = callback;\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * Sets the method to be called just after a tween step has\r\n\t * ended.\r\n\t * @param callback\r\n\t * @return {*}\r\n\t */\r\n\tafterStep: function (callback) {\r\n\t\tif (callback !== undefined) {\r\n\t\t\tthis._afterStep = callback;\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * Sets the method to be called just after a tween has changed\r\n\t * the values of the target object every update tick.\r\n\t * @param callback\r\n\t * @return {*}\r\n\t */\r\n\tafterChange: function (callback) {\r\n\t\tif (callback !== undefined) {\r\n\t\t\tthis._afterChange = callback;\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * Returns the object that this tween is modifying.\r\n\t * @return {*}\r\n\t */\r\n\ttargetObject: function () {\r\n\t\treturn this._targetObj;\r\n\t},\r\n\r\n\t/**\r\n\t * Sets the name of the easing method to use with the tween.\r\n\t * @param methodName\r\n\t * @return {*}\r\n\t */\r\n\teasing: function (methodName) {\r\n\t\tif (methodName !== undefined) {\r\n\t\t\tif (ige.tween.easing[methodName]) {\r\n\t\t\t\tthis._easing = methodName;\r\n\t\t\t} else {\r\n\t\t\t\tthis.log('The easing method you have selected does not exist, please use a valid easing method. For a list of easing methods please inspect ige.tween.easing from your console.', 'error', ige.tween.easing);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * Sets the timestamp at which the tween should start.\r\n\t * @param timeMs\r\n\t * @return {*}\r\n\t */\r\n\tstartTime: function (timeMs) {\r\n\t\tif (timeMs !== undefined) {\r\n\t\t\tthis._startTime = timeMs;\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * Starts the tweening operation.\r\n\t * @param {Number=} timeMs If set, the tween will start this\r\n\t * many milliseconds in the future.\r\n\t */\r\n\tstart: function (timeMs) {\r\n\t\tif (timeMs !== undefined) {\r\n\t\t\tthis.startTime(timeMs + ige._currentTime);\r\n\t\t}\r\n\t\t\r\n\t\tige.tween.start(this);\r\n\r\n\t\t// Add the tween to the target object's tween array\r\n\t\tthis._targetObj._tweenArr = this._targetObj._tweenArr || [];\r\n\t\tthis._targetObj._tweenArr.push(this);\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * Stops the tweening operation.\r\n\t */\r\n\tstop: function () {\r\n\t\tige.tween.stop(this);\r\n\t\tif (this._targetObj._tweenArr) {\r\n\t\t\tthis._targetObj._tweenArr.pull(this);\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * Starts all tweens registered to an object.\r\n\t * @private\r\n\t */\r\n\tstartAll: function () {\r\n\t\tif (this._targetObj._tweenArr) {\r\n\t\t\tthis._targetObj._tweenArr.eachReverse(function (tweenItem) {\r\n\t\t\t\ttweenItem.start();\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * Stops all tweens registered to an object.\r\n\t * @private\r\n\t */\r\n\tstopAll: function () {\r\n\t\tif (this._targetObj._tweenArr) {\r\n\t\t\tthis._targetObj._tweenArr.eachReverse(function (tweenItem) {\r\n\t\t\t\ttweenItem.stop();\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t}\r\n});\r\n\r\nif (typeof(module) !== 'undefined' && typeof(module.exports) !== 'undefined') { module.exports = IgeTween; }","/**\r\n * Creates a new texture.\r\n */\r\nvar IgeTexture = IgeEventingClass.extend({\r\n\tclassId: 'IgeTexture',\r\n\tIgeTexture: true,\r\n\r\n\t/**\r\n\t * Constructor for a new IgeTexture.\r\n\t * @param {String, Object} urlOrObject Either a string URL that\r\n\t * points to the path of the image or script you wish to use as\r\n\t * the texture image, or an object containing a smart texture.\r\n\t * @return {*}\r\n\t */\r\n\tinit: function (urlOrObject) {\r\n\t\tthis._loaded = false;\r\n\t\t\r\n\t\t/* CEXCLUDE */\r\n\t\t// If on a server, error\r\n\t\tif (ige.isServer) {\r\n\t\t\tthis.log('Cannot create a texture on the server. Textures are only client-side objects. Please alter your code so that you don\\'t try to load a texture on the server-side using something like an if statement around your texture laoding such as \"if (ige.isClient) {}\".', 'error');\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t/* CEXCLUDE */\r\n\r\n\t\t// Create an array that is used to store cell dimensions\r\n\t\tthis._cells = [];\r\n\t\tthis._smoothing = ige._globalSmoothing;\r\n\t\t\r\n\t\t// Instantiate filter lists for filter combinations\r\n\t\tthis._applyFilters = [];\r\n\t\tthis._applyFiltersData = [];\r\n\t\tthis._preFilters = [];\r\n\t\tthis._preFiltersData = [];\r\n\r\n\t\tvar type = typeof(urlOrObject);\r\n\r\n\t\tif (type === 'string') {\r\n\t\t\t// Load the texture URL\r\n\t\t\tif (urlOrObject) {\r\n\t\t\t\tthis.url(urlOrObject);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (type === 'object') {\r\n\t\t\t// Assign the texture script object\r\n\t\t\tthis.assignSmartTextureImage(urlOrObject);\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Gets / sets the current object id. If no id is currently assigned and no\r\n\t * id is passed to the method, it will automatically generate and assign a\r\n\t * new id as a 16 character hexadecimal value typed as a string.\r\n\t * @param {String=} id\r\n\t * @return {*} Returns this when setting the value or the current value if none is specified.\r\n\t */\r\n\tid: function (id) {\r\n\t\tif (id !== undefined) {\r\n\t\t\t// Check if this ID already exists in the object register\r\n\t\t\tif (ige._register[id]) {\r\n\t\t\t\tif (ige._register[id] === this) {\r\n\t\t\t\t\t// We are already registered as this id\r\n\t\t\t\t\treturn this;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t// Already an object with this ID!\r\n\t\t\t\tthis.log('Cannot set ID of object to \"' + id + '\" because that ID is already in use by another object!', 'error');\r\n\t\t\t} else {\r\n\t\t\t\t// Check if we already have an id assigned\r\n\t\t\t\tif (this._id && ige._register[this._id]) {\r\n\t\t\t\t\t// Unregister the old ID before setting this new one\r\n\t\t\t\t\tige.unRegister(this);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._id = id;\r\n\r\n\t\t\t\t// Now register this object with the object register\r\n\t\t\t\tige.register(this);\r\n\r\n\t\t\t\treturn this;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!this._id) {\r\n\t\t\t// The item has no id so generate one automatically\r\n\t\t\tif (this._url) {\r\n\t\t\t\t// Generate an ID from the URL string of the image\r\n\t\t\t\t// this texture is using. Useful for always reproducing\r\n\t\t\t\t// the same ID for the same texture :)\r\n\t\t\t\tthis._id = ige.newIdFromString(this._url);\r\n\t\t\t} else {\r\n\t\t\t\t// We don't have a URL so generate a random ID\r\n\t\t\t\tthis._id = ige.newIdHex();\r\n\t\t\t}\r\n\t\t\tige.register(this);\r\n\t\t}\r\n\r\n\t\treturn this._id;\r\n\t},\r\n\r\n\t/**\r\n\t * Gets / sets the source file for this texture.\r\n\t * @param {String=} url \"The url used to load the file for this texture.\r\n\t * @return {*}\r\n\t */\r\n\turl: function (url) {\r\n\t\tif (url !== undefined) {\r\n\t\t\tthis._url = url;\r\n\r\n\t\t\tif (url.substr(url.length - 2, 2) === 'js') {\r\n\t\t\t\t// This is a script-based texture, load the script\r\n\t\t\t\tthis._loadScript(url);\r\n\t\t\t} else {\r\n\t\t\t\t// This is an image-based texture, load the image\r\n\t\t\t\tthis._loadImage(url);\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\treturn this._url;\r\n\t},\r\n\r\n\t/**\r\n\t * Loads an image into an img tag and sets an onload event\r\n\t * to capture when the image has finished loading.\r\n\t * @param {String} imageUrl The image url used to load the\r\n\t * image data.\r\n\t * @private\r\n\t */\r\n\t_loadImage: function (imageUrl) {\r\n\t\tvar image,\r\n\t\t\tself = this;\r\n\r\n\t\tif (ige.isClient) {\r\n\t\t\t// Increment the texture load count\r\n\t\t\tige.textureLoadStart(imageUrl, this);\r\n\r\n\t\t\t// Check if the image url already exists in the image cache\r\n\t\t\tif (!ige._textureImageStore[imageUrl]) {\r\n\t\t\t\t// Image not in cache, create the image object\r\n\t\t\t\timage = ige._textureImageStore[imageUrl] = this.image = this._originalImage = new Image();\r\n\t\t\t\timage._igeTextures = image._igeTextures || [];\r\n\r\n\t\t\t\t// Add this texture to the textures that are using this image\r\n\t\t\t\timage._igeTextures.push(this);\r\n\r\n\t\t\t\timage.onload = function () {\r\n\t\t\t\t\t// Mark the image as loaded\r\n\t\t\t\t\timage._loaded = true;\r\n\r\n\t\t\t\t\t// Log success\r\n\t\t\t\t\tige.log('Texture image (' + imageUrl + ') loaded successfully');\r\n\r\n\t\t\t\t\t/*if (image.width % 2) {\r\n\t\t\t\t\t\tself.log('The texture ' + imageUrl + ' width (' + image.width + ') is not divisible by 2 to a whole number! This can cause rendering artifacts. It can also cause performance issues on some GPUs. Please make sure your texture width is divisible by 2!', 'warning');\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (image.height % 2) {\r\n\t\t\t\t\t\tself.log('The texture ' + imageUrl + ' height (' + image.height + ') is not divisible by 2 to a whole number! This can cause rendering artifacts. It can also cause performance issues on some GPUs. Please make sure your texture height is divisible by 2!', 'warning');\r\n\t\t\t\t\t}*/\r\n\r\n\t\t\t\t\t// Loop textures that are using this image\r\n\t\t\t\t\tvar arr = image._igeTextures,\r\n\t\t\t\t\t\tarrCount = arr.length, i,\r\n\t\t\t\t\t\titem;\r\n\r\n\t\t\t\t\tfor (i = 0; i < arrCount; i++) {\r\n\t\t\t\t\t\titem = arr[i];\r\n\r\n\t\t\t\t\t\titem._mode = 0;\r\n\r\n\t\t\t\t\t\titem.sizeX(image.width);\r\n\t\t\t\t\t\titem.sizeY(image.height);\r\n\r\n\t\t\t\t\t\titem._cells[1] = [0, 0, item._sizeX, item._sizeY];\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t// Mark texture as loaded\r\n\t\t\t\t\t\titem._textureLoaded();\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\r\n\t\t\t\t// Start the image loading by setting the source url\r\n\t\t\t\timage.src = imageUrl;\r\n\t\t\t} else {\r\n\t\t\t\t// Grab the cached image object\r\n\t\t\t\timage = this.image = this._originalImage = ige._textureImageStore[imageUrl];\r\n\r\n\t\t\t\t// Add this texture to the textures that are using this image\r\n\t\t\t\timage._igeTextures.push(this);\r\n\r\n\t\t\t\tif (image._loaded) {\r\n\t\t\t\t\t// The cached image object is already loaded so\r\n\t\t\t\t\t// fire off the relevant events\r\n\t\t\t\t\tself._mode = 0;\r\n\r\n\t\t\t\t\tself.sizeX(image.width);\r\n\t\t\t\t\tself.sizeY(image.height);\r\n\r\n\t\t\t\t\tif (image.width % 2) {\r\n\t\t\t\t\t\tthis.log('This texture\\'s width is not divisible by 2 which will cause the texture to use sub-pixel rendering resulting in a blurred image. This may also slow down the renderer on some browsers. Image file: ' + this._url, 'warning');\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (image.height % 2) {\r\n\t\t\t\t\t\tthis.log('This texture\\'s height is not divisible by 2 which will cause the texture to use sub-pixel rendering resulting in a blurred image. This may also slow down the renderer on some browsers. Image file: ' + this._url, 'warning');\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tself._cells[1] = [0, 0, self._sizeX, self._sizeY];\r\n\t\t\t\t\t\r\n\t\t\t\t\t// Mark texture as loaded\r\n\t\t\t\t\tself._textureLoaded();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\t\r\n\t_textureLoaded: function () {\r\n\t\tvar self = this;\r\n\t\t\r\n\t\t// Set a timeout here so that when this event is emitted,\r\n\t\t// the code creating the texture is given a chance to\r\n\t\t// set a listener first, otherwise this will be emitted\r\n\t\t// but nothing will have time to register a listener!\r\n\t\tsetTimeout(function () {\r\n\t\t\tself._loaded = true;\r\n\t\t\tself.emit('loaded');\r\n\r\n\t\t\t// Inform the engine that this image has loaded\r\n\t\t\tige.textureLoadEnd(self.image.src, self);\r\n\t\t}, 5);\r\n\t},\r\n\r\n\t/**\r\n\t * Loads a render script into a script tag and sets an onload\r\n\t * event to capture when the script has finished loading.\r\n\t * @param {String} scriptUrl The script url used to load the\r\n\t * script data.\r\n\t * @private\r\n\t */\r\n\t_loadScript: function (scriptUrl) {\r\n\t\tvar textures = ige.textures,\r\n\t\t\trs_sandboxContext,\r\n\t\t\tself = this,\r\n\t\t\tscriptElem;\r\n\r\n\t\tige.textureLoadStart(scriptUrl, this);\r\n\r\n\t\tif (ige.isClient) {\r\n\t\t\tscriptElem = document.createElement('script');\r\n\t\t\tscriptElem.onload = function(data) {\r\n\t\t\t\tself.log('Texture script \"' + scriptUrl + '\" loaded successfully');\r\n\t\t\t\t// Parse the JS with evil eval and store the result in the asset\r\n\t\t\t\teval(data);\r\n\r\n\t\t\t\t// Store the eval data (the \"image\" variable is declared\r\n\t\t\t\t// by the texture script and becomes available in this scope\r\n\t\t\t\t// because we evaluated it above)\r\n\t\t\t\tself._mode = 1;\r\n\t\t\t\tself.script = image;\r\n\r\n\t\t\t\t// Run the asset script init method\r\n\t\t\t\tif (typeof(image.init) === 'function') {\r\n\t\t\t\t\timage.init.apply(image, [self]);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//self.sizeX(image.width);\r\n\t\t\t\t//self.sizeY(image.height);\r\n\r\n\t\t\t\tself._loaded = true;\r\n\t\t\t\tself.emit('loaded');\r\n\t\t\t\tige.textureLoadEnd(scriptUrl, self);\r\n\t\t\t};\r\n\r\n\t\t\tscriptElem.addEventListener('error', function () {\r\n\t\t\t\tself.log('Error loading smart texture script file: ' + scriptUrl, 'error');\r\n\t\t\t}, true);\r\n\r\n\t\t\tscriptElem.src = scriptUrl;\r\n\t\t\tdocument.getElementsByTagName('head')[0].appendChild(scriptElem);\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Assigns a render script to the smart texture.\r\n\t * @param {String} scriptObj The script object.\r\n\t * @private\r\n\t */\r\n\tassignSmartTextureImage: function (scriptObj) {\r\n\t\tvar textures = ige.textures,\r\n\t\t\trs_sandboxContext,\r\n\t\t\tself = this,\r\n\t\t\tscriptElem;\r\n\t\t\r\n\t\t// Check the object has a render method\r\n\t\tif (typeof(scriptObj.render) === 'function') {\r\n\t\t\t//ige.textureLoadStart(scriptUrl, this);\r\n\t\r\n\t\t\t// Store the script data\r\n\t\t\tself._mode = 1;\r\n\t\t\tself.script = scriptObj;\r\n\t\r\n\t\t\t// Run the asset script init method\r\n\t\t\tif (typeof(scriptObj.init) === 'function') {\r\n\t\t\t\tscriptObj.init.apply(scriptObj, [self]);\r\n\t\t\t}\r\n\t\r\n\t\t\t//self.sizeX(image.width);\r\n\t\t\t//self.sizeY(image.height);\r\n\t\r\n\t\t\tself._loaded = true;\r\n\t\t\tself.emit('loaded');\r\n\t\t\t//ige.textureLoadEnd(scriptUrl, self);\r\n\t\t} else {\r\n\t\t\tthis.log('Cannot assign smart texture because it doesn\\'t have a render() method!', 'error');\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Sets the image element that the IgeTexture will use when\r\n\t * rendering. This is a special method not designed to be called\r\n\t * directly by any game code and is used specifically when\r\n\t * assigning an existing canvas element to an IgeTexture.\r\n\t * @param {Image} imageElement The canvas / image to use as\r\n\t * the image data for the IgeTexture.\r\n\t * @private\r\n\t */\r\n\t_setImage: function (imageElement) {\r\n\t\tvar image,\r\n\t\t\tself = this;\r\n\r\n\t\tif (ige.isClient) {\r\n\t\t\t// Create the image object\r\n\t\t\timage = this.image = this._originalImage = imageElement;\r\n\t\t\timage._igeTextures = image._igeTextures || [];\r\n\r\n\t\t\t// Mark the image as loaded\r\n\t\t\timage._loaded = true;\r\n\r\n\t\t\tthis._mode = 0;\r\n\r\n\t\t\tthis.sizeX(image.width);\r\n\t\t\tthis.sizeY(image.height);\r\n\r\n\t\t\tthis._cells[1] = [0, 0, this._sizeX, this._sizeY];\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Creates a new texture from a cell in the existing texture\r\n\t * and returns the new texture.\r\n\t * @param {Number, String} indexOrId The cell index or id to use.\r\n\t * @return {*}\r\n\t */\r\n\ttextureFromCell: function (indexOrId) {\r\n\t\tvar tex = new IgeTexture(),\r\n\t\t\tself = this;\r\n\r\n\t\tif (this._loaded) {\r\n\t\t\tthis._textureFromCell(tex, indexOrId);\r\n\t\t} else {\r\n\t\t\t// The texture has not yet loaded, return the new texture and set a listener to handle\r\n\t\t\t// when this texture has loaded so we can assign the texture's image properly\r\n\t\t\tthis.on('loaded', function () {\r\n\t\t\t\tself._textureFromCell(tex, indexOrId);\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\treturn tex;\r\n\t},\r\n\r\n\t/**\r\n\t * Called by textureFromCell() when the texture is ready\r\n\t * to be processed. See textureFromCell() for description.\r\n\t * @param {IgeTexture} tex The new texture to paint to.\r\n\t * @param {Number, String} indexOrId The cell index or id\r\n\t * to use.\r\n\t * @private\r\n\t */\r\n\t_textureFromCell: function (tex, indexOrId) {\r\n\t\tvar index,\r\n\t\t\tcell,\r\n\t\t\tcanvas,\r\n\t\t\tctx;\r\n\r\n\t\tif (typeof(indexOrId) === 'string') {\r\n\t\t\tindex = this.cellIdToIndex(indexOrId);\r\n\t\t} else {\r\n\t\t\tindex = indexOrId;\r\n\t\t}\r\n\r\n\t\tif (this._cells[index]) {\r\n\t\t\t// Create a new IgeTexture, then draw the existing cell\r\n\t\t\t// to it's internal canvas\r\n\t\t\tcell = this._cells[index];\r\n\t\t\tcanvas = document.createElement('canvas');\r\n\t\t\tctx = canvas.getContext('2d');\r\n\r\n\t\t\t// Set smoothing mode\r\n\t\t\t// TODO: Does this cause a costly context change? If so maybe we set a global value to keep\r\n\t\t\t// TODO: track of the value and evaluate first before changing?\r\n\t\t\tif (!this._smoothing) {\r\n\t\t\t\tctx.imageSmoothingEnabled = false;\r\n\t\t\t\tctx.mozImageSmoothingEnabled = false;\r\n\t\t\t} else {\r\n\t\t\t\tctx.imageSmoothingEnabled = true;\r\n\t\t\t\tctx.mozImageSmoothingEnabled = true;\r\n\t\t\t}\r\n\r\n\t\t\tcanvas.width = cell[2];\r\n\t\t\tcanvas.height = cell[3];\r\n\r\n\t\t\t// Draw the cell to the canvas\r\n\t\t\tctx.drawImage(\r\n\t\t\t\tthis._originalImage,\r\n\t\t\t\tcell[0],\r\n\t\t\t\tcell[1],\r\n\t\t\t\tcell[2],\r\n\t\t\t\tcell[3],\r\n\t\t\t\t0,\r\n\t\t\t\t0,\r\n\t\t\t\tcell[2],\r\n\t\t\t\tcell[3]\r\n\t\t\t);\r\n\r\n\t\t\t// Set the new texture's image to the canvas\r\n\t\t\ttex._setImage(canvas);\r\n\t\t\ttex._loaded = true;\r\n\r\n\t\t\t// Fire the loaded event\r\n\t\t\tsetTimeout(function () {\r\n\t\t\t\ttex.emit('loaded');\r\n\t\t\t}, 1);\r\n\t\t} else {\r\n\t\t\tthis.log('Unable to create new texture from passed cell index (' + indexOrId + ') because the cell does not exist!', 'warning');\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Sets the _sizeX property.\r\n\t * @param {Number} val\r\n\t */\r\n\tsizeX: function (val) {\r\n\t\tthis._sizeX = val;\r\n\t},\r\n\r\n\t/**\r\n\t * Sets the _sizeY property.\r\n\t * @param {Number} val\r\n\t */\r\n\tsizeY: function (val) {\r\n\t\tthis._sizeY = val;\r\n\t},\r\n\r\n\t/**\r\n\t * Resizes the original texture image to a new size. This alters\r\n\t * the image that the texture renders so all entities that use\r\n\t * this texture will output the newly resized version of the image.\r\n\t * @param {Number} x The new width.\r\n\t * @param {Number} y The new height.\r\n\t * @param {Boolean=} dontDraw If true the resized image will not be\r\n\t * drawn to the texture canvas. Useful for just resizing the texture\r\n\t * canvas and not the output image. Use in conjunction with the\r\n\t * applyFilter() and preFilter() methods.\r\n\t */\r\n\tresize: function (x, y, dontDraw) {\r\n\t\tif (this._originalImage) {\r\n\t\t\tif (this._loaded) {\r\n\t\t\t\tif (!this._textureCtx) {\r\n\t\t\t\t\t// Create a new canvas\r\n\t\t\t\t\tthis._textureCanvas = document.createElement('canvas');\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._textureCanvas.width = x;\r\n\t\t\t\tthis._textureCanvas.height = y;\r\n\t\t\t\tthis._textureCtx = this._textureCanvas.getContext('2d');\r\n\r\n\t\t\t\t// Set smoothing mode\r\n\t\t\t\tif (!this._smoothing) {\r\n\t\t\t\t\tthis._textureCtx.imageSmoothingEnabled = false;\r\n\t\t\t\t\tthis._textureCtx.mozImageSmoothingEnabled = false;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._textureCtx.imageSmoothingEnabled = true;\r\n\t\t\t\t\tthis._textureCtx.mozImageSmoothingEnabled = true;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (!dontDraw) {\r\n\t\t\t\t\t// Draw the original image to the new canvas\r\n\t\t\t\t\t// scaled as required\r\n\t\t\t\t\tthis._textureCtx.drawImage(\r\n\t\t\t\t\t\tthis._originalImage,\r\n\t\t\t\t\t\t0,\r\n\t\t\t\t\t\t0,\r\n\t\t\t\t\t\tthis._originalImage.width,\r\n\t\t\t\t\t\tthis._originalImage.height,\r\n\t\t\t\t\t\t0,\r\n\t\t\t\t\t\t0,\r\n\t\t\t\t\t\tx,\r\n\t\t\t\t\t\ty\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Swap the current image for this new canvas\r\n\t\t\t\tthis.image = this._textureCanvas;\r\n\t\t\t} else {\r\n\t\t\t\tthis.log('Cannot resize texture because the texture image (' + this._url + ') has not loaded into memory yet!', 'error');\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Resizes the original texture image to a new size based on percentage.\r\n\t * This alters the image that the texture renders so all entities that use\r\n\t * this texture will output the newly resized version of the image.\r\n\t * @param {Number} x The new width.\r\n\t * @param {Number} y The new height.\r\n\t * @param {Boolean=} dontDraw If true the resized image will not be\r\n\t * drawn to the texture canvas. Useful for just resizing the texture\r\n\t * canvas and not the output image. Use in conjunction with the\r\n\t * applyFilter() and preFilter() methods.\r\n\t */\r\n\tresizeByPercent: function (x, y, dontDraw) {\r\n\t\tif (this._originalImage) {\r\n\t\t\tif (this._loaded) {\r\n\t\t\t\t// Calc final x/y values\r\n\t\t\t\tx = Math.floor((this.image.width / 100) * x);\r\n\t\t\t\ty = Math.floor((this.image.height / 100) * y);\r\n\r\n\t\t\t\tif (!this._textureCtx) {\r\n\t\t\t\t\t// Create a new canvas\r\n\t\t\t\t\tthis._textureCanvas = document.createElement('canvas');\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._textureCanvas.width = x;\r\n\t\t\t\tthis._textureCanvas.height = y;\r\n\t\t\t\tthis._textureCtx = this._textureCanvas.getContext('2d');\r\n\r\n\t\t\t\t// Set smoothing mode\r\n\t\t\t\tif (!this._smoothing) {\r\n\t\t\t\t\tthis._textureCtx.imageSmoothingEnabled = false;\r\n\t\t\t\t\tthis._textureCtx.mozImageSmoothingEnabled = false;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._textureCtx.imageSmoothingEnabled = true;\r\n\t\t\t\t\tthis._textureCtx.mozImageSmoothingEnabled = true;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (!dontDraw) {\r\n\t\t\t\t\t// Draw the original image to the new canvas\r\n\t\t\t\t\t// scaled as required\r\n\t\t\t\t\tthis._textureCtx.drawImage(\r\n\t\t\t\t\t\tthis._originalImage,\r\n\t\t\t\t\t\t0,\r\n\t\t\t\t\t\t0,\r\n\t\t\t\t\t\tthis._originalImage.width,\r\n\t\t\t\t\t\tthis._originalImage.height,\r\n\t\t\t\t\t\t0,\r\n\t\t\t\t\t\t0,\r\n\t\t\t\t\t\tx,\r\n\t\t\t\t\t\ty\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Swap the current image for this new canvas\r\n\t\t\t\tthis.image = this._textureCanvas;\r\n\t\t\t} else {\r\n\t\t\t\tthis.log('Cannot resize texture because the texture image (' + this._url + ') has not loaded into memory yet!', 'error');\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Sets the texture image back to the original image that the\r\n\t * texture first loaded. Useful if you have applied filters\r\n\t * or resized the image and now want to revert back to the\r\n\t * original.\r\n\t */\r\n\trestoreOriginal: function () {\r\n\t\tthis.image = this._originalImage;\r\n\t\tdelete this._textureCtx;\r\n\t\tdelete this._textureCanvas;\r\n\t\t\r\n\t\tthis.removeFilters();\r\n\t},\r\n\r\n\tsmoothing: function (val) {\r\n\t\tif (val !== undefined) {\r\n\t\t\tthis._smoothing = val;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\treturn this._smoothing;\r\n\t},\r\n\r\n\t/**\r\n\t * Renders the texture image to the passed canvas context.\r\n\t * @param {CanvasRenderingContext2d} ctx The canvas context to draw to.\r\n\t * @param {IgeEntity} entity The entity that this texture is\r\n\t * being drawn for.\r\n\t */\r\n\trender: function (ctx, entity) {\r\n\t\t// Check that the cell is not set to null. If it is then\r\n\t\t// we don't render anything which effectively makes the\r\n\t\t// entity \"blank\"\r\n\t\tif (entity._cell !== null) {\r\n\t\t\t// TODO: Does this cause a costly context change? If so maybe we set a global value to keep\r\n\t\t\t// TODO: track of the value and evaluate first before changing?\r\n\t\t\tif (!this._smoothing) {\r\n\t\t\t\tige._ctx.imageSmoothingEnabled = false;\r\n\t\t\t\tige._ctx.mozImageSmoothingEnabled = false;\r\n\t\t\t} else {\r\n\t\t\t\tige._ctx.imageSmoothingEnabled = true;\r\n\t\t\t\tige._ctx.mozImageSmoothingEnabled = true;\r\n\t\t\t}\r\n\r\n\t\t\tif (this._mode === 0) {\r\n\t\t\t\t// This texture is image-based\r\n\t\t\t\tvar cell = this._cells[entity._cell],\r\n\t\t\t\t\tgeom = entity._bounds2d,\r\n\t\t\t\t\tpoly = entity._renderPos; // Render pos is calculated in the IgeEntity.aabb() method\r\n\r\n\t\t\t\tif (cell) {\r\n\t\t\t\t\tif (this._preFilters.length > 0 && this._textureCtx) {\r\n\t\t\t\t\t\t// Call the drawing of the original image\r\n\t\t\t\t\t\tthis._textureCtx.clearRect(0, 0, this._textureCanvas.width, this._textureCanvas.height);\r\n\t\t\t\t\t\tthis._textureCtx.drawImage(this._originalImage, 0, 0);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tvar self = this;\r\n\t\t\t\t\t\t// Call the applyFilter and preFilter methods one by one\r\n\t\t\t\t\t\tthis._applyFilters.forEach(function(method, index) {\r\n\t\t\t\t\t\t\tself._textureCtx.save();\r\n\t\t\t\t\t\t\tmethod(self._textureCanvas, self._textureCtx, self._originalImage, self, self._applyFiltersData[index]);\r\n\t\t\t\t\t\t\tself._textureCtx.restore();\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tthis._preFilters.forEach(function(method, index) {\r\n\t\t\t\t\t\t\tself._textureCtx.save();\r\n\t\t\t\t\t\t\tmethod(self._textureCanvas, self._textureCtx, self._originalImage, self, self._preFiltersData[index]);\r\n\t\t\t\t\t\t\tself._textureCtx.restore();\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tctx.drawImage(\r\n\t\t\t\t\t\tthis.image,\r\n\t\t\t\t\t\tcell[0], // texture x\r\n\t\t\t\t\t\tcell[1], // texture y\r\n\t\t\t\t\t\tcell[2], // texture width\r\n\t\t\t\t\t\tcell[3], // texture height\r\n\t\t\t\t\t\tpoly.x, // render x\r\n\t\t\t\t\t\tpoly.y, // render y\r\n\t\t\t\t\t\tgeom.x, // render width\r\n\t\t\t\t\t\tgeom.y // render height\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t\tige._drawCount++;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.log('Cannot render texture using cell ' + entity._cell + ' because the cell does not exist in the assigned texture!', 'error');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (this._mode === 1) {\r\n\t\t\t\t// This texture is script-based (a \"smart texture\")\r\n\t\t\t\tctx.save();\r\n\t\t\t\t\tthis.script.render(ctx, entity, this);\r\n\t\t\t\tctx.restore();\r\n\r\n\t\t\t\tige._drawCount++;\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\t\r\n\t/**\r\n\t * Removes a certain filter from the texture\r\n\t * Useful if you want to keep resizings, etc. \r\n\t */\r\n\tremoveFilter: function(method) {\r\n\t\tvar i;\r\n\t\twhile ((i = this._preFilters.indexOf(method)) > -1) {\r\n\t\t\tthis._preFilters[i] = undefined;\r\n\t\t\tthis._preFiltersData[i] = undefined;\r\n\t\t}\r\n\t\twhile ((i = this._applyFilters.indexOf(method)) > -1) {\r\n\t\t\tthis._applyFilters[i] = undefined;\r\n\t\t\tthis._applyFiltersData[i] = undefined;\r\n\t\t}\r\n\t\tthis._preFilters = this._preFilters.clean();\r\n\t\tthis._preFiltersData = this._preFiltersData.clean();\r\n\t\tthis._applyFilters = this._applyFilters.clean();\r\n\t\tthis._applyFiltersData = this._applyFiltersData.clean();\r\n\t\t\r\n\t\tthis._rerenderFilters();\r\n\t},\r\n\t\r\n\t/**\r\n\t * Removes all filters on the texture\r\n\t * Useful if you want to keep resizings, etc. \r\n\t */\r\n\tremoveFilters: function() {\r\n\t\tthis._applyFilters = [];\r\n\t\tthis._applyFiltersData = [];\r\n\t\tthis._preFilters = [];\r\n\t\tthis._preFiltersData = [];\r\n\t\t\r\n\t\tthis._rerenderFilters();\r\n\t},\r\n\t\r\n\t/**\r\n\t * Rerenders image with filter list. Keeps sizings.\r\n\t * Useful if you have no preFilters\r\n\t */\r\n\t_rerenderFilters: function() {\r\n\t\tif (!this._textureCanvas) return;\r\n\t\t// Rerender applyFilters from scratch:\r\n\t\t// Draw the basic image\r\n\t\t// resize it to the old boundaries\r\n\t\tthis.resize(this._textureCanvas.width, this._textureCanvas.height, false);\r\n\t\t// Draw applyFilter layers upon it\r\n\t\tvar self = this;\r\n\t\tthis._applyFilters.forEach(function(method, index) {\r\n\t\t\tself._textureCtx.save();\r\n\t\t\tmethod(self._textureCanvas, self._textureCtx, self._originalImage, self, self._applyFiltersData[index]);\r\n\t\t\tself._textureCtx.restore();\r\n\t\t});\r\n\t},\r\n\r\n\t/**\r\n\t * Gets / sets the pre-filter method that will be called before\r\n\t * the texture is rendered and will allow you to modify the texture\r\n\t * image before rendering each tick.\r\n\t * @param method\r\n\t * @return {*}\r\n\t */\r\n\tpreFilter: function (method, data) {\r\n\t\tif (method !== undefined) {\r\n\t\t\tif (this._originalImage) {\r\n\t\t\t\tif (!this._textureCtx) {\r\n\t\t\t\t\t// Create a new canvas\r\n\t\t\t\t\tthis._textureCanvas = document.createElement('canvas');\r\n\r\n\t\t\t\t\tthis._textureCanvas.width = this._originalImage.width;\r\n\t\t\t\t\tthis._textureCanvas.height = this._originalImage.height;\r\n\t\t\t\t\tthis._textureCtx = this._textureCanvas.getContext('2d');\r\n\r\n\t\t\t\t\t// Set smoothing mode\r\n\t\t\t\t\tif (!this._smoothing) {\r\n\t\t\t\t\t\tthis._textureCtx.imageSmoothingEnabled = false;\r\n\t\t\t\t\t\tthis._textureCtx.mozImageSmoothingEnabled = false;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis._textureCtx.imageSmoothingEnabled = true;\r\n\t\t\t\t\t\tthis._textureCtx.mozImageSmoothingEnabled = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Swap the current image for this new canvas\r\n\t\t\t\tthis.image = this._textureCanvas;\r\n\r\n\t\t\t\t// Save filter in active preFilter list\r\n\t\t\t\tthis._preFilters[this._preFilters.length] = method;\r\n\t\t\t\tthis._preFiltersData[this._preFiltersData.length] = !data ? {} : data;\r\n\t\t\t}\r\n\t\t\treturn this;\r\n\t\t} else {\r\n\t\t\tthis.log('Cannot use pre-filter, no filter method was passed!', 'warning');\r\n\t\t}\r\n\r\n\t\treturn this._preFilters[this._preFilters.length - 1];\r\n\t},\r\n\r\n\t/**\r\n\t * Applies a filter to the texture. The filter is a method that will\r\n\t * take the canvas, context and originalImage parameters and then\r\n\t * use context calls to alter / paint the context with the texture\r\n\t * and any filter / adjustments that you want to apply.\r\n\t * @param {Function} method\r\n\t * @param {Object=} data\r\n\t * @return {*}\r\n\t */\r\n\tapplyFilter: function (method, data) {\r\n\t\tif (this._loaded) {\r\n\t\t\tif (method !== undefined) {\r\n\t\t\t\tif (this._originalImage) {\r\n\t\t\t\t\tif (!this._textureCtx) {\r\n\t\t\t\t\t\t// Create a new canvas\r\n\t\t\t\t\t\tthis._textureCanvas = document.createElement('canvas');\r\n\t\r\n\t\t\t\t\t\tthis._textureCanvas.width = this._originalImage.width;\r\n\t\t\t\t\t\tthis._textureCanvas.height = this._originalImage.height;\r\n\t\t\t\t\t\tthis._textureCtx = this._textureCanvas.getContext('2d');\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t// Draw the basic image\r\n\t\t\t\t\t\tthis._textureCtx.clearRect(0, 0, this._textureCanvas.width, this._textureCanvas.height);\r\n\t\t\t\t\t\tthis._textureCtx.drawImage(this._originalImage, 0, 0);\r\n\t\r\n\t\t\t\t\t\t// Set smoothing mode\r\n\t\t\t\t\t\tif (!this._smoothing) {\r\n\t\t\t\t\t\t\tthis._textureCtx.imageSmoothingEnabled = false;\r\n\t\t\t\t\t\t\tthis._textureCtx.mozImageSmoothingEnabled = false;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tthis._textureCtx.imageSmoothingEnabled = true;\r\n\t\t\t\t\t\t\tthis._textureCtx.mozImageSmoothingEnabled = true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t// Swap the current image for this new canvas\r\n\t\t\t\t\tthis.image = this._textureCanvas;\r\n\t\r\n\t\t\t\t\t// Call the passed method\r\n\t\t\t\t\tif (this._preFilters.length <= 0) {\r\n\t\t\t\t\t\tthis._textureCtx.save();\r\n\t\t\t\t\t\tmethod(this._textureCanvas, this._textureCtx, this._originalImage, this, data);\r\n\t\t\t\t\t\tthis._textureCtx.restore();\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\t// Save filter in active applyFiler list\r\n\t\t\t\t\tthis._applyFilters[this._applyFilters.length] = method;\r\n\t\t\t\t\tthis._applyFiltersData[this._applyFiltersData.length] = !data ? {} : data;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tthis.log('Cannot apply filter, no filter method was passed!', 'warning');\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthis.log('Cannot apply filter, the texture you are trying to apply the filter to has not yet loaded!', 'error');\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\t/**\r\n\t * Retrieves pixel data from x,y texture coordinate (starts from top-left).\r\n\t * Important: If the texture has a cross-domain url, the image host must allow\r\n\t * cross-origin resource sharing or a security error will be thrown.\r\n\t * Reference: http://blog.chromium.org/2011/07/using-cross-domain-images-in-webgl-and.html\r\n\t * @param  {Number} x\r\n\t * @param  {Number} y\r\n\t * @return {Array} [r,g,b,a] Pixel data.\r\n\t */\r\n\tpixelData: function (x, y) {\r\n\t\tif (this._loaded) {\r\n\t\t\tif (this.image) {\r\n\t\t\t\t// Check if the texture is already using a canvas\r\n\t\t\t\tif (!this._textureCtx) {\r\n\t\t\t\t\t// Create a new canvas\r\n\t\t\t\t\tthis._textureCanvas = document.createElement('canvas');\r\n\r\n\t\t\t\t\tthis._textureCanvas.width = this.image.width;\r\n\t\t\t\t\tthis._textureCanvas.height = this.image.height;\r\n\t\t\t\t\tthis._textureCtx = this._textureCanvas.getContext('2d');\r\n\r\n\t\t\t\t\t// Set smoothing mode\r\n\t\t\t\t\tif (!this._smoothing) {\r\n\t\t\t\t\t\tthis._textureCtx.imageSmoothingEnabled = false;\r\n\t\t\t\t\t\tthis._textureCtx.mozImageSmoothingEnabled = false;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis._textureCtx.imageSmoothingEnabled = true;\r\n\t\t\t\t\t\tthis._textureCtx.mozImageSmoothingEnabled = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\t// Draw the image to the canvas\r\n\t\t\t\t\tthis._textureCtx.drawImage(this.image, 0, 0);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._textureCtx = this._textureCtx;\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn this._textureCtx.getImageData(x, y, 1, 1).data;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthis.log('Cannot read pixel data, the texture you are trying to read data from has not yet loaded!', 'error');\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * Creates a clone of the texture.\r\n\t * @return {IgeTexture} A new, distinct texture with the same attributes\r\n\t * as the one being cloned.\r\n\t */\r\n\tclone: function () {\r\n\t\treturn this.textureFromCell(1);\r\n\t},\r\n\r\n\t/**\r\n\t * Returns a string containing a code fragment that when\r\n\t * evaluated will reproduce this object.\r\n\t * @return {String}\r\n\t */\r\n\tstringify: function () {\r\n\t\tvar str = \"new \" + this.classId() + \"('\" + this._url + \"')\";\r\n\r\n\t\t// Every object has an ID, assign that first\r\n\t\t// We've commented this because ids for textures are actually generated\r\n\t\t// from their asset so will ALWAYS produce the same ID as long as the asset\r\n\t\t// is the same path.\r\n\t\t//str += \".id('\" + this.id() + \"')\";\r\n\r\n\t\t// Now get all other properties\r\n\t\tstr += this._stringify();\r\n\r\n\t\treturn str;\r\n\t},\r\n\t\r\n\t_stringify: function () {\r\n\t\treturn '';\r\n\t},\r\n\r\n\t/**\r\n\t * Destroys the item.\r\n\t */\r\n\tdestroy: function () {\r\n\t\tdelete this._eventListeners;\r\n\r\n\t\t// Remove us from the image store reference array\r\n\t\tif (this.image && this.image._igeTextures) {\r\n\t\t\tthis.image._igeTextures.pull(this);\r\n\t\t}\r\n\r\n\t\t// Remove the texture from the texture store\r\n\t\tige._textureStore.pull(this);\r\n\r\n\t\tdelete this.image;\r\n\t\tdelete this.script;\r\n\t\tdelete this._textureCanvas;\r\n\t\tdelete this._textureCtx;\r\n\r\n\t\tthis._destroyed = true;\r\n\t}\r\n});\r\n\r\nif (typeof(module) !== 'undefined' && typeof(module.exports) !== 'undefined') { module.exports = IgeTexture; }","/**\r\n * Creates a new cell sheet. Cell sheets are textures that are\r\n * automatically split up into individual cells based on a cell\r\n * width and height.\r\n */\r\nvar IgeCellSheet = IgeTexture.extend({\r\n\tclassId: 'IgeCellSheet',\r\n\tIgeSpriteSheet: true,\r\n\r\n\tinit: function (url, horizontalCells, verticalCells) {\r\n\t\tvar self = this;\r\n\r\n\t\tself.horizontalCells(horizontalCells || 1);\r\n\t\tself.verticalCells(verticalCells || 1);\r\n\r\n\t\tIgeTexture.prototype.init.call(this, url);\r\n\t},\r\n\t\r\n\t_textureLoaded: function () {\r\n\t\tif (this.image) {\r\n\t\t\t// Store the cell sheet image\r\n\t\t\tthis._sheetImage = this.image;\r\n\t\t\tthis._applyCells();\r\n\t\t} else {\r\n\t\t\t// Unable to create cells from non-image texture\r\n\t\t\t// TODO: Low-priority - Support cell sheets from smart-textures\r\n\t\t\tthis.log('Cannot create cell-sheet because texture has not loaded an image!', 'error');\r\n\t\t}\r\n\t\t\r\n\t\tIgeTexture.prototype._textureLoaded.call(this);\r\n\t},\r\n\r\n\t/**\r\n\t * Returns the total number of cells in the cell sheet.\r\n\t * @return {Number}\r\n\t */\r\n\tcellCount: function () {\r\n\t\treturn this.horizontalCells() * this.verticalCells();\r\n\t},\r\n\r\n\t/**\r\n\t * Gets / sets the number of horizontal cells in the cell sheet.\r\n\t * @param {Number=} val The integer count of the number of horizontal cells in the cell sheet.\r\n\t */\r\n\thorizontalCells: function (val) {\r\n\t\tif (val !== undefined) {\r\n\t\t\tthis._cellColumns = val;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\treturn this._cellColumns;\r\n\t},\r\n\r\n\t/**\r\n\t * Gets / sets the number of vertical cells in the cell sheet.\r\n\t * @param {Number=} val The integer count of the number of vertical cells in the cell sheet.\r\n\t */\r\n\tverticalCells: function (val) {\r\n\t\tif (val !== undefined) {\r\n\t\t\tthis._cellRows = val;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\treturn this._cellRows;\r\n\t},\r\n\r\n\t/**\r\n\t * Sets the x, y, width and height of each sheet cell and stores\r\n\t * that information in the this._cells array.\r\n\t * @private\r\n\t */\r\n\t_applyCells: function () {\r\n\t\tvar imgWidth, imgHeight,\r\n\t\t\trows, columns,\r\n\t\t\tcellWidth, cellHeight,\r\n\t\t\tcellIndex,\r\n\t\t\txPos, yPos;\r\n\r\n\t\t// Do we have an image to use?\r\n\t\tif (this.image) {\r\n\t\t\t// Check we have the correct data for a uniform cell layout\r\n\t\t\tif (this._cellRows && this._cellColumns) {\r\n\t\t\t\timgWidth = this._sizeX;\r\n\t\t\t\timgHeight = this._sizeY;\r\n\t\t\t\trows = this._cellRows;\r\n\t\t\t\tcolumns = this._cellColumns;\r\n\r\n\t\t\t\t// Store the width and height of a single cell\r\n\t\t\t\tcellWidth = this._cellWidth = imgWidth / columns;\r\n\t\t\t\tcellHeight = this._cellHeight = imgHeight / rows;\r\n\r\n\t\t\t\t// Check if the cell width and height are non-floating-point\r\n\t\t\t\tif (cellWidth !== parseInt(cellWidth, 10)) {\r\n\t\t\t\t\tthis.log('Cell width is a floating-point number! (Image Width ' + imgWidth + ' / Number of Columns ' + columns + ' = ' + cellWidth + ') in file: ' + this._url, 'warning');\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (cellHeight !== parseInt(cellHeight, 10)) {\r\n\t\t\t\t\tthis.log('Cell height is a floating-point number! (Image Height ' + imgHeight + ' / Number of Rows ' + rows + ' = ' + cellHeight + ')  in file: ' + this._url, 'warning');\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Check if we need to calculate individual cell data\r\n\t\t\t\tif (rows > 1 || columns > 1) {\r\n\t\t\t\t\tfor (cellIndex = 1; cellIndex <= (rows * columns); cellIndex++) {\r\n\t\t\t\t\t\tyPos = (Math.ceil(cellIndex / columns) - 1);\r\n\t\t\t\t\t\txPos = ((cellIndex - (columns * yPos)) - 1);\r\n\r\n\t\t\t\t\t\t// Store the xy in the sheet frames variable\r\n\t\t\t\t\t\tthis._cells[cellIndex] = [(xPos * cellWidth), (yPos * cellHeight), cellWidth, cellHeight];\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// The cell data shows only one cell so just store the whole image data\r\n\t\t\t\t\tthis._cells[1] = [0, 0, this._sizeX, this._sizeY];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Returns a string containing a code fragment that when\r\n\t * evaluated will reproduce this object.\r\n\t * @return {String}\r\n\t */\r\n\tstringify: function () {\r\n\t\tvar str = \"new \" + this.classId() + \"('\" + this.url() + \"', \" + this.horizontalCells() + \", \" + this.verticalCells() + \")\";\r\n\r\n\t\t// Every object has an ID, assign that first\r\n\t\t// IDs are automatically generated from texture urls\r\n\t\t//str += \".id('\" + this.id() + \"');\";\r\n\r\n\t\treturn str;\r\n\t}\r\n});\r\n\r\nif (typeof(module) !== 'undefined' && typeof(module.exports) !== 'undefined') { module.exports = IgeTexture; }","/**\r\n * Creates a new sprite sheet that cuts an image up into\r\n * arbitrary sections.\r\n */\r\nvar IgeSpriteSheet = IgeTexture.extend({\r\n\tclassId: 'IgeSpriteSheet',\r\n\tIgeSpriteSheet: true,\r\n\r\n\tinit: function (url, cells) {\r\n\t\tthis._spriteCells = cells;\r\n\r\n\t\tIgeTexture.prototype.init.call(this, url);\r\n\t},\r\n\t\r\n\t_textureLoaded: function () {\r\n\t\tif (this.image) {\r\n\t\t\t// Store the cell sheet image\r\n\t\t\tthis._sheetImage = this.image;\r\n\t\t\tvar i, cells = this._spriteCells;\r\n\r\n\t\t\tif (!cells) {\r\n\t\t\t\t// Try to automatically determine cells\r\n\t\t\t\tthis.log('No cell data provided for sprite sheet, attempting to automatically detect sprite bounds...');\r\n\t\t\t\tcells = this.detectCells(this._sheetImage);\r\n\t\t\t}\r\n\r\n\t\t\t// Cells in the sheets always start at index\r\n\t\t\t// 1 so move all the cells one forward\r\n\t\t\tfor (i = 0; i < cells.length; i++) {\r\n\t\t\t\tthis._cells[i + 1] = cells[i];\r\n\r\n\t\t\t\tif (this._checkModulus) {\r\n\t\t\t\t\t// Check cell for division by 2 modulus warnings\r\n\t\t\t\t\tif (cells[i][2] % 2) {\r\n\t\t\t\t\t\tthis.log('This texture\\'s cell definition defines a cell width is not divisible by 2 which can cause the texture to use sub-pixel rendering resulting in a blurred image. This may also slow down the renderer on some browsers. Image file: ' + this._url, 'warning', cells[i]);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (cells[i][3] % 2) {\r\n\t\t\t\t\t\tthis.log('This texture\\'s cell definition defines a cell height is not divisible by 2 which can cause the texture to use sub-pixel rendering resulting in a blurred image. This may also slow down the renderer on some browsers. Image file: ' + this._url, 'warning', cells[i]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t// Unable to create cells from non-image texture\r\n\t\t\t// TODO: Low-priority - Support cell sheets from smart-textures\r\n\t\t\tthis.log('Cannot create cell-sheet because texture has not loaded an image!', 'error');\r\n\t\t}\r\n\t\t\r\n\t\tIgeTexture.prototype._textureLoaded.call(this);\r\n\t},\r\n\r\n\t/**\r\n\t * Uses the sprite sheet image pixel data to detect distinct sprite\r\n\t * bounds.\r\n\t * @param img\r\n\t * @return {Array} An array of cell bounds.\r\n\t */\r\n\tdetectCells: function (img) {\r\n\t\t// Create a temp canvas\r\n\t\tvar canvas = document.createElement('canvas'),\r\n\t\t\tctx = canvas.getContext('2d'),\r\n\t\t\tpixels,\r\n\t\t\tx, y,\r\n\t\t\tnewRect,\r\n\t\t\tspriteRects = [];\r\n\r\n\t\tcanvas.width = img.width;\r\n\t\tcanvas.height = img.height;\r\n\r\n\t\t// Draw the sheet to the canvas\r\n\t\tctx.drawImage(img, 0, 0);\r\n\r\n\t\t// Read the pixel data\r\n\t\tpixels = ctx.getImageData(0, 0, canvas.width, canvas.height);\r\n\r\n\t\t// Loop the pixels and find non-transparent one\r\n\t\tfor (y = 0; y < canvas.height; y++) {\r\n\t\t\tfor (x = 0; x < canvas.width; x++) {\r\n\t\t\t\t// Check if the pixel is not transparent\r\n\t\t\t\tif (!pixels.isTransparent(x, y)) {\r\n\t\t\t\t\t// We found a non-transparent pixel so\r\n\t\t\t\t\t// is it in a rect we have already defined?\r\n\t\t\t\t\tif (!this._pixelInRects(spriteRects, x, y)) {\r\n\t\t\t\t\t\t// The pixel is not already in a rect,\r\n\t\t\t\t\t\t// so determine the bounding rect for\r\n\t\t\t\t\t\t// the new sprite whose pixel we've found\r\n\t\t\t\t\t\tnewRect = this._determineRect(pixels, x, y);\r\n\r\n\t\t\t\t\t\tif (newRect) {\r\n\t\t\t\t\t\t\tspriteRects.push(newRect);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tthis.log('Cannot automatically determine sprite bounds!', 'warning');\r\n\t\t\t\t\t\t\treturn [];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn spriteRects;\r\n\t},\r\n\r\n\t_pixelInRects: function (rects, x, y) {\r\n\t\tvar rectIndex,\r\n\t\t\trectCount = rects.length,\r\n\t\t\trect;\r\n\r\n\t\tfor (rectIndex = 0; rectIndex < rectCount; rectIndex++) {\r\n\t\t\trect = rects[rectIndex];\r\n\r\n\t\t\t// Check if the x, y is inside this rect\r\n\t\t\tif (x >= rect.x && x <= rect.x + rect.width && y >= rect.y && y <= rect.y + rect.height) {\r\n\t\t\t\t// The x, y is inside this rect\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t},\r\n\r\n\t_determineRect: function (pixels, x, y) {\r\n\t\tvar pixArr = [{x: x, y: y}],\r\n\t\t\trect = {x: x, y: y, width: 1, height: 1},\r\n\t\t\tcurrentPixel;\r\n\r\n\t\twhile (pixArr.length) {\r\n\t\t\t// De-queue front item\r\n\t\t\tcurrentPixel = pixArr.shift();\r\n\r\n\t\t\t// Expand rect to include pixel position\r\n\t\t\tif (currentPixel.x > rect.x + rect.width) {\r\n\t\t\t\trect.width = currentPixel.x - rect.x + 1;\r\n\t\t\t}\r\n\r\n\t\t\tif (currentPixel.y > rect.y + rect.height) {\r\n\t\t\t\trect.height = currentPixel.y - rect.y + 1;\r\n\t\t\t}\r\n\r\n\t\t\tif (currentPixel.x < rect.x) {\r\n\t\t\t\trect.width += rect.x - currentPixel.x;\r\n\t\t\t\trect.x = currentPixel.x;\r\n\t\t\t}\r\n\r\n\t\t\tif (currentPixel.y < rect.y) {\r\n\t\t\t\trect.height += rect.y - currentPixel.y;\r\n\t\t\t\trect.y = currentPixel.y;\r\n\t\t\t}\r\n\r\n\t\t\t// Check surrounding pixels\r\n\t\t\tif (!pixels.isTransparent(currentPixel.x - 1, currentPixel.y - 1)) {\r\n\t\t\t\t// Mark pixel so we dont use it again\r\n\t\t\t\tpixels.makeTransparent(currentPixel.x - 1, currentPixel.y - 1);\r\n\r\n\t\t\t\t// Add pixel position to queue\r\n\t\t\t\tpixArr.push({x: currentPixel.x - 1, y: currentPixel.y - 1})\r\n\t\t\t}\r\n\r\n\t\t\tif (!pixels.isTransparent(currentPixel.x, currentPixel.y - 1)) {\r\n\t\t\t\t// Mark pixel so we dont use it again\r\n\t\t\t\tpixels.makeTransparent(currentPixel.x, currentPixel.y - 1);\r\n\r\n\t\t\t\t// Add pixel position to queue\r\n\t\t\t\tpixArr.push({x: currentPixel.x, y: currentPixel.y - 1})\r\n\t\t\t}\r\n\r\n\t\t\tif (!pixels.isTransparent(currentPixel.x + 1, currentPixel.y - 1)) {\r\n\t\t\t\t// Mark pixel so we dont use it again\r\n\t\t\t\tpixels.makeTransparent(currentPixel.x + 1, currentPixel.y - 1);\r\n\r\n\t\t\t\t// Add pixel position to queue\r\n\t\t\t\tpixArr.push({x: currentPixel.x + 1, y: currentPixel.y - 1})\r\n\t\t\t}\r\n\r\n\t\t\tif (!pixels.isTransparent(currentPixel.x - 1, currentPixel.y)) {\r\n\t\t\t\t// Mark pixel so we dont use it again\r\n\t\t\t\tpixels.makeTransparent(currentPixel.x - 1, currentPixel.y);\r\n\r\n\t\t\t\t// Add pixel position to queue\r\n\t\t\t\tpixArr.push({x: currentPixel.x - 1, y: currentPixel.y})\r\n\t\t\t}\r\n\r\n\t\t\tif (!pixels.isTransparent(currentPixel.x + 1, currentPixel.y)) {\r\n\t\t\t\t// Mark pixel so we dont use it again\r\n\t\t\t\tpixels.makeTransparent(currentPixel.x + 1, currentPixel.y);\r\n\r\n\t\t\t\t// Add pixel position to queue\r\n\t\t\t\tpixArr.push({x: currentPixel.x + 1, y: currentPixel.y})\r\n\t\t\t}\r\n\r\n\t\t\tif (!pixels.isTransparent(currentPixel.x - 1, currentPixel.y + 1)) {\r\n\t\t\t\t// Mark pixel so we dont use it again\r\n\t\t\t\tpixels.makeTransparent(currentPixel.x - 1, currentPixel.y + 1);\r\n\r\n\t\t\t\t// Add pixel position to queue\r\n\t\t\t\tpixArr.push({x: currentPixel.x - 1, y: currentPixel.y + 1})\r\n\t\t\t}\r\n\r\n\t\t\tif (!pixels.isTransparent(currentPixel.x, currentPixel.y + 1)) {\r\n\t\t\t\t// Mark pixel so we dont use it again\r\n\t\t\t\tpixels.makeTransparent(currentPixel.x, currentPixel.y + 1);\r\n\r\n\t\t\t\t// Add pixel position to queue\r\n\t\t\t\tpixArr.push({x: currentPixel.x, y: currentPixel.y + 1})\r\n\t\t\t}\r\n\r\n\t\t\tif (!pixels.isTransparent(currentPixel.x + 1, currentPixel.y + 1)) {\r\n\t\t\t\t// Mark pixel so we dont use it again\r\n\t\t\t\tpixels.makeTransparent(currentPixel.x + 1, currentPixel.y + 1);\r\n\r\n\t\t\t\t// Add pixel position to queue\r\n\t\t\t\tpixArr.push({x: currentPixel.x + 1, y: currentPixel.y + 1})\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn [rect.x, rect.y, rect.width, rect.height];\r\n\t},\r\n\r\n\t/**\r\n\t * Returns the total number of cells in the cell sheet.\r\n\t * @return {Number}\r\n\t */\r\n\tcellCount: function () {\r\n\t\treturn this._cells.length;\r\n\t},\r\n\r\n\t/**\r\n\t * Returns the cell index that the passed cell id corresponds\r\n\t * to.\r\n\t * @param {String} id\r\n\t * @return {Number} The cell index that the cell id corresponds\r\n\t * to or -1 if a corresponding index could not be found.\r\n\t */\r\n\tcellIdToIndex: function (id) {\r\n\t\tvar cells = this._cells,\r\n\t\t\ti;\r\n\t\tfor (i = 1; i < cells.length; i++) {\r\n\t\t\tif (cells[i][4] === id) {\r\n\t\t\t\t// Found the cell id so return the index\r\n\t\t\t\treturn i;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn -1;\r\n\t},\r\n\r\n\t/**\r\n\t * Returns a string containing a code fragment that when\r\n\t * evaluated will reproduce this object.\r\n\t * @return {String}\r\n\t */\r\n\tstringify: function () {\r\n\t\tvar str = \"new \" + this.classId() + \"('\" + this.url() + \"', \" + this._cells.toString() + \")\";\r\n\r\n\t\t// Every object has an ID, assign that first\r\n\t\t// IDs are automatically generated from texture urls\r\n\t\t//str += \".id('\" + this.id() + \"');\";\r\n\r\n\t\treturn str;\r\n\t}\r\n});\r\n\r\nif (typeof(module) !== 'undefined' && typeof(module.exports) !== 'undefined') { module.exports = IgeSpriteSheet; }","/* TODO: URGENT - Make this alignment stuff work inside the bounds of the entity it is attached to\r\n * so that bottom-right aligns to the lower-right point of the bounding box of the entity\r\n * whilst maintaining the current text-alignment as well\r\n* */\r\n\r\n/**\r\n * Creates a new font sheet. A font sheet is an image that contains\r\n * letters and numbers rendered to specifications. It allows you to\r\n * use and render text fonts without the font actually existing on\r\n * the target system that the engine is running in.\r\n */\r\nvar IgeFontSheet = IgeTexture.extend({\r\n\tclassId: 'IgeFontSheet',\r\n\r\n\tinit: function (url) {\r\n\t\tIgeTexture.prototype.init.call(this, url);\r\n\r\n\t\tif (arguments[1]) {\r\n\t\t\tthis.log('Font sheets no longer accept a caching limit value. All font output is now cached by default via the actual font entity - fontEntity.cache(true);', 'warning');\r\n\t\t}\r\n\r\n\t\t// Set the _noDimensions flag which tells any entity\r\n\t\t// that assigns this texture that the texture has an\r\n\t\t// unknown width/height so it should not get it's\r\n\t\t// dimension data from the texture\r\n\t\tthis._noDimensions = true;\r\n\r\n\t\t// Set a listener for when the texture loads\r\n\t\tthis.on('loaded', function () {\r\n\t\t\tif (this.image) {\r\n\t\t\t\t// Store the cell sheet image\r\n\t\t\t\tthis._sheetImage = this.image;\r\n\r\n\t\t\t\t// Get the font sheet data header\r\n\t\t\t\tthis._fontData = this.decodeHeader();\r\n\r\n\t\t\t\t// Cache access to looped data\r\n\t\t\t\tthis._charCodeMap = this._fontData.characters.charCodes;\r\n\t\t\t\tthis._charPosMap = this._fontData.characters.charPosition;\r\n\t\t\t\tthis._measuredWidthMap = this._fontData.characters.measuredWidth;\r\n\t\t\t\tthis._pixelWidthMap = this._fontData.characters.pixelWidth;\r\n\r\n\t\t\t\tif (this._fontData) {\r\n\t\t\t\t\tvar header = this._fontData.font;\r\n\t\t\t\t\tthis.log('Loaded font sheet for font: ' + header.fontName + ' @ ' + header.fontSize + header.fontSizeUnit + ' in ' + header.fontColor);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.log('Could not load data header for font sheet: ' + this.image.src, 'error');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t},\r\n\r\n\tdecodeHeader: function () {\r\n\t\t// Create a temporary canvas\r\n\t\tvar canvas = document.createElement('canvas'),\r\n\t\t\tctx = canvas.getContext('2d');\r\n\r\n\t\t// Set canvas width to match font sheet image and\r\n\t\t// height to 1 as we have 1 line of header data\r\n\t\tcanvas.width = this.image.width;\r\n\t\tcanvas.height = 1;\r\n\r\n\t\t// Draw the font sheet to the canvas\r\n\t\tctx.drawImage(this.image, 0, 0);\r\n\r\n\t\t// Decode the font sheet pixel-encoded data\r\n\t\treturn this._decode(canvas, 0, 0, this.image.width);\r\n\t},\r\n\r\n\t_decode: function (canvas, x, y, maxX) {\r\n\t\t\"use strict\";\r\n\t\tvar ctx = canvas.getContext('2d'),\r\n\t\t\timageData = ctx.getImageData(x, y, maxX, canvas.height).data,\r\n\t\t\trun = true,\r\n\t\t\tquadCode,\r\n\t\t\ti = 0,\r\n\t\t\tjsonString = '';\r\n\r\n\t\twhile (run) {\r\n\t\t\tquadCode = String(imageData[i]) + ' ' + String(imageData[i + 1]) + ' ' + String(imageData[i + 2]);\r\n\t\t\tif (quadCode === '3 2 1') {\r\n\t\t\t\t// We have scanned the terminal code\r\n\t\t\t\t// so exit the loop\r\n\t\t\t\trun = false;\r\n\t\t\t\treturn JSON.parse(jsonString);\r\n\t\t\t} else {\r\n\t\t\t\tjsonString += String.fromCharCode(imageData[i]) + String.fromCharCode(imageData[i + 1]) + String.fromCharCode(imageData[i + 2]);\r\n\t\t\t}\r\n\t\t\ti += 4;\r\n\r\n\t\t\tif (i > imageData.length) {\r\n\t\t\t\trun = false;\r\n\t\t\t\tconsole.log('Image JSON Decode Error!');\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\tlineHeightModifier: function (val) {\r\n\t\tif (typeof(val) !== 'undefined') {\r\n\t\t\tthis._lineHeightModifier = val;\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Returns the width in pixels of the text passed in the\r\n\t * argument.\r\n\t * @param {String} text The text to measure.\r\n\t * @returns {number}\r\n\t */\r\n\tmeasureTextWidth: function (text) {\r\n\t\tif (this._loaded) {\r\n\t\t\tvar characterIndex,\r\n\t\t\t\tcharCodeMap = this._charCodeMap,\r\n\t\t\t\tmeasuredWidthMap = this._measuredWidthMap,\r\n\t\t\t\tcharIndex,\r\n\t\t\t\tlineArr = [],\r\n\t\t\t\tlineIndex,\r\n\t\t\t\tmeasuredWidth,\r\n\t\t\t\tmaxWidth = 0;\r\n\t\t\t\r\n\t\t\t// Handle multi-line text\r\n\t\t\tif (text.indexOf('\\n') > -1) {\r\n\t\t\t\t// Split each line into an array item\r\n\t\t\t\tlineArr = text.split('\\n');\r\n\t\t\t} else {\r\n\t\t\t\t// Store the text as a single line\r\n\t\t\t\tlineArr.push(text);\r\n\t\t\t}\r\n\r\n\t\t\tfor (lineIndex = 0; lineIndex < lineArr.length; lineIndex++) {\r\n\t\t\t\t// Calculate the total width of the line of text\r\n\t\t\t\tmeasuredWidth = 0;\r\n\t\t\t\tfor (characterIndex = 0; characterIndex < lineArr[lineIndex].length; characterIndex++) {\r\n\t\t\t\t\tcharIndex = charCodeMap[lineArr[lineIndex].charCodeAt(characterIndex)];\r\n\t\t\t\t\tmeasuredWidth += measuredWidthMap[charIndex] || 0;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif (measuredWidth > maxWidth) {\r\n\t\t\t\t\tmaxWidth = measuredWidth;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Store the width of this line so we can align it correctly\r\n\t\t\treturn measuredWidth;\r\n\t\t}\r\n\t\t\r\n\t\treturn -1;\r\n\t},\r\n\r\n\trender: function (ctx, entity) {\r\n\t\tif (entity._renderText && this._loaded) {\r\n\t\t\tvar _ctx = ctx,\r\n\t\t\t\ttext = entity._renderText,\r\n\t\t\t\tlineText,\r\n\t\t\t\tlineArr = [],\r\n\t\t\t\tlineIndex,\r\n\t\t\t\tcharacterIndex,\r\n\t\t\t\tcharCodeMap = this._charCodeMap,\r\n\t\t\t\tcharPosMap = this._charPosMap,\r\n\t\t\t\tmeasuredWidthMap = this._measuredWidthMap,\r\n\t\t\t\tpixelWidthMap = this._pixelWidthMap,\r\n\t\t\t\trenderX = 0,\r\n\t\t\t\trenderY = 0,\r\n\t\t\t\trenderStartX = 0,\r\n\t\t\t\trenderStartY = 0,\r\n\t\t\t\tmasterX = 0,\r\n\t\t\t\tmasterY = 0,\r\n\t\t\t\tlineWidth = [],\r\n\t\t\t\tlineHeight = (this._sizeY - 2),\r\n\t\t\t\tsingleLineWidth = 0,\r\n\t\t\t\ttotalWidth = 0,\r\n\t\t\t\ttotalHeight,\r\n\t\t\t\tcharIndex;\r\n\r\n\t\t\t// Handle multi-line text\r\n\t\t\tif (text.indexOf('\\n') > -1) {\r\n\t\t\t\t// Split each line into an array item\r\n\t\t\t\tlineArr = text.split('\\n');\r\n\t\t\t} else {\r\n\t\t\t\t// Store the text as a single line\r\n\t\t\t\tlineArr.push(text);\r\n\t\t\t}\r\n\r\n\t\t\ttotalHeight = (lineHeight * lineArr.length);\r\n\r\n\t\t\t// TODO: Y-based alignment doesn't work at the moment. Fix it!\r\n\t\t\t// Handle text alignment y\r\n\t\t\tswitch (entity._textAlignY) {\r\n\t\t\t\tcase 0: // Align top\r\n\t\t\t\t\trenderStartY = -((lineHeight * (lineArr.length)) / 2) - (entity._textLineSpacing * ((lineArr.length - 1) / 2));//0;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 1: // Align middle\r\n\t\t\t\t\trenderStartY = -((lineHeight * (lineArr.length)) / 2) - (entity._textLineSpacing * ((lineArr.length - 1) / 2));\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 2: // Align bottom\r\n\t\t\t\t\trenderStartY = -((lineHeight * (lineArr.length)) / 2) - (entity._textLineSpacing * ((lineArr.length - 1) / 2));//-((lineHeight) * (lineArr.length)) - (entity._textLineSpacing * (lineArr.length - 1));\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\t// Calculate the total text width of each line\r\n\t\t\tfor (lineIndex = 0; lineIndex < lineArr.length; lineIndex++) {\r\n\t\t\t\tlineText = lineArr[lineIndex];\r\n\t\t\t\tfor (characterIndex = 0; characterIndex < lineText.length; characterIndex++) {\r\n\t\t\t\t\tcharIndex = charCodeMap[lineText.charCodeAt(characterIndex)];\r\n\t\t\t\t\tsingleLineWidth += measuredWidthMap[charIndex] || 0;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Store the width of this line so we can align it correctly\r\n\t\t\t\tlineWidth[lineIndex] = singleLineWidth;\r\n\r\n\t\t\t\tif (singleLineWidth > totalWidth) {\r\n\t\t\t\t\ttotalWidth = singleLineWidth;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsingleLineWidth = 0;\r\n\t\t\t}\r\n\r\n\t\t\t// Handle text cached alignment x\r\n\t\t\tswitch (entity._textAlignX) {\r\n\t\t\t\tcase 0: // Align left\r\n\t\t\t\t\trenderStartX = -entity._bounds2d.x2;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 1: // Align center\r\n\t\t\t\t\trenderStartX = -totalWidth / 2;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 2: // Align right\r\n\t\t\t\t\trenderStartX = entity._bounds2d.x2 -totalWidth;\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\t/*_ctx.strokeStyle = '#ff0000';\r\n\t\t\t_ctx.strokeRect(renderStartX, renderStartY, totalWidth, totalHeight);*/\r\n\r\n\t\t\tfor (lineIndex = 0; lineIndex < lineArr.length; lineIndex++) {\r\n\t\t\t\tlineText = lineArr[lineIndex];\r\n\t\t\t\trenderY = (lineHeight * lineIndex) + (entity._textLineSpacing * (lineIndex));\r\n\r\n\t\t\t\t// Handle text alignment x\r\n\t\t\t\tswitch (entity._textAlignX) {\r\n\t\t\t\t\tcase 0: // Align left\r\n\t\t\t\t\t\trenderX = -entity._bounds2d.x2;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 1: // Align center\r\n\t\t\t\t\t\trenderX = -lineWidth[lineIndex] / 2;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 2: // Align right\r\n\t\t\t\t\t\trenderX = entity._bounds2d.x2 -lineWidth[lineIndex];\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor (characterIndex = 0; characterIndex < lineText.length; characterIndex++) {\r\n\t\t\t\t\tcharIndex = charCodeMap[lineText.charCodeAt(characterIndex)];\r\n\r\n\t\t\t\t\t_ctx.drawImage(\r\n\t\t\t\t\t\tthis.image,\r\n\t\t\t\t\t\tcharPosMap[charIndex], // texture x\r\n\t\t\t\t\t\t2, // texture y\r\n\t\t\t\t\t\tpixelWidthMap[charIndex], // texture width\r\n\t\t\t\t\t\tthis._sizeY - 2, // texture height\r\n\t\t\t\t\t\tMath.floor(masterX + renderX), // render x TODO: Performance - Cache these?\r\n\t\t\t\t\t\tMath.floor(masterY + renderStartY + renderY), // render y\r\n\t\t\t\t\t\tpixelWidthMap[charIndex], // render width\r\n\t\t\t\t\t\t(this._sizeY - 2) // render height\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t\t// Check if we should overlay with a colour\r\n\t\t\t\t\tif (entity._colorOverlay) {\r\n\t\t\t\t\t\t_ctx.save();\r\n\t\t\t\t\t\t// Set the composite operation and draw the colour over the top\r\n\t\t\t\t\t\t_ctx.globalCompositeOperation = 'source-atop';\r\n\r\n\t\t\t\t\t\t_ctx.fillStyle = entity._colorOverlay;\r\n\t\t\t\t\t\t_ctx.fillRect(\r\n\t\t\t\t\t\t\tMath.floor(masterX + renderX), // render x TODO: Performance - Cache these?\r\n\t\t\t\t\t\t\tMath.floor(masterY + renderStartY + renderY), // render y\r\n\t\t\t\t\t\t\tpixelWidthMap[charIndex], // render width\r\n\t\t\t\t\t\t\t(this._sizeY - 2) // render height\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t\t_ctx.restore();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\trenderX += measuredWidthMap[charIndex] || 0;\r\n\r\n\t\t\t\t\tige._drawCount++;\r\n\t\t\t\t}\r\n\r\n\t\t\t\trenderX = 0;\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\tdestroy: function () {\r\n\t\tthis.image = null;\r\n\t\tthis.script = null;\r\n\t}\r\n});\r\n\r\nif (typeof(module) !== 'undefined' && typeof(module.exports) !== 'undefined') { module.exports = IgeFontSheet; }","/**\r\n * Provides native canvas font rendering supporting multi-line\r\n * text and alignment options.\r\n */\r\nvar IgeFontSmartTexture = {\r\n\tmeasureTextWidth: function (text, entity) {\r\n\t\tif (entity._nativeFont) {\r\n\t\t\tvar lineArr = [],\r\n\t\t\t\tlineIndex,\r\n\t\t\t\tmeasuredWidth,\r\n\t\t\t\tmaxWidth = 0,\r\n\t\t\t\tcanvas = document.createElement('canvas'),\r\n\t\t\t\tctx = canvas.getContext('2d');\r\n\t\t\t\r\n\t\t\t// Handle multi-line text\r\n\t\t\tif (text.indexOf('\\n') > -1) {\r\n\t\t\t\t// Split each line into an array item\r\n\t\t\t\tlineArr = text.split('\\n');\r\n\t\t\t} else {\r\n\t\t\t\t// Store the text as a single line\r\n\t\t\t\tlineArr.push(text);\r\n\t\t\t}\r\n\r\n\t\t\tctx.font = entity._nativeFont;\r\n\t\t\tctx.textBaseline = 'middle';\r\n\r\n\t\t\tif (entity._nativeStroke) {\r\n\t\t\t\tctx.lineWidth = entity._nativeStroke;\r\n\r\n\t\t\t\tif (entity._nativeStrokeColor) {\r\n\t\t\t\t\tctx.strokeStyle = entity._nativeStrokeColor;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tctx.strokeStyle = entity._colorOverlay;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tfor (lineIndex = 0; lineIndex < lineArr.length; lineIndex++) {\r\n\t\t\t\t// Measure text\r\n\t\t\t\tmeasuredWidth = ctx.measureText(lineArr[lineIndex]).width;\r\n\t\t\t\t\r\n\t\t\t\tif (measuredWidth > maxWidth) {\r\n\t\t\t\t\tmaxWidth = measuredWidth;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn maxWidth;\r\n\t\t}\r\n\t\t\r\n\t\treturn -1;\r\n\t},\r\n\t\r\n\trender: function (ctx, entity) {\r\n\t\tif (entity._nativeFont && entity._renderText) {\r\n\t\t\tvar text = entity._renderText,\r\n\t\t\t\tlineArr = [],\r\n\t\t\t\ttextSize,\r\n\t\t\t\trenderStartY,\r\n\t\t\t\trenderY,\r\n\t\t\t\tlineHeight,\r\n\t\t\t\ti;\r\n\r\n\t\t\tctx.font = entity._nativeFont;\r\n\r\n\t\t\tif (entity._colorOverlay) {\r\n\t\t\t\tctx.fillStyle = entity._colorOverlay;\r\n\t\t\t}\r\n\r\n\t\t\t// Text alignment\r\n\t\t\tif (entity._textAlignX === 0) {\r\n\t\t\t\tctx.textAlign = 'left';\r\n\t\t\t\tctx.translate(-entity._bounds2d.x2, 0);\r\n\t\t\t}\r\n\r\n\t\t\tif (entity._textAlignX === 1) {\r\n\t\t\t\tctx.textAlign = 'center';\r\n\t\t\t\t//ctx.translate(-entity._bounds2d.x2, 0);\r\n\t\t\t}\r\n\r\n\t\t\tif (entity._textAlignX === 2) {\r\n\t\t\t\tctx.textAlign = 'right';\r\n\t\t\t\tctx.translate(entity._bounds2d.x2, 0);\r\n\t\t\t}\r\n\r\n\t\t\tif (entity._nativeStroke) {\r\n\t\t\t\tctx.lineWidth = entity._nativeStroke;\r\n\r\n\t\t\t\tif (entity._nativeStrokeColor) {\r\n\t\t\t\t\tctx.strokeStyle = entity._nativeStrokeColor;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tctx.strokeStyle = entity._colorOverlay;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Handle multi-line text\r\n\t\t\tif (text.indexOf('\\n') > -1) {\r\n\t\t\t\t// Split each line into an array item\r\n\t\t\t\tlineArr = text.split('\\n');\r\n\t\t\t} else {\r\n\t\t\t\t// Store the text as a single line\r\n\t\t\t\tlineArr.push(text);\r\n\t\t\t}\r\n\r\n\t\t\t// vertical text alignment\r\n\t\t\tif (entity._textAlignY === 0) {\r\n\t\t\t\tctx.textBaseline = 'top';\r\n\t\t\t\trenderStartY = -(entity._bounds2d.y / 2);\r\n\t\t\t}\r\n\t\t\tif (entity._textAlignY === 1) {\r\n\t\t\t\tctx.textBaseline = 'middle';\r\n\t\t\t\trenderStartY = -(entity._textLineSpacing / 2) * (lineArr.length - 1);\r\n\t\t\t}\r\n\t\t\tif (entity._textAlignY === 2) {\r\n\t\t\t\tctx.textBaseline = 'bottom';\r\n\t\t\t\trenderStartY = entity._bounds2d.y / 2 - entity._textLineSpacing * (lineArr.length - 1);\r\n\t\t\t}\r\n\t\t\t// Justified - lines spaced out evenly according to height\r\n\t\t\tif (entity._textAlignY === 3) {\r\n\t\t\t\tctx.textBaseline = 'middle';\r\n\t\t\t\tlineHeight = Math.floor(entity._bounds2d.y / lineArr.length);\r\n\t\t\t\trenderStartY = -((lineHeight + (entity._textLineSpacing)) / 2) * (lineArr.length - 1);\r\n\t\t\t}\r\n\r\n\t\t\tfor (i = 0; i < lineArr.length; i++) {\r\n\t\t\t\tif (entity._textAlignY === 3) {\r\n\t\t\t\t\trenderY = renderStartY + (lineHeight * i) + (entity._textLineSpacing * (i));\r\n\t\t\t\t} else {\r\n\t\t\t\t\trenderY = renderStartY + entity._textLineSpacing * i;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Measure text\r\n\t\t\t\ttextSize = ctx.measureText(lineArr[i]);\r\n\r\n\t\t\t\t// Check if we should stroke the text too\r\n\t\t\t\tif (entity._nativeStroke) {\r\n\t\t\t\t\tctx.strokeText(lineArr[i], 0, renderY);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Draw text\r\n\t\t\t\tctx.fillText(lineArr[i], 0, renderY);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n};","/**\r\n * Creates a new object.\r\n */\r\nvar IgeObject = IgeEventingClass.extend({\r\n\tclassId: 'IgeObject',\r\n\r\n\tinit: function () {\r\n\t\tthis._newBorn = true;\r\n\t\tthis._alive = true;\r\n\t\tthis._mode = 0;\r\n\t\tthis._mountMode = 0;\r\n\t\tthis._parent = null;\r\n\t\tthis._children = [];\r\n\t\tthis._layer = 0;\r\n\t\tthis._depth = 0;\r\n\t\tthis._depthSortMode = 0;\r\n\t\tthis._timeStream = [];\r\n\t\tthis._inView = true;\r\n\t\tthis._managed = 1;\r\n\t\t\r\n\t\tthis._specialProp = [\r\n\t\t\t'_id',\r\n\t\t\t'_parent',\r\n\t\t\t'_children'\r\n\t\t];\r\n\t},\r\n\r\n\t/**\r\n\t * Determines if the object is alive or not. The alive\r\n\t * value is automatically set to false when the object's\r\n\t * destroy() method is called. Useful for checking if\r\n\t * an object that you are holding a reference to has been\r\n\t * destroyed.\r\n\t * @param {Boolean=} val The value to set the alive flag\r\n\t * to.\r\n\t * @example #Get the alive flag value\r\n\t *     var entity = new IgeEntity();\r\n\t *     console.log(entity.alive());\r\n\t * @example #Set the alive flag value\r\n\t *     var entity = new IgeEntity();\r\n\t *     entity.alive(true);\r\n\t * @return {*}\r\n\t */\r\n\talive: function (val) {\r\n\t\tif (val !== undefined) {\r\n\t\t\tthis._alive = val;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\treturn this._alive;\r\n\t},\r\n\r\n\t/**\r\n\t * Gets / set the managed mode from 0 to 2. 0 = off, 1 = static, 2 = dynamic.\r\n\t * \r\n\t * @param {Number=} val Set to 0 to switch off managed mode, 1 to set to static\r\n\t * managed mode or 2 to dynamic managed mode. When in a managed mode and when\r\n\t * the parent of this entity has an entity manager component enabled, the entity\r\n\t * will be checked to see if it is inside the visible area of a viewport. If it\r\n\t * is deemed not to be in a visible area (via it's AABB non-intersection with\r\n\t * viewport view area) then it will either be un-mounted from the parent (mode 1)\r\n\t * or marked as no longer in view (mode 2). Mode 2 in view = false will cause the\r\n\t * entity to no longer be depth-sorted or rendered but will still have it's\r\n\t * update() method called each frame allowing logic processing to occur as normal.\r\n\t * The default managed mode is 1.\r\n\t * @returns {*}\r\n\t */\r\n\tmanaged: function (val) {\r\n\t\tif (val !== undefined) {\r\n\t\t\tthis._managed = val;\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\treturn this._managed;\r\n\t},\r\n\r\n\t/**\r\n\t * Gets / sets the current object id. If no id is currently assigned and no\r\n\t * id is passed to the method, it will automatically generate and assign a\r\n\t * new id as a 16 character hexadecimal value typed as a string.\r\n\t * @param {String=} id\r\n\t * @example #Get the id of an entity\r\n\t *     var entity = new IgeEntity();\r\n\t *     console.log(entity.id());\r\n\t * @example #Set the id of an entity\r\n\t *     var entity = new IgeEntity();\r\n\t *     entity.id('myNewId');\r\n\t * @example #Set the id of an entity via chaining\r\n\t *     var entity = new IgeEntity()\r\n\t *         .id('myNewId');\r\n\t * @return {*} Returns this when setting the value or the current value if none is specified.\r\n\t */\r\n\tid: function (id) {\r\n\t\tif (id !== undefined) {\r\n\t\t\t// Check if we're changing the id\r\n\t\t\tif (id !== this._id) {\r\n\t\t\t\t// Check if this ID already exists in the object register\r\n\t\t\t\tif (ige._register[id]) {\r\n\t\t\t\t\t// Already an object with this ID!\r\n\t\t\t\t\tif (ige._register[id] !== this) {\r\n\t\t\t\t\t\tthis.log('Cannot set ID of object to \"' + id + '\" because that ID is already in use by another object!', 'error');\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// Check if we already have an id assigned\r\n\t\t\t\t\tif (this._id && ige._register[this._id]) {\r\n\t\t\t\t\t\t// Unregister the old ID before setting this new one\r\n\t\t\t\t\t\tige.unRegister(this);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis._id = id;\r\n\r\n\t\t\t\t\t// Now register this object with the object register\r\n\t\t\t\t\tige.register(this);\r\n\r\n\t\t\t\t\treturn this;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\t// The same ID we already have is being applied,\r\n\t\t\t\t// ignore the request and return\r\n\t\t\t\treturn this;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!this._id) {\r\n\t\t\t// The item has no id so generate one automatically\r\n\t\t\tthis._id = ige.newIdHex();\r\n\t\t\tige.register(this);\r\n\t\t}\r\n\r\n\t\treturn this._id;\r\n\t},\r\n\r\n\t/**\r\n\t * Gets / sets the arbitrary category name that the object belongs to.\r\n\t * @param {String=} val\r\n\t * @example #Get the category of an entity\r\n\t *     var entity = new IgeEntity();\r\n\t *     console.log(entity.category());\r\n\t * @example #Set the category of an entity\r\n\t *     var entity = new IgeEntity();\r\n\t *     entity.category('myNewCategory');\r\n\t * @example #Set the category of an entity via chaining\r\n\t *     var entity = new IgeEntity()\r\n\t *         .category('myNewCategory');\r\n\t * @example #Get all the entities belonging to a category\r\n\t *     var entityArray = ige.$$('categoryName');\r\n\t * @example #Remove the category of an entity\r\n\t *     // Set category to some name\r\n\t *     var entity = new IgeEntity()\r\n\t *         .category('myCategory');\r\n\t *         \r\n\t *     // Will output \"myCategory\"\r\n\t *     console.log(entity.category());\r\n\t *     \r\n\t *     // Now remove the category\r\n\t *     entity.category('');\r\n\t *     \r\n\t *     // Will return \"\"\r\n\t *     console.log(entity.category());\r\n\t * @return {*}\r\n\t */\r\n\tcategory: function (val) {\r\n\t\tif (val !== undefined) {\r\n\t\t\t// Check if we already have a category\r\n\t\t\tif (this._category) {\r\n\t\t\t\t// Check if the category being assigned is different from\r\n\t\t\t\t// the current one\r\n\t\t\t\tif (this._category !== val) {\r\n\t\t\t\t\t// The category is different so remove this object\r\n\t\t\t\t\t// from the current category association\r\n\t\t\t\t\tige.categoryUnRegister(this);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis._category = val;\r\n\r\n\t\t\t// Check the category is not a blank string\r\n\t\t\tif (val) {\r\n\t\t\t\t// Now register this object with the category it has been assigned\r\n\t\t\t\tige.categoryRegister(this);\r\n\t\t\t}\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\treturn this._category;\r\n\t},\r\n\r\n\t/**\r\n\t * DEPRECIATED - Use category() instead. A warning method to\r\n\t * help developers move to the new groups system.\r\n\t */\r\n\tgroup: function () {\r\n\t\tthis.log('The group() method has been renamed to category(). Please update your code.', 'error');\r\n\t},\r\n\r\n\t/**\r\n\t * Adds this entity to a group or groups passed as\r\n\t * arguments.\r\n\t * @param {*} groupName A group or array of group names\r\n\t * to add the entity to.\r\n\t * @example #Add entity to a single group\r\n\t *     var entity = new IgeEntity();\r\n\t *     entity.addGroup('g1');\r\n\t * @example #Add entity to multiple groups\r\n\t *     var entity = new IgeEntity();\r\n\t *     entity.addGroup('g1', 'g2', 'g3');\r\n\t * @example #Add entity to multiple groups via an array\r\n\t *     var entity = new IgeEntity();\r\n\t *     entity.addGroup(['g1', 'g2', 'g3']);\r\n\t * @example #Add entity to multiple groups via multiple arrays\r\n\t *     var entity = new IgeEntity();\r\n\t *     entity.addGroup(['g1', 'g2', 'g3'], ['g4', 'g5']);\r\n\t * @return {*}\r\n\t */\r\n\taddGroup: function () {\r\n\t\tvar arrCount = arguments.length,\r\n\t\t\tgroupName,\r\n\t\t\tgroupItemCount;\r\n\r\n\t\twhile (arrCount--) {\r\n\t\t\tgroupName = arguments[arrCount];\r\n\t\t\t\r\n\t\t\t// Check if the argument is an array\r\n\t\t\tif (groupName instanceof Array) {\r\n\t\t\t\tgroupItemCount = groupName.length;\r\n\t\t\t\t\r\n\t\t\t\t// Add each group of the array to the entity\r\n\t\t\t\twhile (groupItemCount--) {\r\n\t\t\t\t\tif (!this._groups || this._groups.indexOf(groupName[groupItemCount]) === -1) {\r\n\t\t\t\t\t\tthis._groups = this._groups || [];\r\n\t\t\t\t\t\tthis._groups.push(groupName[groupItemCount]);\r\n\r\n\t\t\t\t\t\t// Now register this object with the group it has been assigned\r\n\t\t\t\t\t\tige.groupRegister(this, groupName[groupItemCount]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif (!this._groups || this._groups.indexOf(groupName) === -1) {\r\n\t\t\t\t\tthis._groups = this._groups || [];\r\n\t\t\t\t\tthis._groups.push(groupName);\r\n\t\r\n\t\t\t\t\t// Now register this object with the group it has been assigned\r\n\t\t\t\t\tige.groupRegister(this, groupName);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * Checks if the entity is in the group or array of group\r\n\t * names passed.\r\n\t * @param {*} groupName A group name or array of names.\r\n\t * @param {Boolean=} matchAllGroups If set to true, will cause\r\n\t * the method to check if the entity is in ALL the groups,\r\n\t * otherwise the method will check if the entity is in ANY group.\r\n\t * @example #Check if the entity is in a group\r\n\t *     var entity = new IgeEntity();\r\n\t *     entity.addGroup('g1', 'g2');\r\n\t *\t\r\n\t *     // Will output true since entity is part of g1 group\r\n\t *     console.log(entity.inGroup('g1', false);\r\n\t *\t\r\n\t *     // Will output false since entity is not part of g3 group\r\n\t *     console.log(entity.inGroup('g3', false);\r\n\t * @example #Check if the entity is in an array of groups using ANY and ALL options\r\n\t *     var entity = new IgeEntity();\r\n\t *     entity.addGroup('g1', 'g2');\r\n\t *     \r\n\t *     // Will output true since entity is part of g1 group\r\n\t *     console.log(entity.inGroup(['g1, 'g3'], false);\r\n\t *     \r\n\t *     // Will output false since entity is not part of g3 group\r\n\t *     console.log(entity.inGroup(['g1, 'g3'], true);\r\n\t * @return {Boolean}\r\n\t */\r\n\tinGroup: function (groupName, matchAllGroups) {\r\n\t\tif (groupName) {\r\n\t\t\tif (matchAllGroups) {\r\n\t\t\t\treturn this.inAllGroups(groupName);\r\n\t\t\t} else {\r\n\t\t\t\treturn this.inAnyGroup(groupName);\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\treturn false;\r\n\t},\r\n\r\n\t/**\r\n\t * Checks if the entity is in the specified group or\r\n\t * array of groups. If multiple group names are passed,\r\n\t * as an array the method will only return true if the\r\n\t * entity is in ALL the passed groups.\r\n\t * @param {*} groupName The name of the group or array\r\n\t * if group names to check if this entity is a member of.\r\n\t * @example #Check if entity belongs to all of the passed groups\r\n\t *     // Add a couple of groups\r\n\t *     var entity = new IgeEntity();\r\n\t *     entity.addGroup(['g1', 'g2']);\r\n\t *\t\r\n\t *     // This will output \"false\" (entity is not part of g3)\r\n\t *     console.log(entity.inAllGroups(['g1', 'g3']));\r\n\t *\t\r\n\t *     // This will output \"true\"\r\n\t *     console.log(entity.inAllGroups('g1'));\r\n\t *\t\r\n\t *     // This will output \"true\"\r\n\t *     console.log(entity.inAllGroups(['g1', 'g2']));\r\n\t * @return {Boolean}\r\n\t */\r\n\tinAllGroups: function (groupName) {\r\n\t\tvar arrItem, arrCount;\r\n\t\t\r\n\t\tif (groupName instanceof Array) {\r\n\t\t\tarrCount = groupName.length;\r\n\t\t\t\r\n\t\t\twhile (arrCount--) {\r\n\t\t\t\tarrItem = groupName[arrCount];\r\n\t\t\t\r\n\t\t\t\tif (arrItem) {\r\n\t\t\t\t\tif (!this._groups || this._groups.indexOf(arrItem) === -1) {\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\treturn !(!this._groups || this._groups.indexOf(groupName) === -1);\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t},\r\n\r\n\t/**\r\n\t * Checks if the entity is in the specified group or\r\n\t * array of group names. If multiple group names are passed\r\n\t * as an array, the method will return true if the entity\r\n\t * is in ANY of the the passed groups.\r\n\t * @param {*} groupName The name of the group or array of\r\n\t * group names to check if this entity is a member of.\r\n\t * @example #Check if entity belongs to any of the passed groups\r\n\t *     // Add a couple of groups\r\n\t *     var entity = new IgeEntity();\r\n\t *     entity.addGroup('g1', 'g2');\r\n\t *\t\r\n\t *     // This will output \"false\"\r\n\t *     console.log(entity.inAnyGroup('g3'));\r\n\t *\t\r\n\t *     // This will output \"true\"\r\n\t *     console.log(entity.inAnyGroup(['g3', 'g1']));\r\n\t * @return {Boolean}\r\n\t */\r\n\tinAnyGroup: function (groupName) {\r\n\t\tvar arrItem, arrCount;\r\n\r\n\t\tif (groupName instanceof Array) {\r\n\t\t\tarrCount = groupName.length;\r\n\r\n\t\t\twhile (arrCount--) {\r\n\t\t\t\tarrItem = groupName[arrCount];\r\n\r\n\t\t\t\tif (arrItem) {\r\n\t\t\t\t\tif (this._groups && this._groups.indexOf(arrItem) > -1) {\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\treturn (this._groups && this._groups.indexOf(groupName) > -1);\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t},\r\n\r\n\t/**\r\n\t * Gets an array of all groups this entity belongs to.\r\n\t * @example #Get array of groups entity belongs to\r\n\t *     var entity = new IgeEntity();\r\n\t *     entity.addGroup('g1', 'g2');\r\n\t *\t\r\n\t *     // This will output \"['g1', 'g2']\"\r\n\t *     console.log(entity.groups());\r\n\t * @return {*}\r\n\t */\r\n\tgroups: function () {\r\n\t\treturn this._groups || [];\r\n\t},\r\n\r\n\t/**\r\n\t * Gets the number of groups this entity belongs to.\r\n\t * @example #Get number of groups entity belongs to\r\n\t *     var entity = new IgeEntity();\r\n\t *     entity.addGroup('g1', 'g2');\r\n\t *\t\r\n\t *     // This will output \"2\"\r\n\t *     console.log(entity.groupCount());\r\n\t * @return {Number}\r\n\t */\r\n\tgroupCount: function () {\r\n\t\treturn this._groups ? this._groups.length : 0;\r\n\t},\r\n\r\n\t/**\r\n\t * Removes the entity from the group or groups passed. This\r\n\t * method accepts multiple arguments and will remove the entity\r\n\t * from all groups passed as arguments.\r\n\t * @param {*} groupName The name of the group or array of group\r\n\t * names to remove this entity as a member of.\r\n\t * @example #Remove entity from single group\r\n\t *     var entity = new IgeEntity();\r\n\t *     entity.addGroup('g1', 'g2');\r\n\t *\t\r\n\t *     // This will output \"['g1', 'g2']\"\r\n\t *     console.log(entity.groups());\r\n\t *\t\r\n\t *     // Remove entity from a single group\r\n\t *     entity.removeGroup('g1');\r\n\t *\t\r\n\t *     // This will output \"['g2']\"\r\n\t *     console.log(entity.groups());\r\n\t * @example #Remove entity from multiple groups\r\n\t *     var entity = new IgeEntity();\r\n\t *     entity.addGroup('g1', 'g3', 'g2');\r\n\t *\t\r\n\t *     // This will output \"['g1', 'g3', 'g2']\"\r\n\t *     console.log(entity.groups());\r\n\t *\t\r\n\t *     // Remove entity from multiple groups\r\n\t *     entity.removeGroup('g1', 'g3');\r\n\t *\t\r\n\t *     // This will output \"['g2']\"\r\n\t *     console.log(entity.groups());\r\n\t * @example #Remove entity from multiple groups via an array\r\n\t *     var entity = new IgeEntity();\r\n\t *     entity.addGroup('g1', 'g3', 'g2');\r\n\t *\t\r\n\t *     // This will output \"['g1', 'g3', 'g2']\"\r\n\t *     console.log(entity.groups());\r\n\t *\t\r\n\t *     // Remove entity from multiple groups\r\n\t *     entity.removeGroup(['g1', 'g3']);\r\n\t *\t\r\n\t *     // This will output \"['g2']\"\r\n\t *     console.log(entity.groups());\r\n\t * @example #Remove entity from multiple groups via multiple arrays\r\n\t *     var entity = new IgeEntity();\r\n\t *     entity.addGroup('g1', 'g2', 'g3', 'g4', 'g5', 'g6', 'g7');\r\n\t *\t\r\n\t *     // This will output \"['g1', 'g2', 'g3', 'g4', 'g5', 'g6', 'g7']\"\r\n\t *     console.log(entity.groups());\r\n\t *\t\r\n\t *     // Remove entity from multiple groups\r\n\t *     entity.removeGroup(['g1', 'g3'], ['g5', 'g6', 'g7']);\r\n\t *\t\r\n\t *     // This will output \"['g2', 'g4']\"\r\n\t *     console.log(entity.groups());\r\n\t * @return {*}\r\n\t */\r\n\tremoveGroup: function () {\r\n\t\tif (this._groups) {\r\n\t\t\tvar arrCount = arguments.length,\r\n\t\t\t\tgroupName,\r\n\t\t\t\tgroupNameCount;\r\n\r\n\t\t\twhile (arrCount--) {\r\n\t\t\t\tgroupName = arguments[arrCount];\r\n\t\t\t\t\r\n\t\t\t\tif (groupName instanceof Array) {\r\n\t\t\t\t\tgroupNameCount = groupName.length;\r\n\t\t\t\t\t\r\n\t\t\t\t\twhile (groupNameCount--) {\r\n\t\t\t\t\t\tthis._groups.pull(groupName[groupNameCount]);\r\n\r\n\t\t\t\t\t\t// Now un-register this object with the group it has been assigned\r\n\t\t\t\t\t\tige.groupUnRegister(this, groupName[groupNameCount]);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._groups.pull(groupName);\r\n\t\r\n\t\t\t\t\t// Now un-register this object with the group it has been assigned\r\n\t\t\t\t\tige.groupUnRegister(this, groupName);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * Removes the entity from all groups it is a member of.\r\n\t * @example #Remove entity from all groups\r\n\t *     var entity = new IgeEntity();\r\n\t *     entity.addGroup('g1', 'g3', 'g2');\r\n\t *\t\r\n\t *     // This will output \"['g1', 'g3', 'g2']\"\r\n\t *     console.log(entity.groups());\r\n\t *\t\r\n\t *     // Remove all the groups\r\n\t *     entity.removeAllGroups();\r\n\t *\t\r\n\t *     // This will output \"[]\"\r\n\t *     console.log(entity.groups());\r\n\t * @return {*}\r\n\t */\r\n\tremoveAllGroups: function () {\r\n\t\tif (this._groups) {\r\n\t\t\t// Loop through all groups and un-register one at a time\r\n\t\t\tvar arr = this._groups,\r\n\t\t\t\tarrCount = arr.length;\r\n\r\n\t\t\twhile (arrCount--) {\r\n\t\t\t\tige.groupUnRegister(this, arr[arrCount]);\r\n\t\t\t}\r\n\r\n\t\t\tdelete this._groups;\r\n\t\t}\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * Adds a behaviour to the object's active behaviour list.\r\n\t * @param {String} id\r\n\t * @param {Function} behaviour\r\n\t * @param {Boolean=} duringTick If true, will execute the behaviour\r\n\t * during the tick() method instead of the update() method.\r\n\t * @example #Add a behaviour with the id \"myBehaviour\"\r\n\t *     var entity = new IgeEntity();\r\n\t *     entity.addBehaviour('myBehaviour', function () {\r\n\t *         // Code here will execute during each engine update for\r\n\t *         // this entity. I can access the entity via the \"this\"\r\n\t *         // keyword such as:\r\n\t *         this._somePropertyOfTheEntity = 'moo';\r\n\t *     });\r\n\t *     \r\n\t *     // Now since each update we are setting _somePropertyOfTheEntity\r\n\t *     // to equal \"moo\" we can console log the property and get\r\n\t *     // the value as \"moo\"\r\n\t *     console.log(entity._somePropertyOfTheEntity);\r\n\t * @return {*} Returns this on success or false on failure.\r\n\t */\r\n\taddBehaviour: function (id, behaviour, duringTick) {\r\n\t\tif (typeof(id) === 'string') {\r\n\t\t\tif (typeof(behaviour) === 'function') {\r\n\t\t\t\tif (duringTick) {\r\n\t\t\t\t\tthis._tickBehaviours = this._tickBehaviours || [];\r\n\t\t\t\t\tthis._tickBehaviours.push({\r\n\t\t\t\t\t\tid:id,\r\n\t\t\t\t\t\tmethod: behaviour\r\n\t\t\t\t\t});\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._updateBehaviours = this._updateBehaviours || [];\r\n\t\t\t\t\tthis._updateBehaviours.push({\r\n\t\t\t\t\t\tid:id,\r\n\t\t\t\t\t\tmethod: behaviour\r\n\t\t\t\t\t});\t\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn this;\r\n\t\t\t} else {\r\n\t\t\t\tthis.log('The behaviour you passed is not a function! The second parameter of the call must be a function!', 'error');\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthis.log('Cannot add behaviour to object because the specified behaviour id is not a string. You must provide two parameters with the addBehaviour() call, an id:String and a behaviour:Function. Adding a behaviour with an id allows you to remove it by it\\'s id at a later stage!', 'error');\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t},\r\n\r\n\t/**\r\n\t * Removes a behaviour to the object's active behaviour list by it's id.\r\n\t * @param {String} id\r\n\t * @param {Boolean=} duringTick If true will look to remove the behaviour\r\n\t * from the tick method rather than the update method.\r\n\t * @example #Remove a behaviour with the id \"myBehaviour\"\r\n\t *     var entity = new IgeEntity();\r\n\t *     entity.addBehaviour('myBehaviour', function () {\r\n\t *         // Code here will execute during each engine update for\r\n\t *         // this entity. I can access the entity via the \"this\"\r\n\t *         // keyword such as:\r\n\t *         this._somePropertyOfTheEntity = 'moo';\r\n\t *     });\r\n\t *     \r\n\t *     // Now remove the \"myBehaviour\" behaviour\r\n\t *     entity.removeBehaviour('myBehaviour');\r\n\t * @return {*} Returns this on success or false on failure.\r\n\t */\r\n\tremoveBehaviour: function (id, duringTick) {\r\n\t\tif (id !== undefined) {\r\n\t\t\tvar arr,\r\n\t\t\t\tarrCount;\r\n\t\t\t\r\n\t\t\tif (duringTick) {\r\n\t\t\t\tarr = this._tickBehaviours;\r\n\t\t\t} else {\r\n\t\t\t\tarr = this._updateBehaviours;\r\n\t\t\t}\r\n\r\n\t\t\t// Find the behaviour\r\n\t\t\tif (arr) {\r\n\t\t\t\tarrCount = arr.length;\r\n\r\n\t\t\t\twhile (arrCount--) {\r\n\t\t\t\t\tif (arr[arrCount].id === id) {\r\n\t\t\t\t\t\t// Remove the item from the array\r\n\t\t\t\t\t\tarr.splice(arrCount, 1);\r\n\t\t\t\t\t\treturn this;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t},\r\n\r\n\t/**\r\n\t * Checks if the object has the specified behaviour already added to it.\r\n\t * @param {String} id\r\n\t * @param {Boolean=} duringTick If true will look to remove the behaviour\r\n\t * from the tick method rather than the update method.\r\n\t * @example #Check for a behaviour with the id \"myBehaviour\"\r\n\t *     var entity = new IgeEntity();\r\n\t *     entity.addBehaviour('myBehaviour', function () {\r\n\t *         // Code here will execute during each engine update for\r\n\t *         // this entity. I can access the entity via the \"this\"\r\n\t *         // keyword such as:\r\n\t *         this._somePropertyOfTheEntity = 'moo';\r\n\t *     });\r\n\t *     \r\n\t *     // Now check for the \"myBehaviour\" behaviour\r\n\t *     console.log(entity.hasBehaviour('myBehaviour')); // Will log \"true\"\r\n\t * @return {*} Returns this on success or false on failure.\r\n\t */\r\n\thasBehaviour: function (id, duringTick) {\r\n\t\tif (id !== undefined) {\r\n\t\t\tvar arr,\r\n\t\t\t\tarrCount;\r\n\t\t\t\r\n\t\t\tif (duringTick) {\r\n\t\t\t\tarr = this._tickBehaviours;\r\n\t\t\t} else {\r\n\t\t\t\tarr = this._updateBehaviours;\r\n\t\t\t}\r\n\r\n\t\t\t// Find the behaviour\r\n\t\t\tif (arr) {\r\n\t\t\t\tarrCount = arr.length;\r\n\r\n\t\t\t\twhile (arrCount--) {\r\n\t\t\t\t\tif (arr[arrCount].id === id) {\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t},\r\n\t\r\n\t/**\r\n\t * Gets / sets the boolean flag determining if this object should have\r\n\t * it's bounds drawn when the bounds for all objects are being drawn.\r\n\t * In order for bounds to be drawn the viewport the object is being drawn\r\n\t * to must also have draw bounds enabled.\r\n\t * @param {Boolean} val\r\n\t * @example #Enable draw bounds\r\n\t *     var entity = new IgeEntity();\r\n\t *     entity.drawBounds(true);\r\n\t * @example #Disable draw bounds\r\n\t *     var entity = new IgeEntity();\r\n\t *     entity.drawBounds(false);\r\n\t * @example #Get the current flag value\r\n\t *     console.log(entity.drawBounds());\r\n\t * @return {*}\r\n\t */\r\n\tdrawBounds: function (val) {\r\n\t\tif (val !== undefined) {\r\n\t\t\tthis._drawBounds = val;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\treturn this._drawBounds;\r\n\t},\r\n\r\n\t/**\r\n\t * Gets / sets the boolean flag determining if this object should have\r\n\t * it's bounds data drawn when the bounds for all objects are being drawn.\r\n\t * Bounds data includes the object ID and it's current depth etc.\r\n\t * @param {Boolean} val\r\n\t * @example #Enable draw bounds data\r\n\t *     var entity = new IgeEntity();\r\n\t *     entity.drawBoundsData(true);\r\n\t * @example #Disable draw bounds data\r\n\t *     var entity = new IgeEntity();\r\n\t *     entity.drawBoundsData(false);\r\n\t * @example #Get the current flag value\r\n\t *     console.log(entity.drawBoundsData());\r\n\t * @return {*}\r\n\t */\r\n\tdrawBoundsData: function (val) {\r\n\t\tif (val !== undefined) {\r\n\t\t\tthis._drawBoundsData = val;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\treturn this._drawBoundsData;\r\n\t},\r\n\r\n\t/**\r\n\t * Gets / sets the boolean flag determining if this object should have\r\n\t * it's mouse position drawn, usually for debug purposes.\r\n\t * @param {Boolean=} val\r\n\t * @example #Enable draw mouse position data\r\n\t *     var entity = new IgeEntity();\r\n\t *     entity.drawMouse(true);\r\n\t * @example #Disable draw mouse position data\r\n\t *     var entity = new IgeEntity();\r\n\t *     entity.drawMouse(false);\r\n\t * @example #Get the current flag value\r\n\t *     console.log(entity.drawMouse());\r\n\t * @return {*}\r\n\t */\r\n\tdrawMouse: function (val) {\r\n\t\tif (val !== undefined) {\r\n\t\t\tthis._drawMouse = val;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\treturn this._drawMouse;\r\n\t},\r\n\t\r\n\t/**\r\n\t * Gets / sets the boolean flag determining if this object should have\r\n\t * it's extra mouse data drawn for debug purposes. For instance, on tilemaps\r\n\t * (IgeTileMap2d) instances, when enabled you will see the tile x and y\r\n\t * co-ordinates currently being hoverered over by the mouse.\r\n\t * @param {Boolean=} val\r\n\t * @example #Enable draw mouse data\r\n\t *     var entity = new IgeEntity();\r\n\t *     entity.drawMouseData(true);\r\n\t * @example #Disable draw mouse data\r\n\t *     var entity = new IgeEntity();\r\n\t *     entity.drawMouseData(false);\r\n\t * @example #Get the current flag value\r\n\t *     console.log(entity.drawMouseData());\r\n\t * @return {*}\r\n\t */\r\n\tdrawMouseData: function (val) {\r\n\t\tif (val !== undefined) {\r\n\t\t\tthis._drawMouseData = val;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\treturn this._drawMouseData;\r\n\t},\r\n\r\n\t/**\r\n\t * Finds a child entity that matches the id mounted to this\r\n\t * or any other child entity down the scenegraph chain. Will\r\n\t * only return an object if the entity found has this entity\r\n\t * as an ancestor (parent or parent of parent etc).\r\n\t * @param {String} id The id of the entity to find.\r\n\t * @returns {*} The entity or undefined.\r\n\t */\r\n\t$: function (id) {\r\n\t\tvar obj = ige.$(id);\r\n\t\t\r\n\t\tif (obj._parent === this) {\r\n\t\t\t// We found a child and it's parent is this object so return it\r\n\t\t\treturn obj;\r\n\t\t} else {\r\n\t\t\t// Scan up the object's parent chain to see if this object is\r\n\t\t\t// an ancestor at some point\r\n\t\t\tvar ancestor = obj.parent(this.id());\r\n\t\t\t\r\n\t\t\tif (ancestor) {\r\n\t\t\t\treturn obj;\r\n\t\t\t} else {\r\n\t\t\t\treturn undefined;\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Finds all child entities of this or any child of this entity\r\n\t * down the scenegraph who's category matches the category name\r\n\t * passed.\r\n\t * @param {String} categoryName The category name to scan for.\r\n\t * @returns {Array}\r\n\t */\r\n\t$$: function (categoryName) {\r\n\t\tvar objArr = ige.$$(categoryName),\r\n\t\t\tarrCount = objArr.length,\r\n\t\t\tobj,\r\n\t\t\tfinalArr = [],\r\n\t\t\tthisId = this.id();\r\n\t\t\t\r\n\t\t// Scan all objects that have the specified category\r\n\t\t// and see if we are it's parent or an ancestor\r\n\t\twhile (arrCount--) {\r\n\t\t\tobj = objArr[arrCount];\r\n\t\t\tif (obj._parent === this || obj.parent(thisId)) {\r\n\t\t\t\tfinalArr.push(obj);\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\treturn finalArr;\r\n\t},\r\n\r\n\t/**\r\n\t * Returns the object's parent object (the object that\r\n\t * it is mounted to).\r\n\t * @param {String=} id Optional, if present will scan up\r\n\t * the parent chain until a parent with the matching id is\r\n\t * found. If none is found, returns undefined.\r\n\t * @example #Get the object parent\r\n\t *     // Create a couple of entities and give them ids\r\n\t *     var entity1 = new IgeEntity().id('entity1'),\r\n\t *         entity2 = new IgeEntity().id('entity2');\r\n\t *     \r\n\t *     // Mount entity2 to entity1\r\n\t *     entity2.mount(entity1);\r\n\t *     \r\n\t *     // Get the parent of entity2 (which is entity1)\r\n\t *     var parent = entity2.parent();\r\n\t *     \r\n\t *     // Log the parent's id (will output \"entity1\")\r\n\t *     console.log(parent.id());\r\n\t * @return {*}\r\n\t */\r\n\tparent: function (id) {\r\n\t\tif (!id) {\r\n\t\t\treturn this._parent;\r\n\t\t}\r\n\t\t\r\n\t\tif (this._parent) {\r\n\t\t\tif (this._parent.id() === id) {\r\n\t\t\t\treturn this._parent;\r\n\t\t\t} else {\r\n\t\t\t\treturn this._parent.parent(id);\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\treturn undefined;\r\n\t},\r\n\r\n\t/**\r\n\t * Returns the object's children as an array of objects.\r\n\t * @example #Get the child objects array\r\n\t *     // Create a couple of entities and give them ids\r\n\t *     var entity1 = new IgeEntity().id('entity1'),\r\n\t *         entity2 = new IgeEntity().id('entity2');\r\n\t *\t\r\n\t *     // Mount entity2 to entity1\r\n\t *     entity2.mount(entity1);\r\n\t *\t\r\n\t *     // Get the chilren array entity1\r\n\t *     var childArray = entity1.children();\r\n\t *\t\r\n\t *     // Log the child array contents (will contain entity2)\r\n\t *     console.log(childArray);\r\n\t * @return {Array} The array of child objects.\r\n\t */\r\n\tchildren: function () {\r\n\t\treturn this._children;\r\n\t},\r\n\r\n\t/**\r\n\t * Mounts this object to the passed object in the scenegraph.\r\n\t * @param {IgeObject} obj\r\n\t * @example #Mount an entity to another entity\r\n\t *     // Create a couple of entities and give them ids\r\n\t *     var entity1 = new IgeEntity().id('entity1'),\r\n\t *         entity2 = new IgeEntity().id('entity2');\r\n\t *\t\r\n\t *     // Mount entity2 to entity1\r\n\t *     entity2.mount(entity1);\r\n\t * @return {*} Returns this on success or false on failure.\r\n\t */\r\n\tmount: function (obj) {\r\n\t\tif (obj) {\r\n\t\t\tif (obj === this) {\r\n\t\t\t\tthis.log('Cannot mount an object to itself!', 'error');\r\n\t\t\t\treturn this;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (obj._children) {\r\n\t\t\t\t// Check that the engine will allow us to register this object\r\n\t\t\t\tthis.id(); // Generates a new id if none is currently set, and registers it on the object register!\r\n\r\n\t\t\t\tif (this._parent) {\r\n\t\t\t\t\tif (this._parent === obj) {\r\n\t\t\t\t\t\t// We are already mounted to the parent!\r\n\t\t\t\t\t\treturn this;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// We are already mounted to a different parent\r\n\t\t\t\t\t\tthis.unMount();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._parent = obj;\r\n\t\t\t\t\r\n\t\t\t\t// Check if we need to set the ignore camera flag\r\n\t\t\t\tif (!this._ignoreCamera && this._parent._ignoreCamera) {\r\n\t\t\t\t\tthis._ignoreCamera = this._parent._ignoreCamera;\r\n\t\t\t\t\t\r\n\t\t\t\t\t/*if (this.ignoreCameraComposite) {\r\n\t\t\t\t\t\tthis.ignoreCameraComposite(this._parent._ignoreCamera);\r\n\t\t\t\t\t}*/\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t// Make sure we keep the child's room id in sync with it's parent\r\n\t\t\t\tif (this._parent._streamRoomId) {\r\n\t\t\t\t\tthis._streamRoomId = this._parent._streamRoomId;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tobj._children.push(this);\r\n\t\t\t\tthis._parent._childMounted(this);\r\n\r\n\t\t\t\tif (obj.updateTransform) {\r\n\t\t\t\t\tobj.updateTransform();\r\n\t\t\t\t\tobj.aabb(true);\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif (obj._compositeCache) {\r\n\t\t\t\t\tthis._compositeParent = true;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tdelete this._compositeParent;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tthis._mounted(this._parent);\r\n\r\n\t\t\t\tthis.emit('mounted', this._parent);\r\n\r\n\t\t\t\treturn this;\r\n\t\t\t} else {\r\n\t\t\t\t// The object has no _children array!\r\n\t\t\t\tthis.log('Cannot mount object because it has no _children array! If you are mounting to a custom class, ensure that you have called the prototype.init() method of your super-class during the init of your custom class.', 'warning');\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthis.log('Cannot mount non-existent object!', 'error');\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Unmounts this object from it's parent object in the scenegraph.\r\n\t * @example #Unmount an entity from another entity\r\n\t *     // Create a couple of entities and give them ids\r\n\t *     var entity1 = new IgeEntity().id('entity1'),\r\n\t *         entity2 = new IgeEntity().id('entity2');\r\n\t *\t\r\n\t *     // Mount entity2 to entity1\r\n\t *     entity2.mount(entity1);\r\n\t *     \r\n\t *     // Now unmount entity2 from entity1\r\n\t *     entity2.unMount();\r\n\t * @return {*} Returns this on success or false on failure.\r\n\t */\r\n\tunMount: function () {\r\n\t\tif (this._parent) {\r\n\t\t\tvar childArr = this._parent._children,\r\n\t\t\t\tindex = childArr.indexOf(this),\r\n\t\t\t\toldParent = this._parent;\r\n\r\n\t\t\tif (index > -1) {\r\n\t\t\t\t// Found this in the parent._children array so remove it\r\n\t\t\t\tchildArr.splice(index, 1);\r\n\r\n\t\t\t\tthis._parent._childUnMounted(this);\r\n\t\t\t\tthis._parent = null;\r\n\t\t\t\t\r\n\t\t\t\tthis._unMounted(oldParent);\r\n\r\n\t\t\t\treturn this;\r\n\t\t\t} else {\r\n\t\t\t\t// Cannot find this in the parent._children array\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t},\r\n\t\r\n\t/**\r\n\t * Determines if the object has a parent up the scenegraph whose\r\n\t * id matches the one passed. Will traverse each parent object\r\n\t * checking if the id matches. This information will be cached when\r\n\t * first called and can be refreshed by setting the \"fresh\" parameter\r\n\t * to true.\r\n\t * @param {String} parentId The id of the parent to check for.\r\n\t * @param {Boolean=} fresh If true will force a full check instead of\r\n\t * using the cached value from an earlier check.\r\n\t */\r\n\thasParent: function (parentId, fresh) {\r\n\t\tvar bool = false;\r\n\t\t\r\n\t\t// Check for a cached value\r\n\t\tif (!fresh && this._hasParent && this._hasParent[parentId] !== undefined) {\r\n\t\t\treturn this._hasParent[parentId];\r\n\t\t}\r\n\t\t\r\n\t\tif (this._parent) {\r\n\t\t\tif (this._parent.id() === parentId) {\r\n\t\t\t\tbool = true;\r\n\t\t\t} else {\r\n\t\t\t\tbool = this._parent.hasParent(parentId, fresh);\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tthis._hasParent = this._hasParent || {};\r\n\t\tthis._hasParent[parentId] = bool;\r\n\t\t\r\n\t\treturn bool;\r\n\t},\r\n\r\n\t/**\r\n\t * Clones the object and all it's children and returns a new object.\r\n\t */\r\n\tclone: function (options) {\r\n\t\t// Make sure we have an options object\r\n\t\tif (options === undefined) { options = {}; }\r\n\t\t\r\n\t\t// Set some default option values\r\n\t\tif (options.id === undefined) { options.id = false; }\r\n\t\tif (options.mount === undefined) { options.mount = false; }\r\n\t\tif (options.transform === undefined) { options.transform = true; }\r\n\t\t\r\n\t\t// Loop all children and clone them, then return cloned version of ourselves\r\n\t\tvar newObject = eval(this.stringify(options));\r\n\t\t\r\n\t\treturn newObject;\r\n\t},\r\n\r\n\t/**\r\n\t * Gets / sets the positioning mode of the entity.\r\n\t * @param {Number=} val 0 = 2d, 1 = isometric\r\n\t * @example #Set the positioning mode to 2d\r\n\t *     var entity = new IgeEntity()\r\n\t *         .mode(0);\r\n\t * @example #Set the positioning mode to isometric\r\n\t *     var entity = new IgeEntity()\r\n\t *         .mode(1);\r\n\t * @return {*}\r\n\t */\r\n\tmode: function (val) {\r\n\t\tif (val !== undefined) {\r\n\t\t\tthis._mode = val;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\treturn this._mode;\r\n\t},\r\n\r\n\t/**\r\n\t * Gets / sets if this object should be positioned isometrically\r\n\t * or in 2d.\r\n\t * @param {Boolean} val Set to true to position this object in\r\n\t * isometric space or false to position it in 2d space.\r\n\t * @example #Set the positioning mode to isometric\r\n\t *     var entity = new IgeEntity()\r\n\t *         .isometric(true);\r\n\t * @example #Set the positioning mode to 2d\r\n\t *     var entity = new IgeEntity()\r\n\t *         .isometric(false);\r\n\t * @return {*}\r\n\t */\r\n\tisometric: function (val) {\r\n\t\tif (val === true) {\r\n\t\t\tthis._mode = 1;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tif (val === false) {\r\n\t\t\tthis._mode = 0;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\treturn this._mode === 1;\r\n\t},\r\n\r\n\t/**\r\n\t * Gets / sets if objects mounted to this object should be positioned\r\n\t * and depth-sorted in an isometric fashion or a 2d fashion.\r\n\t * @param {Boolean=} val Set to true to enabled isometric positioning\r\n\t * and depth sorting of objects mounted to this object, or false to\r\n\t * enable 2d positioning and depth-sorting of objects mounted to this\r\n\t * object.\r\n\t * @example #Set children to be positioned and depth sorted in 2d\r\n\t *     var entity = new IgeEntity()\r\n\t *         .isometricMounts(false);\r\n\t * @example #Set children to be positioned and depth sorted in isometric\r\n\t *     var entity = new IgeEntity()\r\n\t *         .isometricMounts(true);\r\n\t * @return {*}\r\n\t */\r\n\tisometricMounts: function (val) {\r\n\t\tif (val === true) {\r\n\t\t\tthis._mountMode = 1;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tif (val === false) {\r\n\t\t\tthis._mountMode = 0;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\treturn this._mountMode === 1;\r\n\t},\r\n\r\n\t/**\r\n\t * Gets / sets the indestructible flag. If set to true, the object will\r\n\t * not be destroyed even if a call to the destroy() method is made.\r\n\t * @param {Number=} val\r\n\t * @example #Set an entity to indestructible\r\n\t *     var entity = new IgeEntity()\r\n\t *         .indestructible(true);\r\n\t * @example #Set an entity to destructible\r\n\t *     var entity = new IgeEntity()\r\n\t *         .indestructible(false);\r\n\t * @example #Get an entity's indestructible flag value\r\n\t *     var entity = new IgeEntity()\r\n\t *     console.log(entity.indestructible());\r\n\t * @return {*} Returns this when setting the value or the current value if none is specified.\r\n\t */\r\n\tindestructible: function (val) {\r\n\t\tif (typeof(val) !== 'undefined') {\r\n\t\t\tthis._indestructible = val;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\treturn this._indestructible;\r\n\t},\r\n\r\n\t/**\r\n\t * Gets / sets the current entity layer. This affects how the entity is depth-sorted\r\n\t * against other entities of the same parent. Please note that entities are first sorted\r\n\t * by their layer and then by their depth, and only entities of the same layer will be\r\n\t * sorted against each other by their depth values.\r\n\t * @param {Number=} val\r\n\t * @example #Set an entity's layer to 22\r\n\t *     var entity = new IgeEntity()\r\n\t *         .layer(22);\r\n\t * @example #Get an entity's layer value\r\n\t *     var entity = new IgeEntity()\r\n\t *     console.log(entity.layer());\r\n\t * @example #How layers and depths are handled together\r\n\t *     var entity1 = new IgeEntity(),\r\n\t *         entity2 = new IgeEntity(),\r\n\t *         entity3 = new IgeEntity();\r\n\t *         \r\n\t *     // Set entity1 to at layer zero and depth 100\r\n\t *     entity1.layer(0)\r\n\t *         .depth(100);\r\n\t *     \r\n\t *     // Set entity2 and 3 to be at layer 1\r\n\t *     entity2.layer(1);\r\n\t *     entity3.layer(1);\r\n\t *\t\r\n\t *     // Set entity3 to have a higher depth than entity2\r\n\t *     entity2.depth(0);\r\n\t *     entity3.depth(1);\r\n\t *     \r\n\t *     // The engine sorts first based on layer from lowest to highest\r\n\t *     // and then within each layer, by depth from lowest to highest.\r\n\t *     // This means that entity1 will be drawn before entity 2 and 3\r\n\t *     // because even though it's depth is higher, it is not on the same\r\n\t *     // layer as entity 2 and 3.\r\n\t *     \r\n\t *     // Based on the layers and depths we have assigned, here\r\n\t *     // is how the engine will sort the draw order of the entities\r\n\t *     // entity1\r\n\t *     // entity2\r\n\t *     // entity3\r\n\t * @return {*} Returns this when setting the value or the current value if none is specified.\r\n\t */\r\n\tlayer: function (val) {\r\n\t\tif (val !== undefined) {\r\n\t\t\tthis._layer = val;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\treturn this._layer;\r\n\t},\r\n\r\n\t/**\r\n\t * Gets / sets the current render depth of the object (higher depths\r\n\t * are drawn over lower depths). Please note that entities are first sorted\r\n\t * by their layer and then by their depth, and only entities of the same layer will be\r\n\t * sorted against each other by their depth values.\r\n\t * @param {Number=} val\r\n\t * @example #Set an entity's depth to 1\r\n\t *     var entity = new IgeEntity()\r\n\t *         .depth(1);\r\n\t * @example #Get an entity's depth value\r\n\t *     var entity = new IgeEntity()\r\n\t *     console.log(entity.depth());\r\n\t * @example #How layers and depths are handled together\r\n\t *     var entity1 = new IgeEntity(),\r\n\t *         entity2 = new IgeEntity(),\r\n\t *         entity3 = new IgeEntity();\r\n\t *\r\n\t *     // Set entity1 to at layer zero and depth 100\r\n\t *     entity1.layer(0)\r\n\t *         .depth(100);\r\n\t *\r\n\t *     // Set entity2 and 3 to be at layer 1\r\n\t *     entity2.layer(1);\r\n\t *     entity3.layer(1);\r\n\t *\r\n\t *     // Set entity3 to have a higher depth than entity2\r\n\t *     entity2.depth(0);\r\n\t *     entity3.depth(1);\r\n\t *\r\n\t *     // The engine sorts first based on layer from lowest to highest\r\n\t *     // and then within each layer, by depth from lowest to highest.\r\n\t *     // This means that entity1 will be drawn before entity 2 and 3\r\n\t *     // because even though it's depth is higher, it is not on the same\r\n\t *     // layer as entity 2 and 3.\r\n\t *\r\n\t *     // Based on the layers and depths we have assigned, here\r\n\t *     // is how the engine will sort the draw order of the entities\r\n\t *     // entity1\r\n\t *     // entity2\r\n\t *     // entity3\r\n\t * @return {*} Returns this when setting the value or the current value if none is specified.\r\n\t */\r\n\tdepth: function (val) {\r\n\t\tif (val !== undefined) {\r\n\t\t\tthis._depth = val;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\treturn this._depth;\r\n\t},\r\n\r\n\t/**\r\n\t * Loops through all child objects of this object and destroys them\r\n\t * by calling each child's destroy() method then clears the object's\r\n\t * internal _children array.\r\n\t */\r\n\tdestroyChildren: function () {\r\n\t\tvar arr = this._children,\r\n\t\t\tarrCount;\r\n\r\n\t\tif (arr) {\r\n\t\t\tarrCount = arr.length;\r\n\r\n\t\t\twhile (arrCount--) {\r\n\t\t\t\tarr[arrCount].destroy();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._children = [];\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * Removes all references to any behaviour methods that were added to\r\n\t * this object.\r\n\t */\r\n\tdestroyBehaviours: function () {\r\n\t\tdelete this._updateBehaviours;\r\n\t\tdelete this._tickBehaviours;\r\n\t},\r\n\r\n\t/**\r\n\t * Loops through all components added to this object and calls their\r\n\t * destroy() method, then removes any references to the components.\r\n\t * @return {*}\r\n\t */\r\n\tdestroyComponents: function () {\r\n\t\tvar arr = this._components,\r\n\t\t\tarrCount;\r\n\r\n\t\tif (arr) {\r\n\t\t\tarrCount = arr.length;\r\n\r\n\t\t\twhile (arrCount--) {\r\n\t\t\t\tif (arr[arrCount].destroy) {\r\n\t\t\t\t\tarr[arrCount].destroy();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tdelete this._components;\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * Gets / sets the depth sort mode that is used when\r\n\t * depth sorting this object's children against each other. This\r\n\t * mode only applies if this object's mount mode is isometric,\r\n\t * as set by calling isometricMounts(true). If the mount mode is\r\n\t * 2d, the depth sorter will use a very fast 2d depth sort that\r\n\t * does not use 3d bounds at all.\r\n\t * @param {Number=} val The mode to use when depth sorting\r\n\t * this object's children, given as an integer value.\r\n\t * @example #Turn off all depth sorting for this object's children\r\n\t *     entity.depthSortMode(-1);\r\n\t * @example #Use 3d bounds when sorting this object's children\r\n\t *     entity.depthSortMode(0);\r\n\t * @example #Use 3d bounds optimised for mostly cube-shaped bounds when sorting this object's children\r\n\t *     entity.depthSortMode(1);\r\n\t * @example #Use 3d bounds optimised for all cube-shaped bounds when sorting this object's children\r\n\t *     entity.depthSortMode(2);\r\n\t * @return {*}\r\n\t */\r\n\tdepthSortMode: function (val) {\r\n\t\tif (val !== undefined) {\r\n\t\t\tthis._depthSortMode = val;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\treturn this._depthSortMode;\r\n\t},\r\n\r\n\t/**\r\n\t * Sorts the _children array by the layer and then depth of each object.\r\n\t */\r\n\tdepthSortChildren: function () {\r\n\t\tif (this._depthSortMode !== -1) {\r\n\t\t\t// TODO: Optimise this method, it is not especially efficient at the moment!\r\n\t\t\tvar arr = this._children,\r\n\t\t\t\tarrCount,\r\n\t\t\t\tsortObj,\r\n\t\t\t\ti, j;\r\n\r\n\t\t\tif (arr) {\r\n\t\t\t\tarrCount = arr.length;\r\n\r\n\t\t\t\t// See if we can bug-out early\r\n\t\t\t\tif (arrCount > 1) {\r\n\t\t\t\t\t// Check if the mount mode is isometric\r\n\t\t\t\t\tif (this._mountMode === 1) {\r\n\t\t\t\t\t\t// Check the depth sort mode\r\n\t\t\t\t\t\tif (this._depthSortMode === 0) { // Slowest, uses 3d bounds\r\n\t\t\t\t\t\t\t// Calculate depths from 3d bounds\r\n\t\t\t\t\t\t\tsortObj = {\r\n\t\t\t\t\t\t\t\tadj: [],\r\n\t\t\t\t\t\t\t\tc: [],\r\n\t\t\t\t\t\t\t\tp: [],\r\n\t\t\t\t\t\t\t\torder: [],\r\n\t\t\t\t\t\t\t\torder_ind: arrCount - 1\r\n\t\t\t\t\t\t\t};\r\n\r\n\t\t\t\t\t\t\tfor (i = 0; i < arrCount; ++i) {\r\n\t\t\t\t\t\t\t\tsortObj.c[i] = 0;\r\n\t\t\t\t\t\t\t\tsortObj.p[i] = -1;\r\n\r\n\t\t\t\t\t\t\t\tfor (j = i + 1; j < arrCount; ++j) {\r\n\t\t\t\t\t\t\t\t\tsortObj.adj[i] = sortObj.adj[i] || [];\r\n\t\t\t\t\t\t\t\t\tsortObj.adj[j] = sortObj.adj[j] || [];\r\n\r\n\t\t\t\t\t\t\t\t\tif (arr[i]._inView && arr[j]._inView && arr[i]._projectionOverlap && arr[j]._projectionOverlap) {\r\n\t\t\t\t\t\t\t\t\t\tif (arr[i]._projectionOverlap(arr[j])) {\r\n\t\t\t\t\t\t\t\t\t\t\tif (arr[i].isBehind(arr[j])) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tsortObj.adj[j].push(i);\r\n\t\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\t\tsortObj.adj[i].push(j);\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tfor (i = 0; i < arrCount; ++i) {\r\n\t\t\t\t\t\t\t\tif (sortObj.c[i] === 0) {\r\n\t\t\t\t\t\t\t\t\tthis._depthSortVisit(i, sortObj);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tfor (i = 0; i < sortObj.order.length; i++) {\r\n\t\t\t\t\t\t\t\tarr[sortObj.order[i]].depth(i);\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tthis._children.sort(function (a, b) {\r\n\t\t\t\t\t\t\t\tvar layerIndex = b._layer - a._layer;\r\n\r\n\t\t\t\t\t\t\t\tif (layerIndex === 0) {\r\n\t\t\t\t\t\t\t\t\t// On same layer so sort by depth\r\n\t\t\t\t\t\t\t\t\treturn b._depth - a._depth;\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t// Not on same layer so sort by layer\r\n\t\t\t\t\t\t\t\t\treturn layerIndex;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (this._depthSortMode === 1) { // Medium speed, optimised for almost-cube shaped 3d bounds\r\n\t\t\t\t\t\t\t// Now sort the entities by depth\r\n\t\t\t\t\t\t\tthis._children.sort(function (a, b) {\r\n\t\t\t\t\t\t\t\tvar layerIndex = b._layer - a._layer;\r\n\r\n\t\t\t\t\t\t\t\tif (layerIndex === 0) {\r\n\t\t\t\t\t\t\t\t\t// On same layer so sort by depth\r\n\t\t\t\t\t\t\t\t\t//if (a._projectionOverlap(b)) {\r\n\t\t\t\t\t\t\t\t\t\tif (a.isBehind(b)) {\r\n\t\t\t\t\t\t\t\t\t\t\treturn -1;\r\n\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\treturn 1;\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t//}\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t// Not on same layer so sort by layer\r\n\t\t\t\t\t\t\t\t\treturn layerIndex;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (this._depthSortMode === 2) { // Fastest, optimised for cube-shaped 3d bounds\r\n\t\t\t\t\t\t\twhile (arrCount--) {\r\n\t\t\t\t\t\t\t\tsortObj = arr[arrCount];\r\n\t\t\t\t\t\t\t\tj = sortObj._translate;\r\n\r\n\t\t\t\t\t\t\t\tif (j) {\r\n\t\t\t\t\t\t\t\t\tsortObj._depth = j.x + j.y + j.z;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t// Now sort the entities by depth\r\n\t\t\t\t\t\t\tthis._children.sort(function (a, b) {\r\n\t\t\t\t\t\t\t\tvar layerIndex = b._layer - a._layer;\r\n\r\n\t\t\t\t\t\t\t\tif (layerIndex === 0) {\r\n\t\t\t\t\t\t\t\t\t// On same layer so sort by depth\r\n\t\t\t\t\t\t\t\t\treturn b._depth - a._depth;\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t// Not on same layer so sort by layer\r\n\t\t\t\t\t\t\t\t\treturn layerIndex;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else { // 2d mode\r\n\t\t\t\t\t\t// Now sort the entities by depth\r\n\t\t\t\t\t\tthis._children.sort(function (a, b) {\r\n\t\t\t\t\t\t\tvar layerIndex = b._layer - a._layer;\r\n\r\n\t\t\t\t\t\t\tif (layerIndex === 0) {\r\n\t\t\t\t\t\t\t\t// On same layer so sort by depth\r\n\t\t\t\t\t\t\t\treturn b._depth - a._depth;\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t// Not on same layer so sort by layer\r\n\t\t\t\t\t\t\t\treturn layerIndex;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Gets / sets the view checking flag that if set to true\r\n\t * will ask the engine to check during each tick if this\r\n\t * object is actually \"on screen\" or not, and bypass it\r\n\t * if it is not. The default is this flag set to false.\r\n\t * @param {Boolean=} val The boolean flag value.\r\n\t * @return {*}\r\n\t */\r\n\tviewChecking: function (val) {\r\n\t\tif (val !== undefined) {\r\n\t\t\tthis._viewChecking = val;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\treturn this._viewChecking;\r\n\t},\r\n\r\n\t/**\r\n\t * ALPHA CODE DO NOT USE YET.\r\n\t * When view checking is enabled, this method is called to\r\n\t * determine if this object is within the bounds of an active\r\n\t * viewport, essentially determining if the object is\r\n\t * \"on screen\" or not.\r\n\t */\r\n\tviewCheckChildren: function () {\r\n\t\tif (ige._currentViewport) {\r\n\t\t\tvar arr = this._children,\r\n\t\t\t\tarrCount = arr.length,\r\n\t\t\t\tvpViewArea = ige._currentViewport.viewArea(),\r\n\t\t\t\titem;\r\n\t\r\n\t\t\twhile (arrCount--) {\r\n\t\t\t\titem = arr[arrCount];\r\n\t\r\n\t\t\t\tif (item._alwaysInView) {\r\n\t\t\t\t\titem._inView = true;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (item.aabb) {\r\n\t\t\t\t\t\t// Check the entity to see if its bounds are \"inside\" the\r\n\t\t\t\t\t\t// viewport's visible area\r\n\t\t\t\t\t\tif (vpViewArea.intersects(item.aabb(true))) {\r\n\t\t\t\t\t\t\t// The entity is inside the viewport visible area\r\n\t\t\t\t\t\t\titem._inView = true;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\titem._inView = false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\titem._inView = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\tupdate: function (ctx, tickDelta) {\r\n\t\t// Check that we are alive before processing further\r\n\t\tif (this._alive) {\r\n\t\t\tif (this._newBorn) { this._newBorn = false; }\r\n\t\t\tvar arr = this._children,\r\n\t\t\t\tarrCount,\r\n\t\t\t\tts, td;\r\n\r\n\t\t\tif (arr) {\r\n\t\t\t\tarrCount = arr.length;\r\n\t\t\t\t\r\n\t\t\t\t// Depth sort all child objects\r\n\t\t\t\tif (arrCount && !ige._headless) {\r\n\t\t\t\t\tif (igeConfig.debug._timing) {\r\n\t\t\t\t\t\tif (!ige._timeSpentLastTick[this.id()]) {\r\n\t\t\t\t\t\t\tige._timeSpentLastTick[this.id()] = {};\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tts = new Date().getTime();\r\n\t\t\t\t\t\tthis.depthSortChildren();\r\n\t\t\t\t\t\ttd = new Date().getTime() - ts;\r\n\t\t\t\t\t\tige._timeSpentLastTick[this.id()].depthSortChildren = td;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.depthSortChildren();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Loop our children and call their update methods\r\n\t\t\t\tif (igeConfig.debug._timing) {\r\n\t\t\t\t\twhile (arrCount--) {\r\n\t\t\t\t\t\tts = new Date().getTime();\r\n\t\t\t\t\t\tarr[arrCount].update(ctx, tickDelta);\r\n\t\t\t\t\t\ttd = new Date().getTime() - ts;\r\n\t\t\t\t\t\tif (arr[arrCount]) {\r\n\t\t\t\t\t\t\tif (!ige._timeSpentInTick[arr[arrCount].id()]) {\r\n\t\t\t\t\t\t\t\tige._timeSpentInTick[arr[arrCount].id()] = 0;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif (!ige._timeSpentLastTick[arr[arrCount].id()]) {\r\n\t\t\t\t\t\t\t\tige._timeSpentLastTick[arr[arrCount].id()] = {};\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tige._timeSpentInTick[arr[arrCount].id()] += td;\r\n\t\t\t\t\t\t\tige._timeSpentLastTick[arr[arrCount].id()].tick = td;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\twhile (arrCount--) {\r\n\t\t\t\t\t\tarr[arrCount].update(ctx, tickDelta);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Processes the actions required each render frame.\r\n\t */\r\n\ttick: function (ctx) {\r\n\t\t// Check that we are alive before processing further\r\n\t\tif (this._alive) {\r\n\t\t\tvar arr = this._children,\r\n\t\t\t\tarrCount,\r\n\t\t\t\tts, td;\r\n\t\r\n\t\t\tif (this._viewChecking) {\r\n\t\t\t\t// Set the in-scene flag for each child based on\r\n\t\t\t\t// the current viewport\r\n\t\t\t\tthis.viewCheckChildren();\r\n\t\t\t}\r\n\t\r\n\t\t\t// Loop the child objects of this object\r\n\t\t\tif (arr) {\r\n\t\t\t\tarrCount = arr.length;\r\n\t\t\t\t\r\n\t\t\t\t// Loop our children and call their tick methods\r\n\t\t\t\tif (igeConfig.debug._timing) {\r\n\t\t\t\t\twhile (arrCount--) {\r\n\t\t\t\t\t\tif (!arr[arrCount]) {\r\n\t\t\t\t\t\t\tthis.log('Object _children is undefined for index ' + arrCount + ' and _id: ' + this._id, 'error');\r\n\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif (!arr[arrCount]._newBorn) {\r\n\t\t\t\t\t\t\tctx.save();\r\n\t\t\t\t\t\t\tts = new Date().getTime();\r\n\t\t\t\t\t\t\tarr[arrCount].tick(ctx);\r\n\t\t\t\t\t\t\ttd = new Date().getTime() - ts;\r\n\t\t\t\t\t\t\tif (arr[arrCount]) {\r\n\t\t\t\t\t\t\t\tif (!ige._timeSpentInTick[arr[arrCount].id()]) {\r\n\t\t\t\t\t\t\t\t\tige._timeSpentInTick[arr[arrCount].id()] = 0;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\r\n\t\t\t\t\t\t\t\tif (!ige._timeSpentLastTick[arr[arrCount].id()]) {\r\n\t\t\t\t\t\t\t\t\tige._timeSpentLastTick[arr[arrCount].id()] = {};\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\r\n\t\t\t\t\t\t\t\tige._timeSpentInTick[arr[arrCount].id()] += td;\r\n\t\t\t\t\t\t\t\tige._timeSpentLastTick[arr[arrCount].id()].tick = td;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tctx.restore();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\twhile (arrCount--) {\r\n\t\t\t\t\t\tif (!arr[arrCount]) {\r\n\t\t\t\t\t\t\tthis.log('Object _children is undefined for index ' + arrCount + ' and _id: ' + this._id, 'error');\r\n\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif (!arr[arrCount]._newBorn) {\r\n\t\t\t\t\t\t\tctx.save();\r\n\t\t\t\t\t\t\tarr[arrCount].tick(ctx);\r\n\t\t\t\t\t\t\tctx.restore();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\t_depthSortVisit: function (u, sortObj) {\r\n\t\tvar arr = sortObj.adj[u],\r\n\t\t\tarrCount = arr.length,\r\n\t\t\ti, v;\r\n\r\n\t\tsortObj.c[u] = 1;\r\n\r\n\t\tfor (i = 0; i < arrCount; ++i) {\r\n\t\t\tv = arr[i];\r\n\r\n\t\t\tif (sortObj.c[v] === 0) {\r\n\t\t\t\tsortObj.p[v] = u;\r\n\t\t\t\tthis._depthSortVisit(v, sortObj);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tsortObj.c[u] = 2;\r\n\t\tsortObj.order[sortObj.order_ind] = u;\r\n\t\t--sortObj.order_ind;\r\n\t},\r\n\r\n\t/**\r\n\t * Handles screen resize events. Calls the _resizeEvent method of\r\n\t * every child object mounted to this object.\r\n\t * @param event\r\n\t * @private\r\n\t */\r\n\t_resizeEvent: function (event) {\r\n\t\tvar arr = this._children,\r\n\t\t\tarrCount;\r\n\r\n\t\tif (arr) {\r\n\t\t\tarrCount = arr.length;\r\n\r\n\t\t\twhile (arrCount--) {\r\n\t\t\t\tarr[arrCount]._resizeEvent(event);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\t},\r\n\r\n\t/**\r\n\t * Calls each behaviour method for the object.\r\n\t * @private\r\n\t */\r\n\t_processUpdateBehaviours: function (ctx, tickDelta) {\r\n\t\tvar arr = this._updateBehaviours,\r\n\t\t\tarrCount;\r\n\r\n\t\tif (arr) {\r\n\t\t\tarrCount = arr.length;\r\n\t\t\twhile (arrCount--) {\r\n\t\t\t\tarr[arrCount].method.apply(this, arguments);\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Calls each behaviour method for the object.\r\n\t * @private\r\n\t */\r\n\t_processTickBehaviours: function (ctx) {\r\n\t\tvar arr = this._tickBehaviours,\r\n\t\t\tarrCount;\r\n\r\n\t\tif (arr) {\r\n\t\t\tarrCount = arr.length;\r\n\t\t\twhile (arrCount--) {\r\n\t\t\t\tarr[arrCount].method.apply(this, arguments);\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\t\r\n\t/**\r\n\t * Called when a child object is mounted to this object.\r\n\t * @param obj\r\n\t * @private\r\n\t */\r\n\t_childMounted: function (obj) {\r\n\t\tthis._resizeEvent(null);\r\n\t},\r\n\r\n\t/**\r\n\t * Called when a child object is un-mounted to this object.\r\n\t * @param obj\r\n\t * @private\r\n\t */\r\n\t_childUnMounted: function (obj) {},\r\n\t\r\n\t/**\r\n\t * Called when this object is mounted to another object.\r\n\t * @param obj\r\n\t * @private\r\n\t */\r\n\t_mounted: function (obj) {\r\n\t\t\r\n\t},\r\n\t\r\n\t/**\r\n\t * Called when this object is un-mounted from it's parent.\r\n\t * @param obj\r\n\t * @private\r\n\t */\r\n\t_unMounted: function (obj) {\r\n\t\t\r\n\t},\r\n\r\n\t/**\r\n\t * Destroys the object and all it's child objects, removing them from the\r\n\t * scenegraph and from memory.\r\n\t */\r\n\tdestroy: function () {\r\n\t\t// Remove ourselves from any parent\r\n\t\tthis.unMount();\r\n\r\n\t\t// Remove any children\r\n\t\tif (this._children) {\r\n\t\t\tthis.destroyChildren();\r\n\t\t}\r\n\r\n\t\t// Remove any components\r\n\t\tthis.destroyComponents();\r\n\r\n\t\t// Remove any behaviours\r\n\t\tthis.destroyBehaviours();\r\n\r\n\t\t// Remove the object from the lookup system\r\n\t\tige.unRegister(this);\r\n\t\tige.categoryUnRegister(this);\r\n\t\tige.groupUnRegister(this);\r\n\r\n\t\t// Set a flag in case a reference to this object\r\n\t\t// has been held somewhere, shows that the object\r\n\t\t// should no longer be interacted with\r\n\t\tthis._alive = false;\r\n\r\n\t\t// Remove the event listeners array in case any\r\n\t\t// object references still exist there\r\n\t\tdelete this._eventListeners;\r\n\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\tobjSave: function () {\r\n\t\treturn {igeClass: this.classId(), data: this._objSaveReassign(this, [])};\r\n\t},\r\n\t\r\n\tobjLoad: function (obj) {\r\n\t\tthis._objLoadReassign(this, obj.data);\r\n\t},\r\n\t\r\n\tsaveSpecialProp: function (obj, i) {\r\n\t\tswitch (i) {\r\n\t\t\tcase '_id':\r\n\t\t\t\tif (obj._id) {\r\n\t\t\t\t\treturn {_id: obj._id};\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t\r\n\t\t\tcase '_parent':\r\n\t\t\t\tif (obj._parent) {\r\n\t\t\t\t\treturn {_parent: obj._parent.id()};\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t\r\n\t\t\tcase '_children':\r\n\t\t\t\tif (obj._children.length) {\r\n\t\t\t\t\tvar childIndex,\r\n\t\t\t\t\t\tchild,\r\n\t\t\t\t\t\tarr = [];\r\n\t\t\t\t\t\r\n\t\t\t\t\tfor (childIndex = 0; childIndex < obj._children.length; childIndex++) {\r\n\t\t\t\t\t\tchild = obj._children[childIndex];\r\n\t\t\t\t\t\tarr.push(child.objSave());\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\treturn {_children: arr};\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\t\r\n\t\treturn undefined;\r\n\t},\r\n\t\r\n\tloadSpecialProp: function (obj, i) {\r\n\t\tswitch (i) {\r\n\t\t\tcase '_id':\r\n\t\t\t\treturn {_id: obj[i]};\r\n\t\t\t\tbreak;\r\n\t\t\t\r\n\t\t\tcase '_parent':\r\n\t\t\t\treturn {_parent: obj[i]};\r\n\t\t\t\tbreak;\r\n\t\t\t\r\n\t\t\tcase '_children':\r\n\t\t\t\treturn {_children: obj[i]};\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\treturn undefined;\r\n\t},\r\n\t\r\n\tloadGraph: function (obj) {\r\n\t\tif (obj.igeClass && obj.data) {\r\n\t\t\t// Create a new class instance\r\n\t\t\tvar classInstance = ige.newClassInstance(obj.igeClass),\r\n\t\t\t\tnewId,\r\n\t\t\t\tchildArr,\r\n\t\t\t\tchildIndex,\r\n\t\t\t\tparentId;\r\n\t\t\t\r\n\t\t\tclassInstance.objLoad(obj);\r\n\t\t\t\r\n\t\t\tif (classInstance._parent) {\r\n\t\t\t\t// Record the id and delete it\r\n\t\t\t\tparentId = classInstance._parent;\r\n\t\t\t\tdelete classInstance._parent;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t// Process item id\r\n\t\t\tif (classInstance._id) {\r\n\t\t\t\tnewId = classInstance._id;\r\n\t\t\t\tdelete classInstance._id;\r\n\t\t\t\t\r\n\t\t\t\tclassInstance.id(newId);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t// Check for children and process them if exists\r\n\t\t\tif (classInstance._children && classInstance._children.length) {\r\n\t\t\t\tchildArr = classInstance._children;\r\n\t\t\t\tclassInstance._children = [];\r\n\t\t\t\t\r\n\t\t\t\tfor (childIndex = 0; childIndex < childArr.length; childIndex++) {\r\n\t\t\t\t\tclassInstance.loadGraph(childArr[childIndex]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t// Now mount the instance if it has a parent\r\n\t\t\tclassInstance.mount(this);\r\n\t\t}\r\n\t},\r\n\t\r\n\t_objSaveReassign: function (obj, ref) {\r\n\t\tvar copyObj,\r\n\t\t\tspecialKeys = this._specialProp,\r\n\t\t\trefIndex,\r\n\t\t\tspecProp,\r\n\t\t\tspecPropKey,\r\n\t\t\ti;\r\n\t\t\r\n\t\tif (typeof(obj) === 'object' && !(obj instanceof Array)) {\r\n\t\t\tcopyObj = {};\r\n\t\t\t\r\n\t\t\tfor (i in obj) {\r\n\t\t\t\tif (obj.hasOwnProperty(i)) {\r\n\t\t\t\t\tif (typeof(obj[i]) === 'object') {\r\n\t\t\t\t\t\tif (specialKeys.indexOf(i) === -1) {\r\n\t\t\t\t\t\t\t// Check if the ref already exists\r\n\t\t\t\t\t\t\trefIndex = ref.indexOf(obj[i]);\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tif (refIndex > -1) {\r\n\t\t\t\t\t\t\t\tcopyObj[i] = '{ref:' + refIndex + '}';\r\n\t\t\t\t\t\t\t\tthis.log('Possible circular reference for property ' + i);\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tref.push(obj[i]);\r\n\t\t\t\t\t\t\t\tcopyObj[i] = this._objSaveReassign(obj[i], ref);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t// This is a special property that needs handling via\r\n\t\t\t\t\t\t\t// it's own method to return an appropriate data value\r\n\t\t\t\t\t\t\t// so check if there is a method for it\r\n\t\t\t\t\t\t\tspecProp = this.saveSpecialProp(obj, i);\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tif (specProp) {\r\n\t\t\t\t\t\t\t\tif (typeof(specProp) === 'object' && !(specProp instanceof Array)) {\r\n\t\t\t\t\t\t\t\t\t// Process the returned object properties\r\n\t\t\t\t\t\t\t\t\tfor (specPropKey in specProp) {\r\n\t\t\t\t\t\t\t\t\t\tif (specProp.hasOwnProperty(specPropKey)) {\r\n\t\t\t\t\t\t\t\t\t\t\t// Copy the special property data to the key in\r\n\t\t\t\t\t\t\t\t\t\t\t// our return object\r\n\t\t\t\t\t\t\t\t\t\t\tcopyObj[specPropKey] = specProp[specPropKey];\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tcopyObj[i] = specProp;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcopyObj[i] = obj[i];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn copyObj;\r\n\t\t} else {\r\n\t\t\treturn obj;\r\n\t\t}\r\n\t},\r\n\t\r\n\t_objLoadReassign: function (obj, newProps) {\r\n\t\tvar specialKeys = this._specialProp,\r\n\t\t\tspecProp,\r\n\t\t\tspecPropKey,\r\n\t\t\ti;\r\n\t\t\r\n\t\tfor (i in newProps) {\r\n\t\t\tif (newProps.hasOwnProperty(i)) {\r\n\t\t\t\tif (specialKeys.indexOf(i) === -1) {\r\n\t\t\t\t\tif (typeof(newProps[i]) === 'object' && obj[i]) {\r\n\t\t\t\t\t\tthis._objLoadReassign(obj[i], newProps[i]);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// Assign the property value directly\r\n\t\t\t\t\t\tobj[i] = newProps[i];\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// This is a special property that needs handling via\r\n\t\t\t\t\t// it's own method to return an appropriate data value\r\n\t\t\t\t\t// so check if there is a method for it\r\n\t\t\t\t\tspecProp = this.loadSpecialProp(newProps, i);\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (specProp) {\r\n\t\t\t\t\t\tif (typeof(specProp) === 'object' && !(specProp instanceof Array)) {\r\n\t\t\t\t\t\t\t// Process the returned object properties\r\n\t\t\t\t\t\t\tfor (specPropKey in specProp) {\r\n\t\t\t\t\t\t\t\tif (specProp.hasOwnProperty(specPropKey)) {\r\n\t\t\t\t\t\t\t\t\t// Copy the special property data to the key in\r\n\t\t\t\t\t\t\t\t\t// our return object\r\n\t\t\t\t\t\t\t\t\tobj[specPropKey] = specProp[specPropKey];\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tobj[i] = specProp;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Returns a string containing a code fragment that when\r\n\t * evaluated will reproduce this object.\r\n\t * @return {String}\r\n\t */\r\n\tstringify: function (options) {\r\n\t\t// Make sure we have an options object\r\n\t\tif (options === undefined) { options = {}; }\r\n\t\t\r\n\t\tvar str = \"new \" + this.classId() + \"()\";\r\n\r\n\t\t// Every object has an ID, assign that first\r\n\t\tif (options.id !== false) {\r\n\t\t\tstr += \".id('\" + this.id() + \"')\";\r\n\t\t}\r\n\r\n\t\t// Now check if there is a parent and mount that\r\n\t\tif (options.mount !== false && this.parent()) {\r\n\t\t\tstr += \".mount(ige.$('\" + this.parent().id() + \"'))\";\r\n\t\t}\r\n\r\n\t\t// Now get all other properties\r\n\t\tstr += this._stringify(options);\r\n\r\n\t\treturn str;\r\n\t},\r\n\r\n\t/**\r\n\t * Returns a string containing a code fragment that when\r\n\t * evaluated will reproduce this object's properties via\r\n\t * chained commands. This method will only check for\r\n\t * properties that are directly related to this class.\r\n\t * Other properties are handled by their own class method.\r\n\t * @return {String}\r\n\t */\r\n\t_stringify: function (options) {\r\n\t\t// Make sure we have an options object\r\n\t\tif (options === undefined) { options = {}; }\r\n\t\t\r\n\t\tvar str = '', i;\r\n\r\n\t\t// Loop properties and add property assignment code to string\r\n\t\tfor (i in this) {\r\n\t\t\tif (this.hasOwnProperty(i) && this[i] !== undefined) {\r\n\t\t\t\tswitch (i) {\r\n\t\t\t\t\tcase '_category':\r\n\t\t\t\t\t\tstr += \".category(\" + this.category() + \")\";\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase '_drawBounds':\r\n\t\t\t\t\t\tstr += \".drawBounds(\" + this.drawBounds() + \")\";\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase '_drawBoundsData':\r\n\t\t\t\t\t\tstr += \".drawBoundsData(\" + this.drawBoundsData() + \")\";\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase '_drawMouse':\r\n\t\t\t\t\t\tstr += \".drawMouse(\" + this.drawMouse() + \")\";\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase '_mode':\r\n\t\t\t\t\t\tstr += \".mode(\" + this.mode() + \")\";\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase '_isometricMounts':\r\n\t\t\t\t\t\tstr += \".isometricMounts(\" + this.isometricMounts() + \")\";\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase '_indestructible':\r\n\t\t\t\t\t\tstr += \".indestructible(\" + this.indestructible() + \")\";\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase '_layer':\r\n\t\t\t\t\t\tstr += \".layer(\" + this.layer() + \")\";\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase '_depth':\r\n\t\t\t\t\t\tstr += \".depth(\" + this.depth() + \")\";\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn str;\r\n\t}\r\n});\r\n\r\nif (typeof(module) !== 'undefined' && typeof(module.exports) !== 'undefined') { module.exports = IgeObject; }\r\n","/**\r\n * Creates an entity and handles the entity's life cycle and\r\n * all related entity actions / methods.\r\n */\r\nvar IgeEntity = IgeObject.extend({\r\n\tclassId: 'IgeEntity',\r\n\r\n\tinit: function () {\r\n\t\tIgeObject.prototype.init.call(this);\r\n\t\t\r\n\t\t// Register the IgeEntity special properties handler for \r\n\t\t// serialise and de-serialise support\r\n\t\tthis._specialProp.push('_texture');\r\n\t\tthis._specialProp.push('_eventListeners');\r\n\t\tthis._specialProp.push('_aabb');\r\n\r\n\t\tthis._anchor = new IgePoint2d(0, 0);\r\n\t\tthis._renderPos = {x: 0, y: 0};\r\n\r\n\t\tthis._computedOpacity = 1;\r\n\t\tthis._opacity = 1;\r\n\t\tthis._cell = 1;\r\n\r\n\t\tthis._deathTime = undefined;\r\n\t\tthis._bornTime = ige._currentTime;\r\n\r\n\t\tthis._translate = new IgePoint3d(0, 0, 0);\r\n\t\tthis._oldTranslate = new IgePoint3d(0, 0, 0);\r\n\t\tthis._rotate = new IgePoint3d(0, 0, 0);\r\n\t\tthis._scale = new IgePoint3d(1, 1, 1);\r\n\t\tthis._origin = new IgePoint3d(0.5, 0.5, 0.5);\r\n\r\n\t\tthis._bounds2d = new IgePoint2d(40, 40);\r\n\t\tthis._bounds3d = new IgePoint3d(0, 0, 0);\r\n\t\t\r\n\t\tthis._oldBounds2d = new IgePoint2d(40, 40);\r\n\t\tthis._oldBounds3d = new IgePoint3d(0, 0, 0);\r\n\r\n\t\tthis._highlight = false;\r\n\t\tthis._mouseEventsActive = false;\r\n\t\t\r\n\t\tthis._velocity = new IgePoint3d(0, 0, 0);\r\n\r\n        this._localMatrix = new IgeMatrix2d();\r\n        this._worldMatrix = new IgeMatrix2d();\r\n\t\tthis._oldWorldMatrix = new IgeMatrix2d();\r\n\r\n\t\tthis._inView = true;\r\n\t\tthis._hidden = false;\r\n\t\t\r\n\t\t//this._mouseEventTrigger = 0;\r\n\r\n\t\t/* CEXCLUDE */\r\n\t\tif (typeof(module) !== 'undefined' && typeof(module.exports) !== 'undefined') {\r\n\t\t\t// Set the stream floating point precision to 2 as default\r\n\t\t\tthis.streamFloatPrecision(2);\r\n\t\t}\r\n\t\t/* CEXCLUDE */\r\n\r\n\t\t// Set the default stream sections as just the transform data\r\n\t\tthis.streamSections(['transform']);\r\n\t},\r\n\r\n\t/**\r\n\t * Sets the entity as visible and able to be interacted with.\r\n\t * @example #Show a hidden entity\r\n\t *     entity.show();\r\n\t * @return {*} The object this method was called from to allow\r\n\t * method chaining.\r\n\t */\r\n\tshow: function () {\r\n\t\tthis._hidden = false;\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * Sets the entity as hidden and cannot be interacted with.\r\n\t * @example #Hide a visible entity\r\n\t *     entity.hide();\r\n\t * @return {*} The object this method was called from to allow\r\n\t * method chaining.\r\n\t */\r\n\thide: function () {\r\n\t\tthis._hidden = true;\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * Checks if the entity is visible.\r\n\t * @returns {boolean} True if the entity is visible.\r\n\t */\r\n\tisVisible: function () {\r\n\t\treturn this._hidden === false;\r\n\t},\r\n\t\r\n\t/**\r\n\t * Checks if the entity is hidden.\r\n\t * @returns {boolean} True if the entity is hidden.\r\n\t */\r\n\tisHidden: function () {\r\n\t\treturn this._hidden === true;\r\n\t},\r\n\r\n\t/**\r\n\t * Gets / sets the cache flag that determines if the entity's\r\n\t * texture rendering output should be stored on an off-screen\r\n\t * canvas instead of calling the texture.render() method each\r\n\t * tick. Useful for expensive texture calls such as rendering\r\n\t * fonts etc. If enabled, this will automatically disable advanced\r\n\t * composite caching on this entity with a call to\r\n\t * compositeCache(false).\r\n\t * @param {Boolean=} val True to enable caching, false to\r\n\t * disable caching.\r\n\t * @example #Enable entity caching\r\n\t *     entity.cache(true);\r\n\t * @example #Disable entity caching\r\n\t *     entity.cache(false);\r\n\t * @example #Get caching flag value\r\n\t *     var val = entity.cache();\r\n\t * @return {*}\r\n\t */\r\n\tcache: function (val) {\r\n\t\tif (val !== undefined) {\r\n\t\t\tthis._cache = val;\r\n\t\t\t\r\n\t\t\tif (val) {\r\n\t\t\t\t// Create the off-screen canvas\r\n\t\t\t\tif (ige.isClient) {\r\n\t\t\t\t\t// Use a real canvas\r\n\t\t\t\t\tthis._cacheCanvas = document.createElement('canvas');\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// Use dummy objects for canvas and context\r\n\t\t\t\t\tthis._cacheCanvas = new IgeDummyCanvas();\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tthis._cacheCtx = this._cacheCanvas.getContext('2d');\r\n\t\t\t\tthis._cacheDirty = true;\r\n\t\t\t\t\r\n\t\t\t\t// Set smoothing mode\r\n\t\t\t\tvar smoothing = this._cacheSmoothing !== undefined ? this._cacheSmoothing : ige._globalSmoothing;\r\n\t\t\t\tif (!smoothing) {\r\n\t\t\t\t\tthis._cacheCtx.imageSmoothingEnabled = false;\r\n\t\t\t\t\tthis._cacheCtx.mozImageSmoothingEnabled = false;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._cacheCtx.imageSmoothingEnabled = true;\r\n\t\t\t\t\tthis._cacheCtx.mozImageSmoothingEnabled = true;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Switch off composite caching\r\n\t\t\t\tif (this.compositeCache()) {\r\n\t\t\t\t\tthis.compositeCache(false);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\t// Remove the off-screen canvas\r\n\t\t\t\tdelete this._cacheCanvas;\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\treturn this._cache;\r\n\t},\r\n\r\n\t/**\r\n\t * When using the caching system, this boolean determines if the\r\n\t * cache canvas should have image smoothing enabled or not. If\r\n\t * not set, the ige global smoothing setting will be used instead.\r\n\t * @param {Boolean=} val True to enable smoothing, false to disable.\r\n\t * @returns {*}\r\n\t */\r\n\tcacheSmoothing: function (val) {\r\n\t\tif (val !== undefined) {\r\n\t\t\tthis._cacheSmoothing = val;\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\treturn this._cacheSmoothing;\r\n\t},\r\n\r\n\t/**\r\n\t * Gets / sets composite caching. Composite caching draws this entity\r\n\t * and all of it's children (and their children etc) to a single off\r\n\t * screen canvas so that the entity does not need to be redrawn with\r\n\t * all it's children every tick. For composite entities where little\r\n\t * change occurs this will massively increase rendering performance.\r\n\t * If enabled, this will automatically disable simple caching on this\r\n\t * entity with a call to cache(false).\r\n\t * @param {Boolean=} val\r\n\t * @example #Enable entity composite caching\r\n\t *     entity.compositeCache(true);\r\n\t * @example #Disable entity composite caching\r\n\t *     entity.compositeCache(false);\r\n\t * @example #Get composite caching flag value\r\n\t *     var val = entity.cache();\r\n\t * @return {*}\r\n\t */\r\n\tcompositeCache: function (val) {\r\n\t\tif (ige.isClient) {\r\n\t\t\tif (val !== undefined) {\r\n\t\t\t\tif (val) {\r\n\t\t\t\t\t// Switch off normal caching\r\n\t\t\t\t\tthis.cache(false);\r\n\t\t\t\t\t\r\n\t\t\t\t\t// Create the off-screen canvas\r\n\t\t\t\t\tthis._cacheCanvas = document.createElement('canvas');\r\n\t\t\t\t\tthis._cacheCtx = this._cacheCanvas.getContext('2d');\r\n\t\t\t\t\tthis._cacheDirty = true;\r\n\t\t\t\t\t\r\n\t\t\t\t\t// Set smoothing mode\r\n\t\t\t\t\tvar smoothing = this._cacheSmoothing !== undefined ? this._cacheSmoothing : ige._globalSmoothing;\r\n\t\t\t\t\tif (!smoothing) {\r\n\t\t\t\t\t\tthis._cacheCtx.imageSmoothingEnabled = false;\r\n\t\t\t\t\t\tthis._cacheCtx.mozImageSmoothingEnabled = false;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis._cacheCtx.imageSmoothingEnabled = true;\r\n\t\t\t\t\t\tthis._cacheCtx.mozImageSmoothingEnabled = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t// Loop children and set _compositeParent to the correct value\r\n\t\t\t\tthis._children.each(function () {\r\n\t\t\t\t\tif (val) {\r\n\t\t\t\t\t\tthis._compositeParent = true;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tdelete this._compositeParent;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t\tthis._compositeCache = val;\r\n\t\t\t\treturn this;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn this._compositeCache;\r\n\t\t} else {\r\n\t\t\treturn this;\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Gets / sets the cache dirty flag. If set to true this will\r\n\t * instruct the entity to re-draw it's cached image from the\r\n\t * assigned texture. Once that occurs the flag will automatically\r\n\t * be set back to false. This works in either standard cache mode\r\n\t * or composite cache mode.\r\n\t * @param {Boolean=} val True to force a cache update.\r\n\t * @example #Get cache dirty flag value\r\n\t *     var val = entity.cacheDirty();\r\n\t * @example #Set cache dirty flag value\r\n\t *     entity.cacheDirty(true);\r\n\t * @return {*}\r\n\t */\r\n\tcacheDirty: function (val) {\r\n\t\tif (val !== undefined) {\r\n\t\t\tthis._cacheDirty = val;\r\n\t\t\t\r\n\t\t\t// Check if the entity is a child of a composite or composite\r\n\t\t\t// entity chain and propagate the dirty cache up the chain\r\n\t\t\tif (val && this._compositeParent && this._parent) {\r\n\t\t\t\tthis._parent.cacheDirty(val);\r\n\t\t\t\t\r\n\t\t\t\tif (!this._cache && !this._compositeCache) {\r\n\t\t\t\t\t// Set clean immediately as no caching is enabled on this child\r\n\t\t\t\t\tthis._cacheDirty = false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\treturn this._cacheDirty;\r\n\t},\r\n\r\n\t/**\r\n\t * Gets the position of the mouse relative to this entity's\r\n\t * center point.\r\n\t * @param {IgeViewport=} viewport The viewport to use as the\r\n\t * base from which the mouse position is determined. If no\r\n\t * viewport is specified then the current viewport the engine\r\n\t * is rendering to is used instead.\r\n\t * @example #Get the mouse position relative to the entity\r\n\t *     // The returned value is an object with properties x, y, z\r\n\t *     var mousePos = entity.mousePos();\r\n\t * @return {IgePoint3d} The mouse point relative to the entity\r\n\t * center.\r\n\t */\r\n\tmousePos: function (viewport) {\r\n\t\tviewport = viewport || ige._currentViewport;\r\n\t\tif (viewport) {\r\n\t\t\tvar mp = viewport._mousePos.clone(),\r\n\t\t\t\tcam;\r\n\r\n\t\t\tif (this._ignoreCamera) {\r\n\t\t\t\t/*cam = ige._currentCamera;\r\n\t\t\t\tmp.thisMultiply(1 / cam._scale.x, 1 / cam._scale.y, 1 / cam._scale.z);\r\n\t\t\t\t//mp.thisRotate(-cam._rotate.z);\r\n\t\t\t\tmp.thisAddPoint(cam._translate);*/\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tmp.x += viewport._translate.x;\r\n\t\t\tmp.y += viewport._translate.y;\r\n\t\t\tthis._transformPoint(mp);\r\n\t\t\treturn mp;\r\n\t\t} else {\r\n\t\t\treturn new IgePoint3d(0, 0, 0);\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Gets the position of the mouse relative to this entity not\r\n\t * taking into account viewport translation.\r\n\t * @param {IgeViewport=} viewport The viewport to use as the\r\n\t * base from which the mouse position is determined. If no\r\n\t * viewport is specified then the current viewport the engine\r\n\t * is rendering to is used instead.\r\n\t * @example #Get absolute mouse position\r\n\t *     var mousePosAbs = entity.mousePosAbsolute();\r\n\t * @return {IgePoint3d} The mouse point relative to the entity\r\n\t * center.\r\n\t */\r\n\tmousePosAbsolute: function (viewport) {\r\n\t\tviewport = viewport || ige._currentViewport;\r\n\t\tif (viewport) {\r\n\t\t\tvar mp = viewport._mousePos.clone();\r\n\t\t\tthis._transformPoint(mp);\r\n\t\t\treturn mp;\r\n\t\t}\r\n\r\n\t\treturn new IgePoint3d(0, 0, 0);\r\n\t},\r\n\r\n\t/**\r\n\t * Gets the position of the mouse in world co-ordinates.\r\n\t * @param {IgeViewport=} viewport The viewport to use as the\r\n\t * base from which the mouse position is determined. If no\r\n\t * viewport is specified then the current viewport the engine\r\n\t * is rendering to is used instead.\r\n\t * @example #Get mouse position in world co-ordinates\r\n\t *     var mousePosWorld = entity.mousePosWorld();\r\n\t * @return {IgePoint3d} The mouse point relative to the world\r\n\t * center.\r\n\t */\r\n\tmousePosWorld: function (viewport) {\r\n\t\tviewport = viewport || ige._currentViewport;\r\n\t\tvar mp = this.mousePos(viewport);\r\n\t\tthis.localToWorldPoint(mp, viewport);\r\n\r\n\t\tif (this._ignoreCamera) {\r\n\t\t\t//viewport.camera._worldMatrix.getInverse().transform([mp]);\r\n\t\t}\r\n\r\n\t\treturn mp;\r\n\t},\r\n\r\n\t/**\r\n\t * Rotates the entity to point at the target point around the z axis.\r\n\t * @param {IgePoint3d} point The point in world co-ordinates to\r\n\t * point the entity at.\r\n\t * @example #Point the entity at another entity\r\n\t *     entity.rotateToPoint(otherEntity.worldPosition());\r\n\t * @example #Point the entity at mouse\r\n\t *     entity.rotateToPoint(ige._currentViewport.mousePos());\r\n\t * @example #Point the entity at an arbitrary point x, y\r\n\t *     entity.rotateToPoint(new IgePoint3d(x, y, 0));\r\n\t * @return {*}\r\n\t */\r\n\trotateToPoint: function (point) {\r\n\t\tvar worldPos = this.worldPosition();\r\n\t\tthis.rotateTo(\r\n\t\t\tthis._rotate.x,\r\n\t\t\tthis._rotate.y,\r\n\t\t\t(Math.atan2(worldPos.y - point.y, worldPos.x - point.x) - this._parent._rotate.z) + Math.radians(270)\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * Gets / sets the texture to use as the background\r\n\t * pattern for this entity.\r\n\t * @param {IgeTexture} texture The texture to use as\r\n\t * the background.\r\n\t * @param {String=} repeat The type of repeat mode either: \"repeat\",\r\n\t * \"repeat-x\", \"repeat-y\" or \"none\".\r\n\t * @param {Boolean=} trackCamera If set to true, will track the camera\r\n\t * translation and \"move\" the background with the camera.\r\n\t * @param {Boolean=} isoTile If true the tiles of the background will\r\n\t * be treated as isometric and will therefore be drawn so that they are\r\n\t * layered seamlessly in isometric view.\r\n\t * @example #Set a background pattern for this entity with 2d tiling\r\n\t *     var texture = new IgeTexture('path/to/my/texture.png');\r\n\t *     entity.backgroundPattern(texture, 'repeat', true, false);\r\n\t * @example #Set a background pattern for this entity with isometric tiling\r\n\t *     var texture = new IgeTexture('path/to/my/texture.png');\r\n\t *     entity.backgroundPattern(texture, 'repeat', true, true);\r\n\t * @return {*}\r\n\t */\r\n\tbackgroundPattern: function (texture, repeat, trackCamera, isoTile) {\r\n\t\tif (texture !== undefined) {\r\n\t\t\tthis._backgroundPattern = texture;\r\n\t\t\tthis._backgroundPatternRepeat = repeat || 'repeat';\r\n\t\t\tthis._backgroundPatternTrackCamera = trackCamera;\r\n\t\t\tthis._backgroundPatternIsoTile = isoTile;\r\n\t\t\tthis._backgroundPatternFill = null;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\treturn this._backgroundPattern;\r\n\t},\r\n\r\n\t/**\r\n\t * Set the object's width to the number of tile width's specified.\r\n\t * @param {Number} val Number of tiles.\r\n\t * @param {Boolean=} lockAspect If true, sets the height according\r\n\t * to the texture aspect ratio and the new width.\r\n\t * @example #Set the width of the entity based on the tile width of the map the entity is mounted to\r\n\t *     // Set the entity width to the size of 1 tile with\r\n\t *     // lock aspect enabled which will automatically size\r\n\t *     // the height as well so as to maintain the aspect\r\n\t *     // ratio of the entity\r\n\t *     entity.widthByTile(1, true);\r\n\t * @return {*} The object this method was called from to allow\r\n\t * method chaining.\r\n\t */\r\n\twidthByTile: function (val, lockAspect) {\r\n\t\tif (this._parent && this._parent._tileWidth !== undefined && this._parent._tileHeight !== undefined) {\r\n\t\t\tvar tileSize = this._mode === 0 ? this._parent._tileWidth : this._parent._tileWidth * 2,\r\n\t\t\t\tratio;\r\n\r\n\t\t\tthis.width(val * tileSize);\r\n\r\n\t\t\tif (lockAspect) {\r\n\t\t\t\tif (this._texture) {\r\n\t\t\t\t\t// Calculate the height based on the new width\r\n\t\t\t\t\tratio = this._texture._sizeX / this._bounds2d.x;\r\n\t\t\t\t\tthis.height(this._texture._sizeY / ratio);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.log('Cannot set height based on texture aspect ratio and new width because no texture is currently assigned to the entity!', 'error');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthis.log('Cannot set width by tile because the entity is not currently mounted to a tile map or the tile map has no tileWidth or tileHeight values.', 'warning');\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * Set the object's height to the number of tile height's specified.\r\n\t * @param {Number} val Number of tiles.\r\n\t * @param {Boolean=} lockAspect If true, sets the width according\r\n\t * to the texture aspect ratio and the new height.\r\n\t * @example #Set the height of the entity based on the tile height of the map the entity is mounted to\r\n\t *     // Set the entity height to the size of 1 tile with\r\n\t *     // lock aspect enabled which will automatically size\r\n\t *     // the width as well so as to maintain the aspect\r\n\t *     // ratio of the entity\r\n\t *     entity.heightByTile(1, true);\r\n\t * @return {*} The object this method was called from to allow\r\n\t * method chaining.\r\n\t */\r\n\theightByTile: function (val, lockAspect) {\r\n\t\tif (this._parent && this._parent._tileWidth !== undefined && this._parent._tileHeight !== undefined) {\r\n\t\t\tvar tileSize = this._mode === 0 ? this._parent._tileHeight : this._parent._tileHeight * 2,\r\n\t\t\t\tratio;\r\n\r\n\t\t\tthis.height(val * tileSize);\r\n\r\n\t\t\tif (lockAspect) {\r\n\t\t\t\tif (this._texture) {\r\n\t\t\t\t\t// Calculate the width based on the new height\r\n\t\t\t\t\tratio = this._texture._sizeY / this._bounds2d.y;\r\n\t\t\t\t\tthis.width(this._texture._sizeX / ratio);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.log('Cannot set width based on texture aspect ratio and new height because no texture is currently assigned to the entity!', 'error');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthis.log('Cannot set height by tile because the entity is not currently mounted to a tile map or the tile map has no tileWidth or tileHeight values.', 'warning');\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\t/**\r\n\t * Adds the object to the tile map at the passed tile co-ordinates. If\r\n\t * no tile co-ordinates are passed, will use the current tile position\r\n\t * and the tileWidth() and tileHeight() values.\r\n\t * @param {Number=} x X co-ordinate of the tile to occupy.\r\n\t * @param {Number=} y Y co-ordinate of the tile to occupy.\r\n\t * @param {Number=} width Number of tiles along the x-axis to occupy.\r\n\t * @param {Number=} height Number of tiles along the y-axis to occupy.\r\n\t */\r\n\toccupyTile: function (x, y, width, height) {\r\n\t\t// Check that the entity is mounted to a tile map\r\n\t\tif (this._parent && this._parent.IgeTileMap2d) {\r\n\t\t\tif (x !== undefined && y !== undefined) {\r\n\t\t\t\tthis._parent.occupyTile(x, y, width, height, this);\r\n\t\t\t} else {\r\n\t\t\t\t// Occupy tiles based upon tile point and tile width/height\r\n\t\t\t\tvar trPoint = new IgePoint3d(this._translate.x - (((this._tileWidth / 2) - 0.5) * this._parent._tileWidth), this._translate.y - (((this._tileHeight / 2) - 0.5) * this._parent._tileHeight), 0),\r\n\t\t\t\t\ttilePoint = this._parent.pointToTile(trPoint);\r\n\t\r\n\t\t\t\tif (this._parent._mountMode === 1) {\r\n\t\t\t\t\ttilePoint.thisToIso();\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tthis._parent.occupyTile(tilePoint.x, tilePoint.y, this._tileWidth, this._tileHeight, this);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\t/**\r\n\t * Removes the object from the tile map at the passed tile co-ordinates.\r\n\t * If no tile co-ordinates are passed, will use the current tile position\r\n\t * and the tileWidth() and tileHeight() values.\r\n\t * @param {Number=} x X co-ordinate of the tile to un-occupy.\r\n\t * @param {Number=} y Y co-ordinate of the tile to un-occupy.\r\n\t * @param {Number=} width Number of tiles along the x-axis to un-occupy.\r\n\t * @param {Number=} height Number of tiles along the y-axis to un-occupy.\r\n\t * @private\r\n\t */\r\n\tunOccupyTile: function (x, y, width, height) {\r\n\t\t// Check that the entity is mounted to a tile map\r\n\t\tif (this._parent && this._parent.IgeTileMap2d) {\r\n\t\t\tif (x !== undefined && y !== undefined) {\r\n\t\t\t\tthis._parent.unOccupyTile(x, y, width, height);\r\n\t\t\t} else {\r\n\t\t\t\t// Un-occupy tiles based upon tile point and tile width/height\r\n\t\t\t\tvar trPoint = new IgePoint3d(this._translate.x - (((this._tileWidth / 2) - 0.5) * this._parent._tileWidth), this._translate.y - (((this._tileHeight / 2) - 0.5) * this._parent._tileHeight), 0),\r\n\t\t\t\t\ttilePoint = this._parent.pointToTile(trPoint);\r\n\t\r\n\t\t\t\tif (this._parent._mountMode === 1) {\r\n\t\t\t\t\ttilePoint.thisToIso();\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tthis._parent.unOccupyTile(tilePoint.x, tilePoint.y, this._tileWidth, this._tileHeight);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\t/**\r\n\t * Returns an array of tile co-ordinates that the object is currently\r\n\t * over, calculated using the current world co-ordinates of the object\r\n\t * as well as it's 3d geometry.\r\n\t * @private\r\n\t * @return {Array} The array of tile co-ordinates as IgePoint3d instances.\r\n\t */\r\n\toverTiles: function () {\r\n\t\t// Check that the entity is mounted to a tile map\r\n\t\tif (this._parent && this._parent.IgeTileMap2d) {\r\n\t\t\tvar x,\r\n\t\t\t\ty,\r\n\t\t\t\ttileWidth = this._tileWidth || 1,\r\n\t\t\t\ttileHeight = this._tileHeight || 1,\r\n\t\t\t\ttile = this._parent.pointToTile(this._translate),\r\n\t\t\t\ttileArr = [];\r\n\t\r\n\t\t\tfor (x = 0; x < tileWidth; x++) {\r\n\t\t\t\tfor (y = 0; y < tileHeight; y++) {\r\n\t\t\t\t\ttileArr.push(new IgePoint3d(tile.x + x, tile.y + y, 0));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\r\n\t\t\treturn tileArr;\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Gets / sets the anchor position that this entity's texture\r\n\t * will be adjusted by.\r\n\t * @param {Number=} x The x anchor value.\r\n\t * @param {Number=} y The y anchor value.\r\n\t * @return {*} \"this\" when arguments are passed to allow method\r\n\t * chaining or the current value if no arguments are specified.\r\n\t */\r\n\tanchor: function (x, y) {\r\n\t\tif (x !== undefined && y !== undefined) {\r\n\t\t\tthis._anchor = new IgePoint2d(x, y);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\treturn this._anchor;\r\n\t},\r\n\r\n\t/**\r\n\t * Gets / sets the geometry x value.\r\n\t * @param {Number=} px The new x value in pixels.\r\n\t * @example #Set the width of the entity\r\n\t *     entity.width(40);\r\n\t * @return {*} \"this\" when arguments are passed to allow method\r\n\t * chaining or the current value if no arguments are specified.\r\n\t */\r\n\twidth: function (px, lockAspect) {\r\n\t\tif (px !== undefined) {\r\n\t\t\tif (lockAspect) {\r\n\t\t\t\t// Calculate the height from the change in width\r\n\t\t\t\tvar ratio = px / this._bounds2d.x;\r\n\t\t\t\tthis.height(this._bounds2d.y * ratio);\r\n\t\t\t}\r\n\r\n\t\t\tthis._bounds2d.x = px;\r\n\t\t\tthis._bounds2d.x2 = (px / 2);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\treturn this._bounds2d.x;\r\n\t},\r\n\r\n\t/**\r\n\t * Gets / sets the geometry y value.\r\n\t * @param {Number=} px The new y value in pixels.\r\n\t * @example #Set the height of the entity\r\n\t *     entity.height(40);\r\n\t * @return {*} \"this\" when arguments are passed to allow method\r\n\t * chaining or the current value if no arguments are specified.\r\n\t */\r\n\theight: function (px, lockAspect) {\r\n\t\tif (px !== undefined) {\r\n\t\t\tif (lockAspect) {\r\n\t\t\t\t// Calculate the width from the change in height\r\n\t\t\t\tvar ratio = px / this._bounds2d.y;\r\n\t\t\t\tthis.width(this._bounds2d.x * ratio);\r\n\t\t\t}\r\n\r\n\t\t\tthis._bounds2d.y = px;\r\n\t\t\tthis._bounds2d.y2 = (px / 2);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\treturn this._bounds2d.y;\r\n\t},\r\n\t\r\n\t/**\r\n\t * Gets / sets the 2d geometry of the entity. The x and y values are\r\n\t * relative to the center of the entity. This geometry is used when\r\n\t * rendering textures for the entity and positioning in world space as\r\n\t * well as UI positioning calculations. It holds no bearing on isometric\r\n\t * positioning.\r\n\t * @param {Number=} x The new x value in pixels.\r\n\t * @param {Number=} y The new y value in pixels.\r\n\t * @example #Set the dimensions of the entity (width and height)\r\n\t *     entity.bounds2d(40, 40);\r\n\t * @return {*} \"this\" when arguments are passed to allow method\r\n\t * chaining or the current value if no arguments are specified.\r\n\t */\r\n\tbounds2d: function (x, y) {\r\n\t\tif (x !== undefined && y !== undefined) {\r\n\t\t\tthis._bounds2d = new IgePoint2d(x, y, 0);\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\tif (x !== undefined && y === undefined) {\r\n\t\t\t// x is considered an IgePoint2d instance\r\n\t\t\tthis._bounds2d = new IgePoint2d(x.x, x.y);\r\n\t\t}\r\n\r\n\t\treturn this._bounds2d;\r\n\t},\r\n\r\n\t/**\r\n\t * Gets / sets the 3d geometry of the entity. The x and y values are\r\n\t * relative to the center of the entity and the z value is wholly\r\n\t * positive from the \"floor\". Used to define a 3d bounding cuboid for\r\n\t * the entity used in isometric depth sorting and hit testing.\r\n\t * @param {Number=} x The new x value in pixels.\r\n\t * @param {Number=} y The new y value in pixels.\r\n\t * @param {Number=} z The new z value in pixels.\r\n\t * @example #Set the dimensions of the entity (width, height and length)\r\n\t *     entity.bounds3d(40, 40, 20);\r\n\t * @return {*} \"this\" when arguments are passed to allow method\r\n\t * chaining or the current value if no arguments are specified.\r\n\t */\r\n\tbounds3d: function (x, y, z) {\r\n\t\tif (x !== undefined && y !== undefined && z !== undefined) {\r\n\t\t\tthis._bounds3d = new IgePoint3d(x, y, z);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\treturn this._bounds3d;\r\n\t},\r\n\r\n\t/**\r\n\t * @deprecated Use bounds3d instead\r\n\t * @param x\r\n\t * @param y\r\n\t * @param z\r\n\t */\r\n\tsize3d: function (x, y, z) {\r\n\t\tthis.log('size3d has been renamed to bounds3d but is exactly the same so please search/replace your code to update calls.', 'warning');\r\n\t},\r\n\r\n\t/**\r\n\t * Gets / sets the life span of the object in milliseconds. The life\r\n\t * span is how long the object will exist for before being automatically\r\n\t * destroyed.\r\n\t * @param {Number=} milliseconds The number of milliseconds the entity\r\n\t * will live for from the current time.\r\n\t * @param {Function=} deathCallback Optional callback method to call when\r\n\t * the entity is destroyed from end of lifespan.\r\n\t * @example #Set the lifespan of the entity to 2 seconds after which it will automatically be destroyed\r\n\t *     entity.lifeSpan(2000);\r\n\t * @return {*} \"this\" when arguments are passed to allow method\r\n\t * chaining or the current value if no arguments are specified.\r\n\t */\r\n\tlifeSpan: function (milliseconds, deathCallback) {\r\n\t\tif (milliseconds !== undefined) {\r\n\t\t\tthis.deathTime(ige._currentTime + milliseconds, deathCallback);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\treturn this.deathTime() - ige._currentTime;\r\n\t},\r\n\r\n\t/**\r\n\t * Gets / sets the timestamp in milliseconds that denotes the time\r\n\t * that the entity will be destroyed. The object checks it's own death\r\n\t * time during each tick and if the current time is greater than the\r\n\t * death time, the object will be destroyed.\r\n\t * @param {Number=} val The death time timestamp. This is a time relative\r\n\t * to the engine's start time of zero rather than the current time that\r\n\t * would be retrieved from new Date().getTime(). It is usually easier\r\n\t * to call lifeSpan() rather than setting the deathTime directly.\r\n\t * @param {Function=} deathCallback Optional callback method to call when\r\n\t * the entity is destroyed from end of lifespan.\r\n\t * @example #Set the death time of the entity to 60 seconds after engine start\r\n\t *     entity.deathTime(60000);\r\n\t * @return {*} \"this\" when arguments are passed to allow method\r\n\t * chaining or the current value if no arguments are specified.\r\n\t */\r\n\tdeathTime: function (val, deathCallback) {\r\n\t\tif (val !== undefined) {\r\n\t\t\tthis._deathTime = val;\r\n\t\t\t\r\n\t\t\tif (deathCallback !== undefined) {\r\n\t\t\t\tthis._deathCallBack = deathCallback;\r\n\t\t\t}\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\treturn this._deathTime;\r\n\t},\r\n\r\n\t/**\r\n\t * Gets / sets the entity opacity from 0.0 to 1.0.\r\n\t * @param {Number=} val The opacity value.\r\n\t * @example #Set the entity to half-visible\r\n\t *     entity.opacity(0.5);\r\n\t * @example #Set the entity to fully-visible\r\n\t *     entity.opacity(1.0);\r\n\t * @return {*} \"this\" when arguments are passed to allow method\r\n\t * chaining or the current value if no arguments are specified.\r\n\t */\r\n\topacity: function (val) {\r\n\t\tif (val !== undefined) {\r\n\t\t\tthis._opacity = val;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\treturn this._opacity;\r\n\t},\r\n\r\n\t/**\r\n\t * Gets / sets the noAabb flag that determines if the entity's axis\r\n\t * aligned bounding box should be calculated every tick or not. If\r\n\t * you don't need the AABB data (for instance if you don't need to\r\n\t * detect mouse events on this entity or you DO want the AABB to be\r\n\t * updated but want to control it manually by calling aabb(true) \r\n\t * yourself as needed).\r\n\t * @param {Boolean=} val If set to true will turn off AABB calculation.\r\n\t * @returns {*}\r\n\t */\r\n\tnoAabb: function (val) {\r\n\t\tif (val !== undefined) {\r\n\t\t\tthis._noAabb = val;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\treturn this._noAabb;\r\n\t},\r\n\r\n\t/**\r\n\t * Gets / sets the texture to use when rendering the entity.\r\n\t * @param {IgeTexture=} texture The texture object.\r\n\t * @example #Set the entity texture (image)\r\n\t *     var texture = new IgeTexture('path/to/some/texture.png');\r\n\t *     entity.texture(texture);\r\n\t * @return {*} \"this\" when arguments are passed to allow method\r\n\t * chaining or the current value if no arguments are specified.\r\n\t */\r\n\ttexture: function (texture) {\r\n\t\tif (texture !== undefined) {\r\n\t\t\tthis._texture = texture;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\treturn this._texture;\r\n\t},\r\n\r\n\t/**\r\n\t * Gets / sets the current texture cell used when rendering the game\r\n\t * object's texture. If the texture is not cell-based, this value is\r\n\t * ignored.\r\n\t * @param {Number=} val The cell index.\r\n\t * @example #Set the entity texture as a 4x4 cell sheet and then set the cell to use\r\n\t *     var texture = new IgeCellSheet('path/to/some/cellSheet.png', 4, 4);\r\n\t *     entity.texture(texture)\r\n\t *         .cell(3);\r\n\t * @return {*} \"this\" when arguments are passed to allow method\r\n\t * chaining or the current value if no arguments are specified.\r\n\t */\r\n\tcell: function (val) {\r\n\t\tif (val > 0 || val === null) {\r\n\t\t\tthis._cell = val;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\treturn this._cell;\r\n\t},\r\n\r\n\t/**\r\n\t * Gets / sets the current texture cell used when rendering the game\r\n\t * object's texture. If the texture is not cell-based, this value is\r\n\t * ignored. This differs from cell() in that it accepts a string id\r\n\t * as the cell\r\n\t * @param {Number=} val The cell id.\r\n\t * @example #Set the entity texture as a sprite sheet with cell ids and then set the cell to use\r\n\t *     var texture = new IgeSpriteSheet('path/to/some/cellSheet.png', [\r\n\t *         [0, 0, 40, 40, 'robotHead'],\r\n\t *         [40, 0, 40, 40, 'humanHead'],\r\n\t *     ]);\r\n\t *     \r\n\t *     // Assign the texture, set the cell to use and then\r\n\t *     // set the entity to the size of the cell automatically!\r\n\t *     entity.texture(texture)\r\n\t *         .cellById('robotHead')\r\n\t *         .dimensionsFromCell();\r\n\t * @return {*} \"this\" when arguments are passed to allow method\r\n\t * chaining or the current value if no arguments are specified.\r\n\t */\r\n\tcellById: function (val) {\r\n\t\tif (val !== undefined) {\r\n\t\t\tif (this._texture) {\r\n\t\t\t\t// Find the cell index this id corresponds to\r\n\t\t\t\tvar i,\r\n\t\t\t\t\ttex = this._texture,\r\n\t\t\t\t\tcells = tex._cells;\r\n\r\n\t\t\t\tfor (i = 1; i < cells.length; i++) {\r\n\t\t\t\t\tif (cells[i][4] === val) {\r\n\t\t\t\t\t\t// Found the cell id so assign this cell index\r\n\t\t\t\t\t\tthis.cell(i);\r\n\t\t\t\t\t\treturn this;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// We were unable to find the cell index from the cell\r\n\t\t\t\t// id so produce an error\r\n\t\t\t\tthis.log('Could not find the cell id \"' + val + '\" in the assigned entity texture ' + tex.id() + ', please check your sprite sheet (texture) cell definition to ensure the cell id \"' + val + '\" has been assigned to a cell!', 'error');\r\n\t\t\t} else {\r\n\t\t\t\tthis.log('Cannot assign cell index from cell ID until an IgeSpriteSheet has been set as the texture for this entity. Please set the texture before calling cellById().', 'error');\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn this._cell;\r\n\t},\r\n\r\n\t/**\r\n\t * Sets the geometry of the entity to match the width and height\r\n\t * of the assigned texture.\r\n\t * @param {Number=} percent The percentage size to resize to.\r\n\t * @example #Set the entity dimensions based on the assigned texture\r\n\t *     var texture = new IgeTexture('path/to/some/texture.png');\r\n\t *\t\r\n\t *     // Assign the texture, and then set the entity to the\r\n\t *     // size of the texture automatically!\r\n\t *     entity.texture(texture)\r\n\t *         .dimensionsFromTexture();\r\n\t * @return {*} The object this method was called from to allow\r\n\t * method chaining.\r\n\t */\r\n\tdimensionsFromTexture: function (percent) {\r\n\t\tif (this._texture) {\r\n\t\t\tif (percent === undefined) {\r\n\t\t\t\tthis.width(this._texture._sizeX);\r\n\t\t\t\tthis.height(this._texture._sizeY);\r\n\t\t\t} else {\r\n\t\t\t\tthis.width(Math.floor(this._texture._sizeX / 100 * percent));\r\n\t\t\t\tthis.height(Math.floor(this._texture._sizeY / 100 * percent));\r\n\t\t\t}\r\n\r\n\t\t\t// Recalculate localAabb\r\n\t\t\tthis.localAabb(true);\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * Sets the geometry of the entity to match the width and height\r\n\t * of the assigned texture cell. If the texture is not cell-based\r\n\t * the entire texture width / height will be used.\r\n\t * @param {Number=} percent The percentage size to resize to.\r\n\t * @example #Set the entity dimensions based on the assigned texture and cell\r\n\t *     var texture = new IgeSpriteSheet('path/to/some/cellSheet.png', [\r\n\t *         [0, 0, 40, 40, 'robotHead'],\r\n\t *         [40, 0, 40, 40, 'humanHead'],\r\n\t *     ]);\r\n\t *\r\n\t *     // Assign the texture, set the cell to use and then\r\n\t *     // set the entity to the size of the cell automatically!\r\n\t *     entity.texture(texture)\r\n\t *         .cellById('robotHead')\r\n\t *         .dimensionsFromCell();\r\n\t * @return {*} The object this method was called from to allow\r\n\t * method chaining\r\n\t */\r\n\tdimensionsFromCell: function (percent) {\r\n\t\tif (this._texture) {\r\n\t\t\tif (this._texture._cells && this._texture._cells.length) {\r\n\t\t\t\tif (percent === undefined) {\r\n\t\t\t\t\tthis.width(this._texture._cells[this._cell][2]);\r\n\t\t\t\t\tthis.height(this._texture._cells[this._cell][3]);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.width(Math.floor(this._texture._cells[this._cell][2] / 100 * percent));\r\n\t\t\t\t\tthis.height(Math.floor(this._texture._cells[this._cell][3] / 100 * percent));\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t// Recalculate localAabb\r\n\t\t\t\tthis.localAabb(true);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * Gets / sets the highlight mode. True is on false is off.\r\n\t * @param {Boolean} val The highlight mode true, false or optionally a string representing a globalCompositeOperation.\r\n\t * https://developer.mozilla.org/en-US/docs/Web/API/Canvas_API/Tutorial/Compositing\r\n\t * @example #Set the entity to render highlighted\r\n\t *     entity.highlight(true);\r\n\t * @example #Set the entity to render highlighted using 'screen' globalCompositeOperation\r\n\t *     entity.highlight('screen');\r\n\t * @example #Get the current highlight state\r\n\t *     var isHighlighted = entity.highlight();\r\n\t * @return {*} \"this\" when arguments are passed to allow method\r\n\t * chaining or the current value if no arguments are specified.\r\n\t */\r\n\thighlight: function (val) {\r\n\t\tif (val !== undefined) {\r\n\t\t\tthis._highlight = val;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\treturn this._highlight;\r\n\t},\r\n\r\n\t/**\r\n\t * Returns the absolute world position of the entity as an\r\n\t * IgePoint3d.\r\n\t * @example #Get the world position of the entity\r\n\t *     var wordPos = entity.worldPosition();\r\n\t * @return {IgePoint3d} The absolute world position of the\r\n\t * entity.\r\n\t */\r\n\tworldPosition: function () {\r\n\t\treturn new IgePoint3d(this._worldMatrix.matrix[2], this._worldMatrix.matrix[5], 0);\r\n\t},\r\n\r\n\t/**\r\n\t * Returns the absolute world rotation z of the entity as a\r\n\t * value in radians.\r\n\t * @example #Get the world rotation of the entity's z axis\r\n\t *     var wordRot = entity.worldRotationZ();\r\n\t * @return {Number} The absolute world rotation z of the\r\n\t * entity.\r\n\t */\r\n\tworldRotationZ: function () {\r\n\t\treturn this._worldMatrix.rotationRadians();\r\n\t},\r\n\r\n\t/**\r\n\t * Converts an array of points from local space to this entity's\r\n\t * world space using it's world transform matrix. This will alter\r\n\t * the points passed in the array directly.\r\n\t * @param {Array} points The array of IgePoints to convert.\r\n\t */\r\n\tlocalToWorld: function (points, viewport, inverse) {\r\n\t\tviewport = viewport || ige._currentViewport;\r\n\t\t\r\n\t\tif (this._adjustmentMatrix) {\r\n\t\t\t// Apply the optional adjustment matrix\r\n\t\t\tthis._worldMatrix.multiply(this._adjustmentMatrix);\r\n\t\t}\r\n\t\t\r\n\t\tif (!inverse) {\r\n\t\t\tthis._worldMatrix.transform(points, this);\r\n\t\t} else {\r\n\t\t\tthis._localMatrix.transform(points, this);\r\n\t\t\t//this._worldMatrix.getInverse().transform(points, this);\r\n\t\t}\r\n\r\n\t\tif (this._ignoreCamera) {\r\n\t\t\t//viewport.camera._worldMatrix.transform(points, this);\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Converts a point from local space to this entity's world space\r\n\t * using it's world transform matrix. This will alter the point's\r\n\t * data directly.\r\n\t * @param {IgePoint3d} point The IgePoint3d to convert.\r\n\t */\r\n\tlocalToWorldPoint: function (point, viewport) {\r\n\t\tviewport = viewport || ige._currentViewport;\r\n\t\tthis._worldMatrix.transform([point], this);\r\n\t},\r\n\t\r\n\t/**\r\n\t * Returns the screen position of the entity as an IgePoint3d where x is the\r\n\t * \"left\" and y is the \"top\", useful for positioning HTML elements at the\r\n\t * screen location of an IGE entity. This method assumes that the top-left\r\n\t * of the main canvas element is at 0, 0. If not you can adjust the values\r\n\t * yourself to allow for offset.\r\n\t * @example #Get the screen position of the entity\r\n\t *     var screenPos = entity.screenPosition();\r\n\t * @return {IgePoint3d} The screen position of the entity.\r\n\t */\r\n\tscreenPosition: function () {\r\n\t\treturn new IgePoint3d(\r\n\t\t\tMath.floor(((this._worldMatrix.matrix[2] - ige._currentCamera._translate.x) * ige._currentCamera._scale.x) + ige._bounds2d.x2),\r\n\t\t\tMath.floor(((this._worldMatrix.matrix[5] - ige._currentCamera._translate.y) * ige._currentCamera._scale.y) + ige._bounds2d.y2),\r\n\t\t\t0\r\n\t\t);\r\n\t},\r\n\t\r\n\t/**\r\n\t * @deprecated Use bounds3dPolygon instead\r\n\t */\r\n\tlocalIsoBoundsPoly: function () {},\r\n\t\r\n\tlocalBounds3dPolygon: function (recalculate) {\r\n\t\tif (this._bounds3dPolygonDirty || !this._localBounds3dPolygon || recalculate) {\r\n\t\t\tvar geom = this._bounds3d,\r\n\t\t\t\tpoly = new IgePoly2d(),\r\n\t\t\t\t// Bottom face\r\n\t\t\t\tbf2 = Math.toIso(+(geom.x2), -(geom.y2),  -(geom.z2)),\r\n\t\t\t\tbf3 = Math.toIso(+(geom.x2), +(geom.y2),  -(geom.z2)),\r\n\t\t\t\tbf4 = Math.toIso(-(geom.x2), +(geom.y2),  -(geom.z2)),\r\n\t\t\t\t// Top face\r\n\t\t\t\ttf1 = Math.toIso(-(geom.x2), -(geom.y2),  (geom.z2)),\r\n\t\t\t\ttf2 = Math.toIso(+(geom.x2), -(geom.y2),  (geom.z2)),\r\n\t\t\t\ttf4 = Math.toIso(-(geom.x2), +(geom.y2),  (geom.z2));\r\n\t\t\t\r\n\t\t\tpoly.addPoint(tf1.x, tf1.y)\r\n\t\t\t\t.addPoint(tf2.x, tf2.y)\r\n\t\t\t\t.addPoint(bf2.x, bf2.y)\r\n\t\t\t\t.addPoint(bf3.x, bf3.y)\r\n\t\t\t\t.addPoint(bf4.x, bf4.y)\r\n\t\t\t\t.addPoint(tf4.x, tf4.y)\r\n\t\t\t\t.addPoint(tf1.x, tf1.y);\r\n\t\t\t\r\n\t\t\tthis._localBounds3dPolygon = poly;\r\n\t\t\tthis._bounds3dPolygonDirty = false;\r\n\t\t}\r\n\t\t\r\n\t\treturn this._localBounds3dPolygon;\r\n\t},\r\n\t\r\n\t/**\r\n\t * @deprecated Use bounds3dPolygon instead\r\n\t */\r\n\tisoBoundsPoly: function () {},\r\n\t\r\n\tbounds3dPolygon: function (recalculate) {\r\n\t\tif (this._bounds3dPolygonDirty || !this._bounds3dPolygon || recalculate) {\r\n\t\t\tvar poly = this.localBounds3dPolygon(recalculate).clone();\r\n\t\t\t\r\n\t\t\t// Convert local co-ordinates to world based on entities world matrix\r\n\t\t\tthis.localToWorld(poly._poly);\r\n\t\t\t\r\n\t\t\tthis._bounds3dPolygon = poly;\r\n\t\t}\r\n\t\t\r\n\t\treturn this._bounds3dPolygon;\r\n\t},\r\n\r\n\t/**\r\n\t * @deprecated Use mouseInBounds3d instead\r\n\t */\r\n\tmouseInIsoBounds: function () {},\r\n\t\r\n\tmouseInBounds3d: function (recalculate) {\r\n\t\tvar poly = this.localBounds3dPolygon(recalculate),\r\n\t\t\tmp = this.mousePos();\r\n\t\t\r\n\t\treturn poly.pointInside(mp);\r\n\t},\r\n\r\n\t/**\r\n\t * Calculates and returns the current axis-aligned bounding box in\r\n\t * world co-ordinates.\r\n\t * @param {Boolean=} recalculate If true this will force the\r\n\t * recalculation of the AABB instead of returning a cached\r\n\t * value.\r\n\t * @example #Get the entity axis-aligned bounding box dimensions\r\n\t *     var aabb = entity.aabb();\r\n\t *     \r\n\t *     console.log(aabb.x);\r\n\t *     console.log(aabb.y);\r\n\t *     console.log(aabb.width);\r\n\t *     console.log(aabb.height);\r\n\t * @example #Get the entity axis-aligned bounding box dimensions forcing the engine to update the values first\r\n\t *     var aabb = entity.aabb(true); // Call with true to force update\r\n\t *     \r\n\t *     console.log(aabb.x);\r\n\t *     console.log(aabb.y);\r\n\t *     console.log(aabb.width);\r\n\t *     console.log(aabb.height);\r\n\t * @return {IgeRect} The axis-aligned bounding box in world co-ordinates.\r\n\t */\r\n\taabb: function (recalculate, inverse) {\r\n\t\tif (this._aabbDirty || !this._aabb || recalculate) { //  && this.newFrame()\r\n\t\t\tvar poly = new IgePoly2d(),\r\n\t\t\t\tminX, minY,\r\n\t\t\t\tmaxX, maxY,\r\n\t\t\t\tbox,\r\n\t\t\t\tanc = this._anchor,\r\n\t\t\t\tancX = anc.x,\r\n\t\t\t\tancY = anc.y,\r\n\t\t\t\tgeom,\r\n\t\t\t\tgeomX2,\r\n\t\t\t\tgeomY2,\r\n\t\t\t\tx, y;\r\n\r\n\t\t\tgeom = this._bounds2d;\r\n\t\t\tgeomX2 = geom.x2;\r\n\t\t\tgeomY2 = geom.y2;\r\n\t\t\t\r\n\t\t\tx = geomX2;\r\n\t\t\ty = geomY2;\r\n\r\n\t\t\tpoly.addPoint(-x + ancX, -y + ancY);\r\n\t\t\tpoly.addPoint(x + ancX, -y + ancY);\r\n\t\t\tpoly.addPoint(x + ancX, y + ancY);\r\n\t\t\tpoly.addPoint(-x + ancX, y + ancY);\r\n\r\n\t\t\tthis._renderPos = {x: -x + ancX, y: -y + ancY};\r\n\r\n\t\t\t// Convert the poly's points from local space to world space\r\n\t\t\tthis.localToWorld(poly._poly, null, inverse);\r\n\r\n\t\t\t// Get the extents of the newly transformed poly\r\n\t\t\tminX = Math.min(\r\n\t\t\t\tpoly._poly[0].x,\r\n\t\t\t\tpoly._poly[1].x,\r\n\t\t\t\tpoly._poly[2].x,\r\n\t\t\t\tpoly._poly[3].x\r\n\t\t\t);\r\n\r\n\t\t\tminY = Math.min(\r\n\t\t\t\tpoly._poly[0].y,\r\n\t\t\t\tpoly._poly[1].y,\r\n\t\t\t\tpoly._poly[2].y,\r\n\t\t\t\tpoly._poly[3].y\r\n\t\t\t);\r\n\r\n\t\t\tmaxX = Math.max(\r\n\t\t\t\tpoly._poly[0].x,\r\n\t\t\t\tpoly._poly[1].x,\r\n\t\t\t\tpoly._poly[2].x,\r\n\t\t\t\tpoly._poly[3].x\r\n\t\t\t);\r\n\r\n\t\t\tmaxY = Math.max(\r\n\t\t\t\tpoly._poly[0].y,\r\n\t\t\t\tpoly._poly[1].y,\r\n\t\t\t\tpoly._poly[2].y,\r\n\t\t\t\tpoly._poly[3].y\r\n\t\t\t);\r\n\r\n\t\t\tbox = new IgeRect(minX, minY, maxX - minX, maxY - minY);\r\n\r\n\t\t\tthis._aabb = box;\r\n\t\t\tthis._aabbDirty = false;\r\n\t\t}\r\n\r\n\t\treturn this._aabb;\r\n\t},\r\n\r\n\t/**\r\n\t * Calculates and returns the local axis-aligned bounding box\r\n\t * for the entity. This is the AABB relative to the entity's\r\n\t * center point.\r\n\t * @param {Boolean=} recalculate If true this will force the\r\n\t * recalculation of the local AABB instead of returning a cached\r\n\t * value.\r\n\t * @example #Get the entity local axis-aligned bounding box dimensions\r\n\t *     var aabb = entity.localAabb();\r\n\t *\t\r\n\t *     console.log(aabb.x);\r\n\t *     console.log(aabb.y);\r\n\t *     console.log(aabb.width);\r\n\t *     console.log(aabb.height);\r\n\t * @example #Get the entity local axis-aligned bounding box dimensions forcing the engine to update the values first\r\n\t *     var aabb = entity.localAabb(true); // Call with true to force update\r\n\t *\t\r\n\t *     console.log(aabb.x);\r\n\t *     console.log(aabb.y);\r\n\t *     console.log(aabb.width);\r\n\t *     console.log(aabb.height);\r\n\t * @return {IgeRect} The local AABB.\r\n\t */\r\n\tlocalAabb: function (recalculate) {\r\n\t\tif (!this._localAabb || recalculate) {\r\n\t\t\tvar aabb = this.aabb();\r\n\t\t\tthis._localAabb = new IgeRect(-Math.floor(aabb.width / 2), -Math.floor(aabb.height / 2), Math.floor(aabb.width), Math.floor(aabb.height));\r\n\t\t}\r\n\r\n\t\treturn this._localAabb;\r\n\t},\r\n\r\n\t/**\r\n\t * Calculates the axis-aligned bounding box for this entity, including\r\n\t * all child entity bounding boxes and returns the final composite\r\n\t * bounds.\r\n\t * @example #Get the composite AABB\r\n\t *     var entity = new IgeEntity(),\r\n\t *         aabb = entity.compositeAabb();\r\n\t * @return {IgeRect}\r\n\t */\r\n\tcompositeAabb: function (inverse) {\r\n\t\tvar arr = this._children,\r\n\t\t\tarrCount,\r\n\t\t\trect;\r\n\t\r\n\t\tif (inverse) {\r\n\t\t\trect = this.aabb(true, inverse).clone();\r\n\t\t} else {\r\n\t\t\trect = this.aabb().clone();\t\r\n\t\t}\r\n\r\n\t\t// Now loop all children and get the aabb for each of them\r\n\t\t// them add those bounds to the current rect\r\n\t\tif (arr) {\r\n\t\t\tarrCount = arr.length;\r\n\r\n\t\t\twhile (arrCount--) {\r\n\t\t\t\trect.thisCombineRect(arr[arrCount].compositeAabb(inverse));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn rect;\r\n\t},\r\n\r\n\t/**\r\n\t * Gets / sets the composite stream flag. If set to true, any objects\r\n\t * mounted to this one will have their streamMode() set to the same\r\n\t * value as this entity and will also have their compositeStream flag\r\n\t * set to true. This allows you to easily automatically stream any\r\n\t * objects mounted to a root object and stream them all.\r\n\t * @param val\r\n\t * @returns {*}\r\n\t */\r\n\tcompositeStream: function (val) {\r\n\t\tif (val !== undefined) {\r\n\t\t\tthis._compositeStream = val;\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\treturn this._compositeStream;\r\n\t},\r\n\r\n\t/**\r\n\t * Override the _childMounted method and apply entity-based flags.\r\n\t * @param {IgeEntity} child\r\n\t * @private\r\n\t */\r\n\t_childMounted: function (child) {\r\n\t\t// Check if we need to set the compositeStream and streamMode\r\n\t\tif (this.compositeStream()) {\r\n\t\t\tchild.compositeStream(true);\r\n\t\t\tchild.streamMode(this.streamMode());\r\n\t\t\tchild.streamControl(this.streamControl());\r\n\t\t}\r\n\t\t\r\n\t\tIgeObject.prototype._childMounted.call(this, child);\r\n\t\t\t\t\r\n\t\t// Check if we are compositeCached and update the cache\r\n\t\tif (this.compositeCache()) {\r\n\t\t\tthis.cacheDirty(true);\r\n\t\t}\r\n\t},\r\n\t\r\n\t/**\r\n\t * Takes two values and returns them as an array where index [0]\r\n\t * is the y argument and index[1] is the x argument. This method\r\n\t * is used specifically in the 3d bounds intersection process to\r\n\t * determine entity depth sorting.\r\n\t * @param {Number} x The first value.\r\n\t * @param {Number} y The second value.\r\n\t * @return {Array} The swapped arguments.\r\n\t * @private\r\n\t */\r\n\t_swapVars: function (x, y) {\r\n\t\treturn [y, x];\r\n\t},\r\n\r\n\t_internalsOverlap: function (x0, x1, y0, y1) {\r\n\t\tvar tempSwap;\r\n\r\n\t\tif (x0 > x1) {\r\n\t\t\ttempSwap = this._swapVars(x0, x1);\r\n\t\t\tx0 = tempSwap[0];\r\n\t\t\tx1 = tempSwap[1];\r\n\t\t}\r\n\r\n\t\tif (y0 > y1) {\r\n\t\t\ttempSwap = this._swapVars(y0, y1);\r\n\t\t\ty0 = tempSwap[0];\r\n\t\t\ty1 = tempSwap[1];\r\n\t\t}\r\n\r\n\t\tif (x0 > y0) {\r\n\t\t\ttempSwap = this._swapVars(x0, y0);\r\n\t\t\tx0 = tempSwap[0];\r\n\t\t\ty0 = tempSwap[1];\r\n\r\n\t\t\ttempSwap = this._swapVars(x1, y1);\r\n\t\t\tx1 = tempSwap[0];\r\n\t\t\ty1 = tempSwap[1];\r\n\t\t}\r\n\r\n\t\treturn y0 < x1;\r\n\t},\r\n\r\n\t_projectionOverlap: function (otherObject) {\r\n\t\tvar thisG3d = this._bounds3d,\r\n\t\t\tthisMin = {\r\n\t\t\t\tx: this._translate.x - thisG3d.x / 2,\r\n\t\t\t\ty: this._translate.y - thisG3d.y / 2,\r\n\t\t\t\tz: this._translate.z - thisG3d.z\r\n\t\t\t},\r\n\t\t\tthisMax = {\r\n\t\t\t\tx: this._translate.x + thisG3d.x / 2,\r\n\t\t\t\ty: this._translate.y + thisG3d.y / 2,\r\n\t\t\t\tz: this._translate.z + thisG3d.z\r\n\t\t\t},\r\n\t\t\totherG3d = otherObject._bounds3d,\r\n\t\t\totherMin = {\r\n\t\t\t\tx: otherObject._translate.x - otherG3d.x / 2,\r\n\t\t\t\ty: otherObject._translate.y - otherG3d.y / 2,\r\n\t\t\t\tz: otherObject._translate.z - otherG3d.z\r\n\t\t\t},\r\n\t\t\totherMax = {\r\n\t\t\t\tx: otherObject._translate.x + otherG3d.x / 2,\r\n\t\t\t\ty: otherObject._translate.y + otherG3d.y / 2,\r\n\t\t\t\tz: otherObject._translate.z + otherG3d.z\r\n\t\t\t};\r\n\r\n\t\treturn this._internalsOverlap(\r\n\t\t\tthisMin.x - thisMax.y,\r\n\t\t\tthisMax.x - thisMin.y,\r\n\t\t\totherMin.x - otherMax.y,\r\n\t\t\totherMax.x - otherMin.y\r\n\t\t) && this._internalsOverlap(\r\n\t\t\tthisMin.x - thisMax.z,\r\n\t\t\tthisMax.x - thisMin.z,\r\n\t\t\totherMin.x - otherMax.z,\r\n\t\t\totherMax.x - otherMin.z\r\n\t\t) && this._internalsOverlap(\r\n\t\t\tthisMin.z - thisMax.y,\r\n\t\t\tthisMax.z - thisMin.y,\r\n\t\t\totherMin.z - otherMax.y,\r\n\t\t\totherMax.z - otherMin.y\r\n\t\t);\r\n\t},\r\n\r\n\t/**\r\n\t * Compares the current entity's 3d bounds to the passed entity and\r\n\t * determines if the current entity is \"behind\" the passed one. If an\r\n\t * entity is behind another, it is drawn first during the scenegraph\r\n\t * render phase.\r\n\t * @param {IgeEntity} otherObject The other entity to check this\r\n\t * entity's 3d bounds against.\r\n\t * @example #Determine if this entity is \"behind\" another entity based on the current depth-sort \r\n\t *     var behind = entity.isBehind(otherEntity);\r\n\t * @return {Boolean} If true this entity is \"behind\" the passed entity\r\n\t * or false if not.\r\n\t */\r\n\tisBehind: function (otherObject) {\r\n\t\tvar thisG3d = this._bounds3d,\r\n\t\t\totherG3d = otherObject._bounds3d,\r\n\t\t\tthisTranslate = this._translate.clone(),\r\n\t\t\totherTranslate = otherObject._translate.clone();\r\n\r\n\t\t// thisTranslate.thisToIso();\r\n\t\t// otherTranslate.thisToIso();\r\n\r\n\t\tif(this._origin.x !== 0.5 || this._origin.y !== 0.5) {\r\n\t\t\tthisTranslate.x += this._bounds2d.x * (0.5 - this._origin.x)\r\n\t\t\tthisTranslate.y += this._bounds2d.y * (0.5 - this._origin.y)\r\n\t\t}\r\n\t\tif(otherObject._origin.x !== 0.5 || otherObject._origin.y !== 0.5) {\r\n\t\t\totherTranslate.x += otherObject._bounds2d.x * (0.5 - otherObject._origin.x)\r\n\t\t\totherTranslate.y += otherObject._bounds2d.y * (0.5 - otherObject._origin.y)\r\n\t\t}\r\n\r\n\t\tvar\r\n\t\t\tthisX = thisTranslate.x,\r\n\t\t\tthisY = thisTranslate.y,\r\n\t\t\totherX = otherTranslate.x,\r\n\t\t\totherY = otherTranslate.y,\r\n\t\t\tthisMin = new IgePoint3d(\r\n\t\t\t\tthisX - thisG3d.x / 2,\r\n\t\t\t\tthisY - thisG3d.y / 2,\r\n\t\t\t\tthis._translate.z\r\n\t\t\t),\r\n\t\t\tthisMax = new IgePoint3d(\r\n\t\t\t\tthisX + thisG3d.x / 2,\r\n\t\t\t\tthisY + thisG3d.y / 2,\r\n\t\t\t\tthis._translate.z + thisG3d.z\r\n\t\t\t),\t\t\r\n\t\t\totherMin = new IgePoint3d(\r\n\t\t\t\totherX - otherG3d.x / 2,\r\n\t\t\t\totherY - otherG3d.y / 2,\r\n\t\t\t\totherObject._translate.z\r\n\t\t\t),\r\n\t\t\totherMax = new IgePoint3d(\r\n\t\t\t\totherX + otherG3d.x / 2,\r\n\t\t\t\totherY + otherG3d.y / 2,\r\n\t\t\t\totherObject._translate.z + otherG3d.z\r\n\t\t\t);\r\n\r\n\t\tif (thisMax.x <= otherMin.x) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (otherMax.x <= thisMin.x) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\tif (thisMax.y <= otherMin.y) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (otherMax.y <= thisMin.y) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\tif (thisMax.z <= otherMin.z) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (otherMax.z <= thisMin.z) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\treturn (thisX + thisY + this._translate.z) > (otherX + otherY + otherObject._translate.z);\r\n\t},\r\n\r\n\t/**\r\n\t * Get / set the flag determining if this entity will respond\r\n\t * to mouse interaction or not. When you set a mouse* event e.g.\r\n\t * mouseUp, mouseOver etc this flag will automatically be reset\r\n\t * to true.\r\n\t * @param {Boolean=} val The flag value true or false.\r\n\t * @example #Set entity to ignore mouse events\r\n\t *     entity.mouseEventsActive(false);\r\n\t * @example #Set entity to receive mouse events\r\n\t *     entity.mouseEventsActive(true);\r\n\t * @example #Get current flag value\r\n\t *     var val = entity.mouseEventsActive();\r\n\t * @return {*} \"this\" when arguments are passed to allow method\r\n\t * chaining or the current value if no arguments are specified.\r\n\t */\r\n\tmouseEventsActive: function (val) {\r\n\t\tif (val !== undefined) {\r\n\t\t\tthis._mouseEventsActive = val;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\treturn this._mouseEventsActive;\r\n\t},\r\n\r\n\t/**\r\n\t * Sets the _ignoreCamera internal flag to the value passed for this\r\n\t * and all child entities down the scenegraph.\r\n\t * @param val\r\n\t */\r\n\tignoreCameraComposite: function (val) {\r\n\t\tvar i,\r\n\t\t\tarr = this._children,\r\n\t\t\tarrCount = arr.length;\r\n\t\t\r\n\t\tthis._ignoreCamera = val;\r\n\t\t\r\n\t\tfor (i = 0; i < arrCount; i++) {\r\n\t\t\tif (arr[i].ignoreCameraComposite) {\r\n\t\t\t\tarr[i].ignoreCameraComposite(val);\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Determines if the frame alternator value for this entity\r\n\t * matches the engine's frame alternator value. The entity's\r\n\t * frame alternator value will be set to match the engine's\r\n\t * after each call to the entity.tick() method so the return\r\n\t * value of this method can be used to determine if the tick()\r\n\t * method has already been run for this entity.\r\n\t *\r\n\t * This is useful if you have multiple viewports which will\r\n\t * cause the entity tick() method to fire once for each viewport\r\n\t * but you only want to execute update code such as movement etc\r\n\t * on the first time the tick() method is called.\r\n\t * \r\n\t * @example #Determine if the entity has already had it's tick method called\r\n\t *     var tickAlreadyCalled = entity.newFrame();\r\n\t * @return {Boolean} If false, the entity's tick method has\r\n\t * not yet been processed for this tick.\r\n\t */\r\n\tnewFrame: function () {\r\n\t\treturn ige._frameAlternator !== this._frameAlternatorCurrent;\r\n\t},\r\n\r\n\t/**\r\n\t * Sets the canvas context transform properties to match the the game\r\n\t * object's current transform values.\r\n\t * @param {CanvasRenderingContext2D} ctx The canvas context to apply\r\n\t * the transformation matrix to.\r\n\t * @example #Transform a canvas context to the entity's local matrix values\r\n\t *     var canvas = document.createElement('canvas');\r\n\t *     canvas.width = 800;\r\n\t *     canvas.height = 600;\r\n\t *\r\n\t *     var ctx = canvas.getContext('2d');\r\n\t *     entity._transformContext(ctx);\r\n\t * @private\r\n\t */\r\n\t_transformContext: function (ctx, inverse) {\r\n\t\tif (this._parent) {\r\n\t\t\tctx.globalAlpha = this._computedOpacity = this._parent._computedOpacity * this._opacity;\r\n\t\t} else {\r\n\t\t\tctx.globalAlpha = this._computedOpacity = this._opacity;\r\n\t\t}\r\n\r\n\t\tif (!inverse) {\r\n\t\t\tthis._localMatrix.transformRenderingContext(ctx);\r\n\t\t} else {\r\n\t\t\tthis._localMatrix.getInverse().transformRenderingContext(ctx);\r\n\t\t}\r\n\t},\r\n\t\r\n\tmouseAlwaysInside: function (val) {\r\n\t\tif (val !== undefined) {\r\n\t\t\tthis._mouseAlwaysInside = val;\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\treturn this._mouseAlwaysInside;\r\n\t},\r\n\t\r\n\t/**\r\n\t * Processes the updates required each render frame. Any code in the update()\r\n\t * method will be called ONCE for each render frame BEFORE the tick() method.\r\n\t * This differs from the tick() method in that the tick method can be called\r\n\t * multiple times during a render frame depending on how many viewports your\r\n\t * simulation is being rendered to, whereas the update() method is only called\r\n\t * once. It is therefore the perfect place to put code that will control your\r\n\t * entity's motion, AI etc.\r\n\t * @param {CanvasRenderingContext2D} ctx The canvas context to render to.\r\n\t */\r\n\tupdate: function (ctx, tickDelta) {\r\n\t\t// Check if the entity should still exist\r\n\t\tif (this._deathTime !== undefined && this._deathTime <= ige._tickStart) {\r\n\t\t\t// Check if the deathCallBack was set\r\n\t\t\tif (this._deathCallBack) {\r\n\t\t\t\tthis._deathCallBack.apply(this);\r\n\t\t\t\tdelete this._deathCallback;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t// The entity should be removed because it has died\r\n\t\t\tthis.destroy();\r\n\t\t} else {\r\n\t\t\t// Check that the entity has been born\r\n\t\t\tif (this._bornTime === undefined || ige._currentTime >= this._bornTime) {\r\n\t\t\t\t// Remove the stream data cache\r\n\t\t\t\tdelete this._streamDataCache;\r\n\t\r\n\t\t\t\t// Process any behaviours assigned to the entity\r\n\t\t\t\tthis._processUpdateBehaviours(ctx, tickDelta);\r\n\t\t\t\t\r\n\t\t\t\t// Process velocity\r\n\t\t\t\tif (this._velocity.x || this._velocity.y) {\r\n\t\t\t\t\tthis._translate.x += (this._velocity.x / 16) * tickDelta;\r\n\t\t\t\t\tthis._translate.y += (this._velocity.y / 16) * tickDelta;\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif (this._timeStream.length) {\r\n\t\t\t\t\t// Process any interpolation\r\n\t\t\t\t\tthis._processInterpolate(ige._tickStart - ige.network.stream._renderLatency);\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// Check for changes to the transform values\r\n\t\t\t\t// directly without calling the transform methods\r\n\t\t\t\tthis.updateTransform();\r\n\t\r\n\t\t\t\tif (!this._noAabb && this._aabbDirty) {\r\n\t\t\t\t\t// Update the aabb\r\n\t\t\t\t\tthis.aabb();\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tthis._oldTranslate = this._translate.clone();\r\n\t\r\n\t\t\t\t// Update this object's current frame alternator value\r\n\t\t\t\t// which allows us to determine if we are still on the\r\n\t\t\t\t// same frame\r\n\t\t\t\tthis._frameAlternatorCurrent = ige._frameAlternator;\r\n\t\t\t} else {\r\n\t\t\t\t// The entity is not yet born, unmount it and add to the spawn queue\r\n\t\t\t\tthis._birthMount = this._parent.id();\r\n\t\t\t\tthis.unMount();\r\n\t\t\t\t\r\n\t\t\t\tige.spawnQueue(this);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Process super class\r\n\t\tIgeObject.prototype.update.call(this, ctx, tickDelta);\r\n\t},\r\n\r\n\t/**\r\n\t * Processes the actions required each render frame.\r\n\t * @param {CanvasRenderingContext2D} ctx The canvas context to render to.\r\n\t * @param {Boolean} dontTransform If set to true, the tick method will\r\n\t * not transform the context based on the entity's matrices. This is useful\r\n\t * if you have extended the class and want to process down the inheritance\r\n\t * chain but have already transformed the entity in a previous overloaded\r\n\t * method.\r\n\t */\r\n\ttick: function (ctx, dontTransform) {\r\n\t\tif (!this._hidden && this._inView && (!this._parent || (this._parent._inView)) && !this._streamJustCreated) {\r\n\t\t\t// Process any behaviours assigned to the entity\r\n\t\t\tthis._processTickBehaviours(ctx);\r\n\t\t\t\r\n\t\t\t// Process any mouse events we need to do\r\n\t\t\tif (this._mouseEventsActive) {\r\n\t\t\t\tif (this._processTriggerHitTests()) {\r\n\t\t\t\t\t// Point is inside the trigger bounds\r\n\t\t\t\t\tige.input.queueEvent(this, this._mouseInTrigger, null);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (ige.input.mouseMove) {\r\n\t\t\t\t\t\t// There is a mouse move event but we are not inside the entity\r\n\t\t\t\t\t\t// so fire a mouse out event (_handleMouseOut will check if the\r\n\t\t\t\t\t\t// mouse WAS inside before firing an out event).\r\n\t\t\t\t\t\tthis._handleMouseOut(ige.input.mouseMove);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (!this._dontRender) {\r\n\t\t\t\t// Check for cached version\r\n\t\t\t\tif (this._cache || this._compositeCache) {\r\n\t\t\t\t\t// Caching is enabled\r\n\t\t\t\t\tif (this._cacheDirty) {\r\n\t\t\t\t\t\t// The cache is dirty, redraw it\r\n\t\t\t\t\t\tthis._refreshCache(dontTransform);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\t// Now render the cached image data to the main canvas\r\n\t\t\t\t\tthis._renderCache(ctx);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// Non-cached output\r\n\t\t\t\t\t// Transform the context by the current transform settings\r\n\t\t\t\t\tif (!dontTransform) {\r\n\t\t\t\t\t\tthis._transformContext(ctx);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\t// Render the entity\r\n\t\t\t\t\tthis._renderEntity(ctx, dontTransform);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Process any automatic-mode stream updating required\r\n\t\t\tif (this._streamMode === 1) {\r\n\t\t\t\tthis.streamSync();\r\n\t\t\t}\r\n\r\n\t\t\tif (this._compositeCache) {\r\n\t\t\t\tif (this._cacheDirty) {\r\n\t\t\t\t\t// Process children\r\n\t\t\t\t\tIgeObject.prototype.tick.call(this, this._cacheCtx);\r\n\t\t\t\t\tthis._renderCache(ctx);\r\n\t\t\t\t\tthis._cacheDirty = false;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\t// Process children\r\n\t\t\t\tIgeObject.prototype.tick.call(this, ctx);\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\t\r\n\t_processTriggerHitTests: function () {\r\n\t\tvar mp, mouseTriggerPoly;\r\n\r\n\t\tif (ige._currentViewport) {\r\n\t\t\tif (!this._mouseAlwaysInside) {\r\n\t\t\t\tmp = this.mousePosWorld();\r\n\t\r\n\t\t\t\tif (mp) {\r\n\t\t\t\t\t// Use the trigger polygon if defined\r\n\t\t\t\t\tif (this._triggerPolygon && this[this._triggerPolygon]) {\r\n\t\t\t\t\t\tmouseTriggerPoly = this[this._triggerPolygon](mp);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// Default to either aabb or bounds3dPolygon depending on entity parent mounting mode\r\n\t\t\t\t\t\tif (this._parent && this._parent._mountMode === 1) {\r\n\t\t\t\t\t\t\t// Use bounds3dPolygon\r\n\t\t\t\t\t\t\tmouseTriggerPoly = this.bounds3dPolygon();\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t// Use aabb\r\n\t\t\t\t\t\t\tmouseTriggerPoly = this.aabb();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\t// Check if the current mouse position is inside this aabb\r\n\t\t\t\t\treturn mouseTriggerPoly.xyInside(mp.x, mp.y);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\treturn false;\r\n\t},\r\n\t\r\n\t_refreshCache: function (dontTransform) {\r\n\t\t// The cache is not clean so re-draw it\r\n\t\t// Render the entity to the cache\r\n\t\tvar _canvas = this._cacheCanvas,\r\n\t\t\t_ctx = this._cacheCtx;\r\n\r\n\t\tif (this._compositeCache) {\r\n\t\t\t// Get the composite entity AABB and alter the internal canvas\r\n\t\t\t// to the composite size so we can render the entire entity\r\n\t\t\tvar aabbC = this.compositeAabb(true);\r\n\t\t\t\r\n\t\t\tthis._compositeAabbCache = aabbC;\r\n\t\t\t\r\n\t\t\tif (aabbC.width > 0 && aabbC.height > 0) {\r\n\t\t\t\t_canvas.width = Math.ceil(aabbC.width);\r\n\t\t\t\t_canvas.height = Math.ceil(aabbC.height);\r\n\t\t\t} else {\r\n\t\t\t\t// We cannot set a zero size for a canvas, it will\r\n\t\t\t\t// cause the browser to freak out\r\n\t\t\t\t_canvas.width = 2;\r\n\t\t\t\t_canvas.height = 2;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t// Translate to the center of the canvas\r\n\t\t\t_ctx.translate(-aabbC.x, -aabbC.y);\r\n\r\n\t\t\t/**\r\n\t\t\t * Fires when the entity's composite cache is ready.\r\n\t\t\t * @event IgeEntity#compositeReady\r\n\t\t\t */\r\n\t\t\tthis.emit('compositeReady');\r\n\t\t} else {\r\n\t\t\tif (this._bounds2d.x > 0 && this._bounds2d.y > 0) {\r\n\t\t\t\t_canvas.width = this._bounds2d.x;\r\n\t\t\t\t_canvas.height = this._bounds2d.y;\r\n\t\t\t} else {\r\n\t\t\t\t// We cannot set a zero size for a canvas, it will\r\n\t\t\t\t// cause the browser to freak out\r\n\t\t\t\t_canvas.width = 1;\r\n\t\t\t\t_canvas.height = 1;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t// Translate to the center of the canvas\r\n\t\t\t_ctx.translate(this._bounds2d.x2, this._bounds2d.y2);\r\n\t\t\t\r\n\t\t\tthis._cacheDirty = false;\r\n\t\t}\r\n\t\t\r\n\t\t// Transform the context by the current transform settings\r\n\t\tif (!dontTransform) {\r\n\t\t\tthis._transformContext(_ctx);\r\n\t\t}\r\n\t\t\r\n\t\tthis._renderEntity(_ctx, dontTransform);\r\n\t},\r\n\r\n\t/**\r\n\t * Handles calling the texture.render() method if a texture\r\n\t * is applied to the entity. This part of the tick process has\r\n\t * been abstracted to allow it to be overridden by an extending\r\n\t * class.\r\n\t * @param {CanvasRenderingContext2D} ctx The canvas context to render\r\n\t * the entity to.\r\n\t * @private\r\n\t */\r\n\t_renderEntity: function (ctx) {\r\n\t\tif (this._opacity > 0) {\r\n\t\t\t// Check if the entity has a background pattern\r\n\t\t\tif (this._backgroundPattern) {\r\n\t\t\t\tif (!this._backgroundPatternFill) {\r\n\t\t\t\t\t// We have a pattern but no fill produced\r\n\t\t\t\t\t// from it. Check if we have a context to\r\n\t\t\t\t\t// generate a pattern from\r\n\t\t\t\t\tif (ctx) {\r\n\t\t\t\t\t\t// Produce the pattern fill\r\n\t\t\t\t\t\tthis._backgroundPatternFill = ctx.createPattern(this._backgroundPattern.image, this._backgroundPatternRepeat);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (this._backgroundPatternFill) {\r\n\t\t\t\t\t// Draw the fill\r\n\t\t\t\t\tctx.save();\r\n\t\t\t\t\tctx.fillStyle = this._backgroundPatternFill;\r\n\r\n\t\t\t\t\t// TODO: When firefox has fixed their bug regarding negative rect co-ordinates, revert this change\r\n\r\n\t\t\t\t\t// This is the proper way to do this but firefox has a bug which I'm gonna report\r\n\t\t\t\t\t// so instead I have to use ANOTHER translate call instead. So crap!\r\n\t\t\t\t\t//ctx.rect(-this._bounds2d.x2, -this._bounds2d.y2, this._bounds2d.x, this._bounds2d.y);\r\n\t\t\t\t\tctx.translate(-this._bounds2d.x2, -this._bounds2d.y2);\r\n\t\t\t\t\tctx.rect(0, 0, this._bounds2d.x, this._bounds2d.y);\r\n\t\t\t\t\tif (this._backgroundPatternTrackCamera) {\r\n\t\t\t\t\t\tctx.translate(-ige._currentCamera._translate.x, -ige._currentCamera._translate.y);\r\n\t\t\t\t\t\tctx.scale(ige._currentCamera._scale.x, ige._currentCamera._scale.y);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tctx.fill();\r\n\t\t\t\t\tige._drawCount++;\r\n\r\n\t\t\t\t\tif (this._backgroundPatternIsoTile) {\r\n\t\t\t\t\t\tctx.translate(-Math.floor(this._backgroundPattern.image.width) / 2, -Math.floor(this._backgroundPattern.image.height / 2));\r\n\t\t\t\t\t\tctx.fill();\r\n\t\t\t\t\t\tige._drawCount++;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tctx.restore();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tvar texture = this._texture;\r\n\r\n\t\t\t// Check if the entity is visible based upon its opacity\r\n\t\t\tif (texture && texture._loaded) {\r\n\t\t\t\t// Draw the entity image\r\n\t\t\t\ttexture.render(ctx, this, ige._tickDelta);\r\n\r\n\t\t\t\tif (this._highlight) {\r\n\t\t\t\t\tctx.globalCompositeOperation = this._highlightToGlobalCompositeOperation(this._highlight);\r\n\t\t\t\t\ttexture.render(ctx, this);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (this._compositeCache && ige._currentViewport._drawCompositeBounds) {\r\n\t\t\t\t//console.log('moo');\r\n\t\t\t\tctx.fillStyle = 'rgba(0, 0, 255, 0.3)';\r\n\t\t\t\tctx.fillRect(-this._bounds2d.x2, -this._bounds2d.y2, this._bounds2d.x,\tthis._bounds2d.y);\r\n\t\t\t\tctx.fillStyle = '#ffffff';\r\n\t\t\t\tctx.fillText('Composite Entity', -this._bounds2d.x2, -this._bounds2d.y2 - 15);\r\n\t\t\t\tctx.fillText(this.id(), -this._bounds2d.x2, -this._bounds2d.y2 - 5);\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Draws the cached off-screen canvas image data to the passed canvas\r\n\t * context.\r\n\t * @param {CanvasRenderingContext2D} ctx The canvas context to render\r\n\t * the entity to.\r\n\t * @private\r\n\t */\r\n\t_renderCache: function (ctx) {\r\n\t\tctx.save();\r\n\t\tif (this._compositeCache) {\r\n\t\t\tvar aabbC = this._compositeAabbCache;\r\n\t\t\tctx.translate(this._bounds2d.x2 + aabbC.x, this._bounds2d.y2 + aabbC.y);\r\n\t\t\t\r\n\t\t\tif (this._parent && this._parent._ignoreCamera) {\r\n\t\t\t\t// Translate the entity back to negate the scene translate\r\n\t\t\t\tvar cam = ige._currentCamera;\r\n\t\t\t\t//ctx.translate(-cam._translate.x, -cam._translate.y);\r\n\t\t\t\t/*this.scaleTo(1 / cam._scale.x, 1 / cam._scale.y, 1 / cam._scale.z);\r\n\t\t\t\tthis.rotateTo(-cam._rotate.x, -cam._rotate.y, -cam._rotate.z);*/\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t// We have a clean cached version so output that\r\n\t\tctx.drawImage(\r\n\t\t\tthis._cacheCanvas,\r\n\t\t\t-this._bounds2d.x2, -this._bounds2d.y2\r\n\t\t);\r\n\t\t\r\n\t\tif (ige._currentViewport._drawCompositeBounds) {\r\n\t\t\tctx.fillStyle = 'rgba(0, 255, 0, 0.5)';\r\n\t\t\tctx.fillRect(-this._bounds2d.x2, -this._bounds2d.y2, this._cacheCanvas.width,\tthis._cacheCanvas.height);\r\n\t\t\tctx.fillStyle = '#ffffff';\r\n\t\t\tctx.fillText('Composite Cache', -this._bounds2d.x2, -this._bounds2d.y2 - 15);\r\n\t\t\tctx.fillText(this.id(), -this._bounds2d.x2, -this._bounds2d.y2 - 5);\r\n\t\t}\r\n\r\n\t\tige._drawCount++;\r\n\r\n\t\tif (this._highlight) {\r\n\t\t\tctx.globalCompositeOperation = this._highlightToGlobalCompositeOperation(this._highlight);\r\n\t\t\tctx.drawImage(\r\n\t\t\t\tthis._cacheCanvas,\r\n\t\t\t\t-this._bounds2d.x2, -this._bounds2d.y2\r\n\t\t\t);\r\n\r\n\t\t\tige._drawCount++;\r\n\t\t}\r\n\t\tctx.restore();\r\n\t},\r\n\r\n\t/**\r\n\t * Transforms a point by the entity's parent world matrix and\r\n\t * it's own local matrix transforming the point to this entity's\r\n\t * world space.\r\n\t * @param {IgePoint3d} point The point to transform.\r\n\t * @example #Transform a point by the entity's world matrix values\r\n\t *     var point = new IgePoint3d(0, 0, 0);\r\n\t *     entity._transformPoint(point);\r\n\t *     \r\n\t *     console.log(point);\r\n\t * @return {IgePoint3d} The transformed point.\r\n\t * @private\r\n\t */\r\n\t_transformPoint: function (point) {\r\n\t\tif (this._parent) {\r\n\t\t\tvar tempMat = new IgeMatrix2d();\r\n\t\t\t// Copy the parent world matrix\r\n\t\t\ttempMat.copy(this._parent._worldMatrix);\r\n\t\t\t// Apply any local transforms\r\n\t\t\ttempMat.multiply(this._localMatrix);\r\n\t\t\t// Now transform the point\r\n\t\t\ttempMat.getInverse().transformCoord(point, this);\r\n\t\t} else {\r\n\t\t\tthis._localMatrix.transformCoord(point, this);\r\n\t\t}\r\n\r\n\t\treturn point;\r\n\t},\r\n\t\r\n\t/**\r\n\t * Helper method to transform an array of points using _transformPoint.\r\n\t * @param {Array} points The points array to transform.\r\n\t * @private\r\n\t */\r\n\t_transformPoints: function (points) {\r\n\t\tvar point, pointCount = points.length;\r\n\t\t\r\n\t\twhile (pointCount--) {\r\n\t\t\tpoint = points[pointCount];\r\n\t\t\tif (this._parent) {\r\n\t\t\t\tvar tempMat = new IgeMatrix2d();\r\n\t\t\t\t// Copy the parent world matrix\r\n\t\t\t\ttempMat.copy(this._parent._worldMatrix);\r\n\t\t\t\t// Apply any local transforms\r\n\t\t\t\ttempMat.multiply(this._localMatrix);\r\n\t\t\t\t// Now transform the point\r\n\t\t\t\ttempMat.getInverse().transformCoord(point, this);\r\n\t\t\t} else {\r\n\t\t\t\tthis._localMatrix.transformCoord(point, this);\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Generates a string containing a code fragment that when\r\n\t * evaluated will reproduce this object's properties via\r\n\t * chained commands. This method will only check for\r\n\t * properties that are directly related to this class.\r\n\t * Other properties are handled by their own class method.\r\n\t * @return {String} The string code fragment that will\r\n\t * reproduce this entity when evaluated.\r\n\t */\r\n\t_stringify: function (options) {\r\n\t\t// Make sure we have an options object\r\n\t\tif (options === undefined) { options = {}; }\r\n\t\t\r\n\t\t// Get the properties for all the super-classes\r\n\t\tvar str = IgeObject.prototype._stringify.call(this, options), i;\r\n\r\n\t\t// Loop properties and add property assignment code to string\r\n\t\tfor (i in this) {\r\n\t\t\tif (this.hasOwnProperty(i) && this[i] !== undefined) {\r\n\t\t\t\tswitch (i) {\r\n\t\t\t\t\tcase '_opacity':\r\n\t\t\t\t\t\tstr += \".opacity(\" + this.opacity() + \")\";\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase '_texture':\r\n\t\t\t\t\t\tstr += \".texture(ige.$('\" + this.texture().id() + \"'))\";\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase '_cell':\r\n\t\t\t\t\t\tstr += \".cell(\" + this.cell() + \")\";\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase '_translate':\r\n\t\t\t\t\t\tif (options.transform !== false && options.translate !== false) {\r\n\t\t\t\t\t\t\tstr += \".translateTo(\" + this._translate.x + \", \" + this._translate.y + \", \" + this._translate.z + \")\";\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase '_rotate':\r\n\t\t\t\t\t\tif (options.transform !== false && options.rotate !== false) {\r\n\t\t\t\t\t\t\tstr += \".rotateTo(\" + this._rotate.x + \", \" + this._rotate.y + \", \" + this._rotate.z + \")\";\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase '_scale':\r\n\t\t\t\t\t\tif (options.transform !== false && options.scale !== false) {\r\n\t\t\t\t\t\t\tstr += \".scaleTo(\" + this._scale.x + \", \" + this._scale.y + \", \" + this._scale.z + \")\";\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase '_origin':\r\n\t\t\t\t\t\tif (options.origin !== false) {\r\n\t\t\t\t\t\t\tstr += \".originTo(\" + this._origin.x + \", \" + this._origin.y + \", \" + this._origin.z + \")\";\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase '_anchor':\r\n\t\t\t\t\t\tif (options.anchor !== false) {\r\n\t\t\t\t\t\t\tstr += \".anchor(\" + this._anchor.x + \", \" + this._anchor.y + \")\";\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase '_width':\r\n\t\t\t\t\t\tif (typeof(this.width()) === 'string') {\r\n\t\t\t\t\t\t\tstr += \".width('\" + this.width() + \"')\";\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tstr += \".width(\" + this.width() + \")\";\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase '_height':\r\n\t\t\t\t\t\tif (typeof(this.height()) === 'string') {\r\n\t\t\t\t\t\t\tstr += \".height('\" + this.height() + \"')\";\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tstr += \".height(\" + this.height() + \")\";\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase '_bounds3d':\r\n\t\t\t\t\t\tstr += \".bounds3d(\" + this._bounds3d.x + \", \" + this._bounds3d.y + \", \" + this._bounds3d.z + \")\";\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase '_deathTime':\r\n\t\t\t\t\t\tif (options.deathTime !== false && options.lifeSpan !== false) {\r\n\t\t\t\t\t\t\tstr += \".deathTime(\" + this.deathTime() + \")\";\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase '_highlight':\r\n\t\t\t\t\t\tstr += \".highlight(\" + this.highlight() + \")\";\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn str;\r\n\t},\r\n\r\n\t/**\r\n\t * Destroys the entity by removing it from the scenegraph,\r\n\t * calling destroy() on any child entities and removing\r\n\t * any active event listeners for the entity. Once an entity\r\n\t * has been destroyed it's this._alive flag is also set to\r\n\t * false.\r\n\t * @example #Destroy the entity\r\n\t *     entity.destroy();\r\n\t */\r\n\tdestroy: function () {\r\n\t\tthis._alive = false;\r\n\t\t\r\n\t\t/* CEXCLUDE */\r\n\t\t// Check if the entity is streaming\r\n\t\tif (this._streamMode === 1) {\r\n\t\t\tdelete this._streamDataCache;\r\n\t\t\tthis.streamDestroy();\r\n\t\t}\r\n\t\t/* CEXCLUDE */\r\n\t\t\r\n\t\t/**\r\n\t\t * Fires when the entity has been destroyed.\r\n\t\t * @event IgeEntity#destroyed\r\n\t\t * @param {IgeEntity} The entity that has been destroyed. \r\n\t\t */\r\n\t\tthis.emit('destroyed', this);\r\n\r\n\t\t// Call IgeObject.destroy()\r\n\t\tIgeObject.prototype.destroy.call(this);\r\n\t},\r\n\t\r\n\tsaveSpecialProp: function (obj, i) {\r\n\t\tswitch (i) {\r\n\t\t\tcase '_texture':\r\n\t\t\t\tif (obj._texture) {\r\n\t\t\t\t\treturn {_texture: obj._texture.id()};\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t\r\n\t\t\tdefault:\r\n\t\t\t\t// Call super-class saveSpecialProp\r\n\t\t\t\treturn IgeObject.prototype.saveSpecialProp.call(this, obj, i);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\t\r\n\t\treturn undefined;\r\n\t},\r\n\t\r\n\tloadSpecialProp: function (obj, i) {\r\n\t\tswitch (i) {\r\n\t\t\tcase '_texture':\r\n\t\t\t\treturn {_texture: ige.$(obj[i])};\r\n\t\t\t\tbreak;\r\n\t\t\t\r\n\t\t\tdefault:\r\n\t\t\t\t// Call super-class loadSpecialProp\r\n\t\t\t\treturn IgeObject.prototype.loadSpecialProp.call(this, obj, i);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\t\r\n\t\treturn undefined;\r\n\t},\r\n\r\n\t////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\t// INTERACTION\r\n\t////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\t/**\r\n\t * Gets / sets the callback that is fired when a mouse\r\n\t * move event is triggered.\r\n\t * @param {Function=} callback\r\n\t * @example #Hook the mouse move event and stop it propagating further down the scenegraph\r\n\t *     entity.mouseMove(function (event, control) {\r\n\t *         // Mouse moved with button\r\n\t *         console.log('Mouse move button: ' + event.button);\r\n\t *         \r\n\t *         // Stop the event propagating further down the scenegraph\r\n\t *         control.stopPropagation();\r\n\t *         \r\n\t *         // You can ALSO stop propagation without the control object\r\n\t *         // reference via the global reference:\r\n\t *         ige.input.stopPropagation();\r\n\t *     });\r\n\t * @return {*}\r\n\t */\r\n\tmouseMove: function (callback) {\r\n\t\tif (callback) {\r\n\t\t\tthis._mouseMove = callback;\r\n\t\t\tthis._mouseEventsActive = true;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\treturn this._mouseMove;\r\n\t},\r\n\r\n\t/**\r\n\t * Gets / sets the callback that is fired when a mouse\r\n\t * over event is triggered.\r\n\t * @param {Function=} callback\r\n\t * @example #Hook the mouse over event and stop it propagating further down the scenegraph\r\n\t *     entity.mouseOver(function (event, control) {\r\n\t *         // Mouse over with button\r\n\t *         console.log('Mouse over button: ' + event.button);\r\n\t *         \r\n\t *         // Stop the event propagating further down the scenegraph\r\n\t *         control.stopPropagation();\r\n\t *         \r\n\t *         // You can ALSO stop propagation without the control object\r\n\t *         // reference via the global reference:\r\n\t *         ige.input.stopPropagation();\r\n\t *     });\r\n\t * @return {*}\r\n\t */\r\n\tmouseOver: function (callback) {\r\n\t\tif (callback) {\r\n\t\t\tthis._mouseOver = callback;\r\n\t\t\tthis._mouseEventsActive = true;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\treturn this._mouseOver;\r\n\t},\r\n\r\n\t/**\r\n\t * Gets / sets the callback that is fired when a mouse\r\n\t * out event is triggered.\r\n\t * @param {Function=} callback\r\n\t * @example #Hook the mouse out event and stop it propagating further down the scenegraph\r\n\t *     entity.mouseOut(function (event, control) {\r\n\t *         // Mouse out with button\r\n\t *         console.log('Mouse out button: ' + event.button);\r\n\t *         \r\n\t *         // Stop the event propagating further down the scenegraph\r\n\t *         control.stopPropagation();\r\n\t *         \r\n\t *         // You can ALSO stop propagation without the control object\r\n\t *         // reference via the global reference:\r\n\t *         ige.input.stopPropagation();\r\n\t *     });\r\n\t * @return {*}\r\n\t */\r\n\tmouseOut: function (callback) {\r\n\t\tif (callback) {\r\n\t\t\tthis._mouseOut = callback;\r\n\t\t\tthis._mouseEventsActive = true;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\treturn this._mouseOut;\r\n\t},\r\n\r\n\t/**\r\n\t * Gets / sets the callback that is fired when a mouse\r\n\t * up event is triggered.\r\n\t * @param {Function=} callback\r\n\t * @example #Hook the mouse up event and stop it propagating further down the scenegraph\r\n\t *     entity.mouseUp(function (event, control) {\r\n\t *         // Mouse up with button\r\n\t *         console.log('Mouse up button: ' + event.button);\r\n\t *         \r\n\t *         // Stop the event propagating further down the scenegraph\r\n\t *         control.stopPropagation();\r\n\t *         \r\n\t *         // You can ALSO stop propagation without the control object\r\n\t *         // reference via the global reference:\r\n\t *         ige.input.stopPropagation();\r\n\t *     });\r\n\t * @return {*}\r\n\t */\r\n\tmouseUp: function (callback) {\r\n\t\tif (callback) {\r\n\t\t\tthis._mouseUp = callback;\r\n\t\t\tthis._mouseEventsActive = true;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\treturn this._mouseUp;\r\n\t},\r\n\r\n\t/**\r\n\t * Gets / sets the callback that is fired when a mouse\r\n\t * down event is triggered.\r\n\t * @param {Function=} callback\r\n\t * @example #Hook the mouse down event and stop it propagating further down the scenegraph\r\n\t *     entity.mouseDown(function (event, control) {\r\n\t *         // Mouse down with button\r\n\t *         console.log('Mouse down button: ' + event.button);\r\n\t *         \r\n\t *         // Stop the event propagating further down the scenegraph\r\n\t *         control.stopPropagation();\r\n\t *         \r\n\t *         // You can ALSO stop propagation without the control object\r\n\t *         // reference via the global reference:\r\n\t *         ige.input.stopPropagation();\r\n\t *     });\r\n\t * @return {*}\r\n\t */\r\n\tmouseDown: function (callback) {\r\n\t\tif (callback) {\r\n\t\t\tthis._mouseDown = callback;\r\n\t\t\tthis._mouseEventsActive = true;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\treturn this._mouseDown;\r\n\t},\r\n\t\r\n\t/**\r\n\t * Gets / sets the callback that is fired when a mouse\r\n\t * wheel event is triggered.\r\n\t * @param {Function=} callback\r\n\t * @example #Hook the mouse wheel event and stop it propagating further down the scenegraph\r\n\t *     entity.mouseWheel(function (event, control) {\r\n\t *         // Mouse wheel with button\r\n\t *         console.log('Mouse wheel button: ' + event.button);\r\n\t *         console.log('Mouse wheel delta: ' + event.wheelDelta);\r\n\t *         \r\n\t *         // Stop the event propagating further down the scenegraph\r\n\t *         control.stopPropagation();\r\n\t *         \r\n\t *         // You can ALSO stop propagation without the control object\r\n\t *         // reference via the global reference:\r\n\t *         ige.input.stopPropagation();\r\n\t *     });\r\n\t * @return {*}\r\n\t */\r\n\tmouseWheel: function (callback) {\r\n\t\tif (callback) {\r\n\t\t\tthis._mouseWheel = callback;\r\n\t\t\tthis._mouseEventsActive = true;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\treturn this._mouseWheel;\r\n\t},\r\n\t\r\n\t/**\r\n\t * Removes the callback that is fired when a mouse\r\n\t * move event is triggered.\r\n\t */\r\n\tmouseMoveOff: function () {\r\n\t\tdelete this._mouseMove;\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * Removes the callback that is fired when a mouse\r\n\t * over event is triggered.\r\n\t */\r\n\tmouseOverOff: function () {\r\n\t\tdelete this._mouseOver;\r\n\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\t/**\r\n\t * Removes the callback that is fired when a mouse\r\n\t * out event is triggered.\r\n\t */\r\n\tmouseOutOff: function () {\r\n\t\tdelete this._mouseOut;\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * Removes the callback that is fired when a mouse\r\n\t * up event is triggered.\r\n\t */\r\n\tmouseUpOff: function () {\r\n\t\tdelete this._mouseUp;\r\n\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\t/**\r\n\t * Removes the callback that is fired when a mouse\r\n\t * down event is triggered if the listener was registered\r\n\t * via the mouseDown() method.\r\n\t */\r\n\tmouseDownOff: function () {\r\n\t\tdelete this._mouseDown;\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * Removes the callback that is fired when a mouse\r\n\t * wheel event is triggered.\r\n\t */\r\n\tmouseWheelOff: function () {\r\n\t\tdelete this._mouseWheel;\r\n\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\ttriggerPolygon: function (poly) {\r\n\t\tif (poly !== undefined) {\r\n\t\t\tthis._triggerPolygon = poly;\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\treturn this._triggerPolygon;\r\n\t},\r\n\r\n\t/**\r\n\t * Gets / sets the shape / polygon that the mouse events\r\n\t * are triggered against. There are two options, 'aabb' and\r\n\t * 'isoBounds'. The default is 'aabb'.\r\n\t * @param val\r\n\t * @returns {*}\r\n\t * @deprecated\r\n\t */\r\n\tmouseEventTrigger: function (val) {\r\n\t\tthis.log('mouseEventTrigger is no longer in use. Please see triggerPolygon() instead.', 'warning');\r\n\t\t/*if (val !== undefined) {\r\n\t\t\t// Set default value\r\n\t\t\tthis._mouseEventTrigger = 0;\r\n\t\t\t\r\n\t\t\tswitch (val) {\r\n\t\t\t\tcase 'isoBounds':\r\n\t\t\t\t\tthis._mouseEventTrigger = 1;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t\r\n\t\t\t\tcase 'custom':\r\n\t\t\t\t\tthis._mouseEventTrigger = 2;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t\r\n\t\t\t\tcase 'aabb':\r\n\t\t\t\t\tthis._mouseEventTrigger = 0;\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\treturn this._mouseEventTrigger === 0 ? 'aabb' : 'isoBounds';*/\r\n\t},\r\n\r\n\t/**\r\n\t * Handler method that determines which mouse-move event\r\n\t * to fire, a mouse-over or a mouse-move.\r\n\t * @private\r\n\t */\r\n\t_handleMouseIn: function (event, evc, data) {\r\n\t\t// Check if the mouse move is a mouse over\r\n\t\tif (!this._mouseStateOver) {\r\n\t\t\tthis._mouseStateOver = true;\r\n\t\t\tif (this._mouseOver) { this._mouseOver(event, evc, data); }\r\n\t\t\t\r\n\t\t\t/**\r\n\t\t\t * Fires when the mouse moves over the entity.\r\n\t\t\t * @event IgeEntity#mouseOver\r\n\t\t\t * @param {Object} The DOM event object.\r\n\t\t\t * @param {Object} The IGE event control object.\r\n\t\t\t * @param {*} Any further event data.\r\n\t\t\t */\r\n\t\t\tthis.emit('mouseOver', [event, evc, data]);\r\n\t\t}\r\n\r\n\t\tif (this._mouseMove) { this._mouseMove(event, evc, data); }\r\n\t\tthis.emit('mouseMove', [event, evc, data]);\r\n\t},\r\n\r\n\t/**\r\n\t * Handler method that determines if a mouse-out event\r\n\t * should be fired.\r\n\t * @private\r\n\t */\r\n\t_handleMouseOut: function (event, evc, data) {\r\n\t\t// The mouse went away from this entity so\r\n\t\t// set mouse-down to false, regardless of the situation\r\n\t\tthis._mouseStateDown = false;\r\n\r\n\t\t// Check if the mouse move is a mouse out\r\n\t\tif (this._mouseStateOver) {\r\n\t\t\tthis._mouseStateOver = false;\r\n\t\t\tif (this._mouseOut) { this._mouseOut(event, evc, data); }\r\n\t\t\t\r\n\t\t\t/**\r\n\t\t\t * Fires when the mouse moves away from the entity.\r\n\t\t\t * @event IgeEntity#mouseOut\r\n\t\t\t * @param {Object} The DOM event object.\r\n\t\t\t * @param {Object} The IGE event control object.\r\n\t\t\t * @param {*} Any further event data.\r\n\t\t\t */\r\n\t\t\tthis.emit('mouseOut', [event, evc, data]);\r\n\t\t}\r\n\t},\r\n\t\r\n\t/**\r\n\t * Handler method that determines if a mouse-wheel event\r\n\t * should be fired.\r\n\t * @private\r\n\t */\r\n\t_handleMouseWheel: function (event, evc, data) {\r\n\t\tif (this._mouseWheel) { this._mouseWheel(event, evc, data); }\r\n\t\t\r\n\t\t/**\r\n\t\t * Fires when the mouse wheel is moved over the entity.\r\n\t\t * @event IgeEntity#mouseWheel\r\n\t\t * @param {Object} The DOM event object.\r\n\t\t * @param {Object} The IGE event control object.\r\n\t\t * @param {*} Any further event data.\r\n\t\t */\r\n\t\tthis.emit('mouseWheel', [event, evc, data]);\r\n\t},\r\n\r\n\t/**\r\n\t * Handler method that determines if a mouse-up event\r\n\t * should be fired.\r\n\t * @private\r\n\t */\r\n\t_handleMouseUp: function (event, evc, data) {\r\n\t\t// Reset the mouse-down flag\r\n\t\tthis._mouseStateDown = false;\r\n\t\tif (this._mouseUp) { this._mouseUp(event, evc, data); }\r\n\t\t\r\n\t\t/**\r\n\t\t * Fires when a mouse up occurs on the entity.\r\n\t\t * @event IgeEntity#mouseUp\r\n\t\t * @param {Object} The DOM event object.\r\n\t\t * @param {Object} The IGE event control object.\r\n\t\t * @param {*} Any further event data.\r\n\t\t */\r\n\t\tthis.emit('mouseUp', [event, evc, data]);\r\n\t},\r\n\r\n\t/**\r\n\t * Handler method that determines if a mouse-down event\r\n\t * should be fired.\r\n\t * @private\r\n\t */\r\n\t_handleMouseDown: function (event, evc, data) {\r\n\t\tif (!this._mouseStateDown) {\r\n\t\t\tthis._mouseStateDown = true;\r\n\t\t\tif (this._mouseDown) { this._mouseDown(event, evc, data); }\r\n\t\t\t\r\n\t\t\t/**\r\n\t\t\t * Fires when a mouse down occurs on the entity.\r\n\t\t\t * @event IgeEntity#mouseDown\r\n\t\t\t * @param {Object} The DOM event object.\r\n\t\t\t * @param {Object} The IGE event control object.\r\n\t\t\t * @param {*} Any further event data.\r\n\t\t\t */\r\n\t\t\tthis.emit('mouseDown', [event, evc, data]);\r\n\t\t}\r\n\t},\r\n\t\r\n\t/**\r\n\t * Checks mouse input types and fires the correct mouse event\r\n\t * handler. This is an internal method that should never be\r\n\t * called externally.\r\n\t * @param {Object} evc The input component event control object.\r\n\t * @param {Object} data Data passed by the input component into\r\n\t * the new event.\r\n\t * @private\r\n\t */\r\n\t_mouseInTrigger: function (evc, data) {\r\n\t\tif (ige.input.mouseMove) {\r\n\t\t\t// There is a mouse move event\r\n\t\t\tthis._handleMouseIn(ige.input.mouseMove, evc, data);\r\n\t\t}\r\n\r\n\t\tif (ige.input.mouseDown) {\r\n\t\t\t// There is a mouse down event\r\n\t\t\tthis._handleMouseDown(ige.input.mouseDown, evc, data);\r\n\t\t}\r\n\r\n\t\tif (ige.input.mouseUp) {\r\n\t\t\t// There is a mouse up event\r\n\t\t\tthis._handleMouseUp(ige.input.mouseUp, evc, data);\r\n\t\t}\r\n\t\t\r\n\t\tif (ige.input.mouseWheel) {\r\n\t\t\t// There is a mouse wheel event\r\n\t\t\tthis._handleMouseWheel(ige.input.mouseWheel, evc, data);\r\n\t\t}\r\n\t},\r\n\t\r\n\t////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\t// TRANSFORM\r\n\t////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\t/**\r\n\t * Enables tracing calls which inadvertently assign NaN values to\r\n\t * transformation properties. When called on an entity this system\r\n\t * will break with a debug line when a transform property is set\r\n\t * to NaN allowing you to step back through the call stack and \r\n\t * determine where the offending value originated.\r\n\t * @returns {IgeEntity}\r\n\t */\r\n\tdebugTransforms: function () {\r\n\t\tige.traceSet(this._translate, 'x', 1, function (val) {\r\n\t\t\treturn isNaN(val);\r\n\t\t});\r\n\t\t\r\n\t\tige.traceSet(this._translate, 'y', 1, function (val) {\r\n\t\t\treturn isNaN(val);\r\n\t\t});\r\n\t\t\r\n\t\tige.traceSet(this._translate, 'z', 1, function (val) {\r\n\t\t\treturn isNaN(val);\r\n\t\t});\r\n\t\t\r\n\t\tige.traceSet(this._rotate, 'x', 1, function (val) {\r\n\t\t\treturn isNaN(val);\r\n\t\t});\r\n\t\t\r\n\t\tige.traceSet(this._rotate, 'y', 1, function (val) {\r\n\t\t\treturn isNaN(val);\r\n\t\t});\r\n\t\t\r\n\t\tige.traceSet(this._rotate, 'z', 1, function (val) {\r\n\t\t\treturn isNaN(val);\r\n\t\t});\r\n\t\t\r\n\t\tige.traceSet(this._scale, 'x', 1, function (val) {\r\n\t\t\treturn isNaN(val);\r\n\t\t});\r\n\t\t\r\n\t\tige.traceSet(this._scale, 'y', 1, function (val) {\r\n\t\t\treturn isNaN(val);\r\n\t\t});\r\n\t\t\r\n\t\tige.traceSet(this._scale, 'z', 1, function (val) {\r\n\t\t\treturn isNaN(val);\r\n\t\t});\r\n\t\t\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\tvelocityTo: function (x, y, z) {\r\n\t\tif (x !== undefined && y!== undefined && z !== undefined) {\r\n\t\t\tthis._velocity.x = x;\r\n\t\t\tthis._velocity.y = y;\r\n\t\t\tthis._velocity.z = z;\r\n\t\t} else {\r\n\t\t\tthis.log('velocityTo() called with a missing or undefined x, y or z parameter!', 'error');\r\n\t\t}\r\n\r\n\t\treturn this._entity || this;\r\n\t},\r\n\t\r\n\tvelocityBy: function (x, y, z) {\r\n\t\tif (x !== undefined && y!== undefined && z !== undefined) {\r\n\t\t\tthis._velocity.x += x;\r\n\t\t\tthis._velocity.y += y;\r\n\t\t\tthis._velocity.z += z;\r\n\t\t} else {\r\n\t\t\tthis.log('velocityBy() called with a missing or undefined x, y or z parameter!', 'error');\r\n\t\t}\r\n\r\n\t\treturn this._entity || this;\r\n\t},\r\n\t\r\n\t/**\r\n\t * Translates the entity by adding the passed values to\r\n\t * the current translation values.\r\n\t * @param {Number} x The x co-ordinate.\r\n\t * @param {Number} y The y co-ordinate.\r\n\t * @param {Number} z The z co-ordinate.\r\n\t * @example #Translate the entity by 10 along the x axis\r\n\t *     entity.translateBy(10, 0, 0);\r\n\t * @return {*}\r\n\t */\r\n\ttranslateBy: function (x, y, z) {\r\n\t\tif (x !== undefined && y!== undefined && z !== undefined) {\r\n\t\t\tthis._translate.x += x;\r\n\t\t\tthis._translate.y += y;\r\n\t\t\tthis._translate.z += z;\r\n\t\t} else {\r\n\t\t\tthis.log('translateBy() called with a missing or undefined x, y or z parameter!', 'error');\r\n\t\t}\r\n\r\n\t\treturn this._entity || this;\r\n\t},\r\n\r\n\t/**\r\n\t * Translates the entity to the passed values.\r\n\t * @param {Number} x The x co-ordinate.\r\n\t * @param {Number} y The y co-ordinate.\r\n\t * @param {Number} z The z co-ordinate.\r\n\t * @example #Translate the entity to 10, 0, 0\r\n\t *     entity.translateTo(10, 0, 0);\r\n\t * @return {*}\r\n\t */\r\n\ttranslateTo: function (x, y, z) {\r\n\t\tif (x !== undefined && y!== undefined && z !== undefined) {\r\n\t\t\tthis._translate.x = x;\r\n\t\t\tthis._translate.y = y;\r\n\t\t\tthis._translate.z = z;\r\n\t\t} else {\r\n\t\t\tthis.log('translateTo() called with a missing or undefined x, y or z parameter!', 'error');\r\n\t\t}\r\n\r\n\t\treturn this._entity || this;\r\n\t},\r\n\r\n\t/**\r\n\t * Translates the entity to the passed point.\r\n\t * @param {IgePoint3d} point The point with co-ordinates.\r\n\t * @example #Translate the entity to 10, 0, 0\r\n\t *     var point = new IgePoint3d(10, 0, 0),\r\n\t *         entity = new IgeEntity();\r\n\t *     \r\n\t *     entity.translateToPoint(point);\r\n\t * @return {*}\r\n\t */\r\n\ttranslateToPoint: function (point) {\r\n\t\tif (point !== undefined) {\r\n\t\t\tthis._translate.x = point.x;\r\n\t\t\tthis._translate.y = point.y;\r\n\t\t\tthis._translate.z = point.z;\r\n\t\t} else {\r\n\t\t\tthis.log('translateToPoint() called with a missing or undefined point parameter!', 'error');\r\n\t\t}\r\n\r\n\t\treturn this._entity || this;\r\n\t},\r\n\t\r\n\t/**\r\n\t * Translates the object to the tile co-ordinates passed.\r\n\t * @param {Number} x The x tile co-ordinate.\r\n\t * @param {Number} y The y tile co-ordinate.\r\n\t * @param {Number=} z The z tile co-ordinate.\r\n\t * @example #Translate entity to tile\r\n\t *     // Create a tile map\r\n\t *     var tileMap = new IgeTileMap2d()\r\n\t *         .tileWidth(40)\r\n\t *         .tileHeight(40);\r\n\t *     \r\n\t *     // Mount our entity to the tile map\r\n\t *     entity.mount(tileMap);\r\n\t *     \r\n\t *     // Translate the entity to the tile x:10, y:12\r\n\t *     entity.translateToTile(10, 12, 0);\r\n\t * @return {*} The object this method was called from to allow\r\n\t * method chaining.\r\n\t */\r\n\ttranslateToTile: function (x, y, z) {\r\n\t\tif (this._parent && this._parent._tileWidth !== undefined && this._parent._tileHeight !== undefined) {\r\n\t\t\tvar finalZ;\r\n\r\n\t\t\t// Handle being passed a z co-ordinate\r\n\t\t\tif (z !== undefined) {\r\n\t\t\t\tfinalZ = z * this._parent._tileWidth;\r\n\t\t\t} else {\r\n\t\t\t\tfinalZ = this._translate.z;\r\n\t\t\t}\r\n\r\n\t\t\tthis.translateTo((x * this._parent._tileWidth) + this._parent._tileWidth / 2, (y * this._parent._tileHeight) + this._parent._tileWidth / 2, finalZ);\r\n\t\t} else {\r\n\t\t\tthis.log('Cannot translate to tile because the entity is not currently mounted to a tile map or the tile map has no tileWidth or tileHeight values.', 'warning');\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * Gets the translate accessor object.\r\n\t * @example #Use the translate accessor object to alter the y co-ordinate of the entity to 10\r\n\t *     entity.translate().y(10);\r\n\t * @return {*}\r\n\t */\r\n\ttranslate: function () {\r\n\t\tif (arguments.length) {\r\n\t\t\tthis.log('You called translate with arguments, did you mean translateTo or translateBy instead of translate?', 'warning');\r\n\t\t}\r\n\r\n\t\tthis.x = this._translateAccessorX;\r\n\t\tthis.y = this._translateAccessorY;\r\n\t\tthis.z = this._translateAccessorZ;\r\n\r\n\t\treturn this._entity || this;\r\n\t},\r\n\r\n\t/**\r\n\t * The translate accessor method for the x axis. This\r\n\t * method is not called directly but is accessed through\r\n\t * the accessor object obtained by calling entity.translate().\r\n\t * @param {Number=} val The new value to apply to the co-ordinate.\r\n\t * @return {*}\r\n\t * @private\r\n\t */\r\n\t_translateAccessorX: function (val) {\r\n\t\tif (val !== undefined) {\r\n\t\t\tthis._translate.x = val;\r\n\t\t\treturn this._entity || this;\r\n\t\t}\r\n\r\n\t\treturn this._translate.x;\r\n\t},\r\n\r\n\t/**\r\n\t * The translate accessor method for the y axis. This\r\n\t * method is not called directly but is accessed through\r\n\t * the accessor object obtained by calling entity.translate().\r\n\t * @param {Number=} val The new value to apply to the co-ordinate.\r\n\t * @return {*}\r\n\t * @private\r\n\t */\r\n\t_translateAccessorY: function (val) {\r\n\t\tif (val !== undefined) {\r\n\t\t\tthis._translate.y = val;\r\n\t\t\treturn this._entity || this;\r\n\t\t}\r\n\r\n\t\treturn this._translate.y;\r\n\t},\r\n\r\n\t/**\r\n\t * The translate accessor method for the z axis. This\r\n\t * method is not called directly but is accessed through\r\n\t * the accessor object obtained by calling entity.translate().\r\n\t * @param {Number=} val The new value to apply to the co-ordinate.\r\n\t * @return {*}\r\n\t * @private\r\n\t */\r\n\t_translateAccessorZ: function (val) {\r\n\t\t// TODO: Do we need to do anything to the matrix here for iso views?\r\n\t\t//this._localMatrix.translateTo(this._translate.x, this._translate.y);\r\n\t\tif (val !== undefined) {\r\n\t\t\tthis._translate.z = val;\r\n\t\t\treturn this._entity || this;\r\n\t\t}\r\n\r\n\t\treturn this._translate.z;\r\n\t},\r\n\r\n\t/**\r\n\t * Rotates the entity by adding the passed values to\r\n\t * the current rotation values.\r\n\t * @param {Number} x The x co-ordinate.\r\n\t * @param {Number} y The y co-ordinate.\r\n\t * @param {Number} z The z co-ordinate.\r\n\t * @example #Rotate the entity by 10 degrees about the z axis\r\n\t *     entity.rotateBy(0, 0, Math.radians(10));\r\n\t * @return {*}\r\n\t */\r\n\trotateBy: function (x, y, z) {\r\n\t\tif (x !== undefined && y!== undefined && z !== undefined) {\r\n\t\t\tthis._rotate.x += x;\r\n\t\t\tthis._rotate.y += y;\r\n\t\t\tthis._rotate.z += z;\r\n\t\t} else {\r\n\t\t\tthis.log('rotateBy() called with a missing or undefined x, y or z parameter!', 'error');\r\n\t\t}\r\n\r\n\t\treturn this._entity || this;\r\n\t},\r\n\r\n\t/**\r\n\t * Rotates the entity to the passed values.\r\n\t * @param {Number} x The x co-ordinate.\r\n\t * @param {Number} y The y co-ordinate.\r\n\t * @param {Number} z The z co-ordinate.\r\n\t * @example #Rotate the entity to 10 degrees about the z axis\r\n\t *     entity.rotateTo(0, 0, Math.radians(10));\r\n\t * @return {*}\r\n\t */\r\n\trotateTo: function (x, y, z) {\r\n\t\tif (x !== undefined && y!== undefined && z !== undefined) {\r\n\t\t\tthis._rotate.x = x;\r\n\t\t\tthis._rotate.y = y;\r\n\t\t\tthis._rotate.z = z;\r\n\t\t} else {\r\n\t\t\tthis.log('rotateTo() called with a missing or undefined x, y or z parameter!', 'error');\r\n\t\t}\r\n\r\n\t\treturn this._entity || this;\r\n\t},\r\n\r\n\t/**\r\n\t * Gets the translate accessor object.\r\n\t * @example #Use the rotate accessor object to rotate the entity about the z axis 10 degrees\r\n\t *     entity.rotate().z(Math.radians(10));\r\n\t * @return {*}\r\n\t */\r\n\trotate: function () {\r\n\t\tif (arguments.length) {\r\n\t\t\tthis.log('You called rotate with arguments, did you mean rotateTo or rotateBy instead of rotate?', 'warning');\r\n\t\t}\r\n\t\t\r\n\t\tthis.x = this._rotateAccessorX;\r\n\t\tthis.y = this._rotateAccessorY;\r\n\t\tthis.z = this._rotateAccessorZ;\r\n\r\n\t\treturn this._entity || this;\r\n\t},\r\n\r\n\t/**\r\n\t * The rotate accessor method for the x axis. This\r\n\t * method is not called directly but is accessed through\r\n\t * the accessor object obtained by calling entity.rotate().\r\n\t * @param {Number=} val The new value to apply to the co-ordinate.\r\n\t * @return {*}\r\n\t * @private\r\n\t */\r\n\t_rotateAccessorX: function (val) {\r\n\t\tif (val !== undefined) {\r\n\t\t\tthis._rotate.x = val;\r\n\t\t\treturn this._entity || this;\r\n\t\t}\r\n\r\n\t\treturn this._rotate.x;\r\n\t},\r\n\r\n\t/**\r\n\t * The rotate accessor method for the y axis. This\r\n\t * method is not called directly but is accessed through\r\n\t * the accessor object obtained by calling entity.rotate().\r\n\t * @param {Number=} val The new value to apply to the co-ordinate.\r\n\t * @return {*}\r\n\t * @private\r\n\t */\r\n\t_rotateAccessorY: function (val) {\r\n\t\tif (val !== undefined) {\r\n\t\t\tthis._rotate.y = val;\r\n\t\t\treturn this._entity || this;\r\n\t\t}\r\n\r\n\t\treturn this._rotate.y;\r\n\t},\r\n\r\n\t/**\r\n\t * The rotate accessor method for the z axis. This\r\n\t * method is not called directly but is accessed through\r\n\t * the accessor object obtained by calling entity.rotate().\r\n\t * @param {Number=} val The new value to apply to the co-ordinate.\r\n\t * @return {*}\r\n\t * @private\r\n\t */\r\n\t_rotateAccessorZ: function (val) {\r\n\t\tif (val !== undefined) {\r\n\t\t\tthis._rotate.z = val;\r\n\t\t\treturn this._entity || this;\r\n\t\t}\r\n\r\n\t\treturn this._rotate.z;\r\n\t},\r\n\r\n\t/**\r\n\t * Scales the entity by adding the passed values to\r\n\t * the current scale values.\r\n\t * @param {Number} x The x co-ordinate.\r\n\t * @param {Number} y The y co-ordinate.\r\n\t * @param {Number} z The z co-ordinate.\r\n\t * @example #Scale the entity by 2 on the x axis\r\n\t *     entity.scaleBy(2, 0, 0);\r\n\t * @return {*}\r\n\t */\r\n\tscaleBy: function (x, y, z) {\r\n\t\tif (x !== undefined && y!== undefined && z !== undefined) {\r\n\t\t\tthis._scale.x += x;\r\n\t\t\tthis._scale.y += y;\r\n\t\t\tthis._scale.z += z;\r\n\t\t} else {\r\n\t\t\tthis.log('scaleBy() called with a missing or undefined x, y or z parameter!', 'error');\r\n\t\t}\r\n\r\n\t\treturn this._entity || this;\r\n\t},\r\n\r\n\t/**\r\n\t * Scale the entity to the passed values.\r\n\t * @param {Number} x The x co-ordinate.\r\n\t * @param {Number} y The y co-ordinate.\r\n\t * @param {Number} z The z co-ordinate.\r\n\t * @example #Set the entity scale to 1 on all axes\r\n\t *     entity.scaleTo(1, 1, 1);\r\n\t * @return {*}\r\n\t */\r\n\tscaleTo: function (x, y, z) {\r\n\t\tif (x !== undefined && y!== undefined && z !== undefined) {\r\n\t\t\tthis._scale.x = x;\r\n\t\t\tthis._scale.y = y;\r\n\t\t\tthis._scale.z = z;\r\n\t\t} else {\r\n\t\t\tthis.log('scaleTo() called with a missing or undefined x, y or z parameter!', 'error');\r\n\t\t}\r\n\r\n\t\treturn this._entity || this;\r\n\t},\r\n\r\n\t/**\r\n\t * Gets the scale accessor object.\r\n\t * @example #Use the scale accessor object to set the scale of the entity on the x axis to 1\r\n\t *     entity.scale().x(1);\r\n\t * @return {*}\r\n\t */\r\n\tscale: function () {\r\n\t\tif (arguments.length) {\r\n\t\t\tthis.log('You called scale with arguments, did you mean scaleTo or scaleBy instead of scale?', 'warning');\r\n\t\t}\r\n\t\t\r\n\t\tthis.x = this._scaleAccessorX;\r\n\t\tthis.y = this._scaleAccessorY;\r\n\t\tthis.z = this._scaleAccessorZ;\r\n\r\n\t\treturn this._entity || this;\r\n\t},\r\n\r\n\t/**\r\n\t * The scale accessor method for the x axis. This\r\n\t * method is not called directly but is accessed through\r\n\t * the accessor object obtained by calling entity.scale().\r\n\t * @param {Number=} val The new value to apply to the co-ordinate.\r\n\t * @return {*}\r\n\t * @private\r\n\t */\r\n\t_scaleAccessorX: function (val) {\r\n\t\tif (val !== undefined) {\r\n\t\t\tthis._scale.x = val;\r\n\t\t\treturn this._entity || this;\r\n\t\t}\r\n\r\n\t\treturn this._scale.x;\r\n\t},\r\n\r\n\t/**\r\n\t * The scale accessor method for the y axis. This\r\n\t * method is not called directly but is accessed through\r\n\t * the accessor object obtained by calling entity.scale().\r\n\t * @param {Number=} val The new value to apply to the co-ordinate.\r\n\t * @return {*}\r\n\t * @private\r\n\t */\r\n\t_scaleAccessorY: function (val) {\r\n\t\tif (val !== undefined) {\r\n\t\t\tthis._scale.y = val;\r\n\t\t\treturn this._entity || this;\r\n\t\t}\r\n\r\n\t\treturn this._scale.y;\r\n\t},\r\n\r\n\t/**\r\n\t * The scale accessor method for the z axis. This\r\n\t * method is not called directly but is accessed through\r\n\t * the accessor object obtained by calling entity.scale().\r\n\t * @param {Number=} val The new value to apply to the co-ordinate.\r\n\t * @return {*}\r\n\t * @private\r\n\t */\r\n\t_scaleAccessorZ: function (val) {\r\n\t\tif (val !== undefined) {\r\n\t\t\tthis._scale.z = val;\r\n\t\t\treturn this._entity || this;\r\n\t\t}\r\n\r\n\t\treturn this._scale.z;\r\n\t},\r\n\r\n\t/**\r\n\t * Sets the origin of the entity by adding the passed values to\r\n\t * the current origin values.\r\n\t * @param {Number} x The x co-ordinate.\r\n\t * @param {Number} y The y co-ordinate.\r\n\t * @param {Number} z The z co-ordinate.\r\n\t * @example #Add 0.5 to the origin on the x axis\r\n\t *     entity.originBy(0.5, 0, 0);\r\n\t * @return {*}\r\n\t */\r\n\toriginBy: function (x, y, z) {\r\n\t\tif (x !== undefined && y!== undefined && z !== undefined) {\r\n\t\t\tthis._origin.x += x;\r\n\t\t\tthis._origin.y += y;\r\n\t\t\tthis._origin.z += z;\r\n\t\t} else {\r\n\t\t\tthis.log('originBy() called with a missing or undefined x, y or z parameter!', 'error');\r\n\t\t}\r\n\r\n\t\treturn this._entity || this;\r\n\t},\r\n\r\n\t/**\r\n\t * Set the origin of the entity to the passed values.\r\n\t * @param {Number} x The x co-ordinate.\r\n\t * @param {Number} y The y co-ordinate.\r\n\t * @param {Number} z The z co-ordinate.\r\n\t * @example #Set the entity origin to 0.5 on all axes\r\n\t *     entity.originTo(0.5, 0.5, 0.5);\r\n\t * @return {*}\r\n\t */\r\n\toriginTo: function (x, y, z) {\r\n\t\tif (x !== undefined && y!== undefined && z !== undefined) {\r\n\t\t\tthis._origin.x = x;\r\n\t\t\tthis._origin.y = y;\r\n\t\t\tthis._origin.z = z;\r\n\t\t} else {\r\n\t\t\tthis.log('originTo() called with a missing or undefined x, y or z parameter!', 'error');\r\n\t\t}\r\n\r\n\t\treturn this._entity || this;\r\n\t},\r\n\r\n\t/**\r\n\t * Gets the origin accessor object.\r\n\t * @example #Use the origin accessor object to set the origin of the entity on the x axis to 1\r\n\t *     entity.origin().x(1);\r\n\t * @return {*}\r\n\t */\r\n\torigin: function () {\r\n\t\tthis.x = this._originAccessorX;\r\n\t\tthis.y = this._originAccessorY;\r\n\t\tthis.z = this._originAccessorZ;\r\n\r\n\t\treturn this._entity || this;\r\n\t},\r\n\r\n\t/**\r\n\t * The origin accessor method for the x axis. This\r\n\t * method is not called directly but is accessed through\r\n\t * the accessor object obtained by calling entity.origin().\r\n\t * @param {Number=} val The new value to apply to the co-ordinate.\r\n\t * @return {*}\r\n\t * @private\r\n\t */\r\n\t_originAccessorX: function (val) {\r\n\t\tif (val !== undefined) {\r\n\t\t\tthis._origin.x = val;\r\n\t\t\treturn this._entity || this;\r\n\t\t}\r\n\r\n\t\treturn this._origin.x;\r\n\t},\r\n\r\n\t/**\r\n\t * The origin accessor method for the y axis. This\r\n\t * method is not called directly but is accessed through\r\n\t * the accessor object obtained by calling entity.origin().\r\n\t * @param {Number=} val The new value to apply to the co-ordinate.\r\n\t * @return {*}\r\n\t * @private\r\n\t */\r\n\t_originAccessorY: function (val) {\r\n\t\tif (val !== undefined) {\r\n\t\t\tthis._origin.y = val;\r\n\t\t\treturn this._entity || this;\r\n\t\t}\r\n\r\n\t\treturn this._origin.y;\r\n\t},\r\n\r\n\t/**\r\n\t * The origin accessor method for the z axis. This\r\n\t * method is not called directly but is accessed through\r\n\t * the accessor object obtained by calling entity.origin().\r\n\t * @param {Number=} val The new value to apply to the co-ordinate.\r\n\t * @return {*}\r\n\t * @private\r\n\t */\r\n\t_originAccessorZ: function (val) {\r\n\t\tif (val !== undefined) {\r\n\t\t\tthis._origin.z = val;\r\n\t\t\treturn this._entity || this;\r\n\t\t}\r\n\r\n\t\treturn this._origin.z;\r\n\t},\r\n\r\n\t_rotatePoint: function (point, radians, origin) {\r\n\t\tvar cosAngle = Math.cos(radians),\r\n\t\t\tsinAngle = Math.sin(radians);\r\n\r\n\t\treturn {\r\n\t\t\tx: origin.x + (point.x - origin.x) * cosAngle + (point.y - origin.y) * sinAngle,\r\n\t\t\ty: origin.y - (point.x - origin.x) * sinAngle + (point.y - origin.y) * cosAngle\r\n\t\t};\r\n\t},\r\n\r\n\t/**\r\n\t * Checks the current transform values against the previous ones. If\r\n\t * any value is different, the appropriate method is called which will\r\n\t * update the transformation matrix accordingly.\r\n\t */\r\n\tupdateTransform: function () {\r\n\t\tthis._localMatrix.identity();\r\n\t\t\r\n\t\tif (this._mode === 0) {\r\n\t\t\t// 2d translation\r\n\t\t\tthis._localMatrix.multiply(this._localMatrix._newTranslate(this._translate.x, this._translate.y));\r\n\t\t}\r\n\r\n\t\tif (this._mode === 1) {\r\n\t\t\t// iso translation\r\n\t\t\tvar isoPoint = this._translateIso = new IgePoint3d(\r\n\t\t\t\tthis._translate.x,\r\n\t\t\t\tthis._translate.y,\r\n\t\t\t\tthis._translate.z + this._bounds3d.z / 2\r\n\t\t\t).toIso();\r\n\r\n\t\t\tif (this._parent && this._parent._bounds3d.z) {\r\n\t\t\t\t// This adjusts the child entity so that 0, 0, 0 inside the\r\n\t\t\t\t// parent is the center of the base of the parent\r\n\t\t\t\tisoPoint.y += this._parent._bounds3d.z / 1.6;\r\n\t\t\t}\r\n\r\n\t\t\tthis._localMatrix.multiply(this._localMatrix._newTranslate(isoPoint.x, isoPoint.y));\r\n\t\t}\r\n\t\t\r\n\t\tthis._localMatrix.rotateBy(this._rotate.z);\r\n\t\tthis._localMatrix.scaleBy(this._scale.x, this._scale.y);\r\n\t\t\r\n\t\t// Adjust local matrix for origin values if not at center\r\n\t\tif (this._origin.x !== 0.5 || this._origin.y !== 0.5) {\r\n\t\t\tthis._localMatrix.translateBy(\r\n\t\t\t\t(this._bounds2d.x * (0.5 - this._origin.x)),\r\n\t\t\t\t(this._bounds2d.y * (0.5 - this._origin.y))\r\n\t\t\t);\r\n\t\t}\r\n\t\t\r\n\t\t// TODO: If the parent and local transforms are unchanged, we should used cached values\r\n\t\tif (this._parent) {\r\n\t\t\tthis._worldMatrix.copy(this._parent._worldMatrix);\r\n\t\t\tthis._worldMatrix.multiply(this._localMatrix);\r\n\t\t} else {\r\n\t\t\tthis._worldMatrix.copy(this._localMatrix);\r\n\t\t}\r\n\t\t\r\n\t\t// Check if the world matrix has changed and if so, set a few flags\r\n\t\t// to allow other methods to know that a matrix change has occurred\r\n\t\tif (!this._worldMatrix.compare(this._oldWorldMatrix)) {\r\n\t\t\tthis._oldWorldMatrix.copy(this._worldMatrix);\r\n\t\t\tthis._transformChanged = true;\r\n\t\t\tthis._aabbDirty = true;\r\n\t\t\tthis._bounds3dPolygonDirty = true;\r\n\t\t} else {\r\n\t\t\tthis._transformChanged = false;\r\n\t\t}\r\n\t\t\r\n\t\t// Check if the geometry has changed and if so, update the aabb dirty\r\n\t\tif (!this._oldBounds2d.compare(this._bounds2d)) {\r\n\t\t\tthis._aabbDirty = true;\r\n\t\t\t\r\n\t\t\t// Record the new geometry to the oldGeometry data\r\n\t\t\tthis._oldBounds2d.copy(this._bounds2d);\r\n\t\t}\r\n\t\t\r\n\t\tif (!this._oldBounds3d.compare(this._bounds3d)) {\r\n\t\t\tthis._bounds3dPolygonDirty = true;\r\n\t\t\t\r\n\t\t\t// Record the new geometry to the oldGeometry data\r\n\t\t\tthis._oldBounds3d.copy(this._bounds3d);\r\n\t\t}\r\n\t\t\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * Gets / sets the disable interpolation flag. If set to true then\r\n\t * stream data being received by the client will not be interpolated\r\n\t * and will be instantly assigned instead. Useful if your entity's\r\n\t * transformations should not be interpolated over time.\r\n\t * @param val\r\n\t * @returns {*}\r\n\t */\r\n\tdisableInterpolation: function (val) {\r\n\t\tif (val !== undefined) {\r\n\t\t\tthis._disableInterpolation = val;\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\treturn this._disableInterpolation;\r\n\t},\r\n\r\n\t////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\t// STREAM\r\n\t////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\t/**\r\n\t * Gets / sets the array of sections that this entity will\r\n\t * encode into its stream data.\r\n\t * @param {Array=} sectionArray An array of strings.\r\n\t * @example #Define the sections this entity will use in the network stream. Use the default \"transform\" section as well as a \"custom1\" section\r\n\t *     entity.streamSections('transform', 'custom1');\r\n\t * @return {*} \"this\" when arguments are passed to allow method\r\n\t * chaining or the current value if no arguments are specified.\r\n\t */\r\n\tstreamSections: function (sectionArray) {\r\n\t\tif (sectionArray !== undefined) {\r\n\t\t\tthis._streamSections = sectionArray;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\treturn this._streamSections;\r\n\t},\r\n\r\n\t/**\r\n\t * Adds a section into the existing streamed sections array.\r\n\t * @param {String} sectionName The section name to add.\r\n\t */\r\n\tstreamSectionsPush: function (sectionName) {\r\n\t\tthis._streamSections = this._streamSections || [];\r\n\t\tthis._streamSections.push(sectionName);\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * Removes a section into the existing streamed sections array.\r\n\t * @param {String} sectionName The section name to remove.\r\n\t */\r\n\tstreamSectionsPull: function (sectionName) {\r\n\t\tif (this._streamSections) {\r\n\t\t\tthis._streamSections.pull(sectionName);\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * Gets / sets a streaming property on this entity. If set, the\r\n\t * property's new value is streamed to clients on the next packet.\r\n\t *\r\n\t * @param {String} propName The name of the property to get / set.\r\n\t * @param {*=} propVal Optional. If provided, the property is set\r\n\t * to this value.\r\n\t * @return {*} \"this\" when a propVal argument is passed to allow method\r\n\t * chaining or the current value if no propVal argument is specified.\r\n\t */\r\n\tstreamProperty: function (propName, propVal) {\r\n\t\tthis._streamProperty = this._streamProperty || {};\r\n\t\t//this._streamPropertyChange = this._streamPropertyChange || {};\r\n\r\n\t\tif (propName !== undefined) {\r\n\t\t\tif (propVal !== undefined) {\r\n\t\t\t\t//this._streamPropertyChange[propName] = this._streamProperty[propName] !== propVal;\r\n\t\t\t\tthis._streamProperty[propName] = propVal;\r\n\r\n\t\t\t\treturn this;\r\n\t\t\t}\r\n\r\n\t\t\treturn this._streamProperty[propName];\r\n\t\t}\r\n\r\n\t\treturn undefined;\r\n\t},\r\n\r\n\t/**\r\n\t * Gets / sets the data for the specified data section id. This method\r\n\t * is usually not called directly and instead is part of the network\r\n\t * stream system. General use case is to write your own custom streamSectionData\r\n\t * method in a class that extends IgeEntity so that you can control the\r\n\t * data that the entity will send and receive over the network stream.\r\n\t * @param {String} sectionId A string identifying the section to\r\n\t * handle data get / set for.\r\n\t * @param {*=} data If present, this is the data that has been sent\r\n\t * from the server to the client for this entity.\r\n\t * @param {Boolean=} bypassTimeStream If true, will assign transform\r\n\t * directly to entity instead of adding the values to the time stream.\r\n\t * @return {*} \"this\" when a data argument is passed to allow method\r\n\t * chaining or the current value if no data argument is specified.\r\n\t */\r\n\tstreamSectionData: function (sectionId, data, bypassTimeStream) {\r\n\t\tswitch (sectionId) {\r\n\t\t\tcase 'transform':\r\n\t\t\t\tif (data) {\r\n\t\t\t\t\t// We have received updated data\r\n\t\t\t\t\tvar dataArr = data.split(',');\r\n\t\r\n\t\t\t\t\tif (!this._disableInterpolation && !bypassTimeStream && !this._streamJustCreated) {\r\n\t\t\t\t\t\t// Translate\r\n\t\t\t\t\t\tif (dataArr[0]) { dataArr[0] = parseFloat(dataArr[0]); }\r\n\t\t\t\t\t\tif (dataArr[1]) { dataArr[1] = parseFloat(dataArr[1]); }\r\n\t\t\t\t\t\tif (dataArr[2]) { dataArr[2] = parseFloat(dataArr[2]); }\r\n\t\r\n\t\t\t\t\t\t// Scale\r\n\t\t\t\t\t\tif (dataArr[3]) { dataArr[3] = parseFloat(dataArr[3]); }\r\n\t\t\t\t\t\tif (dataArr[4]) { dataArr[4] = parseFloat(dataArr[4]); }\r\n\t\t\t\t\t\tif (dataArr[5]) { dataArr[5] = parseFloat(dataArr[5]); }\r\n\t\r\n\t\t\t\t\t\t// Rotate\r\n\t\t\t\t\t\tif (dataArr[6]) { dataArr[6] = parseFloat(dataArr[6]); }\r\n\t\t\t\t\t\tif (dataArr[7]) { dataArr[7] = parseFloat(dataArr[7]); }\r\n\t\t\t\t\t\tif (dataArr[8]) { dataArr[8] = parseFloat(dataArr[8]); }\r\n\t\r\n\t\t\t\t\t\t// Add it to the time stream\r\n\t\t\t\t\t\tthis._timeStream.push([ige.network.stream._streamDataTime + ige.network._latency, dataArr]);\r\n\t\r\n\t\t\t\t\t\t// Check stream length, don't allow higher than 10 items\r\n\t\t\t\t\t\tif (this._timeStream.length > 10) {\r\n\t\t\t\t\t\t\t// Remove the first item\r\n\t\t\t\t\t\t\tthis._timeStream.shift();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// Assign all the transform values immediately\r\n\t\t\t\t\t\tif (dataArr[0]) { this._translate.x = parseFloat(dataArr[0]); }\r\n\t\t\t\t\t\tif (dataArr[1]) { this._translate.y = parseFloat(dataArr[1]); }\r\n\t\t\t\t\t\tif (dataArr[2]) { this._translate.z = parseFloat(dataArr[2]); }\r\n\t\r\n\t\t\t\t\t\t// Scale\r\n\t\t\t\t\t\tif (dataArr[3]) { this._scale.x = parseFloat(dataArr[3]); }\r\n\t\t\t\t\t\tif (dataArr[4]) { this._scale.y = parseFloat(dataArr[4]); }\r\n\t\t\t\t\t\tif (dataArr[5]) { this._scale.z = parseFloat(dataArr[5]); }\r\n\t\r\n\t\t\t\t\t\t// Rotate\r\n\t\t\t\t\t\tif (dataArr[6]) { this._rotate.x = parseFloat(dataArr[6]); }\r\n\t\t\t\t\t\tif (dataArr[7]) { this._rotate.y = parseFloat(dataArr[7]); }\r\n\t\t\t\t\t\tif (dataArr[8]) { this._rotate.z = parseFloat(dataArr[8]); }\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t// If we are using composite caching ensure we update the cache\r\n\t\t\t\t\t\tif (this._compositeCache) {\r\n\t\t\t\t\t\t\tthis.cacheDirty(true);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// We should return stringified data\r\n\t\t\t\t\treturn this._translate.toString(this._streamFloatPrecision) + ',' + // translate\r\n\t\t\t\t\t\tthis._scale.toString(this._streamFloatPrecision) + ',' + // scale\r\n\t\t\t\t\t\tthis._rotate.toString(this._streamFloatPrecision) + ','; // rotate\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t\r\n\t\t\tcase 'depth':\r\n\t\t\t\t\tif (data !== undefined) {\r\n\t\t\t\t\t\tif (ige.isClient) {\r\n\t\t\t\t\t\t\tthis.depth(parseInt(data));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn String(this.depth());\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t\r\n\t\t\tcase 'layer':\r\n\t\t\t\tif (data !== undefined) {\r\n\t\t\t\t\tif (ige.isClient) {\r\n\t\t\t\t\t\tthis.layer(parseInt(data));\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn String(this.layer());\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t\r\n\t\t\tcase 'bounds2d':\r\n\t\t\t\tif (data !== undefined) {\r\n\t\t\t\t\tif (ige.isClient) {\r\n\t\t\t\t\t\tvar geom = data.split(',');\r\n\t\t\t\t\t\tthis.bounds2d(parseFloat(geom[0]), parseFloat(geom[1]));\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn String(this._bounds2d.x + ',' + this._bounds2d.y);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t\r\n\t\t\tcase 'bounds3d':\r\n\t\t\t\tif (data !== undefined) {\r\n\t\t\t\t\tif (ige.isClient) {\r\n\t\t\t\t\t\tvar geom = data.split(',');\r\n\t\t\t\t\t\tthis.bounds3d(parseFloat(geom[0]), parseFloat(geom[1]), parseFloat(geom[2]));\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn String(this._bounds3d.x + ',' + this._bounds3d.y + ',' + this._bounds3d.z);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t\r\n\t\t\tcase 'hidden':\r\n\t\t\t\tif (data !== undefined) {\r\n\t\t\t\t\tif (ige.isClient) {\r\n\t\t\t\t\t\tif (data == 'true') {\r\n\t\t\t\t\t\t\tthis.hide();\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tthis.show();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn String(this.isHidden());\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t\r\n\t\t\tcase 'mount':\r\n\t\t\t\tif (data !== undefined) {\r\n\t\t\t\t\tif (ige.isClient) {\r\n\t\t\t\t\t\tif (data) {\r\n\t\t\t\t\t\t\tvar newParent = ige.$(data);\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tif (newParent) {\r\n\t\t\t\t\t\t\t\tthis.mount(newParent);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t// Unmount\r\n\t\t\t\t\t\t\tthis.unMount();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvar parent = this.parent();\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (parent) {\r\n\t\t\t\t\t\treturn this.parent().id();\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn '';\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t\r\n\t\t\tcase 'origin':\r\n\t\t\t\tif (data !== undefined) {\r\n\t\t\t\t\tif (ige.isClient) {\r\n\t\t\t\t\t\tvar geom = data.split(',');\r\n\t\t\t\t\t\tthis.origin(parseFloat(geom[0]), parseFloat(geom[1]), parseFloat(geom[2]));\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn String(this._origin.x + ',' + this._origin.y + ',' + this._origin.z);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'props':\r\n\t\t\t\tvar newData,\r\n\t\t\t\t\tchanged,\r\n\t\t\t\t\ti;\r\n\r\n\t\t\t\tif (data !== undefined) {\r\n\t\t\t\t\tif (ige.isClient) {\r\n\t\t\t\t\t\tvar props = JSON.parse(data);\r\n\r\n\t\t\t\t\t\t// Update properties that have been sent through\r\n\t\t\t\t\t\tfor (i in props) {\r\n\t\t\t\t\t\t\tchanged = false;\r\n\t\t\t\t\t\t\tif (props.hasOwnProperty(i)) {\r\n\t\t\t\t\t\t\t\tif (this._streamProperty[i] != props[i]) {\r\n\t\t\t\t\t\t\t\t\tchanged = true;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tthis._streamProperty[i] = props[i];\r\n\r\n\t\t\t\t\t\t\t\tthis.emit('streamPropChange', [i, props[i]]);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tnewData = {};\r\n\r\n\t\t\t\t\tfor (i in this._streamProperty) {\r\n\t\t\t\t\t\tif (this._streamProperty.hasOwnProperty(i)) {\r\n\t\t\t\t\t\t\t//if (this._streamPropertyChange[i]) {\r\n\t\t\t\t\t\t\t\tnewData[i] = this._streamProperty[i];\r\n\t\t\t\t\t\t\t\t//this._streamPropertyChange[i] = false;\r\n\t\t\t\t\t\t\t//}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn JSON.stringify(newData);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t},\r\n\r\n\t/* CEXCLUDE */\r\n\t/**\r\n\t * Gets / sets the stream mode that the stream system will use when\r\n\t * handling pushing data updates to connected clients.\r\n\t * @param {Number=} val A value representing the stream mode.\r\n\t * @example #Set the entity to disable streaming\r\n\t *     entity.streamMode(0);\r\n\t * @example #Set the entity to automatic streaming\r\n\t *     entity.streamMode(1);\r\n\t * @example #Set the entity to manual (advanced mode) streaming\r\n\t *     entity.streamMode(2);\r\n\t * @return {*} \"this\" when arguments are passed to allow method\r\n\t * chaining or the current value if no arguments are specified.\r\n\t */\r\n\tstreamMode: function (val) {\r\n\t\tif (val !== undefined) {\r\n\t\t\tif (ige.isServer) {\r\n\t\t\t\tthis._streamMode = val;\r\n\t\t\t}\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\treturn this._streamMode;\r\n\t},\r\n\r\n\t/**\r\n\t * Gets / sets the stream control callback function that will be called\r\n\t * each time the entity tick method is called and stream-able data is\r\n\t * updated.\r\n\t * @param {Function=} method The stream control method.\r\n\t * @example #Set the entity's stream control method to control when this entity is streamed and when it is not\r\n\t *     entity.streamControl(function (clientId) {\r\n\t *         // Let's use an example where we only want this entity to stream\r\n\t *         // to one particular client with the id 4039589434\r\n\t *         if (clientId === '4039589434') {\r\n\t *             // Returning true tells the network stream to send data\r\n\t *             // about this entity to the client\r\n\t *             return true;\r\n\t *         } else {\r\n\t *             // Returning false tells the network stream NOT to send\r\n\t *             // data about this entity to the client\r\n\t *             return false;\r\n\t *         }\r\n\t *     });\r\n\t * \r\n\t * Further reading: [Controlling Streaming](http://www.isogenicengine.com/documentation/isogenic-game-engine/versions/1-1-0/manual/networking-multiplayer/realtime-network-streaming/stream-modes-and-controlling-streaming/)\r\n\t * @return {*} \"this\" when arguments are passed to allow method\r\n\t * chaining or the current value if no arguments are specified.\r\n\t */\r\n\tstreamControl: function (method) {\r\n\t\tif (method !== undefined) {\r\n\t\t\tthis._streamControl = method;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\treturn this._streamControl;\r\n\t},\r\n\r\n\t/**\r\n\t * Gets / sets the stream sync interval. This value\r\n\t * is in milliseconds and cannot be lower than 16. It will\r\n\t * determine how often data from this entity is added to the\r\n\t * stream queue.\r\n\t * @param {Number=} val Number of milliseconds between adding\r\n\t * stream data for this entity to the stream queue.\r\n\t * @param {String=} sectionId Optional id of the stream data\r\n\t * section you want to set the interval for. If omitted the\r\n\t * interval will be applied to all sections.\r\n\t * @example #Set the entity's stream update (sync) interval to 1 second because this entity's data is not highly important to the simulation so save some bandwidth!\r\n\t *     entity.streamSyncInterval(1000);\r\n\t * @example #Set the entity's stream update (sync) interval to 16 milliseconds because this entity's data is very important to the simulation so send as often as possible!\r\n\t *     entity.streamSyncInterval(16);\r\n\t * @return {*} \"this\" when arguments are passed to allow method\r\n\t * chaining or the current value if no arguments are specified.\r\n\t */\r\n\tstreamSyncInterval: function (val, sectionId) {\r\n\t\tif (val !== undefined) {\r\n\t\t\tif (!sectionId) {\r\n\t\t\t\tif (val < 16) {\r\n\t\t\t\t\tdelete this._streamSyncInterval;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._streamSyncDelta = 0;\r\n\t\t\t\t\tthis._streamSyncInterval = val;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tthis._streamSyncSectionInterval = this._streamSyncSectionInterval || {};\r\n\t\t\t\tthis._streamSyncSectionDelta = this._streamSyncSectionDelta || {};\r\n\t\t\t\tif (val < 16) {\r\n\t\t\t\t\tdelete this._streamSyncSectionInterval[sectionId];\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._streamSyncSectionDelta[sectionId] = 0;\r\n\t\t\t\t\tthis._streamSyncSectionInterval[sectionId] = val;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\treturn this._streamSyncInterval;\r\n\t},\r\n\r\n\t/**\r\n\t * Gets / sets the precision by which floating-point values will\r\n\t * be encoded and sent when packaged into stream data.\r\n\t * @param {Number=} val The number of decimal places to preserve.\r\n\t * @example #Set the float precision to 2\r\n\t *     // This will mean that any data using floating-point values\r\n\t *     // that gets sent across the network stream will be rounded\r\n\t *     // to 2 decimal places. This helps save bandwidth by not\r\n\t *     // having to send the entire number since precision above\r\n\t *     // 2 decimal places is usually not that important to the\r\n\t *     // simulation.\r\n\t *     entity.streamFloatPrecision(2);\r\n\t * @return {*} \"this\" when arguments are passed to allow method\r\n\t * chaining or the current value if no arguments are specified.\r\n\t */\r\n\tstreamFloatPrecision: function (val) {\r\n\t\tif (val !== undefined) {\r\n\t\t\tthis._streamFloatPrecision = val;\r\n\r\n\t\t\tvar i, floatRemove = '\\\\.';\r\n\r\n\t\t\t// Update the floatRemove regular expression pattern\r\n\t\t\tfor (i = 0; i < this._streamFloatPrecision; i++) {\r\n\t\t\t\tfloatRemove += '0';\r\n\t\t\t}\r\n\r\n\t\t\t// Add the trailing comma\r\n\t\t\tfloatRemove += ',';\r\n\r\n\t\t\t// Create the new regexp\r\n\t\t\tthis._floatRemoveRegExp = new RegExp(floatRemove, 'g');\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\treturn this._streamFloatPrecision;\r\n\t},\r\n\r\n\t/**\r\n\t * Queues stream data for this entity to be sent to the\r\n\t * specified client id or array of client ids.\r\n\t * @param {Array} clientId An array of string IDs of each\r\n\t * client to send the stream data to.\r\n\t * @return {IgeEntity} \"this\".\r\n\t */\r\n\tstreamSync: function (clientId) {\r\n\t\tif (this._streamMode === 1) {\r\n\t\t\t// Check if we have a stream sync interval\r\n\t\t\tif (this._streamSyncInterval) {\r\n\t\t\t\tthis._streamSyncDelta += ige._tickDelta;\r\n\r\n\t\t\t\tif (this._streamSyncDelta < this._streamSyncInterval) {\r\n\t\t\t\t\t// The stream sync interval is still higher than\r\n\t\t\t\t\t// the stream sync delta so exit without calling the\r\n\t\t\t\t\t// stream sync method\r\n\t\t\t\t\treturn this;\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// We've reached the delta we want so zero it now\r\n\t\t\t\t\t// ready for the next loop\r\n\t\t\t\t\tthis._streamSyncDelta = 0;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Grab an array of connected clients from the network\r\n\t\t\t// system\r\n\t\t\tvar recipientArr = [],\r\n\t\t\t\tclientArr = ige.network.clients(this._streamRoomId),\r\n\t\t\t\ti;\r\n\t\t\t\r\n\t\t\tfor (i in clientArr) {\r\n\t\t\t\tif (clientArr.hasOwnProperty(i)) {\r\n\t\t\t\t\t// Check for a stream control method\r\n\t\t\t\t\tif (this._streamControl) {\r\n\t\t\t\t\t\t// Call the callback method and if it returns true,\r\n\t\t\t\t\t\t// send the stream data to this client\r\n\t\t\t\t\t\tif (this._streamControl.apply(this, [i, this._streamRoomId])) {\r\n\t\t\t\t\t\t\trecipientArr.push(i);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// No control method so process for this client\r\n\t\t\t\t\t\trecipientArr.push(i);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis._streamSync(recipientArr);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tif (this._streamMode === 2) {\r\n\t\t\t// Stream mode is advanced\r\n\t\t\tthis._streamSync(clientId, this._streamRoomId);\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * Override this method if your entity should send data through to\r\n\t * the client when it is being created on the client for the first\r\n\t * time through the network stream. The data will be provided as the\r\n\t * first argument in the constructor call to the entity class so\r\n\t * you should expect to receive it as per this example:\r\n\t * @example #Using and Receiving Stream Create Data\r\n\t *     var MyNewClass = IgeEntity.extend({\r\n\t *         classId: 'MyNewClass',\r\n\t *         \r\n\t *         // Define the init with the parameter to receive the\r\n\t *         // data you return in the streamCreateData() method\r\n\t *         init: function (myCreateData) {\r\n\t *             this._myData = myCreateData;\r\n\t *         },\r\n\t *         \r\n\t *         streamCreateData: function () {\r\n\t *             return this._myData;\r\n\t *         }\r\n\t *     });\r\n\t * \r\n\t * Valid return values must not include circular references!\r\n\t */\r\n\tstreamCreateData: function () {},\r\n\r\n\t/**\r\n\t * Gets / sets the stream emit created flag. If set to true this entity\r\n\t * emit a \"streamCreated\" event when it is created by the stream, but\r\n\t * after the id and initial transform are set.\r\n\t * @param val\r\n\t * @returns {*}\r\n\t */\r\n\tstreamEmitCreated: function (val) {\r\n\t\tif (val !== undefined) {\r\n\t\t\tthis._streamEmitCreated = val;\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\treturn this._streamEmitCreated;\r\n\t},\r\n\t\r\n\t/**\r\n\t * Asks the stream system to queue the stream data to the specified\r\n\t * client id or array of ids.\r\n\t * @param {Array} recipientArr The array of ids of the client(s) to\r\n\t * queue stream data for. The stream data being queued\r\n\t * is returned by a call to this._streamData().\r\n\t * @param {String} streamRoomId The id of the room the entity belongs\r\n\t * in (can be undefined or null if no room assigned).\r\n\t * @private\r\n\t */\r\n\t_streamSync: function (recipientArr, streamRoomId) {\r\n\t\tvar arrCount = recipientArr.length,\r\n\t\t\tarrIndex,\r\n\t\t\tclientId,\r\n\t\t\tstream = ige.network.stream,\r\n\t\t\tthisId = this.id(),\r\n\t\t\tfilteredArr = [],\r\n\t\t\tcreateResult = true; // We set this to true by default\r\n\r\n\t\t// Loop the recipient array\r\n\t\tfor (arrIndex = 0; arrIndex < arrCount; arrIndex++) {\r\n\t\t\tclientId = recipientArr[arrIndex];\r\n\r\n\t\t\t// Check if the client has already received a create\r\n\t\t\t// command for this entity\r\n\t\t\tstream._streamClientCreated[thisId] = stream._streamClientCreated[thisId] || {};\r\n\t\t\tif (!stream._streamClientCreated[thisId][clientId]) {\r\n\t\t\t\tcreateResult = this.streamCreate(clientId);\r\n\t\t\t}\r\n\r\n\t\t\t// Make sure that if we had to create the entity for\r\n\t\t\t// this client that the create worked before bothering\r\n\t\t\t// to waste bandwidth on stream updates\r\n\t\t\tif (createResult) {\r\n\t\t\t\t// Get the stream data\r\n\t\t\t\tvar data = this._streamData();\r\n\r\n\t\t\t\t// Is the data different from the last data we sent\r\n\t\t\t\t// this client?\r\n\t\t\t\tstream._streamClientData[thisId] = stream._streamClientData[thisId] || {};\r\n\t\t\t\t\r\n\t\t\t\tif (stream._streamClientData[thisId][clientId] != data) {\r\n\t\t\t\t\tfilteredArr.push(clientId);\r\n\r\n\t\t\t\t\t// Store the new data for later comparison\r\n\t\t\t\t\tstream._streamClientData[thisId][clientId] = data;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tif (filteredArr.length) {\r\n\t\t\tstream.queue(thisId, data, filteredArr);\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Forces the stream to push this entity's full stream data on the\r\n\t * next stream sync regardless of what clients have received in the\r\n\t * past. This should only be used when required rather than every\r\n\t * tick as it will reduce the overall efficiency of the stream if\r\n\t * used every tick.\r\n\t * @returns {*}\r\n\t */\r\n\tstreamForceUpdate: function () {\r\n\t\tif (ige.isServer) {\r\n\t\t\tvar thisId = this.id();\r\n\t\t\t\r\n\t\t\t// Invalidate the stream client data lookup to ensure\r\n\t\t\t// the latest data will be pushed on the next stream sync\r\n\t\t\tif (ige.network && ige.network.stream && ige.network.stream._streamClientData && ige.network.stream._streamClientData[thisId]) {\r\n\t\t\t\tige.network.stream._streamClientData[thisId] = {};\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * Issues a create entity command to the passed client id\r\n\t * or array of ids. If no id is passed it will issue the\r\n\t * command to all connected clients. If using streamMode(1)\r\n\t * this method is called automatically.\r\n\t * @param {*} clientId The id or array of ids to send\r\n\t * the command to.\r\n\t * @example #Send a create command for this entity to all clients\r\n\t *     entity.streamCreate();\r\n\t * @example #Send a create command for this entity to an array of client ids\r\n\t *     entity.streamCreate(['43245325', '326755464', '436743453']);\r\n\t * @example #Send a create command for this entity to a single client id\r\n\t *     entity.streamCreate('43245325');\r\n\t * @return {Boolean}\r\n\t */\r\n\tstreamCreate: function (clientId) {\r\n\t\tif (this._parent) {\r\n\t\t\tvar thisId = this.id(),\r\n\t\t\t\tarr,\r\n\t\t\t\ti;\r\n\r\n\t\t\t// Send the client an entity create command first\r\n\t\t\tige.network.send('_igeStreamCreate', [\r\n\t\t\t\tthis.classId(),\r\n\t\t\t\tthisId,\r\n\t\t\t\tthis._parent.id(),\r\n\t\t\t\tthis.streamSectionData('transform'),\r\n\t\t\t\tthis.streamCreateData()\r\n\t\t\t], clientId);\r\n\t\t\t\r\n\t\t\tige.network.stream._streamClientCreated[thisId] = ige.network.stream._streamClientCreated[thisId] || {};\r\n\r\n\t\t\tif (clientId) {\r\n\t\t\t\t// Mark the client as having received a create\r\n\t\t\t\t// command for this entity\r\n\t\t\t\tige.network.stream._streamClientCreated[thisId][clientId] = true;\r\n\t\t\t} else {\r\n\t\t\t\t// Mark all clients as having received this create\r\n\t\t\t\tarr = ige.network.clients();\r\n\r\n\t\t\t\tfor (i in arr) {\r\n\t\t\t\t\tif (arr.hasOwnProperty(i)) {\r\n\t\t\t\t\t\tige.network.stream._streamClientCreated[thisId][i] = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t},\r\n\r\n\t/**\r\n\t * Issues a destroy entity command to the passed client id\r\n\t * or array of ids. If no id is passed it will issue the\r\n\t * command to all connected clients. If using streamMode(1)\r\n\t * this method is called automatically.\r\n\t * @param {*} clientId The id or array of ids to send\r\n\t * the command to.\r\n\t * @example #Send a destroy command for this entity to all clients\r\n\t *     entity.streamDestroy();\r\n\t * @example #Send a destroy command for this entity to an array of client ids\r\n\t *     entity.streamDestroy(['43245325', '326755464', '436743453']);\r\n\t * @example #Send a destroy command for this entity to a single client id\r\n\t *     entity.streamDestroy('43245325');\r\n\t * @return {Boolean}\r\n\t */\r\n\tstreamDestroy: function (clientId) {\r\n\t\tvar thisId = this.id(),\r\n\t\t\tarr,\r\n\t\t\ti;\r\n\r\n\t\t// Send clients the stream destroy command for this entity\r\n\t\tige.network.send('_igeStreamDestroy', [ige._currentTime, thisId], clientId);\r\n\t\t\r\n\t\tige.network.stream._streamClientCreated[thisId] = ige.network.stream._streamClientCreated[thisId] || {};\r\n\t\tige.network.stream._streamClientData[thisId] = ige.network.stream._streamClientData[thisId] || {};\r\n\r\n\t\tif (clientId) {\r\n\t\t\t// Mark the client as having received a destroy\r\n\t\t\t// command for this entity\r\n\t\t\tige.network.stream._streamClientCreated[thisId][clientId] = false;\r\n            ige.network.stream._streamClientData[thisId][clientId] = undefined;\r\n\t\t} else {\r\n\t\t\t// Mark all clients as having received this destroy\r\n\t\t\tarr = ige.network.clients();\r\n\r\n\t\t\tfor (i in arr) {\r\n\t\t\t\tif (arr.hasOwnProperty(i)) {\r\n\t\t\t\t\tige.network.stream._streamClientCreated[thisId][i] = false;\r\n                    ige.network.stream._streamClientData[thisId][i] = undefined;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\treturn true;\r\n\t},\r\n\r\n\t/**\r\n\t * Generates and returns the current stream data for this entity. The\r\n\t * data will usually include only properties that have changed since\r\n\t * the last time the stream data was generated. The returned data is\r\n\t * a string that has been compressed in various ways to reduce network\r\n\t * overhead during transmission.\r\n\t * @return {String} The string representation of the stream data for\r\n\t * this entity.\r\n\t * @private\r\n\t */\r\n\t_streamData: function () {\r\n\t\t// Check if we already have a cached version of the streamData\r\n\t\tif (this._streamDataCache) {\r\n\t\t\treturn this._streamDataCache;\r\n\t\t} else {\r\n\t\t\t// Let's generate our stream data\r\n\t\t\tvar streamData = '',\r\n\t\t\t\tsectionDataString = '',\r\n\t\t\t\tsectionArr = this._streamSections,\r\n\t\t\t\tsectionCount = sectionArr.length,\r\n\t\t\t\tsectionData,\r\n\t\t\t\tsectionIndex,\r\n\t\t\t\tsectionId;\r\n\r\n\t\t\t// Add the entity id\r\n\t\t\tstreamData += this.id();\r\n\r\n\t\t\t// Only send further data if the entity is still \"alive\"\r\n\t\t\tif (this._alive) {\r\n\t\t\t\t// Now loop the data sections array and compile the rest of the\r\n\t\t\t\t// data string from the data section return data\r\n\t\t\t\tfor (sectionIndex = 0; sectionIndex < sectionCount; sectionIndex++) {\r\n\t\t\t\t\tsectionData = '';\r\n\t\t\t\t\tsectionId = sectionArr[sectionIndex];\r\n\t\t\t\t\t\r\n\t\t\t\t\t// Stream section sync intervals allow individual stream sections\r\n\t\t\t\t\t// to be streamed at different (usually longer) intervals than other\r\n\t\t\t\t\t// sections so you could for instance reduce the number of updates\r\n\t\t\t\t\t// a particular section sends out in a second because the data is\r\n\t\t\t\t\t// not that important compared to updated transformation data\r\n\t\t\t\t\tif (this._streamSyncSectionInterval && this._streamSyncSectionInterval[sectionId]) {\r\n\t\t\t\t\t\t// Check if the section interval has been reached\r\n\t\t\t\t\t\tthis._streamSyncSectionDelta[sectionId] += ige._tickDelta;\r\n\r\n\t\t\t\t\t\tif (this._streamSyncSectionDelta[sectionId] >= this._streamSyncSectionInterval[sectionId]) {\r\n\t\t\t\t\t\t\t// Get the section data for this section id\r\n\t\t\t\t\t\t\tsectionData = this.streamSectionData(sectionId);\r\n\r\n\t\t\t\t\t\t\t// Reset the section delta\r\n\t\t\t\t\t\t\tthis._streamSyncSectionDelta[sectionId] = 0;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// Get the section data for this section id\r\n\t\t\t\t\t\tsectionData = this.streamSectionData(sectionId);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Add the section start designator character. We do this\r\n\t\t\t\t\t// regardless of if there is actually any section data because\r\n\t\t\t\t\t// we want to be able to identify sections in a serial fashion\r\n\t\t\t\t\t// on receipt of the data string on the client\r\n\t\t\t\t\tsectionDataString += ige.network.stream._sectionDesignator;\r\n\r\n\t\t\t\t\t// Check if we were returned any data\r\n\t\t\t\t\tif (sectionData !== undefined) {\r\n\t\t\t\t\t\t// Add the data to the section string\r\n\t\t\t\t\t\tsectionDataString += sectionData;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Add any custom data to the stream string at this point\r\n\t\t\t\tif (sectionDataString) {\r\n\t\t\t\t\tstreamData += sectionDataString;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Remove any .00 from the string since we don't need that data\r\n\t\t\t\t// TODO: What about if a property is a string with something.00 and it should be kept?\r\n\t\t\t\tstreamData = streamData.replace(this._floatRemoveRegExp, ',');\r\n\t\t\t}\r\n\r\n\t\t\t// Store the data in cache in case we are asked for it again this tick\r\n\t\t\t// the update() method of the IgeEntity class clears this every tick\r\n\t\t\tthis._streamDataCache = streamData;\r\n\r\n\t\t\treturn streamData;\r\n\t\t}\r\n\t},\r\n\t/* CEXCLUDE */\r\n\r\n\t////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\t// INTERPOLATOR\r\n\t////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\t/**\r\n\t * Calculates the current value based on the time along the\r\n\t * value range.\r\n\t * @param {Number} startValue The value that the interpolation started from.\r\n\t * @param {Number} endValue The target value to be interpolated to.\r\n\t * @param {Number} startTime The time the interpolation started.\r\n\t * @param {Number} currentTime The current time.\r\n\t * @param {Number} endTime The time the interpolation will end.\r\n\t * @return {Number} The interpolated value.\r\n\t */\r\n\tinterpolateValue: function (startValue, endValue, startTime, currentTime, endTime) {\r\n\t\tvar totalValue = endValue - startValue,\r\n\t\t\tdataDelta = endTime - startTime,\r\n\t\t\toffsetDelta = currentTime - startTime,\r\n\t\t\tdeltaTime = offsetDelta / dataDelta;\r\n\r\n\t\t// Clamp the current time from 0 to 1\r\n\t\tif (deltaTime < 0) { deltaTime = 0; } else if (deltaTime > 1) { deltaTime = 1; }\r\n\r\n\t\treturn (totalValue * deltaTime) + startValue;\r\n\t},\r\n\r\n\t/**\r\n\t * Processes the time stream for the entity.\r\n\t * @param {Number} renderTime The time that the time stream is\r\n\t * targeting to render the entity at.\r\n\t * @param {Number} maxLerp The maximum lerp before the value\r\n\t * is assigned directly instead of being interpolated.\r\n\t * @private\r\n\t */\r\n\t_processInterpolate: function (renderTime, maxLerp) {\r\n\t\t// Set the maximum lerp to 200 if none is present\r\n\t\tif (!maxLerp) { maxLerp = 200; }\r\n\r\n\t\tvar maxLerpSquared = maxLerp * maxLerp,\r\n\t\t\tpreviousData,\r\n\t\t\tnextData,\r\n\t\t\ttimeStream = this._timeStream,\r\n\t\t\tdataDelta,\r\n\t\t\toffsetDelta,\r\n\t\t\tcurrentTime,\r\n\t\t\tpreviousTransform,\r\n\t\t\tnextTransform,\r\n\t\t\tcurrentTransform = [],\r\n\t\t\ti = 1;\r\n\r\n\t\t// Find the point in the time stream that is\r\n\t\t// closest to the render time and assign the\r\n\t\t// previous and next data points\r\n\t\twhile (timeStream[i]) {\r\n\t\t\tif (timeStream[i][0] > renderTime) {\r\n\t\t\t\t// We have previous and next data points from the\r\n\t\t\t\t// time stream so store them\r\n\t\t\t\tpreviousData = timeStream[i - 1];\r\n\t\t\t\tnextData = timeStream[i];\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\ti++;\r\n\t\t}\r\n\r\n\t\t// Check if we have some data to use\r\n\t\tif (!nextData && !previousData) {\r\n\t\t\t// No in-time data was found, check for lagging data\r\n\t\t\tif (timeStream.length > 2) {\r\n\t\t\t\tif (timeStream[timeStream.length - 1][0] < renderTime) {\r\n\t\t\t\t\t// Lagging data is available, use that\r\n\t\t\t\t\tpreviousData = timeStream[timeStream.length - 2];\r\n\t\t\t\t\tnextData = timeStream[timeStream.length - 1];\r\n\t\t\t\t\ttimeStream.shift();\r\n\t\t\t\t\t\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * Fires when the entity interpolates against old data, usually\r\n\t\t\t\t\t * the result of slow processing on the client or too much data\r\n\t\t\t\t\t * being sent from the server.\r\n\t\t\t\t\t * @event IgeEntity#interpolationLag\r\n\t\t\t\t\t */\r\n\t\t\t\t\tthis.emit('interpolationLag');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t// We have some new data so clear the old data\r\n\t\t\ttimeStream.splice(0, i - 1);\r\n\t\t}\r\n\r\n\t\t// If we have data to use\r\n\t\tif (nextData && previousData) {\r\n\t\t\t// Check if the previous data has a timestamp and if not,\r\n\t\t\t// use the next data's timestamp\r\n\t\t\tif (isNaN(previousData[0])) { previousData[0] = nextData[0]; }\r\n\r\n\t\t\t// Store the data so outside systems can access them\r\n\t\t\tthis._timeStreamPreviousData = previousData;\r\n\t\t\tthis._timeStreamNextData = nextData;\r\n\r\n\t\t\t// Calculate the delta times\r\n\t\t\tdataDelta = nextData[0] - previousData[0];\r\n\t\t\toffsetDelta = renderTime - previousData[0];\r\n\r\n\t\t\tthis._timeStreamDataDelta = Math.floor(dataDelta);\r\n\t\t\tthis._timeStreamOffsetDelta = Math.floor(offsetDelta);\r\n\r\n\t\t\t// Calculate the current time between the two data points\r\n\t\t\tcurrentTime = offsetDelta / dataDelta;\r\n\r\n\t\t\tthis._timeStreamCurrentInterpolateTime = currentTime;\r\n\r\n\t\t\t// Clamp the current time from 0 to 1\r\n\t\t\t//if (currentTime < 0) { currentTime = 0.0; } else if (currentTime > 1) { currentTime = 1.0; }\r\n\r\n\t\t\t// Set variables up to store the previous and next data\r\n\t\t\tpreviousTransform = previousData[1];\r\n\t\t\tnextTransform = nextData[1];\r\n\r\n\t\t\t// Translate\r\n\t\t\tcurrentTransform[0] = this.interpolateValue(previousTransform[0], nextTransform[0], previousData[0], renderTime, nextData[0]);\r\n\t\t\tcurrentTransform[1] = this.interpolateValue(previousTransform[1], nextTransform[1], previousData[0], renderTime, nextData[0]);\r\n\t\t\tcurrentTransform[2] = this.interpolateValue(previousTransform[2], nextTransform[2], previousData[0], renderTime, nextData[0]);\r\n\t\t\t// Scale\r\n\t\t\tcurrentTransform[3] = this.interpolateValue(previousTransform[3], nextTransform[3], previousData[0], renderTime, nextData[0]);\r\n\t\t\tcurrentTransform[4] = this.interpolateValue(previousTransform[4], nextTransform[4], previousData[0], renderTime, nextData[0]);\r\n\t\t\tcurrentTransform[5] = this.interpolateValue(previousTransform[5], nextTransform[5], previousData[0], renderTime, nextData[0]);\r\n\t\t\t// Rotate\r\n\t\t\tcurrentTransform[6] = this.interpolateValue(previousTransform[6], nextTransform[6], previousData[0], renderTime, nextData[0]);\r\n\t\t\tcurrentTransform[7] = this.interpolateValue(previousTransform[7], nextTransform[7], previousData[0], renderTime, nextData[0]);\r\n\t\t\tcurrentTransform[8] = this.interpolateValue(previousTransform[8], nextTransform[8], previousData[0], renderTime, nextData[0]);\r\n\r\n\t\t\tthis.translateTo(parseFloat(currentTransform[0]), parseFloat(currentTransform[1]), parseFloat(currentTransform[2]));\r\n\t\t\tthis.scaleTo(parseFloat(currentTransform[3]), parseFloat(currentTransform[4]), parseFloat(currentTransform[5]));\r\n\t\t\tthis.rotateTo(parseFloat(currentTransform[6]), parseFloat(currentTransform[7]), parseFloat(currentTransform[8]));\r\n\r\n\t\t\t/*// Calculate the squared distance between the previous point and next point\r\n\t\t\t dist = this.distanceSquared(previousTransform.x, previousTransform.y, nextTransform.x, nextTransform.y);\r\n\r\n\t\t\t // Check that the distance is not higher than the maximum lerp and if higher,\r\n\t\t\t // set the current time to 1 to snap to the next position immediately\r\n\t\t\t if (dist > maxLerpSquared) { currentTime = 1; }\r\n\r\n\t\t\t // Interpolate the entity position by multiplying the Delta times T, and adding the previous position\r\n\t\t\t currentPosition = {};\r\n\t\t\t currentPosition.x = ( (nextTransform.x - previousTransform.x) * currentTime ) + previousTransform.x;\r\n\t\t\t currentPosition.y = ( (nextTransform.y - previousTransform.y) * currentTime ) + previousTransform.y;\r\n\r\n\t\t\t // Now actually transform the entity\r\n\t\t\t this.translate(entity, currentPosition.x, currentPosition.y);*/\r\n\r\n\t\t\t// Record the last time we updated the entity so we can disregard any updates\r\n\t\t\t// that arrive and are before this timestamp (not applicable in TCP but will\r\n\t\t\t// apply if we ever get UDP in websockets)\r\n\t\t\tthis._lastUpdate = new Date().getTime();\r\n\t\t}\r\n\t},\r\n\t_highlightToGlobalCompositeOperation: function (val) {\r\n\t\tif (val) {\r\n\t\t\tif (val === true) {\r\n\t\t\t\treturn 'lighter'\r\n\t\t\t}\r\n\r\n\t\t\treturn val;\r\n\t\t}\r\n\t}\r\n});\r\n\r\nif (typeof(module) !== 'undefined' && typeof(module.exports) !== 'undefined') { module.exports = IgeEntity; }","// TODO: Implement the _stringify() method for this class\r\n/**\r\n * Creates a new UI entity. UI entities use more resources and CPU\r\n * than standard IgeEntity instances so only use them if an IgeEntity\r\n * won't do the job.\r\n */\r\nvar IgeUiEntity = IgeEntity.extend([\r\n\t{extension: IgeUiStyleExtension, overwrite: true},\r\n\t{extension: IgeUiPositionExtension, overwrite: true}\r\n], {\r\n\tclassId: 'IgeUiEntity',\r\n\r\n\tinit: function () {\r\n\t\tIgeEntity.prototype.init.call(this);\r\n\r\n\t\t// Set some defaults\r\n\t\tthis._color = '#000000';\r\n\t\tthis._borderLeftWidth = 0;\r\n\t\tthis._borderTopWidth = 0;\r\n\t\tthis._borderRightWidth = 0;\r\n\t\tthis._borderBottomWidth = 0;\r\n\t\tthis._borderTopLeftRadius = 0;\r\n\t\tthis._borderTopRightRadius = 0;\r\n\t\tthis._borderBottomRightRadius = 0;\r\n\t\tthis._borderBottomLeftRadius = 0;\r\n\t\tthis._backgroundPosition = {x: 0, y: 0};\r\n\t\tthis._paddingLeft = 0;\r\n\t\tthis._paddingTop = 0;\r\n\t\tthis._paddingRight = 0;\r\n\t\tthis._paddingBottom = 0;\r\n\t},\r\n\t\r\n\tdisabled: function (val) {\r\n\t\tif (val !== undefined) {\r\n\t\t\tthis._disabled = val;\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\treturn this._disabled;\r\n\t},\r\n\t\r\n\toverflow: function (val) {\r\n\t\tif (val !== undefined) {\r\n\t\t\tthis._overflow = val;\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\treturn this._overflow;\r\n\t},\r\n\r\n\t_renderBackground: function (ctx) {\r\n\t\tvar geom = this._bounds2d,\r\n\t\t\tleft, top, width, height;\r\n\r\n\t\tif (this._backgroundColor || this._patternFill) {\r\n\t\t\tleft = -(geom.x / 2) | 0;\r\n\t\t\ttop = -(geom.y / 2) | 0;\r\n\t\t\twidth = geom.x;\r\n\t\t\theight = geom.y;\r\n\r\n\t\t\tctx.save();\r\n\t\t\t\tctx.beginPath();\r\n\r\n\t\t\t\t// Check for early exit if we are rendering a rectangle\r\n\t\t\t\tif (!this._borderTopRightRadius && !this._borderBottomRightRadius && !this._borderBottomLeftRadius && !this._borderTopLeftRadius) {\r\n\t\t\t\t\tctx.rect(left, top, width, height);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// Top border\r\n\t\t\t\t\tctx.moveTo(left + this._borderTopLeftRadius, top);\r\n\t\t\t\t\tctx.lineTo(left + width - this._borderTopRightRadius, top);\r\n\r\n\t\t\t\t\tif (this._borderTopRightRadius > 0) {\r\n\t\t\t\t\t\t// Top-right corner\r\n\t\t\t\t\t\tctx.arcTo(\r\n\t\t\t\t\t\t\tleft + width,\r\n\t\t\t\t\t\t\ttop,\r\n\t\t\t\t\t\t\tleft + width,\r\n\t\t\t\t\t\t\ttop + this._borderTopRightRadius,\r\n\t\t\t\t\t\t\tthis._borderTopRightRadius\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Right border\r\n\t\t\t\t\tctx.lineTo(\r\n\t\t\t\t\t\tleft + width,\r\n\t\t\t\t\t\ttop + height - this._borderBottomRightRadius\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t\tif (this._borderBottomRightRadius > 0) {\r\n\t\t\t\t\t\t// Bottom-right corner\r\n\t\t\t\t\t\tctx.arcTo(\r\n\t\t\t\t\t\t\tleft + width,\r\n\t\t\t\t\t\t\ttop + height,\r\n\t\t\t\t\t\t\tleft + width - this._borderBottomRightRadius,\r\n\t\t\t\t\t\t\ttop + height, this._borderBottomRightRadius\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Bottom border\r\n\t\t\t\t\tctx.lineTo(\r\n\t\t\t\t\t\tleft + this._borderBottomLeftRadius,\r\n\t\t\t\t\t\ttop + height\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t\tif (this._borderBottomLeftRadius > 0) {\r\n\t\t\t\t\t\t// Bottom-left corner\r\n\t\t\t\t\t\tctx.arcTo(\r\n\t\t\t\t\t\t\tleft,\r\n\t\t\t\t\t\t\ttop + height,\r\n\t\t\t\t\t\t\tleft,\r\n\t\t\t\t\t\t\ttop + height - this._borderBottomLeftRadius,\r\n\t\t\t\t\t\t\tthis._borderBottomLeftRadius\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Left border\r\n\t\t\t\t\tctx.lineTo(\r\n\t\t\t\t\t\tleft,\r\n\t\t\t\t\t\ttop + this._borderTopLeftRadius\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t\tif (this._borderTopLeftRadius > 0) {\r\n\t\t\t\t\t\t// Top-left corner\r\n\t\t\t\t\t\tctx.arcTo(\r\n\t\t\t\t\t\t\tleft,\r\n\t\t\t\t\t\t\ttop,\r\n\t\t\t\t\t\t\tleft + this._borderTopLeftRadius,\r\n\t\t\t\t\t\t\ttop, this._borderTopLeftRadius\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tctx.clip();\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// If there is a background colour, paint it here\r\n\t\t\t\tif (this._backgroundColor) {\r\n\t\t\t\t\tctx.fillStyle = this._backgroundColor;\r\n\t\t\t\t\tctx.fill();\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// If there is a background image, paint it here\r\n\t\t\t\tif (this._patternFill) {\r\n\t\t\t\t\tctx.translate(\r\n\t\t\t\t\t\t-(width / 2 | 0) + this._backgroundPosition.x,\r\n\t\t\t\t\t\t-(height / 2 | 0) + this._backgroundPosition.y\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t\tctx.fillStyle = this._patternFill;\r\n\t\t\t\t\tctx.fill();\r\n\t\t\t\t}\r\n\t\t\tctx.restore();\r\n\t\t}\r\n\t},\r\n\r\n\t_renderBorder: function (ctx) {\r\n\t\tvar rad,\r\n\t\t\tgeom = this._bounds2d,\r\n\t\t\tleft = (-(geom.x2) | 0) + 0.5,\r\n\t\t\ttop = (-(geom.y2) | 0) + 0.5,\r\n\t\t\twidth = geom.x - 1,\r\n\t\t\theight = geom.y - 1;\r\n\r\n\t\t// Check for early exit if we are rendering a rectangle\r\n\t\tif (!this._borderTopRightRadius && !this._borderBottomRightRadius && !this._borderBottomLeftRadius && !this._borderTopLeftRadius\r\n\t\t\t&& this._borderLeftWidth === this._borderWidth\r\n\t\t\t&& this._borderTopWidth === this._borderWidth\r\n\t\t\t&& this._borderRightWidth === this._borderWidth\r\n\t\t\t&& this._borderBottomWidth === this._borderWidth) {\r\n\t\t\tctx.strokeStyle = this._borderColor;\r\n\t\t\tctx.lineWidth = this._borderWidth;\r\n\t\t\tctx.strokeRect(left, top, width, height);\r\n\t\t} else {\r\n\t\t\tvar startNewStroke = function() {\r\n\t\t\t\tctx.stroke();\r\n\t\t\t\tctx.beginPath();\r\n\t\t\t};\t\t\r\n\t\t\trad = Math.PI / 180;\r\n\t\t\t\r\n\t\t\tctx.beginPath();\r\n\t\t\tif (this._borderTopWidth) {\r\n\t\t\t\t// Top-left corner top-half\r\n\t\t\t\tctx.strokeStyle = this._borderTopColor;\r\n\t\t\t\tctx.lineWidth = this._borderTopWidth;\r\n\r\n\t\t\t\tif (this._borderTopLeftRadius > 0) {\r\n\t\t\t\t\t// Top-left corner top-half\r\n\t\t\t\t\tctx.arc(left + this._borderTopLeftRadius, top + this._borderTopLeftRadius, this._borderTopLeftRadius, 225 * rad, 270 * rad);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Top border\r\n\t\t\t\tctx.moveTo(left + this._borderTopLeftRadius, top);\r\n\t\t\t\tctx.lineTo(left + width - this._borderTopRightRadius, top);\r\n\r\n\t\t\t\tif (this._borderTopRightRadius > 0) {\r\n\t\t\t\t\t// Top-right corner top-half\r\n\t\t\t\t\tctx.arc(left + width - this._borderTopRightRadius, top + this._borderTopRightRadius, this._borderTopRightRadius, -90 * rad, -44 * rad); // use -44 instead of -45 to fully connect with next piece\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (!this._borderRightWidth || this._borderTopColor != this._borderRightColor || this._borderTopWidth != this._borderRightWidth)\r\n\t\t\t\tstartNewStroke();\r\n\t\t\tif (this._borderRightWidth) {\r\n\t\t\t\t// Top-right corner bottom-half\r\n\t\t\t\tctx.strokeStyle = this._borderRightColor;\r\n\t\t\t\tctx.lineWidth = this._borderRightWidth;\r\n\r\n\t\t\t\tif (this._borderTopRightRadius > 0) {\r\n\t\t\t\t\tctx.arc(left + width - this._borderTopRightRadius, top + this._borderTopRightRadius, this._borderTopRightRadius, -45 * rad, 0);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Right border\r\n\t\t\t\tctx.moveTo(left + width, top + this._borderTopRightRadius);\r\n\t\t\t\tctx.lineTo(left + width, top + height - this._borderBottomRightRadius);\r\n\r\n\t\t\t\tif (this._borderBottomRightRadius > 0) {\r\n\t\t\t\t\t// Bottom-right corner top-half\r\n\t\t\t\t\tctx.arc(left + width - this._borderBottomRightRadius, top + height - this._borderBottomRightRadius, this._borderTopRightRadius, 0, 46 * rad); // use 46 instead of 45 to fully connect with next piece\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (!this._borderBottomWidth || this._borderRightColor != this._borderBottomColor || this._borderRightWidth != this._borderBottomWidth)\r\n\t\t\t\tstartNewStroke();\r\n\t\t\tif (this._borderBottomWidth) {\r\n\t\t\t\t// Bottom-right corner bottom-half\r\n\t\t\t\tctx.strokeStyle = this._borderBottomColor;\r\n\t\t\t\tctx.lineWidth = this._borderBottomWidth;\r\n\r\n\t\t\t\tif (this._borderBottomRightRadius > 0) {\r\n\t\t\t\t\tctx.arc(left + width - this._borderBottomRightRadius, top + height - this._borderBottomRightRadius, this._borderBottomRightRadius, 45 * rad, 90 * rad);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Bottom border\r\n\t\t\t\tctx.moveTo(left + width - this._borderBottomRightRadius, top + height);\r\n\t\t\t\tctx.lineTo(left + this._borderBottomLeftRadius, top + height);\r\n\r\n\t\t\t\tif (this._borderBottomLeftRadius > 0) {\r\n\t\t\t\t\t// Bottom-left corner bottom-half\r\n\t\t\t\t\tctx.arc(left + this._borderBottomLeftRadius, top + height - this._borderBottomLeftRadius, this._borderBottomLeftRadius, 90 * rad, 136 * rad); // use 136 instead of 135 to fully connect with next piece\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (!this._borderLeftWidth || this._borderBottomColor != this._borderLeftColor || this._borderBottomWidth != this._borderLeftWidth)\r\n\t\t\t\tstartNewStroke();\r\n\t\t\tif (this._borderLeftWidth) {\r\n\t\t\t\t// Bottom-left corner top-half\r\n\t\t\t\tctx.strokeStyle = this._borderLeftColor;\r\n\t\t\t\tctx.lineWidth = this._borderLeftWidth;\r\n\r\n\t\t\t\tif (this._borderBottomLeftRadius > 0) {\r\n\t\t\t\t\tctx.arc(left + this._borderBottomLeftRadius, top + height - this._borderBottomLeftRadius, this._borderBottomLeftRadius, 135 * rad, 180 * rad);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Left border\r\n\t\t\t\tctx.moveTo(left, top + height - this._borderBottomLeftRadius);\r\n\t\t\t\tctx.lineTo(left, top + this._borderTopLeftRadius);\r\n\r\n\t\t\t\tif (this._borderTopLeftRadius > 0) {\r\n\t\t\t\t\t// Top-left corner bottom-half\r\n\t\t\t\t\tctx.arc(left + this._borderTopLeftRadius, top + this._borderTopLeftRadius, this._borderTopLeftRadius, 180 * rad, 226 * rad); // use 226 instead of 225 to fully connect with next piece\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tctx.stroke();\r\n\t\t}\r\n\t},\r\n\r\n\tcell: function (val) {\r\n\t\tvar ret = IgeEntity.prototype.cell.call(this, val);\r\n\r\n\t\tif (ret === this && this._patternTexture) {\r\n\t\t\tthis.backgroundImage(\r\n\t\t\t\tthis._patternTexture,\r\n\t\t\t\tthis._patternRepeat\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\treturn ret;\r\n\t},\r\n\r\n\tmount: function (obj) {\r\n\t\tvar ret = IgeEntity.prototype.mount.call(this, obj);\r\n\r\n\t\tif (this._parent) {\r\n\t\t\t// Now we're mounted update our ui calculations since we have a parent\r\n\t\t\t// to calculate from\r\n\t\t\tif (this._updateUiPosition) {\r\n\t\t\t\tthis._updateUiPosition();\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t// Also update any children if we have any\r\n\t\t\tif(this._children.length) {\r\n\t\t\t\tthis.updateUiChildren();\r\n\t\t\t}\r\n\r\n\t\t\tif (this._updateStyle) {\r\n\t\t\t\tthis._updateStyle();\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn ret;\r\n\t},\r\n\r\n\ttick: function (ctx, dontTransform) {\r\n\t\tif (!this._hidden && this._inView && (!this._parent || (this._parent._inView)) && !this._streamJustCreated) {\r\n\t\t\tif (!dontTransform) {\r\n\t\t\t\tthis._transformContext(ctx);\r\n\t\t\t}\r\n\t\t\t// TODO: Investigate caching expensive background and border calls\r\n\t\t\t//if (!this._cache || this._cacheDirty) {\r\n\t\t\t\tthis._renderBackground(ctx);\r\n\t\t\t\tthis._renderBorder(ctx);\r\n\t\t\t//}\r\n\t\r\n\t\t\tif (this._overflow === 'hidden') {\r\n\t\t\t\t// Limit drawing of child entities to within the bounds\r\n\t\t\t\t// of this one\r\n\t\t\t\tvar geom = this._bounds2d,\r\n\t\t\t\t\tleft = -(geom.x / 2) + this._paddingLeft | 0,\r\n\t\t\t\t\ttop = -(geom.y / 2) + (this._paddingTop) | 0,\r\n\t\t\t\t\twidth = geom.x + this._paddingRight,\r\n\t\t\t\t\theight = geom.y + this._paddingBottom;\r\n\t\r\n\t\t\t\tctx.rect(left, top, width, height);\r\n\t\t\t\t//ctx.stroke();\r\n\t\t\t\tctx.clip();\r\n\t\t\t}\r\n\t\r\n\t\t\tctx.translate(this._paddingLeft, this._paddingTop);\r\n\t\t\tIgeEntity.prototype.tick.call(this, ctx, true);\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Handles screen resize events.\r\n\t * @param event\r\n\t * @private\r\n\t */\r\n\t_resizeEvent: function (event) {\r\n\t\t\r\n\t\tif (this._updateUiPosition) {\r\n\t\t\tthis._updateUiPosition();\r\n\t\t} else {\r\n\t\t\tdebugger;\r\n\t\t}\r\n\r\n\t\tif (this._updateStyle) {\r\n\t\t\tthis._updateStyle();\r\n\t\t}\r\n\t\tIgeEntity.prototype._resizeEvent.call(this, event);\r\n\t}\r\n});\r\n\r\nif (typeof(module) !== 'undefined' && typeof(module.exports) !== 'undefined') { module.exports = IgeUiEntity; }\r\n","/**\r\n * Creates a new UI element. UI elements use more resources and CPU\r\n * than standard IgeEntity instances but provide a rich set of extra\r\n * positioning and styling methods as well as reacting to styles\r\n * defined using the IgeUiManagerComponent.\r\n */\r\nvar IgeUiElement = IgeUiEntity.extend({\r\n\tclassId: 'IgeUiElement',\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tinit: function () {\r\n\t\tvar self = this;\r\n\t\t\r\n\t\tIgeUiEntity.prototype.init.call(this);\r\n\t\tige.ui.registerElement(this);\r\n\t\t\r\n\t\tthis._focused = false;\r\n\t\tthis._allowHover = true;\r\n\t\tthis._allowFocus = true;\r\n\t\tthis._allowActive = true;\r\n\t\t\r\n\t\tvar updateStyleFunc = function () {\r\n\t\t\tself._updateStyle();\r\n\t\t};\r\n\t\t\r\n\t\tthis.on('mouseOver', function () {\r\n\t\t\tif (this._allowHover) {\r\n\t\t\t\tupdateStyleFunc();\r\n\t\t\t\tige.input.stopPropagation();\r\n\t\t\t} else {\r\n\t\t\t\tthis._mouseStateOver = false;\r\n\t\t\t}\r\n\t\t});\r\n\t\tthis.on('mouseOut', function () {\r\n\t\t\tif (this._allowHover) {\r\n\t\t\t\tupdateStyleFunc();\r\n\t\t\t\tige.input.stopPropagation();\r\n\t\t\t} else {\r\n\t\t\t\tthis._mouseStateOver = false;\r\n\t\t\t}\r\n\t\t});\r\n\t\tthis.on('mouseDown', function () {\r\n\t\t\tif (this._allowActive) {\r\n\t\t\t\tupdateStyleFunc();\r\n\t\t\t\tige.input.stopPropagation();\r\n\t\t\t} else {\r\n\t\t\t\tthis._mouseStateDown = false;\r\n\t\t\t}\r\n\t\t});\r\n\t\tthis.on('mouseUp', function () {\r\n\t\t\tif (this._allowFocus) {\r\n\t\t\t\t// Try to focus the entity\r\n\t\t\t\tif (!self.focus()) {\r\n\t\t\t\t\tupdateStyleFunc();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tige.input.stopPropagation();\r\n\t\t\t\t}\r\n\t\t\t} else if (this._allowActive) {\r\n\t\t\t\tupdateStyleFunc();\r\n\t\t\t}\r\n\t\t});\r\n\t\t\r\n\t\t// Enable mouse events on this entity by default\r\n\t\tthis.mouseEventsActive(true);\r\n\t},\r\n\t\r\n\tallowHover: function (val) {\r\n\t\tif (val !== undefined) {\r\n\t\t\tthis._allowHover = val;\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\treturn this._allowHover;\r\n\t},\r\n\t\r\n\tallowFocus: function (val) {\r\n\t\tif (val !== undefined) {\r\n\t\t\tthis._allowFocus = val;\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\treturn this._allowFocus;\r\n\t},\r\n\t\r\n\tallowActive: function (val) {\r\n\t\tif (val !== undefined) {\r\n\t\t\tthis._allowActive = val;\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\treturn this._allowActive;\r\n\t},\r\n\r\n\t/**\r\n\t * Gets / sets the applied style by name.\r\n\t * @param {String=} name The style name to apply.\r\n\t * @returns {*}\r\n\t */\r\n\tstyleClass: function (name) {\r\n\t\tif (name !== undefined) {\r\n\t\t\t// Add a period to the class name\r\n\t\t\tname = '.' + name;\r\n\t\t\t\r\n\t\t\t// Check for existing assigned style\r\n\t\t\tif (this._styleClass && this._styleClass !== name) {\r\n\t\t\t\t// Unregister this element from the style\r\n\t\t\t\tige.ui.unRegisterElementStyle(this);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t// Assign the new style\r\n\t\t\tthis._styleClass = name;\r\n\t\t\t\r\n\t\t\t// Register the element for this style\r\n\t\t\tige.ui.registerElementStyle(this);\r\n\t\t\t\r\n\t\t\t// Update the element style\r\n\t\t\tthis._updateStyle();\r\n\t\t\t\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\treturn this._styleClass;\r\n\t},\r\n\t\r\n\t_updateStyle: function () {\r\n\t\t// Apply styles in order of class, class:focus, class:hover, class:active,\r\n\t\t// id, id:focus, id:hover, id:active\r\n\t\tthis._processStyle(this._classId);\r\n\t\tthis._processStyle(this._styleClass);\r\n\t\tthis._processStyle('#' + this._id);\r\n\t\t\r\n\t\tif (this._focused) {\r\n\t\t\tthis._processStyle(this._classId, 'focus');\r\n\t\t\tthis._processStyle(this._styleClass, 'focus');\r\n\t\t\tthis._processStyle('#' + this._id, 'focus');\r\n\t\t}\r\n\t\t\r\n\t\tif (this._mouseStateOver) {\r\n\t\t\tthis._processStyle(this._classId, 'hover');\r\n\t\t\tthis._processStyle(this._styleClass, 'hover');\r\n\t\t\tthis._processStyle('#' + this._id, 'hover');\r\n\t\t}\r\n\t\t\r\n\t\tif (this._mouseStateDown) {\r\n\t\t\tthis._processStyle(this._classId, 'active');\r\n\t\t\tthis._processStyle(this._styleClass, 'active');\r\n\t\t\tthis._processStyle('#' + this._id, 'active');\r\n\t\t}\r\n\t},\r\n\t\r\n\t_processStyle: function (styleName, state) {\r\n\t\tif (styleName) {\r\n\t\t\tif (state) {\r\n\t\t\t\tstyleName += ':' + state;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t//this.log('Checking for styles with selector: ' + styleName);\r\n\t\t\t\r\n\t\t\t// Basic\r\n\t\t\tvar styleData = ige.ui.style(styleName);\r\n\t\t\tif (styleData) {\r\n\t\t\t\t//this.log('Applying styles with selector \"' + styleName + '\"');\r\n\t\t\t\tthis.applyStyle(styleData);\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Apply styles from a style data object. Usually you don't want to\r\n\t * call this method directly but rather assign a style by name using\r\n\t * the style() method, however it is not illegal practise to apply\r\n\t * here if you wish if you have not defined a style by name and simply\r\n\t * wish to apply style data directly.\r\n\t * \r\n\t * Style property names must correspond to method names in the element\r\n\t * class that the style is being applied to. You can see the default\r\n\t * ui style methods available in the ./engine/extensions/IgeUi* files.\r\n\t * \r\n\t * In the example below showing padding, you can see how the data assigned\r\n\t * is passed to the \"padding()\" method as arguments, which is the same\r\n\t * as calling \"padding(10, 10, 10, 10);\".\r\n\t * \r\n\t * @example #Apply a background color\r\n\t *     var elem = new IgeUiElement()\r\n\t *         .applyStyle({\r\n\t *             'backgroundColor': '#ffffff' // Set background color to white\r\n\t *         });\r\n\t *         \r\n\t * @example #Apply padding with multiple arguments\r\n\t *     var elem = new IgeUiElement()\r\n\t *         .applyStyle({\r\n\t *             'padding': [10, 10, 10, 10] // Set padding using multiple values\r\n\t *         });\r\n\t * \r\n\t * @param {Object} styleData The style object to apply. This object should\r\n\t * contain key/value pairs where the key matches a method name and the value\r\n\t * is the parameter to pass it.\r\n\t */\r\n\tapplyStyle: function (styleData) {\r\n\t\tvar args;\r\n\t\t\r\n\t\tif (styleData !== undefined) {\r\n\t\t\t// Loop the style data and apply styles as required\r\n\t\t\tfor (var i in styleData) {\r\n\t\t\t\tif (styleData.hasOwnProperty(i)) {\r\n\t\t\t\t\t// Check that the style method exists\r\n\t\t\t\t\tif (typeof(this[i]) === 'function') {\r\n\t\t\t\t\t\t// The method exists, call it with the arguments\r\n\t\t\t\t\t\tif (styleData[i] instanceof Array) {\r\n\t\t\t\t\t\t\targs = styleData[i];\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\targs = [styleData[i]];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tthis[i].apply(this, args);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * Sets global UI focus to this element.\r\n\t */\r\n\tfocus: function () {\r\n\t\tif (ige.ui.focus(this)) {\r\n\t\t\t// Re-apply styles since the change\r\n\t\t\tthis._updateStyle();\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\t\r\n\t\treturn false;\r\n\t},\r\n\t\r\n\tblur: function () {\r\n\t\tif (ige.ui.blur(this)) {\r\n\t\t\t// Re-apply styles since the change\r\n\t\t\tthis._updateStyle();\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\t\r\n\t\treturn false;\r\n\t},\r\n\t\r\n\tfocused: function () {\r\n\t\treturn this._focused;\r\n\t},\r\n\t\r\n\tvalue: function (val) {\r\n\t\tif (val !== undefined) {\r\n\t\t\tthis._value = val;\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\treturn this._value;\r\n\t},\r\n\t\r\n\t_mounted: function () {\r\n\t\tthis._updateStyle();\r\n\t},\r\n\r\n\t/**\r\n\t * Destructor\r\n\t */\r\n\tdestroy: function () {\r\n\t\tige.ui.unRegisterElement(this);\r\n\t\tIgeUiEntity.prototype.destroy.call(this);\r\n\t}\r\n});\r\n\r\nif (typeof(module) !== 'undefined' && typeof(module.exports) !== 'undefined') { module.exports = IgeUiElement; }","/**\r\n * Creates a new font entity. A font entity will use a font sheet\r\n * (IgeFontSheet) or native font and render text.\r\n */\r\nvar IgeFontEntity = IgeUiEntity.extend({\r\n\tclassId: 'IgeFontEntity',\r\n\r\n\tinit: function () {\r\n\t\tIgeUiEntity.prototype.init.call(this);\r\n\r\n\t\tthis._renderText = undefined;\r\n\t\tthis._text = undefined;\r\n\t\tthis._textAlignX = 1;\r\n\t\tthis._textAlignY = 3;\r\n\t\tthis._textLineSpacing = 0;\r\n\t\tthis._nativeMode = false;\r\n\r\n\t\t// Enable caching by default for font entities!\r\n\t\tthis.cache(true);\r\n\t},\r\n\r\n\t/**\r\n\t * Extends the IgeUiEntity.width() method and if the value being\r\n\t * set is different from the current width value then the font's\r\n\t * cache is invalidated so it gets redrawn.\r\n\t * @param val\r\n\t * @param lockAspect\r\n\t * @param modifier\r\n\t * @param noUpdate\r\n\t * @returns {*}\r\n\t */\r\n\twidth: function (val, lockAspect, modifier, noUpdate) {\r\n\t\tif (val !== undefined) {\r\n\t\t\tif (this._bounds2d.x !== val) {\r\n\t\t\t\tthis.clearCache();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar retVal = IgeUiEntity.prototype.width.call(this, val, lockAspect, modifier, noUpdate);\r\n\t\t\r\n\t\tif (this._autoWrap) {\r\n\t\t\tthis._applyAutoWrap();\r\n\t\t}\r\n\t\t\r\n\t\treturn retVal;\r\n\t},\r\n\r\n\t/**\r\n\t * Extends the IgeUiEntity.height() method and if the value being\r\n\t * set is different from the current height value then the font's\r\n\t * cache is invalidated so it gets redrawn.\r\n\t * @param val\r\n\t * @param lockAspect\r\n\t * @param modifier\r\n\t * @param noUpdate\r\n\t * @returns {*|number}\r\n\t */\r\n\theight: function (val, lockAspect, modifier, noUpdate) {\r\n\t\tif (val !== undefined) {\r\n\t\t\tif (this._bounds2d.y !== val) {\r\n\t\t\t\tthis.clearCache();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn IgeUiEntity.prototype.height.call(this, val, lockAspect, modifier, noUpdate);\r\n\t},\r\n\r\n\t/**\r\n\t * Sets the text to render for this font entity. This sets both\r\n\t * the private properties \"_text\" and \"_renderText\". If auto-wrapping\r\n\t * has been enabled then the \"_text\" remains equal to whatever\r\n\t * text you pass into this method but \"_renderText\" becomes the\r\n\t * line-broken text that the auto-wrapper method creates. When the\r\n\t * entity renders it's text string it ALWAYS renders from \"_renderText\"\r\n\t * and not the value of \"_text\". Effectively this means that \"_text\"\r\n\t * contains the unaltered version of your original text and \r\n\t * \"_renderText\" will be either the same as \"_text\" if auto-wrapping\r\n\t * is disable or a wrapped version otherwise.\r\n\t * @param {String} text The text string to render.\r\n\t * @returns {*}\r\n\t */\r\n\ttext: function (text) {\r\n\t\tif (text !== undefined) {\r\n\t\t\tvar wasDifferent = false;\r\n\t\t\t\r\n\t\t\t// Ensure we have a string\r\n\t\t\ttext = String(text);\r\n\t\t\t\r\n\t\t\tif (this._text !== text) {\r\n\t\t\t\tthis.clearCache();\r\n\t\t\t\twasDifferent = true;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis._text = text;\r\n\t\t\t\r\n\t\t\tif (this._autoWrap && wasDifferent) {\r\n\t\t\t\tthis._applyAutoWrap();\r\n\t\t\t} else {\r\n\t\t\t\tthis._renderText = text;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\treturn this._text;\r\n\t},\r\n\r\n\t/**\r\n\t * Allows you to bind the text output of this font entity to match\r\n\t * the value of an object's property so that when it is updated the\r\n\t * text will automatically update on this entity. Useful for score,\r\n\t * position etc output where data is stored in an object and changes\r\n\t * frequently.\r\n\t * @param {Object} obj The object to read the property from.\r\n\t * @param {String} propName The name of the property to read value from.\r\n\t * @param {String} preText Text to place before the output.\r\n\t * @param {String} postText Text to place after the output.\r\n\t * @returns {*}\r\n\t */\r\n\tbindData: function (obj, propName, preText, postText) {\r\n\t\tif (obj !== undefined && propName !== undefined) {\r\n\t\t\tthis._bindDataObject = obj;\r\n\t\t\tthis._bindDataProperty = propName;\r\n\t\t\tthis._bindDataPreText = preText || '';\r\n\t\t\tthis._bindDataPostText = postText || '';\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * Gets / sets the current horizontal text alignment. Accepts\r\n\t * a value of 0, 1 or 2 (left, centre, right) respectively.\r\n\t * @param {Number=} val\r\n\t * @returns {*}\r\n\t */\r\n\ttextAlignX: function (val) {\r\n\t\tif (val !== undefined) {\r\n\t\t\tif (this._textAlignX !== val) {\r\n\t\t\t\tthis.clearCache();\r\n\t\t\t}\r\n\t\t\tthis._textAlignX = val;\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\treturn this._textAlignX;\r\n\t},\r\n\r\n\t/**\r\n\t * Gets / sets the current vertical text alignment. Accepts\r\n\t * a value of 0, 1, 2, 3 (top, middle, bottom, justified) respectively.\r\n\t * Defaults to 3 (justified)\r\n\t * @param {Number} [val=3] val\r\n\t * @returns {*}\r\n\t */\r\n\ttextAlignY: function (val) {\r\n\t\tif (val !== undefined) {\r\n\t\t\tif (this._textAlignY !== val) {\r\n\t\t\t\tthis.clearCache();\r\n\t\t\t}\r\n\t\t\tthis._textAlignY = val;\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\treturn this._textAlignY;\r\n\t},\r\n\r\n\t/**\r\n\t * Gets / sets the amount of spacing between the lines of text being\r\n\t * rendered. Accepts negative values as well as positive ones.\r\n\t * @param {Number=} val\r\n\t * @returns {*}\r\n\t */\r\n\ttextLineSpacing: function (val) {\r\n\t\tif (val !== undefined) {\r\n\t\t\tif (this._textLineSpacing !== val) {\r\n\t\t\t\tthis.clearCache();\r\n\t\t\t}\r\n\t\t\tthis._textLineSpacing = val;\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\treturn this._textLineSpacing;\r\n\t},\r\n\r\n\t/**\r\n\t * Gets / sets the string hex or rgba value of the colour\r\n\t * to use as an overlay when rending this entity's texture.\r\n\t * @param {String=} val The colour value as hex e.g. '#ff0000'\r\n\t * or as rgba e.g. 'rbga(255, 0, 0, 0.5)'. To remove an overlay\r\n\t * colour simply passed an empty string.\r\n\t * @return {*} \"this\" when arguments are passed to allow method\r\n\t * chaining or the current value if no arguments are specified.\r\n\t */\r\n\tcolorOverlay: function (val) {\r\n\t\tif (val !== undefined) {\r\n\t\t\tif (this._colorOverlay !== val) {\r\n\t\t\t\tthis.clearCache();\r\n\t\t\t}\r\n\t\t\tthis._colorOverlay = val;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\treturn this._colorOverlay;\r\n\t},\r\n\r\n\t/**\r\n\t * A proxy for colorOverlay().\r\n\t */\r\n\tcolor: function (val) {\r\n\t\treturn this.colorOverlay(val);\r\n\t},\r\n\r\n\t/**\r\n\t * Clears the texture cache for this entity's text string.\r\n\t */\r\n\tclearCache: function () {\r\n\t\tif (this._cache) {\r\n\t\t\tthis.cacheDirty(true);\r\n\t\t}\r\n\r\n\t\tif (this._texture && this._texture._caching && this._texture._cacheText[this._renderText]) {\r\n\t\t\tdelete this._texture._cacheText[this._renderText];\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * When using native font rendering (canvasContext.fillText())\r\n\t * this sets the font and size as per the canvasContext.font\r\n\t * string specification.\r\n\t * @param {String=} val The font style string.\r\n\t * @return {*} \"this\" when arguments are passed to allow method\r\n\t * chaining or the current value if no arguments are specified.\r\n\t */\r\n\tnativeFont: function (val) {\r\n\t\tif (val !== undefined) {\r\n\t\t\t// Check if this font is different from the current\r\n\t\t\t// assigned font\r\n\t\t\tif (this._nativeFont !== val) {\r\n\t\t\t\t// The fonts are different, clear existing cache\r\n\t\t\t\tthis.clearCache();\r\n\t\t\t}\r\n\t\t\tthis._nativeFont = val;\r\n\r\n\t\t\t// Assign the native font smart texture\r\n\t\t\tvar tex = new IgeTexture(IgeFontSmartTexture);\r\n\t\t\tthis.texture(tex);\r\n\t\t\t\r\n\t\t\t// Set the flag indicating we are using a native font\r\n\t\t\tthis._nativeMode = true;\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\treturn this._nativeFont;\r\n\t},\r\n\r\n\t/**\r\n\t * Gets / sets the text stroke size that applies when using\r\n\t * a native font for text rendering.\r\n\t * @param {Number=} val The size of the text stroke.\r\n\t * @return {*}\r\n\t */\r\n\tnativeStroke: function (val) {\r\n\t\tif (val !== undefined) {\r\n\t\t\tif (this._nativeStroke !== val) {\r\n\t\t\t\tthis.clearCache();\r\n\t\t\t}\r\n\t\t\tthis._nativeStroke = val;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\treturn this._nativeStroke;\r\n\t},\r\n\r\n\t/**\r\n\t * Gets / sets the text stroke color that applies when using\r\n\t * a native font for text rendering.\r\n\t * @param {Number=} val The color of the text stroke.\r\n\t * @return {*}\r\n\t */\r\n\tnativeStrokeColor: function (val) {\r\n\t\tif (val !== undefined) {\r\n\t\t\tif (this._nativeStrokeColor !== val) {\r\n\t\t\t\tthis.clearCache();\r\n\t\t\t}\r\n\t\t\tthis._nativeStrokeColor = val;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\treturn this._nativeStrokeColor;\r\n\t},\r\n\r\n\t/**\r\n\t * Gets / sets the auto-wrapping mode. If set to true then the\r\n\t * text this font entity renders will be automatically line-broken\r\n\t * when a line reaches the width of the entity.\r\n\t * @param val\r\n\t * @returns {*}\r\n\t */\r\n\tautoWrap: function (val) {\r\n\t\tif (val !== undefined) {\r\n\t\t\tthis._autoWrap = val;\r\n\t\t\t\r\n\t\t\t// Execute an auto-wrap modification of the text\r\n\t\t\tif (this._text) {\r\n\t\t\t\tthis._applyAutoWrap();\r\n\t\t\t\tthis.clearCache();\r\n\t\t\t}\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\treturn this._autoWrap;\r\n\t},\r\n\r\n\t/**\r\n\t * Automatically detects where line-breaks need to occur in the text\r\n\t * assigned to the entity and adds them.\r\n\t * @private\r\n\t */\r\n\t_applyAutoWrap: function () {\r\n\t\tif (this._text) {\r\n\t\t\t// Un-wrap the text so it is all on one line\r\n\t\t\tvar oneLineText = this._text.replace(/\\n/g, ' '),\r\n\t\t\t\twords,\r\n\t\t\t\twordIndex,\r\n\t\t\t\ttextArray = [],\r\n\t\t\t\tcurrentTextLine = '',\r\n\t\t\t\tlineWidth;\r\n\t\t\t\r\n\t\t\t// Break the text into words\r\n\t\t\twords = oneLineText.split(' ');\r\n\t\t\t\r\n\t\t\t// There are multiple words - loop the words\r\n\t\t\tfor (wordIndex = 0; wordIndex < words.length; wordIndex++) {\r\n\t\t\t\tif (currentTextLine) {\r\n\t\t\t\t\tcurrentTextLine += ' ';\r\n\t\t\t\t}\r\n\t\t\t\tcurrentTextLine += words[wordIndex];\r\n\t\t\t\t\r\n\t\t\t\t// Check the width and if greater than the width of the entity,\r\n\t\t\t\t// add a line break before the word\r\n\t\t\t\tlineWidth = this.measureTextWidth(currentTextLine);\r\n\t\t\t\t\r\n\t\t\t\tif (lineWidth >= this._bounds2d.x) {\r\n\t\t\t\t\t// Start a new line\r\n\t\t\t\t\tcurrentTextLine = words[wordIndex];\r\n\t\t\t\t\t\r\n\t\t\t\t\t// Add a line break\r\n\t\t\t\t\ttextArray.push('\\n' + words[wordIndex]);\r\n\t\t\t\t} else {\r\n\t\t\t\t\ttextArray.push(words[wordIndex]);\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis._renderText = textArray.join(' ');\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Will measure and return the width in pixels of a line or multiple\r\n\t * lines of text. If no text parameter is passed, will use the current\r\n\t * text assigned to the font entity.\r\n\t * @param {String=} text Optional text to measure, used existing entity\r\n\t * text value if none is provided.\r\n\t * @returns {Number} The width of the text in pixels.\r\n\t */\r\n\tmeasureTextWidth: function (text) {\r\n\t\ttext = text || this._text;\r\n\t\t\r\n\t\t// Both IgeFontSheet and the IgeFontSmartTexture have a method\r\n\t\t// called measureTextWidth() so we can just asks the current\r\n\t\t// texture for the width :)\r\n\t\tif (this._texture._mode === 0) {\r\n\t\t\treturn this._texture.measureTextWidth(text);\r\n\t\t} else {\r\n\t\t\treturn this._texture.script.measureTextWidth(text, this);\r\n\t\t}\r\n\t},\r\n\r\n\ttick: function (ctx) {\r\n\t\t// Check for an auto-progress update\r\n\t\tif (this._bindDataObject && this._bindDataProperty) {\r\n\t\t\tif (this._bindDataObject._alive === false) {\r\n\t\t\t\t// The object we have bind data from has been\r\n\t\t\t\t// destroyed so release our reference to it!\r\n\t\t\t\tdelete this._bindDataObject;\r\n\t\t\t} else {\r\n\t\t\t\tthis.text(this._bindDataPreText + this._bindDataObject[this._bindDataProperty] + this._bindDataPostText);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tIgeUiEntity.prototype.tick.call(this, ctx);\r\n\t},\r\n\r\n\t/**\r\n\t * Returns a string containing a code fragment that when\r\n\t * evaluated will reproduce this object's properties via\r\n\t * chained commands. This method will only check for\r\n\t * properties that are directly related to this class.\r\n\t * Other properties are handled by their own class method.\r\n\t * @return {String}\r\n\t */\r\n\t_stringify: function () {\r\n\t\t// Get the properties for all the super-classes\r\n\t\tvar str = IgeUiEntity.prototype._stringify.call(this), i;\r\n\r\n\t\t// Loop properties and add property assignment code to string\r\n\t\tfor (i in this) {\r\n\t\t\tif (this.hasOwnProperty(i) && this[i] !== undefined) {\r\n\t\t\t\tswitch (i) {\r\n\t\t\t\t\tcase '_text':\r\n\t\t\t\t\t\tstr += \".text(\" + this.text() + \")\";\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase '_textAlignX':\r\n\t\t\t\t\t\tstr += \".textAlignX(\" + this.textAlignX() + \")\";\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase '_textAlignY':\r\n\t\t\t\t\t\tstr += \".textAlignY(\" + this.textAlignY() + \")\";\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase '_textLineSpacing':\r\n\t\t\t\t\t\tstr += \".textLineSpacing(\" + this.textLineSpacing() + \")\";\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn str;\r\n\t}\r\n});\r\n\r\nif (typeof(module) !== 'undefined' && typeof(module.exports) !== 'undefined') { module.exports = IgeFontEntity; }","/**\r\n * Creates a new particle emitter.\r\n */\r\nvar IgeParticleEmitter = IgeUiEntity.extend({\r\n\tclassId: 'IgeParticleEmitter',\r\n\tIgeParticleEmitter: true,\r\n\r\n\tinit: function () {\r\n\t\t// IgeBody.init()\r\n\t\tIgeUiEntity.prototype.init.call(this);\r\n\r\n\t\t// Set some defaults\r\n\t\tthis._currentDelta = 0;\r\n\t\tthis._started = false;\r\n\t\tthis._particles = [];\r\n\r\n\t\tthis.applyDepthToParticles(true);\r\n\t\tthis.applyLayerToParticles(true);\r\n\t\tthis.quantityTimespan(1000);\r\n\t\tthis.quantityBase(10);\r\n\t\tthis.quantityVariance(0, 0);\r\n\t\tthis.translateBaseX(0);\r\n\t\tthis.translateBaseY(0);\r\n\t\tthis.translateBaseZ(0);\r\n\t\tthis.translateVarianceX(0, 0);\r\n\t\tthis.translateVarianceY(0, 0);\r\n\t\tthis.translateVarianceZ(0, 0);\r\n\t\tthis.rotateBase(0);\r\n\t\tthis.rotateVariance(0, 0);\r\n\t\tthis.deathRotateBase(0);\r\n\t\tthis.deathRotateVariance(0, 0);\r\n\t\tthis.scaleBaseX(1);\r\n\t\tthis.scaleBaseY(1);\r\n\t\tthis.scaleBaseZ(1);\r\n\t\tthis.scaleVarianceX(0, 0);\r\n\t\tthis.scaleVarianceY(0, 0);\r\n\t\tthis.scaleVarianceZ(0, 0);\r\n\t\tthis.scaleLockAspect(false);\r\n\t\tthis.deathScaleBaseX(0);\r\n\t\tthis.deathScaleBaseY(0);\r\n\t\tthis.deathScaleBaseZ(0);\r\n\t\tthis.deathScaleVarianceX(0, 0);\r\n\t\tthis.deathScaleVarianceY(0, 0);\r\n\t\tthis.deathScaleVarianceZ(0, 0);\r\n\t\tthis.deathScaleLockAspect(false);\r\n\t\tthis.opacityBase(1);\r\n\t\tthis.opacityVariance(0, 0);\r\n\t\tthis.deathOpacityBase(1);\r\n\t\tthis.deathOpacityVariance(0, 0);\r\n\t\tthis.lifeBase(1000);\r\n\t\tthis.lifeVariance(0, 0);\r\n\t},\r\n\r\n\t/**\r\n\t * Sets the class that all particles emitted from this\r\n\t * emitter will be created from.\r\n\t * @param {IgeEntity} obj\r\n\t * @return {*}\r\n\t */\r\n\tparticle: function (obj) {\r\n\t\tthis._particle = obj;\r\n\t\treturn this;\r\n\t},\r\n\r\n\tparticleMountTarget: function (obj) {\r\n\t\tthis._particleMountTarget = obj;\r\n\t\treturn this;\r\n\t},\r\n\r\n\tapplyDepthToParticles: function (val) {\r\n\t\tthis._applyDepthToParticles = val;\r\n\t\treturn this;\r\n\t},\r\n\r\n\tapplyLayerToParticles: function (val) {\r\n\t\tthis._applyLayerToParticles = val;\r\n\t\treturn this;\r\n\t},\r\n\r\n\tquantityTimespan: function (val) {\r\n\t\tthis._quantityTimespan = val;\r\n\t\treturn this;\r\n\t},\r\n\r\n\tquantityBase: function (val) {\r\n\t\tthis._quantityBase = val;\r\n\t\treturn this;\r\n\t},\r\n\r\n\tquantityVariance: function (a, b) {\r\n\t\tthis._quantityVariance = [a, b];\r\n\t\treturn this;\r\n\t},\r\n\r\n\tquantityMax: function (val) {\r\n\t\tthis._quantityMax = val;\r\n\t\tthis._quantityProduced = 0;\r\n\t\treturn this;\r\n\t},\r\n\r\n\ttranslateBaseX: function (val) {\r\n\t\tthis._translateBaseX = val;\r\n\t\treturn this;\r\n\t},\r\n\r\n\ttranslateBaseY: function (val) {\r\n\t\tthis._translateBaseY = val;\r\n\t\treturn this;\r\n\t},\r\n\r\n\ttranslateBaseZ: function (val) {\r\n\t\tthis._translateBaseZ = val;\r\n\t\treturn this;\r\n\t},\r\n\r\n\ttranslateVarianceX: function (a, b) {\r\n\t\tthis._translateVarianceX = [a, b];\r\n\t\treturn this;\r\n\t},\r\n\r\n\ttranslateVarianceY: function (a, b) {\r\n\t\tthis._translateVarianceY = [a, b];\r\n\t\treturn this;\r\n\t},\r\n\r\n\ttranslateVarianceZ: function (a, b) {\r\n\t\tthis._translateVarianceZ = [a, b];\r\n\t\treturn this;\r\n\t},\r\n\r\n\trotateBase: function (val) {\r\n\t\tthis._rotateBase = val;\r\n\t\treturn this;\r\n\t},\r\n\r\n\trotateVariance: function (a, b) {\r\n\t\tthis._rotateVariance = [a, b];\r\n\t\treturn this;\r\n\t},\r\n\r\n\tdeathRotateBase: function (val) {\r\n\t\tthis._deathRotateBase = val;\r\n\t\treturn this;\r\n\t},\r\n\r\n\tdeathRotateVariance: function (a, b) {\r\n\t\tthis._deathRotateVariance = [a, b];\r\n\t\treturn this;\r\n\t},\r\n\r\n\tscaleBaseX: function (val) {\r\n\t\tthis._scaleBaseX = val;\r\n\t\treturn this;\r\n\t},\r\n\r\n\tscaleBaseY: function (val) {\r\n\t\tthis._scaleBaseY = val;\r\n\t\treturn this;\r\n\t},\r\n\r\n\tscaleBaseZ: function (val) {\r\n\t\tthis._scaleBaseZ = val;\r\n\t\treturn this;\r\n\t},\r\n\r\n\tscaleVarianceX: function (a, b) {\r\n\t\tthis._scaleVarianceX = [a, b];\r\n\t\treturn this;\r\n\t},\r\n\r\n\tscaleVarianceY: function (a, b) {\r\n\t\tthis._scaleVarianceY = [a, b];\r\n\t\treturn this;\r\n\t},\r\n\r\n\tscaleVarianceZ: function (a, b) {\r\n\t\tthis._scaleVarianceZ = [a, b];\r\n\t\treturn this;\r\n\t},\r\n\r\n\tscaleLockAspect: function (val) {\r\n\t\tthis._scaleLockAspect = val;\r\n\t\treturn this;\r\n\t},\r\n\r\n\tdeathScaleBaseX: function (val) {\r\n\t\tthis._deathScaleBaseX = val;\r\n\t\treturn this;\r\n\t},\r\n\r\n\tdeathScaleBaseY: function (val) {\r\n\t\tthis._deathScaleBaseY = val;\r\n\t\treturn this;\r\n\t},\r\n\r\n\tdeathScaleBaseZ: function (val) {\r\n\t\tthis._deathScaleBaseZ = val;\r\n\t\treturn this;\r\n\t},\r\n\r\n\tdeathScaleVarianceX: function (a, b) {\r\n\t\tthis._deathScaleVarianceX = [a, b];\r\n\t\treturn this;\r\n\t},\r\n\r\n\tdeathScaleVarianceY: function (a, b) {\r\n\t\tthis._deathScaleVarianceY = [a, b];\r\n\t\treturn this;\r\n\t},\r\n\r\n\tdeathScaleVarianceZ: function (a, b) {\r\n\t\tthis._deathScaleVarianceZ = [a, b];\r\n\t\treturn this;\r\n\t},\r\n\r\n\tdeathScaleLockAspect: function (val) {\r\n\t\tthis._deathScaleLockAspect = val;\r\n\t\treturn this;\r\n\t},\r\n\r\n\topacityBase: function (val) {\r\n\t\tthis._opacityBase = val;\r\n\t\treturn this;\r\n\t},\r\n\r\n\topacityVariance: function (a, b) {\r\n\t\tthis._opacityVariance = [a, b];\r\n\t\treturn this;\r\n\t},\r\n\r\n\tdeathOpacityBase: function (val) {\r\n\t\tthis._deathOpacityBase = val;\r\n\t\treturn this;\r\n\t},\r\n\r\n\tdeathOpacityVariance: function (a, b) {\r\n\t\tthis._deathOpacityVariance = [a, b];\r\n\t\treturn this;\r\n\t},\r\n\r\n\tlifeBase: function (val) {\r\n\t\tthis._lifeBase = val;\r\n\t\treturn this;\r\n\t},\r\n\r\n\tlifeVariance: function (a, b) {\r\n\t\tthis._lifeVariance = [a, b];\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * Sets the base velocity vector of each emitted particle and optionally\r\n\t * the min and max vectors that are used to randomize the resulting particle\r\n\t * velocity vector.\r\n\t * @param baseVector\r\n\t * @param minVector\r\n\t * @param maxVector\r\n\t */\r\n\tvelocityVector: function (baseVector, minVector, maxVector) {\r\n\t\tthis._velocityVector = {\r\n\t\t\tbase: baseVector,\r\n\t\t\tmin: minVector,\r\n\t\t\tmax: maxVector\r\n\t\t};\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\tlinearForceVector: function (baseVector, minVector, maxVector) {\r\n\t\tthis._linearForceVector = {\r\n\t\t\tbase: baseVector,\r\n\t\t\tmin: minVector,\r\n\t\t\tmax: maxVector\r\n\t\t};\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * Starts the particle emitter which will begin spawning\r\n\t * particle entities based upon the emitter's current settings.\r\n\t * @return {*}\r\n\t */\r\n\tstart: function () {\r\n\t\tif (this._particle) {\r\n\t\t\t// Update the transform matrix before starting\r\n\t\t\t// otherwise some particles might read the old\r\n\t\t\t// matrix values if the start method was chained!\r\n\t\t\tthis.updateTransform();\r\n\r\n\t\t\tthis._quantityTimespan = this._quantityTimespan !== undefined ? this._quantityTimespan : 1000;\r\n\t\t\tthis._maxParticles = this.baseAndVarianceValue(this._quantityBase, this._quantityVariance, true);\r\n\t\t\tthis._particlesPerTimeVector = this._quantityTimespan / this._maxParticles; // 1 Particle every x milliseconds (x stored in this._particlesPerTimeVector)\r\n\t\t\tthis._currentDelta = 0;\r\n\r\n\t\t\t// Set the emitter started flag\r\n\t\t\tthis._quantityProduced = 0;\r\n\t\t\tthis._started = true;\r\n\t\t} else {\r\n\t\t\tthis.log('Cannot start particle emitter because no particle class was specified with a call to particle()', 'error');\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\tupdateSettings: function () {\r\n\t\tthis._maxParticles = this.baseAndVarianceValue(this._quantityBase, this._quantityVariance, true);\r\n\t\tthis._particlesPerTimeVector = this._quantityTimespan / this._maxParticles; // 1 Particle every x milliseconds (x stored in this._particlesPerTimeVector)\r\n\t},\r\n\r\n\t/**\r\n\t * Stops the particle emitter. The current particles will\r\n\t * continue to process until they reach their natural lifespan.\r\n\t * @return {*}\r\n\t */\r\n\tstop: function () {\r\n\t\tthis._started = false;\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * Stops the particle emitter. The current particles will be\r\n\t * destroyed immediately.\r\n\t * @return {*}\r\n\t */\r\n\tstopAndKill: function () {\r\n\t\tthis._started = false;\r\n\r\n\t\t// Loop the particles array and destroy all the particles\r\n\t\tvar arr = this._particles,\r\n\t\t\tarrCount = arr.length;\r\n\r\n\t\twhile (arrCount--) {\r\n\t\t\tarr[arrCount].destroy();\r\n\t\t}\r\n\r\n\t\t// Remove all references to the particles by\r\n\t\t// re-initialising the particles array\r\n\t\tthis._particles = [];\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * Takes a base value and a variance range and returns a random\r\n\t * value between the range, added to the base.\r\n\t * @param {Number} base The base value.\r\n\t * @param {Array} variance An array containing the two values of\r\n\t * the variance range.\r\n\t * @param {Boolean} floorIt If set to true, will cause the returned\r\n\t * value to be passed through Math.floor().\r\n\t * @return {Number} Returns the final value based upon the base\r\n\t * value and variance range.\r\n\t */\r\n\tbaseAndVarianceValue: function (base, variance, floorIt) {\r\n\t\tbase = base || 0;\r\n\t\tvariance = variance || [0, 0];\r\n\t\tvar variant = 0;\r\n\r\n\t\tif (floorIt) {\r\n\t\t\tvariant = Math.floor(variance[0] + Math.random() * (variance[1] - variance[0]));\r\n\t\t} else {\r\n\t\t\tvariant = (variance[0] + Math.random() * (variance[1] - variance[0]));\r\n\t\t}\r\n\r\n\t\treturn base + variant;\r\n\t},\r\n\r\n\tvectorFromBaseMinMax: function (vectorData) {\r\n\t\tif (vectorData.min && vectorData.max) {\r\n\t\t\tvar base = vectorData.base,\r\n\t\t\t\tmin = vectorData.min,\r\n\t\t\t\tmax = vectorData.max,\r\n\t\t\t\tnewVector = {};\r\n\r\n\t\t\tnewVector.x = base.x + (min.x + Math.random() * (max.x - min.x));\r\n\t\t\tnewVector.y = base.y + (min.y + Math.random() * (max.y - min.y));\r\n\t\t\tnewVector.z = base.z + (min.z + Math.random() * (max.z - min.z));\r\n\r\n\t\t\treturn newVector;\r\n\t\t} else {\r\n\t\t\t// There was no variance data so return the base vector\r\n\t\t\treturn vectorData.base;\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Creates and maintains the particles that this emitter is\r\n\t * responsible for spawning and controlling.\r\n\t * @param ctx\r\n\t */\r\n\ttick: function (ctx) {\r\n\t\tthis._currentDelta += ige._tickDelta;\r\n\r\n\t\t// Check if the emitter is mounted to anything and started, if not\r\n\t\t// then don't bother creating particles!\r\n\t\tif (this._parent && this._started) {\r\n\t\t\tif (!this._quantityMax || this._quantityProduced < this._quantityMax) {\r\n\t\t\t\tvar particleCount,\r\n\t\t\t\t\ttranslateX,\r\n\t\t\t\t\ttranslateY,\r\n\t\t\t\t\ttranslateZ,\r\n\t\t\t\t\t//vectorAngle,\r\n\t\t\t\t\t//vectorPower,\r\n\t\t\t\t\tvelocityVector,\r\n\t\t\t\t\tnewVecX, newVecY,\r\n\t\t\t\t\trotX, rotY,\r\n\t\t\t\t\tcosRot, sinRot,\r\n\t\t\t\t\tscaleX,\r\n\t\t\t\t\tscaleY,\r\n\t\t\t\t\tscaleZ,\r\n\t\t\t\t\trotate,\r\n\t\t\t\t\topacity,\r\n\t\t\t\t\tlife,\r\n\t\t\t\t\t//linearForceAngle,\r\n\t\t\t\t\t//linearForcePower,\r\n\t\t\t\t\tlinearForceVector,\r\n\t\t\t\t\tdeathScaleX,\r\n\t\t\t\t\tdeathScaleY,\r\n\t\t\t\t\tdeathScaleZ,\r\n\t\t\t\t\tdeathRotate,\r\n\t\t\t\t\tdeathOpacity,\r\n\t\t\t\t\ttempParticle,\r\n\t\t\t\t\ttweens,\r\n\t\t\t\t\tscaleProps,\r\n\t\t\t\t\ti;\r\n\r\n\t\t\t\tif (this._currentDelta > this._quantityTimespan) {\r\n\t\t\t\t\tthis._currentDelta = this._quantityTimespan;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (this._currentDelta >= this._particlesPerTimeVector) {\r\n\t\t\t\t\tparticleCount = ((this._currentDelta / this._particlesPerTimeVector)|0); // Bitwise floor\r\n\t\t\t\t\tthis._currentDelta -= (this._particlesPerTimeVector * particleCount);\r\n\r\n\t\t\t\t\t// Loop the particle array and if no particle exists,\r\n\t\t\t\t\t// create one to fill the space. Basically this keeps\r\n\t\t\t\t\t// the emitters creating new particles until it is\r\n\t\t\t\t\t// stopped.\r\n\t\t\t\t\tif (particleCount) {\r\n\t\t\t\t\t\twhile (particleCount--) {\r\n\t\t\t\t\t\t\tif (this._quantityMax) {\r\n\t\t\t\t\t\t\t\tthis._quantityProduced ++;\r\n\r\n\t\t\t\t\t\t\t\t// If the number of particles produced is equal to or greater\r\n\t\t\t\t\t\t\t\t// than the max we should produce then exit the loop\r\n\t\t\t\t\t\t\t\tif (this._quantityProduced >= this._quantityMax) {\r\n\t\t\t\t\t\t\t\t\tthis.stop();\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t// Create the initial particle values based on\r\n\t\t\t\t\t\t\t// the emitter options values\r\n\r\n\t\t\t\t\t\t\t// Generate the particle's initial translate values\r\n\t\t\t\t\t\t\ttranslateX = this.baseAndVarianceValue(this._translateBaseX, this._translateVarianceX, true);\r\n\t\t\t\t\t\t\ttranslateY = this.baseAndVarianceValue(this._translateBaseY, this._translateVarianceY, true);\r\n\t\t\t\t\t\t\ttranslateZ = this.baseAndVarianceValue(this._translateBaseZ, this._translateVarianceZ, true);\r\n\r\n\t\t\t\t\t\t\t//translateX += this._worldMatrix.matrix[2];\r\n\t\t\t\t\t\t\t//translateY += this._worldMatrix.matrix[5];\r\n\r\n\t\t\t\t\t\t\tif (this._velocityVector) {\r\n\t\t\t\t\t\t\t\t// Generate the particle's initial vector angle and power\r\n\t\t\t\t\t\t\t\tvelocityVector = this.vectorFromBaseMinMax(this._velocityVector);\r\n\r\n\t\t\t\t\t\t\t\t// Rotate the vector's point to match the current emitter rotation\r\n\t\t\t\t\t\t\t\trotX = velocityVector.x;\r\n\t\t\t\t\t\t\t\trotY = velocityVector.y;\r\n\t\t\t\t\t\t\t\tcosRot = this._worldMatrix.matrix[0]; //Math.cos(this._rotate.z);\r\n\t\t\t\t\t\t\t\tsinRot = this._worldMatrix.matrix[3]; //Math.sin(this._rotate.z);\r\n\t\t\t\t\t\t\t\tnewVecX = rotX * cosRot - rotY * sinRot;\r\n\t\t\t\t\t\t\t\tnewVecY = rotY * cosRot + rotX * sinRot;\r\n\r\n\t\t\t\t\t\t\t\t// Assign the rotated vector back again\r\n\t\t\t\t\t\t\t\tvelocityVector.x = newVecX;\r\n\t\t\t\t\t\t\t\tvelocityVector.y = newVecY;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t//vectorAngle = this.baseAndVarianceValue(this._vectorAngleBase, this._vectorAngleVariance, true);\r\n\t\t\t\t\t\t\t//vectorPower = this.baseAndVarianceValue(this._vectorPowerBase, this._vectorPowerVariance, false);\r\n\r\n\t\t\t\t\t\t\t// Generate the particle's initial scale\r\n\t\t\t\t\t\t\tscaleX = this.baseAndVarianceValue(this._scaleBaseX, this._scaleVarianceX, false);\r\n\t\t\t\t\t\t\tscaleZ = scaleY = scaleX;\r\n\t\t\t\t\t\t\tif (!this._scaleLockAspect) {\r\n\t\t\t\t\t\t\t\tscaleY = this.baseAndVarianceValue(this._scaleBaseY, this._scaleVarianceY, false);\r\n\t\t\t\t\t\t\t\tscaleZ = this.baseAndVarianceValue(this._scaleBaseZ, this._scaleVarianceZ, false);\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t// Generate the particle's initial rotation\r\n\t\t\t\t\t\t\trotate = this.baseAndVarianceValue(this._rotateBase, this._rotateVariance, true);\r\n\r\n\t\t\t\t\t\t\t// Generate the particle's initial opacity\r\n\t\t\t\t\t\t\topacity = this.baseAndVarianceValue(this._opacityBase, this._opacityVariance, false);\r\n\r\n\t\t\t\t\t\t\t// Generate the particle's initial lifespan\r\n\t\t\t\t\t\t\tlife = this.baseAndVarianceValue(this._lifeBase, this._lifeVariance, true);\r\n\r\n\t\t\t\t\t\t\t// Generate the particle's linear force vector angle and power\r\n\t\t\t\t\t\t\tif (this._linearForceVector) {\r\n\t\t\t\t\t\t\t\tlinearForceVector = this.vectorFromBaseMinMax(this._linearForceVector);\r\n\r\n\t\t\t\t\t\t\t\t// Rotate the vector's point to match the current emitter rotation\r\n\t\t\t\t\t\t\t\trotX = linearForceVector.x;\r\n\t\t\t\t\t\t\t\trotY = linearForceVector.y;\r\n\t\t\t\t\t\t\t\tcosRot = this._worldMatrix.matrix[0]; //Math.cos(this._rotate.z);\r\n\t\t\t\t\t\t\t\tsinRot = this._worldMatrix.matrix[3]; //Math.sin(this._rotate.z);\r\n\t\t\t\t\t\t\t\tnewVecX = rotX * cosRot - rotY * sinRot;\r\n\t\t\t\t\t\t\t\tnewVecY = rotY * cosRot + rotX * sinRot;\r\n\r\n\t\t\t\t\t\t\t\t// Assign the rotated vector back again\r\n\t\t\t\t\t\t\t\tlinearForceVector.x = newVecX;\r\n\t\t\t\t\t\t\t\tlinearForceVector.y = newVecY;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t//linearForceAngle = this.baseAndVarianceValue(this._linearForceAngleBase, this._linearForceAngleVariance);\r\n\t\t\t\t\t\t\t//linearForcePower = this.baseAndVarianceValue(this._linearForcePowerBase, this._linearForcePowerVariance, false);\r\n\r\n\t\t\t\t\t\t\t// Generate the particle's death scale\r\n\t\t\t\t\t\t\tif (typeof(this._deathScaleBaseX) !== 'undefined') {\r\n\t\t\t\t\t\t\t\tdeathScaleX = this.baseAndVarianceValue(\r\n\t\t\t\t\t\t\t\t\tthis._deathScaleBaseX,\r\n\t\t\t\t\t\t\t\t\tthis._deathScaleVarianceX,\r\n\t\t\t\t\t\t\t\t\tfalse\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif (typeof(this._deathScaleBaseY) !== 'undefined' && !this._deathScaleLockAspect) {\r\n\t\t\t\t\t\t\t\tdeathScaleY = this.baseAndVarianceValue(\r\n\t\t\t\t\t\t\t\t\tthis._deathScaleBaseY,\r\n\t\t\t\t\t\t\t\t\tthis._deathScaleVarianceY,\r\n\t\t\t\t\t\t\t\t\tfalse\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif (typeof(this._deathScaleBaseZ) !== 'undefined' && !this._deathScaleLockAspect) {\r\n\t\t\t\t\t\t\t\tdeathScaleZ = this.baseAndVarianceValue(\r\n\t\t\t\t\t\t\t\t\tthis._deathScaleBaseZ,\r\n\t\t\t\t\t\t\t\t\tthis._deathScaleVarianceZ,\r\n\t\t\t\t\t\t\t\t\tfalse\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif (this._deathScaleLockAspect) {\r\n\t\t\t\t\t\t\t\tdeathScaleZ = deathScaleY = deathScaleX;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t// Generate the particle's death rotation\r\n\t\t\t\t\t\t\tif (typeof(this._deathRotateBase) !== 'undefined') {\r\n\t\t\t\t\t\t\t\tdeathRotate = this.baseAndVarianceValue(\r\n\t\t\t\t\t\t\t\t\tthis._deathRotateBase,\r\n\t\t\t\t\t\t\t\t\tthis._deathRotateVariance,\r\n\t\t\t\t\t\t\t\t\ttrue\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t// Generate the particle's death opacity\r\n\t\t\t\t\t\t\tif (typeof(this._deathOpacityBase) !== 'undefined') {\r\n\t\t\t\t\t\t\t\tdeathOpacity = this.baseAndVarianceValue(\r\n\t\t\t\t\t\t\t\t\tthis._deathOpacityBase,\r\n\t\t\t\t\t\t\t\t\tthis._deathOpacityVariance,\r\n\t\t\t\t\t\t\t\t\tfalse\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t// Create the particle entity\r\n\t\t\t\t\t\t\ttempParticle = new this._particle(this);\r\n\r\n\t\t\t\t\t\t\t// Add the current transform of the emitter to the final\r\n\t\t\t\t\t\t\t// particle transforms\r\n\t\t\t\t\t\t\tif (this._ignoreCamera) {\r\n\t\t\t\t\t\t\t\ttranslateX += this._translate.x;\r\n\t\t\t\t\t\t\t\ttranslateY += this._translate.y;\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\ttranslateX += this._worldMatrix.matrix[2];\r\n\t\t\t\t\t\t\t\ttranslateY += this._worldMatrix.matrix[5];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\ttranslateZ += this._translate.z;\r\n\r\n\t\t\t\t\t\t\tscaleX *= this._scale.x;\r\n\t\t\t\t\t\t\tscaleY *= this._scale.y;\r\n\t\t\t\t\t\t\tscaleZ *= this._scale.z;\r\n\r\n\t\t\t\t\t\t\tdeathScaleX *= this._scale.x;\r\n\t\t\t\t\t\t\tdeathScaleY *= this._scale.y;\r\n\t\t\t\t\t\t\tdeathScaleZ *= this._scale.z;\r\n\r\n\t\t\t\t\t\t\t// Apply all the transforms (don't do this in the initial\r\n\t\t\t\t\t\t\t// entity definition because some components may already\r\n\t\t\t\t\t\t\t// have initialised due to the particle template\r\n\t\t\t\t\t\t\ttempParticle.translateTo(translateX, translateY, translateZ);\r\n\t\t\t\t\t\t\ttempParticle.rotateTo(0, 0, Math.radians(rotate));\r\n\t\t\t\t\t\t\ttempParticle.scaleTo(scaleX, scaleY, scaleZ);\r\n\t\t\t\t\t\t\ttempParticle.opacity(opacity);\r\n\r\n\t\t\t\t\t\t\tif (this._applyDepthToParticles) { tempParticle.depth(this._depth); }\r\n\t\t\t\t\t\t\tif (this._applyLayerToParticles) { tempParticle.layer(this._layer); }\r\n\r\n\t\t\t\t\t\t\tif (typeof(velocityVector) === 'object') {\r\n\t\t\t\t\t\t\t\ttempParticle.velocity.vector3(velocityVector, false);\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif (typeof(linearForceVector) === 'object') {\r\n\t\t\t\t\t\t\t\ttempParticle.velocity.linearForceVector3(linearForceVector, false);\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\ttweens = [];\r\n\t\t\t\t\t\t\tif (typeof(deathRotate) !== 'undefined') {\r\n\t\t\t\t\t\t\t\ttweens.push(new IgeTween()\r\n\t\t\t\t\t\t\t\t\t.targetObj(tempParticle._rotate)\r\n\t\t\t\t\t\t\t\t\t.properties({z: Math.radians(deathRotate)})\r\n\t\t\t\t\t\t\t\t\t.duration(life));\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif (typeof(deathOpacity) !== 'undefined') {\r\n\t\t\t\t\t\t\t\ttweens.push(new IgeTween()\r\n\t\t\t\t\t\t\t\t\t.targetObj(tempParticle)\r\n\t\t\t\t\t\t\t\t\t.properties({_opacity: deathOpacity})\r\n\t\t\t\t\t\t\t\t\t.duration(life));\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tscaleProps = {};\r\n\t\t\t\t\t\t\tif (typeof(deathScaleX) !== 'undefined') {\r\n\t\t\t\t\t\t\t\tscaleProps.x = deathScaleX;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif (typeof(deathScaleY) !== 'undefined') {\r\n\t\t\t\t\t\t\t\tscaleProps.y = deathScaleY;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif (typeof(deathScaleZ) !== 'undefined') {\r\n\t\t\t\t\t\t\t\tscaleProps.z = deathScaleZ;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif (scaleProps.x || scaleProps.y || scaleProps.z) {\r\n\t\t\t\t\t\t\t\ttweens.push(new IgeTween()\r\n\t\t\t\t\t\t\t\t\t.targetObj(tempParticle._scale)\r\n\t\t\t\t\t\t\t\t\t.properties(scaleProps)\r\n\t\t\t\t\t\t\t\t\t.duration(life));\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif (typeof(life) === 'number') {\r\n\t\t\t\t\t\t\t\ttempParticle.lifeSpan(life);\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t// Add the particle to this emitter's particle array\r\n\t\t\t\t\t\t\tthis._particles.push(tempParticle);\r\n\r\n\t\t\t\t\t\t\t// Add the particle to the scene\r\n\t\t\t\t\t\t\ttempParticle.mount(this._particleMountTarget || this._parent);\r\n\r\n\t\t\t\t\t\t\t// Start the relevant tweens\r\n\t\t\t\t\t\t\tfor (i = 0; i < tweens.length; i++) {\r\n\t\t\t\t\t\t\t\ttweens[i].start();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tIgeUiEntity.prototype.tick.call(this, ctx);\r\n\t},\r\n\r\n\t/**\r\n\t * Returns an array of the current particle entities that this\r\n\t * emitter has spawned.\r\n\t * @return {Array} The array of particle entities the emitter spawned.\r\n\t */\r\n\tparticles: function () {\r\n\t\treturn this._particles;\r\n\t},\r\n\r\n\t/**\r\n\t * Returns a string containing a code fragment that when\r\n\t * evaluated will reproduce this object's properties via\r\n\t * chained commands. This method will only check for\r\n\t * properties that are directly related to this class.\r\n\t * Other properties are handled by their own class method.\r\n\t * @return {String}\r\n\t */\r\n\t_stringify: function () {\r\n\t\t// Get the properties for all the super-classes\r\n\t\tvar str = IgeUiEntity.prototype._stringify.call(this), i;\r\n\t\treturn str;\r\n\r\n\t\t// TODO: WRITE THIS FOR THIS CLASS - EPIC AMOUNT OF WORK HERE\r\n\t\t// Loop properties and add property assignment code to string\r\n\t\tfor (i in this) {\r\n\t\t\tif (this.hasOwnProperty(i) && this[i] !== undefined) {\r\n\t\t\t\tswitch (i) {\r\n\t\t\t\t\tcase '':\r\n\t\t\t\t\t\tstr += \".text(\" + this.text() + \")\";\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn str;\r\n\t}\r\n});\r\n\r\nif (typeof(module) !== 'undefined' && typeof(module.exports) !== 'undefined') { module.exports = IgeParticleEmitter; }","var IgeParticle = IgeEntity.extend({\r\n\tclassId: 'IgeParticle',\r\n\t\r\n\tinit: function (emitter) {\r\n\t\tthis._emitter = emitter;\r\n\t\tIgeEntity.prototype.init.call(this);\r\n\r\n\t\t// Setup the particle default values\r\n\t\tthis.addComponent(IgeVelocityComponent);\r\n\t},\r\n\r\n\tdestroy: function () {\r\n\t\t// Remove ourselves from the emitter\r\n\t\tif (this._emitter !== undefined) {\r\n\t\t\tthis._emitter._particles.pull(this);\r\n\t\t}\r\n\t\tIgeEntity.prototype.destroy.call(this);\r\n\t}\r\n});","/**\r\n * Creates a new map that has two dimensions (x and y) to it's data.\r\n */\r\nvar IgeMap2d = IgeClass.extend({\r\n\tclassId: 'IgeMap2d',\r\n\r\n\tinit: function (data) {\r\n\t\tthis._mapData = data || [];\r\n\t},\r\n\r\n\t/**\r\n\t * Gets / sets a value on the specified map tile co-ordinates.\r\n\t * @param {Number} x\r\n\t * @param {Number} y\r\n\t * @param {*=} val The data to set on the map tile co-ordinate.\r\n\t * @return {*}\r\n\t */\r\n\ttileData: function (x, y, val) {\r\n\t\tif (x !== undefined && y !== undefined) {\r\n\t\t\tif (val !== undefined) {\r\n\t\t\t\t// Assign a value\r\n\t\t\t\tthis._mapData[y] = this._mapData[y] || [];\r\n\t\t\t\tthis._mapData[y][x] = val;\r\n\t\t\t\treturn this;\r\n\t\t\t} else {\r\n\t\t\t\t// No assignment so see if we have data to return\r\n\t\t\t\tif (this._mapData[y]) {\r\n\t\t\t\t\treturn this._mapData[y][x];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Either no x, y was specified or there was\r\n\t\t// no data at the x, y so return undefined\r\n\t\treturn undefined;\r\n\t},\r\n\r\n\t/**\r\n\t * Clears any data set at the specified map tile co-ordinates.\r\n\t * @param x\r\n\t * @param y\r\n\t * @return {Boolean} True if data was cleared or false if no data existed.\r\n\t */\r\n\tclearData: function (x, y) {\r\n\t\tif (x !== undefined && y !== undefined) {\r\n\t\t\tif (this._mapData[y] !== undefined) {\r\n\t\t\t\tdelete this._mapData[y][x];\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t},\r\n\r\n\t/**\r\n\t * Checks if the tile area passed has any data stored in it. If\r\n\t * so, returns true, otherwise false.\r\n\t * @param x\r\n\t * @param y\r\n\t * @param width\r\n\t * @param height\r\n\t */\r\n\tcollision: function (x, y, width, height) {\r\n\t\tvar xi, yi;\r\n\r\n\t\tif (width === undefined) { width = 1; }\r\n\t\tif (height === undefined) { height = 1; }\r\n\r\n\t\tif (x !== undefined && y !== undefined) {\r\n\t\t\tfor (yi = 0; yi < height; yi++) {\r\n\t\t\t\tfor (xi = 0; xi < width; xi++) {\r\n\t\t\t\t\tif (this.tileData(x + xi, y + yi)) {\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t},\r\n\t\r\n\t/**\r\n\t * Checks if the tile area passed has data stored in it that matches\r\n\t * the passed data. If so, returns true, otherwise false.\r\n\t * @param x\r\n\t * @param y\r\n\t * @param width\r\n\t * @param height\r\n\t * @param data\r\n\t */\r\n\tcollisionWith: function (x, y, width, height, data) {\r\n\t\tvar xi, yi;\r\n\r\n\t\tif (width === undefined) { width = 1; }\r\n\t\tif (height === undefined) { height = 1; }\r\n\r\n\t\tif (x !== undefined && y !== undefined) {\r\n\t\t\tfor (yi = 0; yi < height; yi++) {\r\n\t\t\t\tfor (xi = 0; xi < width; xi++) {\r\n\t\t\t\t\tif (this.tileData(x + xi, y + yi) === data) {\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t},\r\n\t\r\n\t/**\r\n\t * Checks if the tile area passed has data stored in it that matches\r\n\t * the passed data and does not collide with any other stored tile\r\n\t * data. If so, returns true, otherwise false.\r\n\t * @param x\r\n\t * @param y\r\n\t * @param width\r\n\t * @param height\r\n\t * @param data\r\n\t */\r\n\tcollisionWithOnly: function (x, y, width, height, data) {\r\n\t\tvar xi, yi,\r\n\t\t\ttileData,\r\n\t\t\twithData = false;\r\n\r\n\t\tif (width === undefined) { width = 1; }\r\n\t\tif (height === undefined) { height = 1; }\r\n\r\n\t\tif (x !== undefined && y !== undefined) {\r\n\t\t\tfor (yi = 0; yi < height; yi++) {\r\n\t\t\t\tfor (xi = 0; xi < width; xi++) {\r\n\t\t\t\t\ttileData = this.tileData(x + xi, y + yi);\r\n\t\t\t\t\tif (tileData) {\r\n\t\t\t\t\t\tif (this.tileData(x + xi, y + yi) === data) {\r\n\t\t\t\t\t\t\twithData = true;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn withData;\r\n\t},\r\n\r\n\t/**\r\n\t * Gets / sets the map's tile data.\r\n\t * @param {Array} val The map data array.\r\n\t * @param {Integer} startX The start x co-ordinate of the data.\r\n\t * @param {Integer} startY The start y co-ordinate of the data.\r\n\t * @return {*}\r\n\t */\r\n\tmapData: function (val, startX, startY) {\r\n\t\tif (val !== undefined) {\r\n\t\t\tif (!startX && !startY) {\r\n\t\t\t\tthis._mapData = val;\r\n\t\t\t} else {\r\n\t\t\t\t// Loop the map data and apply based on the start positions\r\n\t\t\t\tvar x, y;\r\n\t\t\t\t\r\n\t\t\t\tfor (y in val) {\r\n\t\t\t\t\tfor (x in val[y]) {\r\n\t\t\t\t\t\tthis._mapData[startY + parseInt(y)][startX + parseInt(x)] = val[y][x];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\treturn this._mapData;\r\n\t},\r\n\t\r\n\tsortedMapDataAsArray: function () {\r\n\t\tvar data = this.mapData(),\r\n\t\t\tfinalData = {};\r\n\t\t\r\n\t\tvar x, y, xArr, yArr, i, k;\r\n\t\t\t\t\r\n\t\tyArr = this._sortKeys(data);\r\n\t\t\r\n\t\tfor (i = 0; i < yArr.length; i++) {\r\n\t\t\ty = yArr[i];\r\n\t\t\txArr = this._sortKeys(data[y]);\r\n\t\t\t\r\n\t\t\tfinalData[y] = finalData[y] || {};\r\n\t\t\t\r\n\t\t\tfor (k = 0; k < xArr.length; k++) {\r\n\t\t\t\tx = xArr[k];\r\n\t\t\t\tfinalData[y][x] = data[y][x];\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\treturn finalData;\r\n\t},\r\n\t\r\n\t_sortKeys: function (obj) {\r\n\t\tvar arr = [];\r\n\t\t\r\n\t\tfor (var i in obj) {\r\n\t\t\tarr.push(i);\r\n\t\t}\r\n\t\t\r\n\t\tarr.sort();\r\n\t\treturn arr;\r\n\t},\r\n\r\n\t/**\r\n\t * Returns a string of the map's data in JSON format.\r\n\t * @return {String}\r\n\t */\r\n\tmapDataString: function () {\r\n\t\treturn JSON.stringify(this.mapData());\r\n\t},\r\n\r\n\t/**\r\n\t * Inserts map data into the map at the given co-ordinates. Please note this\r\n\t * is not used for setting a tile's value. This is used to add large sections\r\n\t * of map data at the specified co-ordinates. To set an individual tile value,\r\n\t * please use tile(x, y, val).\r\n\t * @param {Number} x\r\n\t * @param {Number} y\r\n\t * @param {Array} val The map data array.\r\n\t */\r\n\t\t//TODO: Write this function's internals!\r\n\tinsertMapData: function (x, y, val) {\r\n\t\t// Loop the data and fill the map data with it\r\n\t},\r\n\r\n\t/**\r\n\t * Rotates map data either -90 degrees (anti-clockwise), 90 degrees (clockwise) or\r\n\t * 180 degrees. Useful when you want to define one section of a map and then re-use\r\n\t * it in slightly different layouts.\r\n\t * @param {Array} val The map data array to rotate.\r\n\t * @param {Number} mode Either -90, 90 or 180 to denote the type of rotation to perform.\r\n\t */\r\n\t\t//TODO: Write this function's internals!\r\n\trotateData: function (val, mode) {\r\n\t\tswitch (mode) {\r\n\t\t\tcase -90:\r\n\t\t\t\t// Rotate the data\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase 180:\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase 90:\r\n\t\t\tdefault:\r\n\t\t\tbreak;\r\n\t\t}\r\n\t},\r\n\t\r\n\ttranslateDataBy: function (transX, transY) {\r\n\t\tvar yArr = this.mapData(),\r\n\t\t\tnewArr = [],\r\n\t\t\tx, y,\r\n\t\t\txArr,\r\n\t\t\ti, k;\r\n\t\t\r\n\t\tfor (y in yArr) {\r\n\t\t\tif (yArr.hasOwnProperty(y)) {\r\n\t\t\t\ti = parseInt(y, 10);\r\n\t\t\t\txArr = yArr[i];\r\n\t\t\t\t\r\n\t\t\t\tnewArr[i + transY] = newArr[i + transY] || {};\r\n\t\t\t\t\r\n\t\t\t\tfor (x in xArr) {\r\n\t\t\t\t\tif (xArr.hasOwnProperty(x)) {\r\n\t\t\t\t\t\tk = parseInt(x, 10);\r\n\t\t\t\t\t\tnewArr[i + transY][k + transX] = yArr[y][x];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tthis.mapData(newArr, 0, 0);\r\n\t}\r\n});\r\n\r\nif (typeof(module) !== 'undefined' && typeof(module.exports) !== 'undefined') { module.exports = IgeMap2d; }","/**\r\n * Tile maps provide a way to align mounted child objects to a tile-based grid.\r\n * NOTE: These are not to be confused with IgeTextureMap's which allow you to\r\n * paint a bunch of tiles to a grid.\r\n */\r\nvar IgeTileMap2d = IgeEntity.extend({\r\n\tclassId: 'IgeTileMap2d',\r\n\tIgeTileMap2d: true,\r\n\r\n\tinit: function (tileWidth, tileHeight) {\r\n\t\tIgeEntity.prototype.init.call(this);\r\n\r\n\t\ttileWidth = tileWidth !== undefined ? tileWidth : 40;\r\n\t\ttileHeight = tileHeight !== undefined ? tileHeight : 40;\r\n\t\t\r\n\t\tvar self = this;\r\n\r\n\t\tif (!ige.isServer) {\r\n\t\t\tvar tex = new IgeTexture(IgeTileMap2dSmartTexture);\r\n\t\t\tself.texture(tex);\r\n\t\t}\r\n\t\t\r\n\t\tself.map = new IgeMap2d();\r\n\t\tself._adjustmentMatrix = new IgeMatrix2d();\r\n\r\n\t\tself.tileWidth(tileWidth);\r\n\t\tself.tileHeight(tileHeight);\r\n\t\tself.gridSize(3, 3);\r\n\r\n\t\tself._drawGrid = 0;\r\n        self._gridColor = '#ffffff';\r\n\t},\r\n\r\n\t/**\r\n\t * Gets / sets the flag that determines if the tile map will paint the\r\n\t * occupied tiles with an overlay colour so that it is easy to spot them.\r\n\t * @param val\r\n\t * @return {*}\r\n\t */\r\n\thighlightOccupied: function (val) {\r\n\t\tif (val !== undefined) {\r\n\t\t\tthis._highlightOccupied = val;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\treturn this._highlightOccupied;\r\n\t},\r\n\r\n\thighlightTileRect: function (val) {\r\n\t\tif (val !== undefined) {\r\n\t\t\tthis._highlightTileRect = val;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\treturn this._highlightTileRect;\r\n\t},\r\n\r\n\t/**\r\n\t * Gets / sets the map's tile width.\r\n\t * @param {Number} val Tile width.\r\n\t * @return {*}\r\n\t */\r\n\ttileWidth: function (val) {\r\n\t\tif (val !== undefined) {\r\n\t\t\tthis._tileWidth = val;\r\n\t\t\tif (this._gridSize && this._gridSize.x) {\r\n\t\t\t\tthis.width(this._tileWidth * this._gridSize.x);\r\n\t\t\t\tthis._updateAdjustmentMatrix();\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\treturn this._tileWidth;\r\n\t},\r\n\r\n\t/**\r\n\t * Gets / sets the map's tile height.\r\n\t * @param {Number} val Tile height.\r\n\t * @return {*}\r\n\t */\r\n\ttileHeight: function (val) {\r\n\t\tif (val !== undefined) {\r\n\t\t\tthis._tileHeight = val;\r\n\t\t\tif (this._gridSize && this._gridSize.y) {\r\n\t\t\t\tthis.height(this._tileHeight * this._gridSize.y);\r\n\t\t\t\tthis._updateAdjustmentMatrix();\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\treturn this._tileHeight;\r\n\t},\r\n\t\r\n\tgridSize: function (x, y) {\r\n\t\tif (x !== undefined && y !== undefined) {\r\n\t\t\tthis._gridSize = new IgePoint2d(x, y);\r\n\t\t\t\r\n\t\t\t// If in 2d mount mode\r\n\t\t\tif (this._mountMode === 0) {\r\n\t\t\t\tif (this._tileWidth) {\r\n\t\t\t\t\tthis.width(this._tileWidth * this._gridSize.x);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t// If in isometric mount mode\r\n\t\t\tif (this._mountMode === 1) {\r\n\t\t\t\tif (this._tileWidth) {\r\n\t\t\t\t\tthis.width((this._tileWidth * 2) * this._gridSize.x);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (this._tileHeight) {\r\n\t\t\t\tthis.height(this._tileHeight * this._gridSize.y);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis._updateAdjustmentMatrix();\r\n\t\t\t\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\treturn this._gridSize;\r\n\t},\r\n\t\r\n\t/**\r\n\t * Gets / sets if the tile map should paint a grid to the context during\r\n\t * the tick method.\r\n\t * @param {Boolean=} val If true, will paint the grid on tick.\r\n\t * @return {*}\r\n\t */\r\n\tdrawGrid: function (val)  {\r\n\t\tif (val !== undefined) {\r\n\t\t\tthis._drawGrid = val;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\treturn this._drawGrid;\r\n\t},\r\n\r\n\t/**\r\n\t * Gets / sets the color of the grid overlay. It accepts a string color\r\n\t * definition with the same specifications as the canvas context strokeStyle\r\n\t * property.\r\n\t * @param {String=} val The color of the grid.\r\n\t * @return {*}\r\n\t */\r\n\tgridColor: function (val)  {\r\n\t\tif (val !== undefined) {\r\n\t\t\tthis._gridColor = val;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\treturn this._gridColor;\r\n\t},\r\n\t\r\n\t/**\r\n\t * Sets a tile or area as occupied by the passed obj parameter.\r\n\t * Any previous occupy data on the specified tile or area will be\r\n\t * overwritten.\r\n\t * @param {Number} x X co-ordinate of the tile to un-occupy.\r\n\t * @param {Number} y Y co-ordinate of the tile to un-occupy.\r\n\t * @param {Number} width Number of tiles along the x-axis to occupy.\r\n\t * @param {Number} height Number of tiles along the y-axis to occupy.\r\n\t * @param {*} obj\r\n\t * @return {*}\r\n\t */\r\n\toccupyTile: function (x, y, width, height, obj) {\r\n\t\tvar xi, yi;\r\n\r\n\t\tif (width === undefined) { width = 1; }\r\n\t\tif (height === undefined) { height = 1; }\r\n\r\n\t\t// Floor the values\r\n\t\tx = Math.floor(x);\r\n\t\ty = Math.floor(y);\r\n\t\twidth = Math.floor(width);\r\n\t\theight = Math.floor(height);\r\n\r\n\t\tif (x !== undefined && y !== undefined) {\r\n\t\t\tfor (xi = 0; xi < width; xi++) {\r\n\t\t\t\tfor (yi = 0; yi < height; yi++) {\r\n\t\t\t\t\tthis.map.tileData(x + xi, y + yi, obj);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Create an IgeRect to represent the tiles this\r\n\t\t\t// entity has just occupied\r\n\t\t\tif (obj._classId) {\r\n\t\t\t\tobj._occupiedRect = new IgeRect(x, y, width, height);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * Removes all data from the specified tile or area.\r\n\t * @param {Number} x\r\n\t * @param {Number} y\r\n\t * @param {Number=} width\r\n\t * @param {Number=} height\r\n\t * @return {*}\r\n\t */\r\n\tunOccupyTile: function (x, y, width, height) {\r\n\t\tvar xi, yi, item;\r\n\r\n\t\tif (width === undefined) { width = 1; }\r\n\t\tif (height === undefined) { height = 1; }\r\n\r\n\t\t// Floor the values\r\n\t\tx = Math.floor(x);\r\n\t\ty = Math.floor(y);\r\n\t\twidth = Math.floor(width);\r\n\t\theight = Math.floor(height);\r\n\r\n\t\tif (x !== undefined && y !== undefined) {\r\n\t\t\tfor (xi = 0; xi < width; xi++) {\r\n\t\t\t\tfor (yi = 0; yi < height; yi++) {\r\n\t\t\t\t\titem = this.map.tileData(x + xi, y + yi);\r\n\t\t\t\t\tif (item && item._occupiedRect) {\r\n\t\t\t\t\t\tdelete item._occupiedRect;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.map.clearData(x + xi, y + yi);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\r\n\t\t}\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * Returns true if the specified tile or tile area has\r\n\t * an occupied status.\r\n\t * @param {Number} x\r\n\t * @param {Number} y\r\n\t * @param {Number=} width\r\n\t * @param {Number=} height\r\n\t * @return {*}\r\n\t */\r\n\tisTileOccupied: function (x, y, width, height) {\r\n\t\tif (width === undefined) { width = 1; }\r\n\t\tif (height === undefined) { height = 1; }\r\n\r\n\t\treturn this.map.collision(x, y, width, height);\r\n\t},\r\n\r\n\ttileOccupiedBy: function (x, y) {\r\n\t\treturn this.map.tileData(x, y);\r\n\t},\r\n\r\n\t/**\r\n\t * Returns the tile co-ordinates of the tile that the point's world\r\n\t * co-ordinates reside inside.\r\n\t * @param {IgePoint3d} point\r\n\t * @return {IgePoint3d} The tile co-ordinates as a point object.\r\n\t */\r\n\tpointToTile: function (point) {\r\n\t\t// TODO: Could this do with some caching to check if the input values have changed and if not,\r\n\t\t// TODO: supply the same pre-calculated data if it already exists?\r\n\t\tvar mx = point.x,\r\n\t\t\tmy = point.y,\r\n\t\t\tdx, dy, tilePos;\r\n\r\n\t\tif (this._mountMode === 0) {\r\n\t\t\t// 2d\r\n\t\t\tdx = mx; //+ this._tileWidth / 2;\r\n\t\t\tdy = my; //+ this._tileHeight / 2;\r\n\r\n\t\t\ttilePos = new IgePoint3d(\r\n\t\t\t\tMath.floor(dx / this._tileWidth),\r\n\t\t\t\tMath.floor(dy / this._tileWidth),\r\n\t\t\t\t0\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\tif (this._mountMode === 1) {\r\n\t\t\t// iso\r\n\t\t\tdx = mx;\r\n\t\t\tdy = my;\r\n\t\t\t\r\n\t\t\ttilePos = new IgePoint3d(\r\n\t\t\t\tMath.floor(dx / this._tileWidth),\r\n\t\t\t\tMath.floor(dy / this._tileHeight),\r\n\t\t\t\t0\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\treturn tilePos;\r\n\t},\r\n\r\n\t/**\r\n\t * Returns the world co-ordinates of the tile the mouse is currently over.\r\n\t * @return {IgePoint3d}\r\n\t */\r\n\tmouseTilePoint: function () {\r\n\t\tvar tilePos = this.mouseToTile()\r\n\t\t\t.thisMultiply(this._tileWidth, this._tileHeight, 1);\r\n\r\n\t\ttilePos.x += this._tileWidth / 2;\r\n\t\ttilePos.y += this._tileHeight / 2;\r\n\t\t\r\n\t\treturn tilePos;\r\n\t},\r\n\t\r\n\ttileToPoint: function (x, y) {\r\n\t\tvar point;\r\n\t\t\r\n\t\tif (this._mountMode === 0) {\r\n\t\t\tpoint = new IgePoint3d(x, y, 0)\r\n\t\t\t\t.thisMultiply(this._tileWidth, this._tileHeight, 1);\r\n\t\t\t\r\n\t\t\tpoint.x -= this._bounds2d.x2 - (this._tileWidth / 2);\r\n\t\t\tpoint.y -= this._bounds2d.y2 - (this._tileHeight / 2);\r\n\t\t}\r\n\t\t\r\n\t\tif (this._mountMode === 1) {\r\n\t\t\tpoint = new IgePoint3d(x * this._tileWidth + this._tileWidth / 2, y * this._tileHeight + this._tileHeight / 2, 0);\r\n\t\t\tpoint.x -= this._bounds2d.x2 / 2;\r\n\t\t\tpoint.y -= this._bounds2d.y2;\r\n\t\t}\r\n\t\t\r\n\t\tpoint.x2 = point.x / 2;\r\n\t\tpoint.y2 = point.y / 2;\r\n\t\t\r\n\t\treturn point;\r\n\t},\r\n\r\n\t/**\r\n\t * Returns the tile co-ordinates of the tile the mouse is currently over.\r\n\t * @return {IgePoint3d}\r\n\t */\r\n\tmouseToTile: function () {\r\n\t\tvar tilePos;\r\n\t\t\r\n\t\tif (this._mountMode === 0) {\r\n\t\t\ttilePos = this.pointToTile(this.mousePos());\r\n\t\t} else {\r\n\t\t\ttilePos = this.pointToTile(this.mousePos().to2d());\r\n\t\t}\r\n\t\t\r\n\t\treturn tilePos;\r\n\t},\r\n\r\n\t/**\r\n\t * Scans the map data and returns an array of rectangle\r\n\t * objects that encapsulate the map data into discrete\r\n\t * rectangle areas.\r\n\t * @param {Function=} callback Returns true or false for\r\n\t * the passed map data determining if it should be included\r\n\t * in a rectangle or not.\r\n\t * @return {Array}\r\n\t */\r\n\tscanRects: function (callback) {\r\n\t\tvar x, y,\r\n\t\t\trectArray = [],\r\n\t\t\tmapData = this.map._mapData.clone();\r\n\r\n\t\t// Loop the map data and scan for blocks that can\r\n\t\t// be converted into static box2d rectangle areas\r\n\t\tfor (y in mapData) {\r\n\t\t\tif (mapData.hasOwnProperty(y)) {\r\n\t\t\t\tfor (x in mapData[y]) {\r\n\t\t\t\t\tif (mapData[y].hasOwnProperty(x)) {\r\n\t\t\t\t\t\tif (mapData[y][x] && (!callback || (callback && callback(mapData[y][x], x, y)))) {\r\n\t\t\t\t\t\t\trectArray.push(this._scanRects(mapData, parseInt(x, 10), parseInt(y, 10), callback));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn rectArray;\r\n\t},\r\n\r\n\t_scanRects: function (mapData, x, y, callback) {\r\n\t\tvar rect = {\r\n\t\t\t\tx: x,\r\n\t\t\t\ty: y,\r\n\t\t\t\twidth: 1,\r\n\t\t\t\theight: 1\r\n\t\t\t},\r\n\t\t\tnx = x + 1,\r\n\t\t\tny = y + 1;\r\n\r\n\t\t// Clear the current x, y cell mapData\r\n\t\tmapData[y][x] = 0;\r\n\r\n\t\twhile (mapData[y][nx] && (!callback || (callback && callback(mapData[y][nx], nx, y)))) {\r\n\t\t\trect.width++;\r\n\r\n\t\t\t// Clear the mapData for this cell\r\n\t\t\tmapData[y][nx] = 0;\r\n\r\n\t\t\t// Next column\r\n\t\t\tnx++;\r\n\t\t}\r\n\r\n\t\twhile (mapData[ny] && mapData[ny][x] && (!callback || (callback && callback(mapData[ny][x], x, ny)))) {\r\n\t\t\t// Check for mapData either side of the column width\r\n\t\t\tif ((mapData[ny][x - 1] && (!callback || (callback && callback(mapData[ny][x - 1], x - 1, ny)))) || (mapData[ny][x + rect.width] && (!callback || (callback && callback(mapData[ny][x + rect.width], x + rect.width, ny))))) {\r\n\t\t\t\treturn rect;\r\n\t\t\t}\r\n\r\n\t\t\t// Loop the column's map data and check that there is\r\n\t\t\t// an intact column the same width as the starting column\r\n\t\t\tfor (nx = x; nx < x + rect.width; nx++) {\r\n\t\t\t\tif (!mapData[ny][nx] || (callback && !callback(mapData[ny][nx], nx, ny))) {\r\n\t\t\t\t\t// This row has a different column width from the starting\r\n\t\t\t\t\t// column so return the rectangle as it stands\r\n\t\t\t\t\treturn rect;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Mark the row as cleared\r\n\t\t\tfor (nx = x; nx < x + rect.width; nx++) {\r\n\t\t\t\tmapData[ny][nx] = 0;\r\n\t\t\t}\r\n\r\n\t\t\trect.height++;\r\n\t\t\tny++;\r\n\t\t}\r\n\r\n\t\treturn rect;\r\n\t},\r\n\t\r\n\tinGrid: function (x, y, width, height) {\r\n\t\tif (width === undefined) { width = 1; }\r\n\t\tif (height === undefined) { height = 1; }\r\n\t\t\r\n\t\t// Checks if the passed area is inside the tile map grid as defined by gridSize\r\n\t\treturn x >= 0 && y >= 0 && x + width <= this._gridSize.x && y + height <= this._gridSize.y;\r\n\t},\r\n\r\n\t/**\r\n\t * Gets / sets the mouse tile hover color used in conjunction with the\r\n\t * drawMouse() method.\r\n\t * @param {String=} val The hex or rbg string color definition e.g. #ff0099.\r\n\t * @returns {*}\r\n\t */\r\n\thoverColor: function (val) {\r\n\t\tif (val !== undefined) {\r\n\t\t\tthis._hoverColor = val;\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\treturn this._hoverColor;\r\n\t},\r\n\t\r\n\t/**\r\n\t * Loads map data from a saved map.\r\n\t * @param {Object} map The map data object.\r\n\t */\r\n\tloadMap: function (map) {\r\n\t\t// Just fill in the map data\r\n\t\tthis.map.mapData(map.data, 0, 0);\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * Returns a map JSON string that can be saved to a data file and loaded\r\n\t * with the loadMap() method.\r\n\t * @return {Object} The map data object.\r\n\t */\r\n\tsaveMap: function () {\r\n\t\t// in URL format\r\n\t\tvar textures = [], i,\r\n\t\t\tx, y,\r\n\t\t\tdataX = 0, dataY = 0,\r\n\t\t\tmapData = this.map._mapData;\r\n\r\n\t\t// Get the lowest x, y\r\n\t\tfor (y in mapData) {\r\n\t\t\tif (mapData.hasOwnProperty(y)) {\r\n\t\t\t\tfor (x in mapData[y]) {\r\n\t\t\t\t\tif (mapData[y].hasOwnProperty(x)) {\r\n\t\t\t\t\t\tif (parseInt(x) < parseInt(dataX)) {\r\n\t\t\t\t\t\t\tdataX = parseInt(x);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (parseInt(y) < parseInt(dataY)) {\r\n\t\t\t\t\t\t\tdataY = parseInt(y);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn JSON.stringify({\r\n\t\t\tdata: this.map.sortedMapDataAsArray(),\r\n\t\t\tdataXY: [parseInt(dataX, 10), parseInt(dataY, 10)]\r\n\t\t});\r\n\t},\r\n\t\r\n\tisometricMounts: function (val) {\r\n\t\tif (val !== undefined) {\r\n\t\t\tIgeEntity.prototype.isometricMounts.call(this, val);\r\n\t\t\t\r\n\t\t\t// Re-call the methods that check iso mounts property\r\n\t\t\tthis.tileWidth(this._tileWidth);\r\n\t\t\tthis.tileHeight(this._tileHeight);\r\n\t\t\tthis.gridSize(this._gridSize.x, this._gridSize.y);\r\n\t\t\t\r\n\t\t\tthis._updateAdjustmentMatrix();\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\treturn this._mountMode;\r\n\t},\r\n\t\r\n\ttileMapHitPolygon: function (mousePoint) {\r\n\t\tif (this._mountMode === 0) {\r\n\t\t\treturn this.aabb();\r\n\t\t}\r\n\t\t\r\n\t\tif (this._mountMode === 1) {\r\n\t\t\tvar aabb = this.aabb(),\r\n\t\t\t\tpoly = new IgePoly2d();\r\n\t\t\t\r\n\t\t\tpoly.addPoint(aabb.x + aabb.width / 2, aabb.y);\r\n\t\t\tpoly.addPoint(aabb.x + aabb.width, aabb.y + aabb.height / 2);\r\n\t\t\tpoly.addPoint(aabb.x + aabb.width / 2, (aabb.y + aabb.height) - 1);\r\n\t\t\tpoly.addPoint(aabb.x - 1, (aabb.y + aabb.height / 2) - 1);\r\n\t\t\t\r\n\t\t\treturn poly;\r\n\t\t}\r\n\t},\r\n\t\r\n\t_processTriggerHitTests: function () {\r\n\t\t// This method overrides the one in IgeEntity\r\n\t\tif (this._mouseEventsActive && ige._currentViewport) {\r\n\t\t\tif (!this._mouseAlwaysInside) {\r\n\t\t\t\tvar mouseTile = this.mouseToTile();\r\n\t\t\t\tif (mouseTile.x >= 0 && mouseTile.y >= 0 && mouseTile.x < this._gridSize.x && mouseTile.y < this._gridSize.y) {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\treturn false;\r\n\t},\r\n\t\r\n\t_updateAdjustmentMatrix: function () {\r\n\t\tif (this._bounds2d.x2 && this._bounds2d.y2 && this._tileWidth && this._tileHeight) {\r\n\t\t\tif (this._mountMode === 0) {\r\n\t\t\t\tthis._adjustmentMatrix.translateTo(this._bounds2d.x2, this._bounds2d.y2);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (this._mountMode === 1) {\r\n\t\t\t\tthis._adjustmentMatrix.translateTo(0, this._bounds2d.y2);\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\t_childMounted: function (obj) {\r\n\t\t// We can also re-use the tile size methods since\r\n\t\t// they alter the same properties on the calling\r\n\t\t// entity anyway.\r\n\t\tobj.tileWidth = obj.tileWidth || this.tileWidth;\r\n\t\tobj.tileHeight = obj.tileHeight || this.tileHeight;\r\n\r\n\t\t// Set default values\r\n\t\tobj._tileWidth = obj._tileWidth || 1;\r\n\t\tobj._tileHeight = obj._tileHeight || 1;\r\n\r\n\t\tIgeEntity.prototype._childMounted.call(this, obj);\r\n\t}\r\n});\r\n\r\nif (typeof(module) !== 'undefined' && typeof(module.exports) !== 'undefined') { module.exports = IgeTileMap2d; }","// TODO: Implement the _stringify() method for this class\r\n/**\r\n * Texture maps provide a way to display textures / cells across a tile map.\r\n */\r\nvar IgeTextureMap = IgeTileMap2d.extend({\r\n\tclassId: 'IgeTextureMap',\r\n\r\n\tinit: function (tileWidth, tileHeight) {\r\n\t\tIgeTileMap2d.prototype.init.call(this, tileWidth, tileHeight);\r\n\t\tthis.map = new IgeMap2d();\r\n\t\tthis._textureList = [];\r\n\t\tthis._renderCenter = new IgePoint3d(0, 0, 0);\r\n\t\tthis._cacheDirty = true;\r\n\t},\r\n\r\n\t/**\r\n\t * Gets / sets the auto sectioning mode. If enabled the texture map\r\n\t * will render to off-screen canvases in sections denoted by the\r\n\t * number passed. For instance if you pass 10, the canvas sections\r\n\t * will be 10x10 tiles in size.\r\n\t * @param {Number=} val The size in tiles of each section.\r\n\t * @return {*}\r\n\t */\r\n\tautoSection: function (val) {\r\n\t\tif (val !== undefined) {\r\n\t\t\tthis._autoSection = val;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\treturn this._autoSection;\r\n\t},\r\n\r\n\t/**\r\n\t * Gets / sets the draw sections flag. If true the texture map will\r\n\t * output debug lines between each section of the map when using the\r\n\t * auto section system.\r\n\t * @param {Number=} val The boolean flag value.\r\n\t * @return {*}\r\n\t */\r\n\tdrawSectionBounds: function (val) {\r\n\t\tif (val !== undefined) {\r\n\t\t\tthis._drawSectionBounds = val;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\treturn this._drawSectionBounds;\r\n\t},\r\n\r\n\t/**\r\n\t * Forces a cache redraw on the next tick.\r\n\t */\r\n\tcacheForceFrame: function () {\r\n\t\tthis._cacheDirty = true;\r\n\t},\r\n\r\n\t/**\r\n\t * Takes another map and removes any data from this map where data already\r\n\t * exists in the other.\r\n\t * @param {IgeTileMap2d} entity The other map to read map data from.\r\n\t * @return {*}\r\n\t */\r\n\tnegate: function (entity) {\r\n\t\tif (entity !== undefined) {\r\n\t\t\tvar x, y,\r\n\t\t\t\tentityMapData = entity.map._mapData,\r\n\t\t\t\tthisMapData = this.map._mapData;\r\n\r\n\t\t\tfor (y in entityMapData) {\r\n\t\t\t\tif (entityMapData.hasOwnProperty(y)) {\r\n\t\t\t\t\tfor (x in entityMapData[y]) {\r\n\t\t\t\t\t\tif (entityMapData[y].hasOwnProperty(x)) {\r\n\t\t\t\t\t\t\tif (thisMapData[y] && thisMapData[y][x]) {\r\n\t\t\t\t\t\t\t\t// This map has data in the same place as the passed\r\n\t\t\t\t\t\t\t\t// entity's map so remove this map's data\r\n\t\t\t\t\t\t\t\tdelete thisMapData[y][x];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * Adds a texture to the texture map's internal texture list so\r\n\t * that it can be referenced via an index so that the texture map's\r\n\t * data will be something like [[textureId, textureCell]]\r\n\t * or a real world example: [[0, 1], [1, 1]].\r\n\t * @param {IgeTexture} texture\r\n\t * @return {Integer} The index of the texture you just added.\r\n\t */\r\n\taddTexture: function (texture) {\r\n\t\tthis._textureList.push(texture);\r\n\t\tif (!texture._loaded) {\r\n\t\t\tthis._allTexturesLoaded = false;\r\n\t\t}\r\n\t\treturn this._textureList.length - 1;\r\n\t},\r\n\r\n\t/**\r\n\t * Checks the status of all the textures that have been added to\r\n\t * this texture map and returns true if they are all loaded.\r\n\t * @return {Boolean} True if all textures are loaded, false if\r\n\t * not.\r\n\t */\r\n\tallTexturesLoaded: function () {\r\n\t\tif (!this._allTexturesLoaded) {\r\n\t\t\tvar arr = this._textureList,\r\n\t\t\t\tarrCount = arr.length;\r\n\r\n\t\t\twhile (arrCount--) {\r\n\t\t\t\tif (!arr[arrCount]._loaded) {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._allTexturesLoaded = true;\r\n\t\treturn true;\r\n\t},\r\n\r\n\t/**\r\n\t * Sets the specified tile's texture index and cell that will be used\r\n\t * when rendering the texture map.\r\n\t * @param {Number} x The tile x co-ordinate.\r\n\t * @param {Number} y The tile y co-ordinate.\r\n\t * @param {Number} textureIndex The texture index.\r\n\t * @param {Number} cell The cell index.\r\n\t */\r\n\tpaintTile: function (x, y, textureIndex, cell) {\r\n\t\tif (x !== undefined && y !== undefined && textureIndex !== undefined) {\r\n\t\t\tif (cell === undefined || cell < 1) {\r\n\t\t\t\tcell = 1; // Set the cell default to 1\r\n\t\t\t}\r\n\t\t\tthis.map.tileData(x, y, [textureIndex, cell]);\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Clears any previous tile texture and cell data for the specified\r\n\t * tile co-ordinates.\r\n\t * @param {Number} x The tile x co-ordinate.\r\n\t * @param {Number} y The tile y co-ordinate.\r\n\t */\r\n\tclearTile: function (x, y) {\r\n\t\tthis.map.clearData(x, y);\r\n\t},\r\n\r\n\t/**\r\n\t * Reads the map data from a standard map object and fills the map\r\n\t * with the data found.\r\n\t * @param {Object} map The map data object.\r\n\t */\r\n\tloadMap: function (map) {\r\n\t\tif (map.textures) {\r\n\t\t\t// Empty the existing array\r\n\t\t\tthis._textureList = [];\r\n\r\n\t\t\tvar tex = [], i,\r\n\t\t\t\tself = this;\r\n\r\n\t\t\t// Loop the texture list and create each texture object\r\n\t\t\tfor (i = 0; i < map.textures.length; i++) {\r\n\t\t\t\t// Load each texture\r\n\t\t\t\teval('tex[' + i + '] = ' + map.textures[i]);\r\n\t\t\t\tself.addTexture(tex[i]);\r\n\t\t\t}\r\n\r\n\t\t\t// Fill in the map data\r\n\t\t\tself.map.mapData(map.data);\r\n\t\t} else {\r\n\t\t\t// Just fill in the map data\r\n\t\t\tthis.map.mapData(map.data);\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * Returns a map JSON string that can be saved to a data file and loaded\r\n\t * with the loadMap() method.\r\n\t * @return {Object} The map data object.\r\n\t */\r\n\tsaveMap: function () {\r\n\t\t// in URL format\r\n\t\tvar textures = [], i,\r\n\t\t\tx, y,\r\n\t\t\tdataX = 0, dataY = 0,\r\n\t\t\tmapData = this.map._mapData;\r\n\r\n\t\t// Grab all the texture definitions\r\n\t\tfor (i = 0; i < this._textureList.length; i++) {\r\n\t\t\ttextures.push(this._textureList[i].stringify());\r\n\t\t}\r\n\r\n\t\t// Get the lowest x, y\r\n\t\tfor (y in mapData) {\r\n\t\t\tif (mapData.hasOwnProperty(y)) {\r\n\t\t\t\tfor (x in mapData[y]) {\r\n\t\t\t\t\tif (mapData[y].hasOwnProperty(x)) {\r\n\t\t\t\t\t\tif (x < dataX) {\r\n\t\t\t\t\t\t\tdataX = x;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (y < dataY) {\r\n\t\t\t\t\t\t\tdataY = y;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn JSON.stringify({\r\n\t\t\ttextures: textures,\r\n\t\t\tdata: this.map.mapData(),\r\n\t\t\tdataXY: [dataX, dataY]\r\n\t\t});\r\n\t},\r\n\r\n\t/**\r\n\t * Clears the tile data from the map effectively wiping it clean. All\r\n\t * existing map data will be removed. The textures assigned to the texture\r\n\t * map will not be affected.\r\n\t * @returns {*}\r\n\t */\r\n\tclearMap: function () {\r\n\t\tthis.map.mapData([]);\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * Clears tile data from the map and also removes any textures from the\r\n\t * map that were previously assigned to it. This is useful for reverting\r\n\t * the texture map to it's virgin state as if it had just been created.\r\n\t * @returns {*}\r\n\t */\r\n\treset: function () {\r\n\t\tthis.clearMap();\r\n\t\tthis._textureList = [];\r\n\t\t\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * Gets / sets the specified tile's texture index.\r\n\t * @param {Number} x The tile x co-ordinate.\r\n\t * @param {Number} y The tile y co-ordinate.\r\n\t * @param {Number=} textureIndex The new texture index.\r\n\t */\r\n\ttileTextureIndex: function (x, y, textureIndex) {\r\n\t\tif (x !== undefined && y !== undefined) {\r\n\t\t\tvar obj = this.map.tileData(x, y);\r\n\t\t\tif (textureIndex !== undefined) {\r\n\t\t\t\t// Set the cell\r\n\t\t\t\tobj[0] = textureIndex;\r\n\t\t\t} else {\r\n\t\t\t\treturn obj[0];\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Gets / sets the specified tile's texture cell.\r\n\t * @param {Number} x The tile x co-ordinate.\r\n\t * @param {Number} y The tile y co-ordinate.\r\n\t * @param {Number} cell The new cell index.\r\n\t */\r\n\ttileTextureCell: function (x, y, cell) {\r\n\t\tif (x !== undefined && y !== undefined) {\r\n\t\t\tvar obj = this.map.tileData(x, y);\r\n\t\t\tif (cell !== undefined) {\r\n\t\t\t\t// Set the cell\r\n\t\t\t\tobj[1] = cell;\r\n\t\t\t} else {\r\n\t\t\t\treturn obj[1];\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Converts data that is saved in the format [x][y] to the IGE standard\r\n\t * of [y][x] and then returns the data.\r\n\t * @param {Array} mapData The map data array.\r\n\t * @return {Object} The new map data.\r\n\t */\r\n\tconvertHorizontalData: function (mapData) {\r\n\t\tvar newData = [],\r\n\t\t\tx, y;\r\n\r\n\t\tfor (x in mapData) {\r\n\t\t\tif (mapData.hasOwnProperty(x)) {\r\n\t\t\t\tfor (y in mapData[x]) {\r\n\t\t\t\t\tif (mapData[x].hasOwnProperty(y)) {\r\n\t\t\t\t\t\t// Displace the data from the x axis to the y axis\r\n\t\t\t\t\t\tnewData[y] = newData[y] || [];\r\n\t\t\t\t\t\tnewData[y][x] = mapData[x][y];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn newData;\r\n\t},\r\n\r\n\t/**\r\n\t * Handles rendering the texture map during engine tick events.\r\n\t * @param {CanvasRenderingContext2d} ctx\r\n\t */\r\n\ttick: function (ctx) {\r\n\t\t// TODO: This is being called at the wrong time, drawing children before this parent! FIX THIS\r\n\t\t// Run the IgeTileMap2d tick method\r\n\t\tIgeTileMap2d.prototype.tick.call(this, ctx);\r\n\r\n\t\t// Draw each image that has been defined on the map\r\n\t\tvar mapData = this.map._mapData,\r\n\t\t\tx, y,\r\n\t\t\ttx, ty,\r\n\t\t\txInt, yInt,\r\n\t\t\tfinalX, finalY,\r\n\t\t\tfinalPoint,\r\n\t\t\ttileData, tileEntity = this._newTileEntity(), // TODO: This is wasteful, cache it?\r\n\t\t\tsectionX, sectionY,\r\n\t\t\ttempSectionX, tempSectionY,\r\n\t\t\t_ctx,\r\n\t\t\tregions, region, i;\r\n\r\n\t\tif (this._autoSection > 0) {\r\n\t\t\tif (this._cacheDirty) {\r\n\t\t\t\t// Check that all the textures we need to use are loaded\r\n\t\t\t\tif (this.allTexturesLoaded()) {\r\n\t\t\t\t\t// We have a dirty cache so render the section cache\r\n\t\t\t\t\t// data first\r\n\t\t\t\t    // TODO: Shouldn't we be replacing these arrays with new ones to drop the old ones from memory?\r\n\t\t\t\t    // TODO: Gonna do that now and see what the result is.\r\n                    this._sections = []; //this._sections || [];\r\n                    this._sectionCtx = []; //this._sectionCtx || [];\r\n                    // TODO: This isn't ideal because we are almost certainly dropping sections that are still relevant,\r\n                    // TODO: so we should scan and garbage collect I think, instead.\r\n\r\n\t\t\t\t\t// Loop the map data\r\n\t\t\t\t\tfor (y in mapData) {\r\n\t\t\t\t\t\tif (mapData.hasOwnProperty(y)) {\r\n\t\t\t\t\t\t\tfor (x in mapData[y]) {\r\n\t\t\t\t\t\t\t\tif (mapData[y].hasOwnProperty(x)) {\r\n\t\t\t\t\t\t\t\t\txInt = parseInt(x);\r\n\t\t\t\t\t\t\t\t\tyInt = parseInt(y);\r\n\r\n\t\t\t\t\t\t\t\t\t// Calculate the tile's final resting position in absolute\r\n\t\t\t\t\t\t\t\t\t// co-ordinates so we can work out which section canvas to\r\n\t\t\t\t\t\t\t\t\t// paint the tile to\r\n\t\t\t\t\t\t\t\t\tif (this._mountMode === 0) {\r\n\t\t\t\t\t\t\t\t\t\t// We're rendering a 2d map\r\n\t\t\t\t\t\t\t\t\t\tfinalX = xInt;\r\n\t\t\t\t\t\t\t\t\t\tfinalY = yInt;\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\tif (this._mountMode === 1) {\r\n\t\t\t\t\t\t\t\t\t\t// We're rendering an iso map\r\n\t\t\t\t\t\t\t\t\t\t// Convert the tile x, y to isometric\r\n\t\t\t\t\t\t\t\t\t\ttx = xInt * this._tileWidth;\r\n\t\t\t\t\t\t\t\t\t\tty = yInt * this._tileHeight;\r\n\t\t\t\t\t\t\t\t\t\tfinalX = (tx - ty) / this._tileWidth;\r\n\t\t\t\t\t\t\t\t\t\tfinalY = ((tx + ty) * 0.5) / this._tileHeight;\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\t// Grab the tile data to paint\r\n\t\t\t\t\t\t\t\t\ttileData = mapData[y][x];\r\n\r\n\t\t\t\t\t\t\t\t\t// Work out which section to paint to\r\n\t\t\t\t\t\t\t\t\tsectionX = Math.floor(finalX / this._autoSection);\r\n\t\t\t\t\t\t\t\t\tsectionY = Math.floor(finalY / this._autoSection);\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t// Check if an off-screen canvas already exists for this section\r\n\t\t\t\t\t\t\t\t\t// and if not, create one\r\n\t\t\t\t\t\t\t\t\tthis._ensureSectionExists(sectionX, sectionY);\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t// Grab the drawing context for the section\r\n\t\t\t\t\t\t\t\t\t_ctx = this._sectionCtx[sectionX][sectionY];\r\n\r\n\t\t\t\t\t\t\t\t\tif (tileData) {\r\n\t\t\t\t\t\t\t\t\t\tregions = this._renderTile(\r\n\t\t\t\t\t\t\t\t\t\t\t_ctx,\r\n\t\t\t\t\t\t\t\t\t\t\txInt,\r\n\t\t\t\t\t\t\t\t\t\t\tyInt,\r\n\t\t\t\t\t\t\t\t\t\t\ttileData,\r\n\t\t\t\t\t\t\t\t\t\t\ttileEntity,\r\n\t\t\t\t\t\t\t\t\t\t\tnull,\r\n\t\t\t\t\t\t\t\t\t\t\tsectionX,\r\n\t\t\t\t\t\t\t\t\t\t\tsectionY\r\n\t\t\t\t\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t\t\t\t\t// Check if the tile overlapped another section\r\n\t\t\t\t\t\t\t\t\t\tif (regions) {\r\n\t\t\t\t\t\t\t\t\t\t\t// Loop the regions and re-render the tile on the\r\n\t\t\t\t\t\t\t\t\t\t\t// other sections that it overlaps\r\n\t\t\t\t\t\t\t\t\t\t\tfor (i = 0; i < regions.length; i++) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tregion = regions[i];\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\ttempSectionX = sectionX;\r\n\t\t\t\t\t\t\t\t\t\t\t\ttempSectionY = sectionY;\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\tif (region.x) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttempSectionX += region.x;\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\tif (region.y) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttempSectionY += region.y;\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\tthis._ensureSectionExists(tempSectionX, tempSectionY);\r\n\t\t\t\t\t\t\t\t\t\t\t\t_ctx = this._sectionCtx[tempSectionX][tempSectionY];\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\tthis._sectionTileRegion = this._sectionTileRegion || [];\r\n\t\t\t\t\t\t\t\t\t\t\t\tthis._sectionTileRegion[tempSectionX] = this._sectionTileRegion[tempSectionX] || [];\r\n\t\t\t\t\t\t\t\t\t\t\t\tthis._sectionTileRegion[tempSectionX][tempSectionY] = this._sectionTileRegion[tempSectionX][tempSectionY] || [];\r\n\t\t\t\t\t\t\t\t\t\t\t\tthis._sectionTileRegion[tempSectionX][tempSectionY][xInt] = this._sectionTileRegion[tempSectionX][tempSectionY][xInt] || [];\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\tif (!this._sectionTileRegion[tempSectionX][tempSectionY][xInt][yInt]) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis._sectionTileRegion[tempSectionX][tempSectionY][xInt][yInt] = true;\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis._renderTile(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t_ctx,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\txInt,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tyInt,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttileData,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttileEntity,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tnull,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttempSectionX,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttempSectionY\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Set the cache to clean!\r\n\t\t\t\t\tthis._cacheDirty = false;\r\n\r\n\t\t\t\t\t// Remove the temporary section tile painted data\r\n\t\t\t\t\tdelete this._sectionTileRegion;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis._drawSectionsToCtx(ctx);\r\n\t\t} else {\r\n\t\t\t// Check that all the textures we need to use are loaded\r\n\t\t\tif (this.allTexturesLoaded()) {\r\n\t\t\t\t// Render the whole map\r\n\t\t\t\tfor (y in mapData) {\r\n\t\t\t\t\tif (mapData.hasOwnProperty(y)) {\r\n\t\t\t\t\t\tfor (x in mapData[y]) {\r\n\t\t\t\t\t\t\tif (mapData[y].hasOwnProperty(x)) {\r\n\t\t\t\t\t\t\t\t// Grab the tile data to paint\r\n\t\t\t\t\t\t\t\ttileData = mapData[y][x];\r\n\t\r\n\t\t\t\t\t\t\t\tif (tileData) {\r\n\t\t\t\t\t\t\t\t\tthis._renderTile(ctx, x, y, tileData, tileEntity);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Private method, checks if the specified section currently exists in the cache\r\n\t * and if not, creates it.\r\n\t * @param {Number} sectionX The section's x co-ordinate.\r\n\t * @param {Number} sectionY The section's y co-ordinate.\r\n\t * @private\r\n\t */\r\n\t_ensureSectionExists: function (sectionX, sectionY) {\r\n\t\tvar sectionCtx;\r\n\r\n\t\tthis._sections[sectionX] = this._sections[sectionX] || [];\r\n\t\tthis._sectionCtx[sectionX] = this._sectionCtx[sectionX] || [];\r\n\r\n\t\tif (!this._sections[sectionX][sectionY]) {\r\n\t\t\tthis._sections[sectionX][sectionY] = document.createElement('canvas');\r\n\t\t\tthis._sections[sectionX][sectionY].width = (this._tileWidth * this._autoSection);\r\n\t\t\tthis._sections[sectionX][sectionY].height = (this._tileHeight * this._autoSection);\r\n\r\n\t\t\tsectionCtx = this._sectionCtx[sectionX][sectionY] = this._sections[sectionX][sectionY].getContext('2d');\r\n\r\n\t\t\t// Ensure the canvas is using the correct image antialiasing mode\r\n\t\t\tif (!ige._globalSmoothing) {\r\n\t\t\t\tsectionCtx.imageSmoothingEnabled = false;\r\n\t\t\t\tsectionCtx.mozImageSmoothingEnabled = false;\r\n\t\t\t} else {\r\n\t\t\t\tsectionCtx.imageSmoothingEnabled = true;\r\n\t\t\t\tsectionCtx.mozImageSmoothingEnabled = true;\r\n\t\t\t}\r\n\r\n\t\t\t// One-time translate the context\r\n\t\t\tsectionCtx.translate(this._tileWidth / 2, this._tileHeight / 2);\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Private method, draws cached image sections to the canvas context.\r\n\t * @param {CanvasRenderingContext2d} ctx\r\n\t * @private\r\n\t */\r\n\t_drawSectionsToCtx: function (ctx) {\r\n\t\tvar x, y, tileData,\r\n\t\t\tsectionRenderX, sectionRenderY,\r\n\t\t\tsectionAbsX, sectionAbsY,\r\n\t\t\tsectionWidth, sectionHeight,\r\n\t\t\tviewArea = ige._currentViewport.viewArea();\r\n\r\n\t\t// Render the map sections\r\n\t\t//ctx.translate(-(this._tileWidth / 2), -(this._tileHeight / 2));\r\n\r\n\t\tsectionWidth = (this._tileWidth * this._autoSection);\r\n\t\tsectionHeight = (this._tileHeight * this._autoSection);\r\n\r\n\t\tfor (x in this._sections) {\r\n\t\t\tif (this._sections.hasOwnProperty(x)) {\r\n\t\t\t\tfor (y in this._sections[x]) {\r\n\t\t\t\t\tif (this._sections[x].hasOwnProperty(y)) {\r\n\t\t\t\t\t\tsectionRenderX = x * (this._tileWidth * this._autoSection);\r\n\t\t\t\t\t\tsectionRenderY = y * (this._tileHeight * this._autoSection);\r\n\t\t\t\t\t\tsectionAbsX = this._translate.x + sectionRenderX - ige._currentCamera._translate.x;\r\n\t\t\t\t\t\tsectionAbsY = this._translate.y + sectionRenderY - ige._currentCamera._translate.y;\r\n\r\n\t\t\t\t\t\t// Check if we are drawing isometrically and adjust\r\n\t\t\t\t\t\tif (this._mountMode === 1) {\r\n\t\t\t\t\t\t\tsectionAbsX -= (this._tileWidth / 2);\r\n\t\t\t\t\t\t\tsectionAbsY -= (this._tileHeight / 2);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Check if the section is \"on screen\"\r\n\t\t\t\t\t\tif ((sectionAbsX + sectionWidth + (this._tileHeight / 2) >= -(viewArea.width / 2) && sectionAbsX - (this._tileWidth / 2) <= (viewArea.width / 2)) && (sectionAbsY + sectionHeight + (this._tileHeight / 2) >= -(viewArea.height / 2) && sectionAbsY <= (viewArea.height / 2))) {\r\n\t\t\t\t\t\t\t// Grab the canvas to paint\r\n\t\t\t\t\t\t\ttileData = this._sections[x][y];\r\n\r\n\t\t\t\t\t\t\tctx.drawImage(\r\n\t\t\t\t\t\t\t\ttileData,\r\n\t\t\t\t\t\t\t\t0, 0,\r\n\t\t\t\t\t\t\t\tsectionWidth,\r\n\t\t\t\t\t\t\t\tsectionHeight,\r\n\t\t\t\t\t\t\t\tsectionRenderX,\r\n\t\t\t\t\t\t\t\tsectionRenderY,\r\n\t\t\t\t\t\t\t\tsectionWidth,\r\n\t\t\t\t\t\t\t\tsectionHeight\r\n\t\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t\tige._drawCount++;\r\n\r\n\t\t\t\t\t\t\tif (this._drawSectionBounds) {\r\n\t\t\t\t\t\t\t\t// Draw a bounding rectangle around the section\r\n\t\t\t\t\t\t\t\tctx.strokeStyle = '#ff00f6';\r\n\t\t\t\t\t\t\t\tctx.strokeRect(\r\n\t\t\t\t\t\t\t\t\tx * (this._tileWidth * this._autoSection),\r\n\t\t\t\t\t\t\t\t\ty * (this._tileHeight * this._autoSection),\r\n\t\t\t\t\t\t\t\t\t(this._tileWidth * this._autoSection),\r\n\t\t\t\t\t\t\t\t\t(this._tileHeight * this._autoSection)\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Private method, renders a tile texture based on data from the texture map,\r\n\t * to a cached section. \r\n\t * @param {CanvasRenderingContext2d} ctx\r\n\t * @param {Number} x The tile x co-ordinate.\r\n\t * @param {Number} y The tile y co-ordinate.\r\n\t * @param {Object} tileData The tile's texture and cell data.\r\n\t * @param {Object} tileEntity The object that represents the tile.\r\n\t * @param {IgeRect=} rect The rectangular area to limit drawing to.\r\n\t * @param {Number} sectionX The x co-ordinate of the section to draw to.\r\n\t * @param {Number} sectionY The y co-ordinate of the section to draw to.\r\n\t * @return {*}\r\n\t * @private\r\n\t */\r\n\t_renderTile: function (ctx, x, y, tileData, tileEntity, rect, sectionX, sectionY) {\r\n\t\t// TODO: Handle scaling so tiles don't loose res on scaled cached sections\r\n\t\tvar finalX, finalY, regions,\r\n\t\t\txm1, xp1, ym1, yp1, regObj,\r\n\t\t\txAdjust = this._mountMode === 1 ? this._tileWidth / 2 : 0,\r\n\t\t\tyAdjust = this._mountMode === 1 ? this._tileHeight / 2 : 0,\r\n\t\t\ttx, ty, sx, sy,\r\n\t\t\ttexture;\r\n\t\t\r\n\t\t// Translate the canvas to the tile position\r\n\t\tif (this._mountMode === 0) {\r\n\t\t\tfinalX = x * this._tileWidth;\r\n\t\t\tfinalY = y * this._tileHeight;\r\n\t\t}\r\n\r\n\t\tif (this._mountMode === 1) {\r\n\t\t\t// Convert the tile x, y to isometric\r\n\t\t\ttx = x * this._tileWidth;\r\n\t\t\tty = y * this._tileHeight;\r\n\t\t\tsx = tx - ty;\r\n\t\t\tsy = (tx + ty) * 0.5;\r\n\r\n\t\t\tfinalX = sx - this._tileWidth / 2;\r\n\t\t\tfinalY = sy;\r\n\t\t}\r\n\r\n\t\tif (sectionX !== undefined) {\r\n\t\t\tfinalX -= sectionX * this._autoSection * this._tileWidth;\r\n\t\t}\r\n\t\tif (sectionY !== undefined) {\r\n\t\t\tfinalY -= sectionY * this._autoSection * this._tileHeight;\r\n\t\t}\r\n\r\n\t\t// If we have a rectangle region we are limiting to...\r\n\t\tif (rect) {\r\n\t\t\t// Check the bounds first\r\n\t\t\tif (!rect.xyInside(finalX, finalY)) {\r\n\t\t\t\t// The point is not inside the bounds, return\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (finalX - (xAdjust) < 0) {\r\n\t\t\tregions = regions || [];\r\n\t\t\tregions.push({x: -1});\r\n\t\t\txm1 = true;\r\n\r\n\t\t\tregObj = regObj || {};\r\n\t\t\tregObj.x = -1;\r\n\t\t}\r\n\r\n\t\tif (finalX + (xAdjust) > (ctx.canvas.width - (this._tileWidth))) {\r\n\t\t\tregions = regions || [];\r\n\t\t\tregions.push({x: 1});\r\n\t\t\txp1 = true;\r\n\r\n\t\t\tregObj = regObj || {};\r\n\t\t\tregObj.x = 1;\r\n\t\t}\r\n\r\n\t\tif (finalY - (0) < 0) {\r\n\t\t\tregions = regions || [];\r\n\t\t\tregions.push({y: -1});\r\n\t\t\tym1 = true;\r\n\r\n\t\t\tregObj = regObj || {};\r\n\t\t\tregObj.y = -1;\r\n\t\t}\r\n\r\n\t\tif (finalY + (0) > (ctx.canvas.height - (this._tileHeight))) {\r\n\t\t\tregions = regions || [];\r\n\t\t\tregions.push({y: 1});\r\n\t\t\typ1 = true;\r\n\r\n\t\t\tregObj = regObj || {};\r\n\t\t\tregObj.y = 1;\r\n\t\t}\r\n\r\n\t\tif (xm1 || ym1 || xp1 || yp1) {\r\n\t\t\tregions.push(regObj);\r\n\t\t}\r\n\r\n\t\tctx.save();\r\n\t\tctx.translate(finalX, finalY);\r\n\t\t\r\n\t\t// Set the correct texture data\r\n\t\ttexture = this._textureList[tileData[0]];\r\n\t\ttileEntity._cell = tileData[1];\r\n\r\n\t\t// Paint the texture\r\n\t\tif (texture) {\r\n\t\t\ttexture.render(ctx, tileEntity, ige._tickDelta);\r\n\t\t}\r\n\t\tctx.restore();\r\n\r\n\t\treturn regions;\r\n\t},\r\n\r\n\t/**\r\n\t * Private method, creates an entity object that a texture can use to render\r\n\t * itself. This is basically a dummy object that has the minimum amount of data\r\n\t * in it that a texture requires to render such as geometry, texture\r\n\t * cell and rendering position.\r\n\t * @return {Object} The new tile entity object.\r\n\t * @private\r\n\t */\r\n\t_newTileEntity: function () {\r\n\t\tif (this._mountMode === 0) {\r\n\t\t\treturn {\r\n\t\t\t\t_cell: 1,\r\n\t\t\t\t_bounds2d: {\r\n\t\t\t\t\tx: this._tileWidth,\r\n\t\t\t\t\ty: this._tileHeight\r\n\t\t\t\t},\r\n\t\t\t\t_renderPos: {\r\n\t\t\t\t\tx: -this._tileWidth / 2,\r\n\t\t\t\t\ty: -this._tileHeight / 2\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tif (this._mountMode === 1) {\r\n\t\t\treturn {\r\n\t\t\t\t_cell: 1,\r\n\t\t\t\t_bounds2d: {\r\n\t\t\t\t\tx: this._tileWidth * 2,\r\n\t\t\t\t\ty: this._tileHeight\r\n\t\t\t\t},\r\n\t\t\t\t_renderPos: {\r\n\t\t\t\t\tx: -this._tileWidth,\r\n\t\t\t\t\ty: -this._tileHeight / 2\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t}\r\n\t}\r\n});\r\n\r\nif (typeof(module) !== 'undefined' && typeof(module.exports) !== 'undefined') { module.exports = IgeTextureMap; }\r\n","var IgeTileMap2dSmartTexture = {\r\n\trender: function (ctx, entity) {\r\n\t\tvar tileWidth = entity._tileWidth,\r\n\t\t\ttileHeight = entity._tileHeight,\r\n\t\t\tbounds2d = entity.bounds2d(),\r\n\t\t\tgridSize = entity._gridSize,\r\n\t\t\tx = 0, y = 0;\r\n\t\t\r\n\t\t/*ctx.save();\r\n\t\tvar triggerPoly = entity.tileMapHitPolygon();\r\n\t\t\r\n\t\tctx.strokeStyle = '#00ff00';\r\n\t\tctx.fillStyle = '#ff99f4';\r\n\t\t\r\n\t\tif (entity._processTriggerHitTests()) {\r\n\t\t\tctx.fillStyle = '#ff26e8';\r\n\t\t}\r\n\t\t\r\n\t\tif (entity._mountMode === 0) {\r\n\t\t\tctx.translate(bounds2d.x2, bounds2d.y2);\r\n\t\t}\r\n\t\t\r\n\t\tif (entity._mountMode === 1) {\r\n\t\t\tctx.translate(-entity._translate.x, -entity._translate.y);\r\n\t\t\ttriggerPoly.render(ctx, true);\r\n\t\t}\r\n\t\t\r\n\t\t//\r\n\t\tctx.restore();*/\r\n\t\t\r\n\t\tif (entity._drawGrid) {\r\n\t\t\tctx.strokeStyle = entity._gridColor;\r\n\t\t\tvar gridMaxX = x + tileWidth * gridSize.x,\r\n\t\t\t\tgridMaxY = y + tileHeight * gridSize.y,\r\n\t\t\t\tindex,\r\n\t\t\t\tgStart,\r\n\t\t\t\tgEnd;\r\n\t\t\t\r\n\t\t\tx = 0;\r\n\t\t\ty = 0;\r\n\t\r\n\t\t\tfor (index = 0; index <= gridSize.y; index++) {\r\n\t\t\t\tgStart = new IgePoint2d(x, y + (tileHeight * index));\r\n\t\t\t\tgEnd = new IgePoint2d(gridMaxX, y + (tileHeight * index));\r\n\t\r\n\t\t\t\tif (entity._mountMode === 1) {\r\n\t\t\t\t\t// Iso grid\r\n\t\t\t\t\tgStart = gStart.toIso();\r\n\t\t\t\t\tgEnd = gEnd.toIso();\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tctx.beginPath();\r\n\t\t\t\tctx.moveTo(gStart.x, gStart.y);\r\n\t\t\t\tctx.lineTo(gEnd.x, gEnd.y);\r\n\t\t\t\tctx.stroke();\r\n\t\t\t}\r\n\t\r\n\t\t\tfor (index = 0; index <= gridSize.x; index++) {\r\n\t\t\t\tgStart = new IgePoint2d(x + (tileWidth * index), y);\r\n\t\t\t\tgEnd = new IgePoint2d(x + (tileWidth * index), gridMaxY);\r\n\t\r\n\t\t\t\tif (entity._mountMode === 1) {\r\n\t\t\t\t\t// Iso grid\r\n\t\t\t\t\tgStart = gStart.toIso();\r\n\t\t\t\t\tgEnd = gEnd.toIso();\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tctx.beginPath();\r\n\t\t\t\tctx.moveTo(gStart.x, gStart.y);\r\n\t\t\t\tctx.lineTo(gEnd.x, gEnd.y);\r\n\t\t\t\tctx.stroke();\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tif (entity._highlightOccupied) {\r\n\t\t\tctx.fillStyle = '#ff0000';\r\n\t\t\tfor (y in entity.map._mapData) {\r\n\t\t\t\tif (entity.map._mapData[y]) {\r\n\t\t\t\t\tfor (x in entity.map._mapData[y]) {\r\n\t\t\t\t\t\tif (entity.map._mapData[y][x]) {\r\n\t\t\t\t\t\t\t// Tile is occupied\r\n\t\t\t\t\t\t\ttilePoint = new IgePoint2d(tileWidth * x, tileHeight * y);\r\n\r\n\t\t\t\t\t\t\t// TODO: Abstract out the tile drawing method so that it can be overridden for other projections etc\r\n\t\t\t\t\t\t\tif (entity._mountMode === 0) {\r\n\t\t\t\t\t\t\t\t// 2d\r\n\t\t\t\t\t\t\t\tctx.fillRect(\r\n\t\t\t\t\t\t\t\t\ttilePoint.x,\r\n\t\t\t\t\t\t\t\t\ttilePoint.y,\r\n\t\t\t\t\t\t\t\t\ttileWidth,\r\n\t\t\t\t\t\t\t\t\ttileHeight\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif (entity._mountMode === 1) {\r\n\t\t\t\t\t\t\t\t// iso\r\n\t\t\t\t\t\t\t\ttilePoint.thisToIso();\r\n\r\n\t\t\t\t\t\t\t\tctx.beginPath();\r\n\t\t\t\t\t\t\t\tctx.moveTo(tilePoint.x, tilePoint.y);\r\n\t\t\t\t\t\t\t\tctx.lineTo(tilePoint.x + tileWidth, tilePoint.y + tileHeight / 2);\r\n\t\t\t\t\t\t\t\tctx.lineTo(tilePoint.x, tilePoint.y + tileHeight);\r\n\t\t\t\t\t\t\t\tctx.lineTo(tilePoint.x - tileWidth, tilePoint.y + tileHeight / 2);\r\n\t\t\t\t\t\t\t\tctx.lineTo(tilePoint.x, tilePoint.y);\r\n\t\t\t\t\t\t\t\tctx.fill();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (entity._highlightTileRect) {\r\n\t\t\tctx.fillStyle = '#e4ff00';\r\n\t\t\tfor (y = entity._highlightTileRect.y; y < entity._highlightTileRect.y + entity._highlightTileRect.height; y++) {\r\n\t\t\t\tfor (x = entity._highlightTileRect.x; x < entity._highlightTileRect.x + entity._highlightTileRect.width; x++) {\r\n\t\t\t\t\t// Tile is occupied\r\n\t\t\t\t\ttilePoint = new IgePoint2d(tileWidth * x, tileHeight * y);\r\n\r\n\t\t\t\t\t// TODO: Abstract out the tile drawing method so that it can be overridden for other projections etc\r\n\t\t\t\t\tif (entity._mountMode === 0) {\r\n\t\t\t\t\t\t// 2d\r\n\t\t\t\t\t\tctx.fillRect(\r\n\t\t\t\t\t\t\ttilePoint.x,\r\n\t\t\t\t\t\t\ttilePoint.y,\r\n\t\t\t\t\t\t\ttileWidth,\r\n\t\t\t\t\t\t\ttileHeight\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (entity._mountMode === 1) {\r\n\t\t\t\t\t\t// iso\r\n\t\t\t\t\t\ttilePoint.thisToIso();\r\n\r\n\t\t\t\t\t\tctx.beginPath();\r\n\t\t\t\t\t\tctx.moveTo(tilePoint.x, tilePoint.y - tileHeight / 2);\r\n\t\t\t\t\t\tctx.lineTo(tilePoint.x + tileWidth, tilePoint.y);\r\n\t\t\t\t\t\tctx.lineTo(tilePoint.x, tilePoint.y + tileHeight / 2);\r\n\t\t\t\t\t\tctx.lineTo(tilePoint.x - tileWidth, tilePoint.y);\r\n\t\t\t\t\t\tctx.lineTo(tilePoint.x, tilePoint.y - tileHeight / 2);\r\n\t\t\t\t\t\tctx.fill();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (entity._drawMouse) {\r\n\t\t\t// Get mouse position\r\n\t\t\tvar mousePos = entity.mousePos(),\r\n\t\t\t\tmouseTile = entity.mouseToTile(),\r\n\t\t\t\ttilePoint,\r\n\t\t\t\ttext,\r\n\t\t\t\ttextMeasurement;\r\n\t\t\t\r\n\t\t\tif (mouseTile.x >= 0 && mouseTile.y >= 0 && mouseTile.x < gridSize.x && mouseTile.y < gridSize.y) {\r\n\t\t\t\t// Paint the tile the mouse is currently intersecting\r\n\t\t\t\tctx.fillStyle = entity._hoverColor || '#6000ff';\r\n\t\t\t\tif (entity._mountMode === 0) {\r\n\t\t\t\t\t// 2d\r\n\t\t\t\t\tctx.fillRect(\r\n\t\t\t\t\t\t(mouseTile.x * tileWidth),\r\n\t\t\t\t\t\t(mouseTile.y * tileHeight),\r\n\t\t\t\t\t\ttileWidth,\r\n\t\t\t\t\t\ttileHeight\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif (entity._mountMode === 1) {\r\n\t\t\t\t\t// iso\r\n\t\t\t\t\ttilePoint = mouseTile\r\n\t\t\t\t\t\t.clone()\r\n\t\t\t\t\t\t.thisMultiply(tileWidth, tileHeight, 0)\r\n\t\t\t\t\t\t.thisToIso();\r\n\t\t\t\t\t\r\n\t\t\t\t\ttilePoint.y += tileHeight / 2;\r\n\t\r\n\t\t\t\t\tctx.beginPath();\r\n\t\t\t\t\tctx.moveTo(tilePoint.x, tilePoint.y - tileHeight / 2);\r\n\t\t\t\t\tctx.lineTo(tilePoint.x + tileWidth, tilePoint.y);\r\n\t\t\t\t\tctx.lineTo(tilePoint.x, tilePoint.y + tileHeight / 2);\r\n\t\t\t\t\tctx.lineTo(tilePoint.x - tileWidth, tilePoint.y);\r\n\t\t\t\t\tctx.lineTo(tilePoint.x, tilePoint.y - tileHeight / 2);\r\n\t\t\t\t\tctx.fill();\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif (entity._drawMouseData) {\r\n\t\t\t\t\ttext = 'Tile X: ' + mouseTile.x + ' Y: ' + mouseTile.y;\r\n\t\t\t\t\ttextMeasurement = ctx.measureText(text);\r\n\t\t\t\t\tctx.fillStyle = 'rgba(0, 0, 0, 0.8)';\r\n\t\t\t\t\tctx.fillRect(Math.floor(mousePos.x - textMeasurement.width / 2 - 5), Math.floor(mousePos.y - 40), Math.floor(textMeasurement.width + 10), 14);\r\n\t\t\t\t\tctx.fillStyle = '#ffffff';\r\n\t\t\t\t\tctx.fillText(text, Math.floor(mousePos.x - textMeasurement.width / 2), Math.floor(mousePos.y - 30));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n};","var IgeCollisionMap2d = IgeEntity.extend({\r\n\tclassId: 'IgeCollisionMap2d',\r\n\r\n\tinit: function (tileWidth, tileHeight) {\r\n\t\tIgeEntity.prototype.init.call(this);\r\n\t\tvar self = this;\r\n\r\n\t\tthis.map = new IgeMap2d();\r\n\t},\r\n\r\n\tmapData: function (val) {\r\n\t\tif (val !== undefined) {\r\n\t\t\tthis.map.mapData(val);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\treturn this.map.mapData();\r\n\t}\r\n});\r\n\r\nif (typeof(module) !== 'undefined' && typeof(module.exports) !== 'undefined') { module.exports = IgeCollisionMap2d; }","/**\r\n * Creates a new camera that will be attached to a viewport.\r\n */\r\nvar IgeCamera = IgeEntity.extend({\r\n\tclassId: 'IgeCamera',\r\n\r\n\tinit: function (entity) {\r\n\t\tIgeEntity.prototype.init.call(this);\r\n\r\n\t\tthis._trackRotateTarget = undefined;\r\n\t\tthis._trackTranslateTarget = undefined;\r\n\t\tthis._trackRotateSmoothing = undefined;\r\n\t\tthis._trackTranslateSmoothing = undefined;\r\n\r\n\t\t// Store the viewport this camera is attached to\r\n\t\tthis._entity = entity;\r\n\t},\r\n\r\n\t/**\r\n\t * Gets / sets the rectangle that the camera translate\r\n\t * will be limited to using an IgeRect instance.\r\n\t * @param {IgeRect=} rect\r\n\t * @return {*}\r\n\t */\r\n\tlimit: function (rect) {\r\n\t\t// TODO: Write the usage of this limit data, currently does nothing\r\n\t\tif (rect !== undefined) {\r\n\t\t\tthis._limit = rect;\r\n\t\t\treturn this._entity;\r\n\t\t}\r\n\r\n\t\treturn this._limit;\r\n\t},\r\n\r\n\t/**\r\n\t * Pan (tween) the camera to the new specified point in\r\n\t * the specified time.\r\n\t * @param {IgePoint3d} point The point describing the co-ordinates to pan to.\r\n\t * @param {Number} durationMs The number of milliseconds to span the pan operation over.\r\n\t * @param {String=} easing Optional easing method name.\r\n\t */\r\n\tpanTo: function (point, durationMs, easing) {\r\n\t\tif (point !== undefined) {\r\n\t\t\tthis._translate.tween()\r\n\t\t\t\t.properties({\r\n\t\t\t\t\tx: point.x,\r\n\t\t\t\t\ty: point.y,\r\n\t\t\t\t\tz: point.z\r\n\t\t\t\t})\r\n\t\t\t\t.duration(durationMs)\r\n\t\t\t\t.easing(easing)\r\n\t\t\t\t.start();\r\n\t\t}\r\n\r\n\t\treturn this._entity;\r\n\t},\r\n\r\n\t/**\r\n\t * Pan (tween) the camera by the new specified point in\r\n\t * the specified time.\r\n\t * @param {IgePoint3d} point The point describing the co-ordinates to pan by.\r\n\t * @param {Number} durationMs The number of milliseconds to span the pan operation over.\r\n\t * @param {String=} easing Optional easing method name.\r\n\t */\r\n\tpanBy: function (point, durationMs, easing) {\r\n\t\tif (point !== undefined) {\r\n\t\t\tthis._translate.tween()\r\n\t\t\t\t.properties({\r\n\t\t\t\t\tx: point.x + this._translate.x,\r\n\t\t\t\t\ty: point.y + this._translate.y,\r\n\t\t\t\t\tz: point.z + this._translate.z\r\n\t\t\t\t})\r\n\t\t\t\t.duration(durationMs)\r\n\t\t\t\t.easing(easing)\r\n\t\t\t\t.start();\r\n\t\t}\r\n\r\n\t\treturn this._entity;\r\n\t},\r\n\r\n\t/**\r\n\t * Tells the camera to track the movement of the specified\r\n\t * target entity. The camera will center on the entity.\r\n\t * @param {IgeEntity} entity\r\n\t * @param {Number=} smoothing Determines how quickly the camera\r\n\t * will track the target, the higher the number, the slower the\r\n\t * tracking will be.\r\n\t * @param {Boolean=} rounding Sets if the smoothing system is\r\n\t * allowed to use floating point values or not. If enabled then\r\n\t * it will not use floating point values.\r\n\t * @return {*}\r\n\t */\r\n\ttrackTranslate: function (entity, smoothing, rounding) {\r\n\t\tif (entity !== undefined) {\r\n\t\t\tthis.log('Camera on viewport ' + this._entity.id() + ' is now tracking translation target ' + entity.id());\r\n\t\t\tif (rounding !== undefined) {\r\n\t\t\t\tthis._trackTranslateRounding = rounding;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (smoothing !== undefined) {\r\n\t\t\t\tthis._trackTranslateSmoothing = smoothing >= 1  ? smoothing : 0;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis._trackTranslateTarget = entity;\r\n\t\t\treturn this._entity;\r\n\t\t}\r\n\r\n\t\treturn this._trackTranslateTarget;\r\n\t},\r\n\r\n\t/**\r\n\t * Gets / sets the translate tracking smoothing value.\r\n\t * @param {Number=} val\r\n\t * @return {*}\r\n\t */\r\n\ttrackTranslateSmoothing: function (val) {\r\n\t\tif (val !== undefined) {\r\n\t\t\tthis._trackTranslateSmoothing = val;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\treturn this._trackTranslateSmoothing;\r\n\t},\r\n\r\n\t/**\r\n\t * Gets / sets the translate tracking smoothing rounding\r\n\t * either enabled or disabled. When enabled the translate\r\n\t * smoothing value will be rounded so that floating point\r\n\t * values are not used which can help when smoothing on a\r\n\t * scene that has texture smoothing disabled so sub-pixel\r\n\t * rendering doesn't work and objects appear to \"snap\"\r\n\t * into position as the smoothing interpolates.\r\n\t * @param {Boolean=} val\r\n\t * @return {*}\r\n\t */\r\n\ttrackTranslateRounding: function (val) {\r\n\t\tif (val !== undefined) {\r\n\t\t\tthis._trackTranslateRounding = val;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\treturn this._trackTranslateRounding;\r\n\t},\r\n\r\n\t/**\r\n\t * Stops tracking the current tracking target's translation.\r\n\t */\r\n\tunTrackTranslate: function () {\r\n\t\tdelete this._trackTranslateTarget;\r\n\t},\r\n\r\n\t/**\r\n\t * Tells the camera to track the rotation of the specified\r\n\t * target entity.\r\n\t * @param {IgeEntity} entity\r\n\t * @param {Number=} smoothing Determines how quickly the camera\r\n\t * will track the target, the higher the number, the slower the\r\n\t * tracking will be.\r\n\t * @return {*}\r\n\t */\r\n\ttrackRotate: function (entity, smoothing) {\r\n\t\tif (entity !== undefined) {\r\n\t\t\tthis.log('Camera on viewport ' + this._entity.id() + ' is now tracking rotation of target ' + entity.id());\r\n\t\t\tthis._trackRotateSmoothing = smoothing >= 1 ? smoothing : 0;\r\n\t\t\tthis._trackRotateTarget = entity;\r\n\t\t\treturn this._entity;\r\n\t\t}\r\n\r\n\t\treturn this._trackRotateTarget;\r\n\t},\r\n\r\n\t/**\r\n\t * Gets / sets the rotate tracking smoothing value.\r\n\t * @param {Number=} val\r\n\t * @return {*}\r\n\t */\r\n\ttrackRotateSmoothing: function (val) {\r\n\t\tif (val !== undefined) {\r\n\t\t\tthis._trackRotateSmoothing = val;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\treturn this._trackRotateSmoothing;\r\n\t},\r\n\r\n\t/**\r\n\t * Stops tracking the current tracking target.\r\n\t */\r\n\tunTrackRotate: function () {\r\n\t\tdelete this._trackRotateTarget;\r\n\t},\r\n\r\n\t/**\r\n\t * Translates the camera to the center of the specified entity so\r\n\t * that the camera is \"looking at\" the entity.\r\n\t * @param {IgeEntity} entity The entity to look at.\r\n\t * @param {Number=} durationMs If specified, will cause the\r\n\t * camera to tween to the location of the entity rather than\r\n\t * snapping to it instantly.\r\n\t * @param {String=} easing The easing method name to use if\r\n\t * tweening by duration.\r\n\t * @return {*}\r\n\t */\r\n\tlookAt: function (entity, durationMs, easing) {\r\n\t\tif (entity !== undefined) {\r\n\t\t\tentity.updateTransform();\r\n\r\n\t\t\tif (!durationMs) {\r\n\t\t\t\t// Copy the target's world matrix translate data\r\n\t\t\t\tthis._translate.x = Math.floor(entity._worldMatrix.matrix[2]);\r\n\t\t\t\tthis._translate.y = Math.floor(entity._worldMatrix.matrix[5]);\r\n\t\t\t} else {\r\n\t\t\t\tthis._translate.tween()\r\n\t\t\t\t\t.properties({\r\n\t\t\t\t\t\tx: Math.floor(entity._worldMatrix.matrix[2]),\r\n\t\t\t\t\t\ty: Math.floor(entity._worldMatrix.matrix[5]),\r\n\t\t\t\t\t\tz: 0\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.duration(durationMs)\r\n\t\t\t\t\t.easing(easing)\r\n\t\t\t\t\t.start();\r\n\t\t\t}\r\n\r\n\t\t\tthis.updateTransform();\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\tupdate: function (ctx) {\r\n\t\t// Process any behaviours assigned to the camera\r\n\t\tthis._processUpdateBehaviours(ctx);\r\n\t\t\t\t\t\r\n\t\t// Check if we are tracking the translate value of a target\r\n\t\tif (this._trackTranslateTarget) {\r\n\t\t\tvar targetEntity = this._trackTranslateTarget,\r\n\t\t\t\ttargetMatrix = targetEntity._worldMatrix.matrix,\r\n\t\t\t\ttargetX = targetMatrix[2],\r\n\t\t\t\ttargetY = targetMatrix[5],\r\n\t\t\t\tsourceX, sourceY, distX, distY, destinationX, destinationY;\r\n\r\n\t\t\tif (!this._trackTranslateSmoothing) {\r\n\t\t\t\t// Copy the target's world matrix translate data\r\n\t\t\t\tthis.lookAt(this._trackTranslateTarget);\r\n\t\t\t} else {\r\n\t\t\t\t// Ease between the current and target values\r\n\t\t\t\tsourceX = this._translate.x;\r\n\t\t\t\tsourceY = this._translate.y;\r\n\r\n\t\t\t\tdistX = Math.round(targetX - sourceX);\r\n\t\t\t\tdistY = Math.round(targetY - sourceY);\r\n\r\n\t\t\t\tif (this._trackTranslateRounding) {\r\n\t\t\t\t\tdestinationX = this._translate.x + Math.round(distX / this._trackTranslateSmoothing);\r\n\t\t\t\t\tdestinationY = this._translate.y + Math.round(distY / this._trackTranslateSmoothing);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tdestinationX = this._translate.x + distX / this._trackTranslateSmoothing;\r\n\t\t\t\t\tdestinationY = this._translate.y + distY / this._trackTranslateSmoothing;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Check camera Limits\r\n\t\t\t\tif ( this._limit){\r\n\t\r\n\t\t\t\t\tif (destinationX < this._limit.x) {\r\n\t\t\t\t\t\tdestinationX = this._limit.x;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (destinationX > this._limit.x + this._limit.width) {\r\n\t\t\t\t\t\tdestinationX = this._limit.x + this._limit.width;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (destinationY < this._limit.y) {\r\n\t\t\t\t\t\tdestinationY = this._limit.y;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (destinationY > this._limit.y + this._limit.height) {\r\n\t\t\t\t\t\tdestinationY = this._limit.y + this._limit.height;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._translate.x = destinationX;\r\n\t\t\t\tthis._translate.y = destinationY;\r\n\r\n\t\t\t } \r\n\t\t}\r\n\r\n\t\t// Check if we are tracking the rotation values of a target\r\n\t\tif (this._trackRotateTarget) {\r\n\t\t\tvar targetParentRZ = this._trackRotateTarget._parent !== undefined ? this._trackRotateTarget._parent._rotate.z : 0,\r\n\t\t\t\ttargetZ = -(targetParentRZ + this._trackRotateTarget._rotate.z),\r\n\t\t\t\tsourceZ, distZ;\r\n\r\n\t\t\tif (!this._trackRotateSmoothing) {\r\n\t\t\t\t// Copy the target's rotate data\r\n\t\t\t\tthis._rotate.z = targetZ;\r\n\t\t\t} else {\r\n\t\t\t\t// Interpolate between the current and target values\r\n\t\t\t\tsourceZ = this._rotate.z;\r\n\t\t\t\tdistZ = targetZ - sourceZ;\r\n\r\n\t\t\t\tthis._rotate.z += distZ / this._trackRotateSmoothing;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.updateTransform();\r\n\t},\r\n\r\n\t/**\r\n\t * Process operations during the engine tick.\r\n\t * @param {CanvasRenderingContext2D} ctx\r\n\t */\r\n\ttick: function (ctx) {\r\n\t\t// Process any behaviours assigned to the camera\r\n\t\tthis._processTickBehaviours(ctx);\r\n\t\t\r\n\t\t// Updated local transform matrix and then transform the context\r\n\t\tthis._localMatrix.transformRenderingContext(ctx);\r\n\t},\r\n\r\n\t/**\r\n\t * Checks the current transform values against the previous ones. If\r\n\t * any value is different, the appropriate method is called which will\r\n\t * update the transformation matrix accordingly. This version of the\r\n\t * method is specifically designed for cameras!\r\n\t */\r\n\tupdateTransform: function () {\r\n\t\tthis._localMatrix.identity();\r\n\r\n\t\t// On cameras we do the rotation and scaling FIRST\r\n\t\tthis._localMatrix.multiply(this._localMatrix._newRotate(this._rotate.z));\r\n\t\tthis._localMatrix.multiply(this._localMatrix._newScale(this._scale.x, this._scale.y));\r\n\r\n\t\t// 2d translation - cameras are never in iso mode!\r\n\t\tthis._localMatrix.multiply(this._localMatrix._newTranslate(-this._translate.x, -this._translate.y));\r\n\r\n\t\tif (this._parent) {\r\n\t\t\tthis._worldMatrix.copy(this._parent._worldMatrix);\r\n\t\t\tthis._worldMatrix.multiply(this._localMatrix);\r\n\t\t} else {\r\n\t\t\tthis._worldMatrix.copy(this._localMatrix);\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Returns a string containing a code fragment that when\r\n\t * evaluated will reproduce this object's properties via\r\n\t * chained commands. This method will only check for\r\n\t * properties that are directly related to this class.\r\n\t * Other properties are handled by their own class method.\r\n\t * @private\r\n\t * @return {String}\r\n\t */\r\n\t_stringify: function () {\r\n\t\t// Get the properties for all the super-classes\r\n\t\tvar str = IgeEntity.prototype._stringify.call(this), i;\r\n\r\n\t\t// Loop properties and add property assignment code to string\r\n\t\tfor (i in this) {\r\n\t\t\tif (this.hasOwnProperty(i) && this[i] !== undefined) {\r\n\t\t\t\tswitch (i) {\r\n\t\t\t\t\tcase '_trackTranslateTarget':\r\n\t\t\t\t\t\tstr += \".trackTranslate(ige.$('\" + this._trackTranslateTarget.id() + \"'), \" + this.trackTranslateSmoothing() + \")\";\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase '_trackRotateTarget':\r\n\t\t\t\t\t\tstr += \".trackRotate(ige.$('\" + this._trackRotateTarget.id() + \"'), \" + this.trackRotateSmoothing() + \")\";\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn str;\r\n\t}\r\n});\r\n\r\nif (typeof(module) !== 'undefined' && typeof(module.exports) !== 'undefined') { module.exports = IgeCamera; }","/**\r\n * Creates a new viewport.\r\n */\r\nvar IgeViewport = IgeEntity.extend([\r\n\t{extension: IgeUiStyleExtension, overwrite: true},\r\n\t{extension: IgeUiPositionExtension, overwrite: true}\r\n], {\r\n\tclassId: 'IgeViewport',\r\n\tIgeViewport: true,\r\n\r\n\tinit: function (options) {\r\n\t\tvar width, height;\r\n\t\t\r\n\t\tthis._alwaysInView = true;\r\n\t\tIgeEntity.prototype.init.call(this);\r\n\r\n\t\tthis._mouseAlwaysInside = true;\r\n\t\tthis._mousePos = new IgePoint3d(0, 0, 0);\r\n\t\tthis._overflow = '';\r\n\t\tthis._clipping = true;\r\n\t\tthis._bornTime = undefined;\r\n\r\n\t\t// Set default options if not specified\r\n\t\t// TODO: Is this required or even used?\r\n\t\tif (options) {\r\n\t\t\twidth = options.width;\r\n\t\t\theight = options.height;\r\n\t\t\t\r\n\t\t\tif (options && options.scaleToWidth && options.scaleToHeight) {\r\n\t\t\t\t// Store the w/h we want to lock to\r\n\t\t\t\tthis._lockDimension = new IgePoint3d(options.scaleToWidth, options.scaleToHeight, 0);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Setup default objects\r\n\t\tthis._bounds2d = new IgePoint3d(width || ige._bounds2d.x, height || ige._bounds2d.y, 0);\r\n\t\tthis.camera = new IgeCamera(this);\r\n\t\tthis.camera._entity = this;\r\n\t\t//this._drawMouse = true;\r\n\t},\r\n\r\n\t/**\r\n\t * Sets the minimum amount of world in pixels to display in width and height.\r\n\t * When set, if the viewport's geometry is reduced below the minimum width or\r\n\t * height, the viewport's camera is automatically scaled to ensure that the\r\n\t * minimum area remains visible in the viewport.\r\n\t * @param {Integer} width Width in pixels.\r\n\t * @param {Integer} height Height in pixels.\r\n\t * @returns {*}\r\n\t */\r\n\tminimumVisibleArea: function (width, height) {\r\n\t\t// Store the w/h we want to lock to\r\n\t\tthis._lockDimension = new IgePoint3d(width, height, 0);\r\n\t\tif (ige.isClient) {\r\n\t\t\tthis._resizeEvent({});\r\n\t\t}\r\n\t\t\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * Gets / sets the auto-size property. If set to true, the viewport will\r\n\t * automatically resize to fill the entire scene.\r\n\t * @param val\r\n\t * @return {*}\r\n\t */\r\n\tautoSize: function (val) {\r\n\t\tif (typeof(val) !== 'undefined') {\r\n\t\t\tthis._autoSize = val;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\treturn this._autoSize;\r\n\t},\r\n\r\n\t/**\r\n\t * Gets / sets the scene that the viewport will render.\r\n\t * @param {IgeScene2d} scene\r\n\t * @return {*}\r\n\t */\r\n\tscene: function (scene) {\r\n\t\tif (typeof(scene) !== 'undefined') {\r\n\t\t\tthis._scene = scene;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\treturn this._scene;\r\n\t},\r\n\r\n\t/**\r\n\t * Returns the viewport's mouse position.\r\n\t * @return {IgePoint3d}\r\n\t */\r\n\tmousePos: function () {\r\n\t\t// Viewport mouse position is calculated and assigned in the\r\n\t\t// IgeInputComponent class.\r\n\t\treturn this._mousePos.clone();\r\n\t},\r\n\t\r\n\tmousePosWorld: function () {\r\n\t\treturn this._transformPoint(this._mousePos.clone());\r\n\t},\r\n\r\n\t/**\r\n\t * Gets the current rectangular area that the viewport is \"looking at\"\r\n\t * in the world. The co-ordinates are in world space.\r\n\t * @returns {IgeRect}\r\n\t */\r\n\tviewArea: function () {\r\n\t\tvar aabb = this.aabb(),\r\n\t\t\tcamTrans = this.camera._translate,\r\n\t\t\tcamScale = this.camera._scale,\r\n\t\t\twidth = aabb.width * (1 / camScale.x),\r\n\t\t\theight = aabb.height * (1 / camScale.y);\r\n\t\t\r\n\t\treturn new IgeRect(\r\n\t\t\t(camTrans.x - width / 2),\r\n\t\t\t(camTrans.y - height / 2),\r\n\t\t\twidth,\r\n\t\t\theight\r\n\t\t);\r\n\t},\r\n\r\n\t/**\r\n\t * Processes the updates before the render tick is called.\r\n\t * @param ctx\r\n\t */\r\n\tupdate: function (ctx, tickDelta) {\r\n\t\t// Check if we have a scene attached to this viewport\r\n\t\tif (this._scene) {\r\n\t\t\t// Store the viewport camera in the main ige so that\r\n\t\t\t// down the scenegraph we can choose to negate the camera\r\n\t\t\t// transform effects\r\n\t\t\tige._currentCamera = this.camera;\r\n\t\t\tige._currentViewport = this;\r\n\r\n\t\t\tthis._scene._parent = this;\r\n\r\n\t\t\tthis.camera.update(ctx, tickDelta);\r\n\t\t\tIgeEntity.prototype.update.call(this, ctx, tickDelta);\r\n\t\t\t\r\n\t\t\tif (this._scene.newFrame()) {\r\n\t\t\t\tthis._scene.update(ctx, tickDelta);\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Processes the actions required each render frame.\r\n\t */\r\n\ttick: function (ctx, scene) {\r\n\t\t// Check if we have a scene attached to this viewport\r\n\t\tif (this._scene) {\r\n\t\t\t// Store the viewport camera in the main ige so that\r\n\t\t\t// down the scenegraph we can choose to negate the camera\r\n\t\t\t// transform effects\r\n\t\t\tige._currentCamera = this.camera;\r\n\t\t\tige._currentViewport = this;\r\n\r\n\t\t\tthis._scene._parent = this;\r\n\r\n\t\t\t// Render our scene data\r\n\t\t\t//ctx.globalAlpha = ctx.globalAlpha * this._parent._opacity * this._opacity;\r\n\t\t\tIgeEntity.prototype.tick.call(this, ctx);\r\n\r\n\t\t\t// Translate to the top-left of the viewport\r\n\t\t\tctx.translate(\r\n\t\t\t\t-(this._bounds2d.x * this._origin.x) | 0,\r\n\t\t\t\t-(this._bounds2d.y * this._origin.y) | 0\r\n\t\t\t);\r\n\r\n\t\t\t// Clear the rectangle area of the viewport\r\n\t\t\tctx.clearRect(0, 0, this._bounds2d.x, this._bounds2d.y);\r\n\r\n\t\t\t// Clip the context so we only draw \"inside\" the viewport area\r\n\t\t\tif (this._clipping || this._borderColor) {\r\n\t\t\t\tctx.beginPath();\r\n\t\t\t\tctx.rect(0, 0, this._bounds2d.x / ige._scale.x, this._bounds2d.y / ige._scale.x);\r\n\r\n\t\t\t\t// Paint a border if required\r\n\t\t\t\tif (this._borderColor) {\r\n\t\t\t\t\tctx.strokeStyle = this._borderColor;\r\n\t\t\t\t\tctx.stroke();\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif (this._clipping) {\r\n\t\t\t\t\tctx.clip();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Translate back to the center of the viewport\r\n\t\t\tctx.translate(((this._bounds2d.x / 2) | 0) + ige._translate.x, ((this._bounds2d.y / 2) | 0) + ige._translate.y);\r\n\t\t\t/*ctx.translate(ige._translate.x, ige._translate.y);*/\r\n\t\t\tif (ige._scale.x !== 1 || ige._scale.y !== 1) {\r\n\t\t\t\tctx.scale(ige._scale.x, ige._scale.y);\r\n\t\t\t}\r\n\r\n\t\t\t// Transform the context to the center of the viewport\r\n\t\t\t// by processing the viewport's camera tick method\r\n\t\t\tthis.camera.tick(ctx);\r\n\r\n\t\t\t// Draw the scene\r\n\t\t\tctx.save();\r\n\t\t\t\tthis._scene.tick(ctx);\r\n\t\t\tctx.restore();\r\n\r\n\t\t\t// Check if we should draw guides\r\n\t\t\tif (this._drawGuides && ctx === ige._ctx) {\r\n\t\t\t\tctx.save();\r\n\t\t\t\tctx.translate(-this._translate.x, -this._translate.y);\r\n\t\t\t\tthis.paintGuides(ctx);\r\n\t\t\t\tctx.restore();\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t// Check if we should draw bounds on this viewport\r\n\t\t\t// (usually for debug purposes)\r\n\t\t\tif (this._drawBounds && ctx === ige._ctx) {\r\n\t\t\t\t// Traverse the scenegraph and draw axis-aligned\r\n\t\t\t\t// bounding boxes for every object\r\n\t\t\t\tctx.save();\r\n\t\t\t\tctx.translate(-this._translate.x, -this._translate.y);\r\n\t\t\t\tthis.paintAabbs(ctx, this._scene, 0);\r\n\t\t\t\tctx.restore();\r\n\t\t\t}\r\n\r\n\t\t\t// Check if we should draw the mouse position on this\r\n\t\t\t// viewport (usually for debug purposes)\r\n\t\t\tif (this._drawMouse && ctx === ige._ctx) {\r\n\t\t\t\tctx.save();\r\n\t\t\t\tvar mp = this.mousePos(),\r\n\t\t\t\t\ttext,\r\n\t\t\t\t\tmx,\r\n\t\t\t\t\tmy,\r\n\t\t\t\t\ttextMeasurement;\r\n\r\n\t\t\t\t// Re-scale the context to ensure that output is always 1:1\r\n\t\t\t\tctx.scale(1 / this.camera._scale.x, 1 / this.camera._scale.y);\r\n\r\n\t\t\t\t// Work out the re-scale mouse position\r\n\t\t\t\tmx = Math.floor(mp.x * this.camera._scale.x);\r\n\t\t\t\tmy = Math.floor(mp.y * this.camera._scale.y);\r\n\r\n\t\t\t\tctx.fillStyle = '#fc00ff';\r\n\t\t\t\tctx.fillRect(mx - 5, my - 5, 10, 10);\r\n\r\n\t\t\t\ttext = this.id() + ' X: ' + mx + ', Y: ' + my;\r\n\t\t\t\ttextMeasurement = ctx.measureText(text);\r\n\t\t\t\tctx.fillStyle = 'rgba(0, 0, 0, 0.8)';\r\n\t\t\t\tctx.fillRect(Math.floor(mx - textMeasurement.width / 2 - 5), Math.floor(my - 25), Math.floor(textMeasurement.width + 10), 14);\r\n\t\t\t\tctx.fillStyle = '#ffffff';\r\n\t\t\t\tctx.fillText(text, mx - textMeasurement.width / 2, my - 15);\r\n\t\t\t\tctx.restore();\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (this._drawViewArea) {\r\n\t\t\t\tctx.save();\r\n\t\t\t\t\tvar va = this.viewArea();\r\n\t\t\t\t\tctx.rect(va.x, va.y, va.width, va.height);\r\n\t\t\t\t\tctx.stroke();\r\n\t\t\t\tctx.restore();\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Returns the screen position of the viewport as an IgePoint3d where x is the\r\n\t * \"left\" and y is the \"top\", useful for positioning HTML elements at the\r\n\t * screen location of an IGE entity. The returned values indicate the center\r\n\t * of the viewport on the screen.\r\n\t * \r\n\t * This method assumes that the top-left\r\n\t * of the main canvas element is at 0, 0. If not you can adjust the values\r\n\t * yourself to allow for offset.\r\n\t * @example #Get the screen position of the entity\r\n\t *     var screenPos = entity.screenPosition();\r\n\t * @return {IgePoint3d} The screen position of the entity.\r\n\t */\r\n\tscreenPosition: function () {\r\n\t\treturn new IgePoint3d(\r\n\t\t\tMath.floor(this._worldMatrix.matrix[2] + ige._bounds2d.x2),\r\n\t\t\tMath.floor(this._worldMatrix.matrix[5] + ige._bounds2d.y2),\r\n\t\t\t0\r\n\t\t);\r\n\t},\r\n\t\r\n\tdrawViewArea: function (val) {\r\n\t\tif (val !== undefined) {\r\n\t\t\tthis._drawViewArea = val;\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\treturn this._drawViewArea;\r\n\t},\r\n\r\n\tdrawBoundsLimitId: function (id) {\r\n\t\tif (id !== undefined) {\r\n\t\t\tthis._drawBoundsLimitId = id;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\treturn this._drawBoundsLimitId;\r\n\t},\r\n\r\n\tdrawBoundsLimitCategory: function (category) {\r\n\t\tif (category !== undefined) {\r\n\t\t\tthis._drawBoundsLimitCategory = category;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\treturn this._drawBoundsLimitCategory;\r\n\t},\r\n\t\r\n\tdrawCompositeBounds: function (val) {\r\n\t\tif (val !== undefined) {\r\n\t\t\tthis._drawCompositeBounds = val;\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\treturn this._drawCompositeBounds;\r\n\t},\r\n\t\r\n\tdrawGuides: function (val) {\r\n\t\tif (val !== undefined) {\r\n\t\t\tthis._drawGuides = val;\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\treturn this._drawGuides;\r\n\t},\r\n\t\r\n\tpaintGuides: function (ctx) {\r\n\t\tvar geom = ige._bounds2d;\r\n\t\t\r\n\t\t// Check draw-guides setting\r\n\t\tif (this._drawGuides) {\r\n\t\t\tctx.strokeStyle = '#ffffff';\r\n\t\t\t\r\n\t\t\tctx.translate(0.5, 0.5);\r\n\t\t\t\r\n\t\t\t// Draw guide lines in the center\r\n\t\t\tctx.beginPath();\r\n\t\t\tctx.moveTo(0, -geom.y2);\r\n\t\t\tctx.lineTo(0, geom.y);\r\n\t\t\tctx.stroke();\r\n\t\t\t\r\n\t\t\tctx.beginPath();\r\n\t\t\tctx.moveTo(-geom.x2, 0);\r\n\t\t\tctx.lineTo(geom.x, 0);\r\n\t\t\tctx.stroke();\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Draws the bounding data for each entity in the scenegraph.\r\n\t * @param ctx\r\n\t * @param rootObject\r\n\t * @param index\r\n\t */\r\n\tpaintAabbs: function (ctx, rootObject, index) {\r\n\t\tvar arr = rootObject._children,\r\n\t\t\tarrCount,\r\n\t\t\tobj,\r\n\t\t\taabb,\r\n\t\t\taabbC,\r\n\t\t\tbounds3dPoly,\r\n\t\t\tga,\r\n\t\t\tr3d,\r\n\t\t\txl1, xl2, xl3, xl4, xl5, xl6,\r\n\t\t\tbf1, bf2, bf3, bf4,\r\n\t\t\ttf1, tf2, tf3, tf4;\r\n\r\n\t\tif (arr) {\r\n\t\t\tarrCount = arr.length;\r\n\r\n\t\t\twhile (arrCount--) {\r\n\t\t\t\tobj = arr[arrCount];\r\n\t\t\t\tindex++;\r\n\r\n\t\t\t\tif (obj._shouldRender !== false) {\r\n\t\t\t\t\tif (obj._classId !== 'IgeScene2d' && (!this._drawBoundsLimitId && !this._drawBoundsLimitCategory) || ((this._drawBoundsLimitId && (this._drawBoundsLimitId instanceof Array ? this._drawBoundsLimitId.indexOf(obj.id()) > -1 : this._drawBoundsLimitId === obj.id())) || (this._drawBoundsLimitCategory && this._drawBoundsLimitCategory === obj.category()))) {\r\n\t\t\t\t\t\tif (typeof(obj.aabb) === 'function') {\r\n\t\t\t\t\t\t\t// Grab the AABB and then draw it\r\n\t\t\t\t\t\t\taabb = obj.aabb();\r\n\r\n\t\t\t\t\t\t\tif (this._drawCompositeBounds && obj._compositeCache) {\r\n\t\t\t\t\t\t\t\taabbC = obj.compositeAabb();\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t// Draw composite bounds\r\n\t\t\t\t\t\t\t\tctx.strokeStyle = '#ff0000';\r\n\t\t\t\t\t\t\t\tctx.strokeRect(aabbC.x, aabbC.y, aabbC.width, aabbC.height);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tif (aabb) {\r\n\t\t\t\t\t\t\t\tif (obj._drawBounds || obj._drawBounds === undefined) {\r\n\t\t\t\t\t\t\t\t\t//if (!obj._parent || (obj._parent && obj._parent._mountMode !== 1)) {\r\n\t\t\t\t\t\t\t\t\t\t// Draw a rect around the bounds of the object transformed in world space\r\n\t\t\t\t\t\t\t\t\t\t/*ctx.save();\r\n\t\t\t\t\t\t\t\t\t\t\tobj._worldMatrix.transformRenderingContext(ctx);\r\n\t\t\t\t\t\t\t\t\t\t\tctx.strokeStyle = '#9700ae';\r\n\t\t\t\t\t\t\t\t\t\t\tctx.strokeRect(-obj._bounds2d.x2, -obj._bounds2d.y2, obj._bounds2d.x, obj._bounds2d.y);\r\n\t\t\t\t\t\t\t\t\t\tctx.restore();*/\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t// Draw individual bounds\r\n\t\t\t\t\t\t\t\t\t\tctx.strokeStyle = '#00deff';\r\n\t\t\t\t\t\t\t\t\t\tctx.strokeRect(aabb.x, aabb.y, aabb.width, aabb.height);\r\n\t\t\t\t\t\t\t\t\t//}\r\n\r\n\t\t\t\t\t\t\t\t\t// Check if the object is mounted to an isometric mount\r\n\t\t\t\t\t\t\t\t\tif (obj._parent && obj._parent._mountMode === 1) {\r\n\t\t\t\t\t\t\t\t\t\tbounds3dPoly = obj.bounds3dPolygon().aabb();\r\n\t\t\t\t\t\t\t\t\t\tctx.save();\r\n\t\t\t\t\t\t\t\t\t\t\tctx.strokeStyle = '#0068b8';\r\n\t\t\t\t\t\t\t\t\t\t\tctx.strokeRect(bounds3dPoly.x, bounds3dPoly.y, bounds3dPoly.width, bounds3dPoly.height);\r\n\t\t\t\t\t\t\t\t\t\tctx.restore();\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\tctx.save();\r\n\t\t\t\t\t\t\t\t\t\t\tctx.translate(\r\n\t\t\t\t\t\t\t\t\t\t\t\tbounds3dPoly.x + bounds3dPoly.width / 2,\r\n\t\t\t\t\t\t\t\t\t\t\t\tbounds3dPoly.y + bounds3dPoly.height / 2\r\n\t\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\t\t//obj._transformContext(ctx);\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t// Calculate the 3d bounds data\r\n\t\t\t\t\t\t\t\t\t\t\tr3d = obj._bounds3d;\r\n\t\t\t\t\t\t\t\t\t\t\txl1 = new IgePoint3d(-(r3d.x / 2), 0, 0).toIso();\r\n\t\t\t\t\t\t\t\t\t\t\txl2 = new IgePoint3d(+(r3d.x / 2), 0, 0).toIso();\r\n\t\t\t\t\t\t\t\t\t\t\txl3 = new IgePoint3d(0, -(r3d.y / 2), 0).toIso();\r\n\t\t\t\t\t\t\t\t\t\t\txl4 = new IgePoint3d(0, +(r3d.y / 2), 0).toIso();\r\n\t\t\t\t\t\t\t\t\t\t\txl5 = new IgePoint3d(0, 0, -(r3d.z / 2)).toIso();\r\n\t\t\t\t\t\t\t\t\t\t\txl6 = new IgePoint3d(0, 0, +(r3d.z / 2)).toIso();\r\n\t\t\t\t\t\t\t\t\t\t\t// Bottom face\r\n\t\t\t\t\t\t\t\t\t\t\tbf1 = new IgePoint3d(-(r3d.x / 2), -(r3d.y / 2),  -(r3d.z / 2)).toIso();\r\n\t\t\t\t\t\t\t\t\t\t\tbf2 = new IgePoint3d(+(r3d.x / 2), -(r3d.y / 2),  -(r3d.z / 2)).toIso();\r\n\t\t\t\t\t\t\t\t\t\t\tbf3 = new IgePoint3d(+(r3d.x / 2), +(r3d.y / 2),  -(r3d.z / 2)).toIso();\r\n\t\t\t\t\t\t\t\t\t\t\tbf4 = new IgePoint3d(-(r3d.x / 2), +(r3d.y / 2),  -(r3d.z / 2)).toIso();\r\n\t\t\t\t\t\t\t\t\t\t\t// Top face\r\n\t\t\t\t\t\t\t\t\t\t\ttf1 = new IgePoint3d(-(r3d.x / 2), -(r3d.y / 2),  (r3d.z / 2)).toIso();\r\n\t\t\t\t\t\t\t\t\t\t\ttf2 = new IgePoint3d(+(r3d.x / 2), -(r3d.y / 2),  (r3d.z / 2)).toIso();\r\n\t\t\t\t\t\t\t\t\t\t\ttf3 = new IgePoint3d(+(r3d.x / 2), +(r3d.y / 2),  (r3d.z / 2)).toIso();\r\n\t\t\t\t\t\t\t\t\t\t\ttf4 = new IgePoint3d(-(r3d.x / 2), +(r3d.y / 2),  (r3d.z / 2)).toIso();\r\n\r\n\t\t\t\t\t\t\t\t\t\t\tga = ctx.globalAlpha;\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t// Axis lines\r\n\t\t\t\t\t\t\t\t\t\t\tctx.globalAlpha = 1;\r\n\t\t\t\t\t\t\t\t\t\t\tctx.strokeStyle = '#ff0000';\r\n\t\t\t\t\t\t\t\t\t\t\tctx.beginPath();\r\n\t\t\t\t\t\t\t\t\t\t\tctx.moveTo(xl1.x, xl1.y);\r\n\t\t\t\t\t\t\t\t\t\t\tctx.lineTo(xl2.x, xl2.y);\r\n\t\t\t\t\t\t\t\t\t\t\tctx.stroke();\r\n\t\t\t\t\t\t\t\t\t\t\tctx.strokeStyle = '#00ff00';\r\n\t\t\t\t\t\t\t\t\t\t\tctx.beginPath();\r\n\t\t\t\t\t\t\t\t\t\t\tctx.moveTo(xl3.x, xl3.y);\r\n\t\t\t\t\t\t\t\t\t\t\tctx.lineTo(xl4.x, xl4.y);\r\n\t\t\t\t\t\t\t\t\t\t\tctx.stroke();\r\n\t\t\t\t\t\t\t\t\t\t\tctx.strokeStyle = '#fffc00';\r\n\t\t\t\t\t\t\t\t\t\t\tctx.beginPath();\r\n\t\t\t\t\t\t\t\t\t\t\tctx.moveTo(xl5.x, xl5.y);\r\n\t\t\t\t\t\t\t\t\t\t\tctx.lineTo(xl6.x, xl6.y);\r\n\t\t\t\t\t\t\t\t\t\t\tctx.stroke();\r\n\r\n\t\t\t\t\t\t\t\t\t\t\tctx.strokeStyle = '#a200ff';\r\n\r\n\t\t\t\t\t\t\t\t\t\t\tif (obj._highlight) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tctx.globalAlpha = 0.9;\r\n\t\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\t\tctx.globalAlpha = 0.6;\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t// Left face\r\n\t\t\t\t\t\t\t\t\t\t\tctx.fillStyle = '#545454';\r\n\t\t\t\t\t\t\t\t\t\t\tctx.beginPath();\r\n\t\t\t\t\t\t\t\t\t\t\tctx.moveTo(bf3.x, bf3.y);\r\n\t\t\t\t\t\t\t\t\t\t\tctx.lineTo(bf4.x, bf4.y);\r\n\t\t\t\t\t\t\t\t\t\t\tctx.lineTo(tf4.x, tf4.y);\r\n\t\t\t\t\t\t\t\t\t\t\tctx.lineTo(tf3.x, tf3.y);\r\n\t\t\t\t\t\t\t\t\t\t\tctx.lineTo(bf3.x, bf3.y);\r\n\t\t\t\t\t\t\t\t\t\t\tctx.fill();\r\n\t\t\t\t\t\t\t\t\t\t\tctx.stroke();\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t// Right face\r\n\t\t\t\t\t\t\t\t\t\t\tctx.fillStyle = '#282828';\r\n\t\t\t\t\t\t\t\t\t\t\tctx.beginPath();\r\n\t\t\t\t\t\t\t\t\t\t\tctx.moveTo(bf3.x, bf3.y);\r\n\t\t\t\t\t\t\t\t\t\t\tctx.lineTo(bf2.x, bf2.y);\r\n\t\t\t\t\t\t\t\t\t\t\tctx.lineTo(tf2.x, tf2.y);\r\n\t\t\t\t\t\t\t\t\t\t\tctx.lineTo(tf3.x, tf3.y);\r\n\t\t\t\t\t\t\t\t\t\t\tctx.lineTo(bf3.x, bf3.y);\r\n\t\t\t\t\t\t\t\t\t\t\tctx.fill();\r\n\t\t\t\t\t\t\t\t\t\t\tctx.stroke();\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t// Top face\r\n\t\t\t\t\t\t\t\t\t\t\tctx.fillStyle = '#676767';\r\n\t\t\t\t\t\t\t\t\t\t\tctx.beginPath();\r\n\t\t\t\t\t\t\t\t\t\t\tctx.moveTo(tf1.x, tf1.y);\r\n\t\t\t\t\t\t\t\t\t\t\tctx.lineTo(tf2.x, tf2.y);\r\n\t\t\t\t\t\t\t\t\t\t\tctx.lineTo(tf3.x, tf3.y);\r\n\t\t\t\t\t\t\t\t\t\t\tctx.lineTo(tf4.x, tf4.y);\r\n\t\t\t\t\t\t\t\t\t\t\tctx.lineTo(tf1.x, tf1.y);\r\n\t\t\t\t\t\t\t\t\t\t\tctx.fill();\r\n\t\t\t\t\t\t\t\t\t\t\tctx.stroke();\r\n\r\n\t\t\t\t\t\t\t\t\t\t\tctx.globalAlpha = ga;\r\n\t\t\t\t\t\t\t\t\t\tctx.restore();\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\tif (this._drawBoundsData  && (obj._drawBounds || obj._drawBoundsData === undefined)) {\r\n\t\t\t\t\t\t\t\t\tctx.globalAlpha = 1;\r\n\t\t\t\t\t\t\t\t\tctx.fillStyle = '#f6ff00';\r\n\t\t\t\t\t\t\t\t\tctx.fillText('ID: ' + obj.id() + ' ' + '(' + obj.classId() + ') ' + obj.layer() + ':' + obj.depth().toFixed(0), aabb.x + aabb.width + 3, aabb.y + 10);\r\n\t\t\t\t\t\t\t\t\tctx.fillText('X: ' + obj._translate.x.toFixed(2) + ', ' + 'Y: ' + obj._translate.y.toFixed(2) + ', ' + 'Z: ' + obj._translate.z.toFixed(2), aabb.x + aabb.width + 3, aabb.y + 20);\r\n\t\t\t\t\t\t\t\t\tctx.fillText('Num Children: ' + obj._children.length, aabb.x + aabb.width + 3, aabb.y + 40);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis.paintAabbs(ctx, obj, index);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Handles screen resize events.\r\n\t * @param event\r\n\t * @private\r\n\t */\r\n\t_resizeEvent: function (event) {\r\n\t\tif (this._autoSize && this._parent) {\r\n\t\t\tthis._bounds2d = this._parent._bounds2d.clone();\r\n\t\t}\r\n\r\n\t\tthis._updateUiPosition();\r\n\r\n\t\t// Resize the scene\r\n\t\tif (this._scene) {\r\n\t\t\tthis._scene._resizeEvent(event);\r\n\t\t}\r\n\t\t\r\n\t\t// Process locked dimension scaling\r\n\t\tif (this._lockDimension) {\r\n\t\t\t// Calculate the new camera scale\r\n\t\t\tvar ratio = 1,\r\n\t\t\t\ttmpX,\r\n\t\t\t\ttmpY;\r\n\t\t\t\r\n\t\t\tif (this._bounds2d.x > this._lockDimension.x && this._bounds2d.y > this._lockDimension.y) {\r\n\t\t\t\t// Scale using lowest ratio\r\n\t\t\t\ttmpX = this._bounds2d.x / this._lockDimension.x;\r\n\t\t\t\ttmpY = this._bounds2d.y / this._lockDimension.y;\r\n\t\t\t\t\r\n\t\t\t\tratio = tmpX < tmpY ? tmpX : tmpY;\r\n\t\t\t} else {\r\n\t\t\t\tif (this._bounds2d.x > this._lockDimension.x && this._bounds2d.y < this._lockDimension.y) {\r\n\t\t\t\t\t// Scale out to show height\r\n\t\t\t\t\tratio = this._bounds2d.y / this._lockDimension.y;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif (this._bounds2d.x < this._lockDimension.x && this._bounds2d.y > this._lockDimension.y) {\r\n\t\t\t\t\t// Scale out to show width\r\n\t\t\t\t\tratio = this._bounds2d.x / this._lockDimension.x;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif (this._bounds2d.x < this._lockDimension.x && this._bounds2d.y < this._lockDimension.y) {\r\n\t\t\t\t\t// Scale using lowest ratio\r\n\t\t\t\t\ttmpX = this._bounds2d.x / this._lockDimension.x;\r\n\t\t\t\t\ttmpY = this._bounds2d.y / this._lockDimension.y;\r\n\t\t\t\t\t\r\n\t\t\t\t\tratio = tmpX < tmpY ? tmpX : tmpY;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis.camera.scaleTo(ratio, ratio, ratio);\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Returns a string containing a code fragment that when\r\n\t * evaluated will reproduce this object's properties via\r\n\t * chained commands. This method will only check for\r\n\t * properties that are directly related to this class.\r\n\t * Other properties are handled by their own class method.\r\n\t * @return {String}\r\n\t */\r\n\t_stringify: function () {\r\n\t\t// Get the properties for all the super-classes\r\n\t\tvar str = IgeEntity.prototype._stringify.call(this), i;\r\n\r\n\t\t// Loop properties and add property assignment code to string\r\n\t\tfor (i in this) {\r\n\t\t\tif (this.hasOwnProperty(i) && this[i] !== undefined) {\r\n\t\t\t\tswitch (i) {\r\n\t\t\t\t\tcase '_autoSize':\r\n\t\t\t\t\t\tstr += \".autoSize(\" + this._autoSize + \")\";\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase '_scene':\r\n\t\t\t\t\t\tstr += \".scene(ige.$('\" + this.scene().id() + \"'))\";\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn str;\r\n\t}\r\n});\r\n\r\nif (typeof(module) !== 'undefined' && typeof(module.exports) !== 'undefined') { module.exports = IgeViewport; }","/**\r\n * Creates a new 2d scene.\r\n */\r\nvar IgeScene2d = IgeEntity.extend({\r\n\tclassId: 'IgeScene2d',\r\n\r\n\tinit: function () {\r\n\t\tthis._mouseAlwaysInside = true;\r\n\t\tthis._alwaysInView = true;\r\n\t\tIgeEntity.prototype.init.call(this);\r\n\r\n\t\tthis._shouldRender = true;\r\n\t\tthis._autoSize = true;\r\n\r\n\t\t// Set the geometry of the scene to the main canvas\r\n\t\t// width / height - used when positioning UI elements\r\n\t\tthis._bounds2d.x = ige._bounds2d.x;\r\n\t\tthis._bounds2d.y = ige._bounds2d.y;\r\n\t\t\r\n\t\tthis.streamSections(['transform', 'ignoreCamera']);\r\n\t},\r\n\r\n\t/**\r\n\t * Gets / sets the stream room id. If set, any streaming entities that\r\n\t * are mounted to this scene will only sync with clients that have been\r\n\t * assigned to this room id.\r\n\t * \r\n\t * @param {String} id The id of the room. \r\n\t * @returns {*}\r\n\t */\r\n\tstreamRoomId: function (id) {\r\n\t\tif (id !== undefined) {\r\n\t\t\tthis._streamRoomId = id;\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\treturn this._streamRoomId;\r\n\t},\r\n\r\n\t/**\r\n\t * Overrides the default entity stream sections to also stream important\r\n\t * data about scenes to the client.\r\n\t * @param sectionId\r\n\t * @param data\r\n\t * @returns {*}\r\n\t */\r\n\tstreamSectionData: function (sectionId, data) {\r\n\t\tswitch (sectionId) {\r\n\t\t\tcase 'ignoreCamera':\r\n\t\t\t\tif (data !== undefined) {\r\n\t\t\t\t\t// Setter\r\n\t\t\t\t\tif (data === 'false') {\r\n\t\t\t\t\t\tthis.ignoreCamera(false);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.ignoreCamera(true);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// Getter\r\n\t\t\t\t\treturn String(this._ignoreCamera);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t\r\n\t\t\tdefault:\r\n\t\t\t\tIgeEntity.prototype.streamSectionData.call(this, sectionId, data);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Gets / sets the auto-size property. If set to true, the scene will\r\n\t * automatically resize to the engine's canvas geometry.\r\n\t * @param {Boolean=} val If true, will autosize the scene to match the\r\n\t * main canvas geometry. This is enabled by default and is unlikely to\r\n\t * help you if you switch it off.\r\n\t * @return {*}\r\n\t */\r\n\tautoSize: function (val) {\r\n\t\tif (typeof(val) !== 'undefined') {\r\n\t\t\tthis._autoSize = val;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\treturn this._autoSize;\r\n\t},\r\n\r\n\t/**\r\n\t * Gets / sets the _shouldRender property. If set to true, the scene's child\r\n\t * object's tick methods will be called.\r\n\t * @param {Boolean} val If set to false, no child entities will be rendered.\r\n\t * @return {Boolean}\r\n\t */\r\n\tshouldRender: function (val) {\r\n\t\tif (val !== undefined) {\r\n\t\t\tthis._shouldRender = val;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\treturn this._shouldRender;\r\n\t},\r\n\r\n\t/**\r\n\t * Gets / sets the flag that determines if the scene will ignore camera\r\n\t * transform values allowing the scene to remain static on screen\r\n\t * regardless of the camera transform.\r\n\t * @param {Boolean=} val True to ignore, false to not ignore.\r\n\t * @return {*}\r\n\t */\r\n\tignoreCamera: function (val) {\r\n\t\tif (val !== undefined) {\r\n\t\t\tthis._ignoreCamera = val;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\treturn this._ignoreCamera;\r\n\t},\r\n\t\r\n\tupdate: function (ctx, tickDelta) {\r\n\t\tif (this._ignoreCamera) {\r\n\t\t\t// Translate the scene so it is always center of the camera\r\n\t\t\tvar cam = ige._currentCamera;\r\n\t\t\tthis.translateTo(cam._translate.x, cam._translate.y, cam._translate.z);\r\n\t\t\tthis.scaleTo(1 / cam._scale.x, 1 / cam._scale.y, 1 / cam._scale.z);\r\n\t\t\tthis.rotateTo(-cam._rotate.x, -cam._rotate.y, -cam._rotate.z);\r\n\t\t\t//this._localMatrix.multiply(ige._currentCamera._worldMatrix.getInverse());\r\n\t\t}\r\n\t\t\r\n\t\tIgeEntity.prototype.update.call(this, ctx, tickDelta);\r\n\t},\r\n\r\n\t/**\r\n\t * Processes the actions required each render frame.\r\n\t * @param {CanvasRenderingContext2D} ctx The canvas context to render to.\r\n\t */\r\n\ttick: function (ctx) {\r\n\t\tif (this._shouldRender) {\r\n\t\t\tIgeEntity.prototype.tick.call(this, ctx);\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Handles screen resize events.\r\n\t * @param event\r\n\t * @private\r\n\t */\r\n\t_resizeEvent: function (event) {\r\n\t\t// Set width / height of scene to match main ige (SCENES ARE ALWAYS THE FULL IGE SIZE!!)\r\n\t\tif (this._autoSize) {\r\n\t\t\tthis._bounds2d = ige._bounds2d.clone();\r\n\t\t}\r\n\r\n\t\t// Resize any children\r\n\t\tvar arr = this._children,\r\n\t\t\tarrCount = arr.length;\r\n\r\n\t\twhile (arrCount--) {\r\n\t\t\tarr[arrCount]._resizeEvent(event);\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Returns a string containing a code fragment that when\r\n\t * evaluated will reproduce this object's properties via\r\n\t * chained commands. This method will only check for\r\n\t * properties that are directly related to this class.\r\n\t * Other properties are handled by their own class method.\r\n\t * @return {String}\r\n\t */\r\n\t_stringify: function () {\r\n\t\t// Get the properties for all the super-classes\r\n\t\tvar str = IgeEntity.prototype._stringify.call(this), i;\r\n\r\n\t\t// Loop properties and add property assignment code to string\r\n\t\tfor (i in this) {\r\n\t\t\tif (this.hasOwnProperty(i) && this[i] !== undefined) {\r\n\t\t\t\tswitch (i) {\r\n\t\t\t\t\tcase '_shouldRender':\r\n\t\t\t\t\t\tstr += \".shouldRender(\" + this.shouldRender() + \")\";\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase '_autoSize':\r\n\t\t\t\t\t\tstr += \".autoSize(\" + this.autoSize() + \")\";\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn str;\r\n\t}\r\n});\r\n\r\nif (typeof(module) !== 'undefined' && typeof(module.exports) !== 'undefined') { module.exports = IgeScene2d; }","var IgeQuest = IgeEventingClass.extend({\r\n\tclassId: 'IgeQuest',\r\n\r\n\tinit: function (questDefinition, completeCallback) {\r\n\t\tthis._linear = false;\r\n\t\tthis._items = [];\r\n\r\n\t\tthis._itemCount = 0;\r\n\t\tthis._eventCount = 0;\r\n\t\tthis._itemCompleteCount = 0;\r\n\t\tthis._eventCompleteCount = 0;\r\n\r\n\t\tthis._started = false;\r\n\t\tthis._isComplete = false;\r\n\r\n\t\tif (questDefinition !== undefined) {\r\n\t\t\tthis.items(questDefinition);\r\n\t\t}\r\n\r\n\t\tif (completeCallback !== undefined) {\r\n\t\t\tthis._completeCallback = completeCallback;\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Gets / sets the callback method that will fire when\r\n\t * the quest has been completed.\r\n\t * @param callback\r\n\t * @return {*}\r\n\t */\r\n\tcomplete: function (callback) {\r\n\t\tif (callback !== undefined) {\r\n\t\t\tthis._completeCallback = callback;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\treturn this._completeCallback;\r\n\t},\r\n\r\n\t/**\r\n\t * Gets / sets the flag that determines if the quest\r\n\t * has been completed successfully or not.\r\n\t * @param val\r\n\t * @return {*}\r\n\t */\r\n\tisComplete: function (val) {\r\n\t\tif (val !== undefined) {\r\n\t\t\tthis._isComplete = val;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\treturn this._isComplete;\r\n\t},\r\n\r\n\t/**\r\n\t * Gets / sets the flag that determines if the quest items\r\n\t * need to be completed in order (true) or if they can be\r\n\t * completed in any order (false). Default is false.\r\n\t * @param val\r\n\t * @return {*}\r\n\t */\r\n\tlinear: function (val) {\r\n\t\tif (val !== undefined) {\r\n\t\t\tthis._linear = val;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\treturn this._linear;\r\n\t},\r\n\r\n\t/**\r\n\t * Gets / sets the items array containing the quest item\r\n\t * definition objects.\r\n\t * @param val\r\n\t * @return {*}\r\n\t */\r\n\titems: function (val) {\r\n\t\tif (val !== undefined) {\r\n\t\t\tthis._items = val;\r\n\r\n\t\t\t// Set the event and item counts\r\n\t\t\tvar arr = this._items,\r\n\t\t\t\tarrCount = arr.length,\r\n\t\t\t\ti,\r\n\t\t\t\teventCount = 0;\r\n\r\n\t\t\tfor (i = 0; i < arrCount; i++) {\r\n\t\t\t\teventCount += arr[i].count;\r\n\t\t\t}\r\n\r\n\t\t\tthis._eventCount = eventCount;\r\n\t\t\tthis._itemCount = arrCount;\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\treturn this._items;\r\n\t},\r\n\r\n\t/**\r\n\t * Returns the number of quest items this quest has.\r\n\t * @return {Number}\r\n\t */\r\n\titemCount: function () {\r\n\t\treturn this._itemCount;\r\n\t},\r\n\r\n\t/**\r\n\t * Returns the sum of all event counts for every item\r\n\t * in the quest giving an overall number of events that\r\n\t * need to fire in order for the quest to be completed.\r\n\t * @return {Number}\r\n\t */\r\n\teventCount: function () {\r\n\t\treturn this._eventCount;\r\n\t},\r\n\r\n\t/**\r\n\t * Returns the number of events that have been completed.\r\n\t * @return {Number}\r\n\t */\r\n\teventCompleteCount: function () {\r\n\t\treturn this._eventCompleteCount;\r\n\t},\r\n\r\n\t/**\r\n\t * Returns the number of items that have been completed.\r\n\t * @return {Number}\r\n\t */\r\n\titemCompleteCount: function () {\r\n\t\treturn this._itemCompleteCount;\r\n\t},\r\n\r\n\t/**\r\n\t * Returns the percentage representation of the quest's\r\n\t * overall completion based on number of overall events and\r\n\t * number of events that have been completed.\r\n\t * @return {Number} A number from zero to one-hundred.\r\n\t */\r\n\tpercentComplete: function () {\r\n\t\treturn Math.floor((100 / this._eventCount) * this._eventCompleteCount);\r\n\t},\r\n\r\n\t/**\r\n\t * Starts the quest by setting up the quest event\r\n\t * listeners.\r\n\t */\r\n\tstart: function () {\r\n\t\tif (!this._started) {\r\n\t\t\tvar self = this,\r\n\t\t\t\tarr = this._items,\r\n\t\t\t\tarrCount = arr.length,\r\n\t\t\t\ti;\r\n\r\n\t\t\t// Mark the quest as started\r\n\t\t\tthis._started = true;\r\n\r\n\t\t\t// Check if we have a linear quest or a non-linear one\r\n\t\t\tif (!this._linear) {\r\n\t\t\t\t// The quest is non-linear so activate all the item listeners now...\r\n\t\t\t\t// Loop the quest items array\r\n\t\t\t\tfor (i = 0; i < arrCount; i++) {\r\n\t\t\t\t\t// Setup the listener for this item\r\n\t\t\t\t\tthis._setupItemListener(arr[i]);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\t// The quest is linear so only activate the first listener for now...\r\n\t\t\t\tthis._setupItemListener(arr[0]);\r\n\t\t\t}\r\n\r\n\t\t\tthis.emit('started');\r\n\t\t} else {\r\n\t\t\t// Quest already started!\r\n\t\t\tthis.log('Cannot start quest because it has already been started!', 'warning');\r\n\t\t\tthis.emit('alreadyStarted');\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * Stops the quest and sets all the event listeners to\r\n\t * ignore events until the quest is restarted.\r\n\t */\r\n\tstop: function () {\r\n\t\tif (this._started) {\r\n\t\t\tthis._started = false;\r\n\t\t\tthis.emit('stopped');\r\n\t\t} else {\r\n\t\t\tthis.log('Cannot stop quest because it has not been started yet!', 'warning');\r\n\t\t\tthis.emit('notStarted');\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * Resets the quest and item internals back to their\r\n\t * original values and cancels all current event listeners.\r\n\t */\r\n\treset: function () {\r\n\t\tvar arr = this._items,\r\n\t\t\tarrCount = arr.length,\r\n\t\t\ti, item;\r\n\r\n\t\tfor (i = 0; i < arrCount; i++) {\r\n\t\t\titem = arr[i];\r\n\r\n\t\t\t// Reset all the item internals\r\n\t\t\titem._complete = false;\r\n\t\t\titem._eventCount = 0;\r\n\r\n\t\t\t// Cancel the event listener\r\n\t\t\tif (item._listener) {\r\n\t\t\t\titem.emitter.off(item.eventName, item._listener);\r\n\t\t\t}\r\n\r\n\t\t\t// Clear the reference holding the item listener\r\n\t\t\tdelete item._listener;\r\n\t\t}\r\n\r\n\t\t// Reset quest internals\r\n\t\tthis._eventCompleteCount = 0;\r\n\t\tthis._itemCompleteCount = 0;\r\n\t\tthis._isComplete = false;\r\n\r\n\t\tthis.emit('reset');\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * Sets up a quest item's event listener.\r\n\t * @param item\r\n\t * @private\r\n\t */\r\n\t_setupItemListener: function (item) {\r\n\t\tvar self = this;\r\n\r\n\t\t// Check for an existing listener\r\n\t\tif (!item._listener) {\r\n\t\t\t// Set the item's internal event count to zero\r\n\t\t\t// (number of times the event has fired)\r\n\t\t\titem._eventCount = 0;\r\n\t\t\titem._complete = false;\r\n\r\n\t\t\t// Create the event listener\r\n\t\t\titem._listener = item.emitter.on(item.eventName, function () {\r\n\t\t\t\t// Check if the quest is currently started\r\n\t\t\t\tif (self._started) {\r\n\t\t\t\t\t// If the item has an event evaluator method...\r\n\t\t\t\t\tif (item.eventEvaluate) {\r\n\t\t\t\t\t\t// Check if the event's data evaluated to true\r\n\t\t\t\t\t\tif (item.eventEvaluate.apply(self, arguments)) {\r\n\t\t\t\t\t\t\t// The evaluator returned true so complete the event\r\n\t\t\t\t\t\t\tself._eventComplete(item);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tself._eventComplete(item);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Handles when an event has been fired for a quest item.\r\n\t * @param item\r\n\t * @private\r\n\t */\r\n\t_eventComplete: function (item) {\r\n\t\t// Increment the internal event count\r\n\t\titem._eventCount++;\r\n\r\n\t\t// Increment the quest's internal event count\r\n\t\tthis._eventCompleteCount++;\r\n\r\n\t\t// Fire the callback to the game logic\r\n\t\tif (item.eventCallback) {\r\n\t\t\titem.eventCallback.apply(this, item);\r\n\t\t}\r\n\r\n\t\t// Emit the event complete event\r\n\t\tthis.emit('eventComplete', item);\r\n\r\n\t\t// Check if we've reached our designated event count\r\n\t\tif (item._eventCount === item.count) {\r\n\t\t\tthis._itemComplete(item);\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Handles when an item's events have all been fired.\r\n\t * @param item\r\n\t * @private\r\n\t */\r\n\t_itemComplete: function (item) {\r\n\t\tvar itemIndex,\r\n\t\t\tarr = this._items;\r\n\r\n\t\t// Mark the item as complete\r\n\t\titem._complete = true;\r\n\r\n\t\t// Cancel the listener\r\n\t\titem.emitter.off(item.eventName, item._listener);\r\n\t\tdelete item._listener;\r\n\r\n\t\t// Increment the quest's item complete count\r\n\t\tthis._itemCompleteCount++;\r\n\r\n\t\t// Fire the item's itemCallback to the game logic\r\n\t\tif (item.itemCallback) {\r\n\t\t\titem.itemCallback.apply(this, item);\r\n\t\t}\r\n\r\n\t\t// Emit the item complete event\r\n\t\tthis.emit('itemComplete', item);\r\n\r\n\t\t// Tell the quest to check it's internals\r\n\t\tthis._update();\r\n\r\n\t\t// Check if the quest is linear\r\n\t\tif (this._started && this._linear && this._itemCompleteCount < this.itemCount()) {\r\n\t\t\t// Advance the listener to the next item\r\n\t\t\titemIndex = arr.indexOf(item);\r\n\t\t\tthis._setupItemListener(arr[itemIndex + 1]);\r\n\r\n\t\t\t// Emit the nextItem event (linear quests only)\r\n\t\t\tthis.emit('nextItem', arr[itemIndex + 1]);\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Called when a quest item has been completed to determine\r\n\t * if the quest should continue or if it has also been\r\n\t * completed.\r\n\t * @private\r\n\t */\r\n\t_update: function () {\r\n\t\t// Check if all our items are complete\r\n\t\tif (this._itemCompleteCount === this.itemCount()) {\r\n\t\t\t// Mark the quest as complete\r\n\t\t\tthis._isComplete = true;\r\n\r\n\t\t\t// Fire the quest completed callback\r\n\t\t\tthis._completeCallback.apply(this);\r\n\r\n\t\t\t// Emit the quest complete event\r\n\t\t\tthis.emit('complete');\r\n\r\n\t\t\t// Stop the quest\r\n\t\t\tthis.stop();\r\n\r\n\t\t\t// Reset the quest (kills current event listeners)\r\n\t\t\tthis.reset();\r\n\t\t}\r\n\t}\r\n});\r\n\r\nif (typeof(module) !== 'undefined' && typeof(module.exports) !== 'undefined') { module.exports = IgeQuest; }","/**\r\n * Provides an alternative to setInterval() which works based on the engine's internal\r\n * time system allowing intervals to fire correctly, taking into account pausing the\r\n * game and differences in rendering speed etc. \r\n */\r\nvar IgeInterval = IgeEventingClass.extend({\r\n\tclassId: 'IgeInterval',\r\n\r\n\t/**\r\n\t * Creates a new timer that will call the method every given number of\r\n\t * milliseconds specified by the interval parameter.\r\n\t * @param {Function} method The method to call each interval.\r\n\t * @param {Number} interval The number of milliseconds between each interval.\r\n\t */\r\n\tinit: function (method, interval) {\r\n\t\tvar self = this;\r\n\t\t\r\n\t\tthis._method = method;\r\n\t\tthis._interval = interval;\r\n\t\tthis._time = 0;\r\n\t\tthis._started = ige._currentTime;\r\n\t\t\r\n\t\t// Attach ourselves to the time system\r\n\t\tige.time.addTimer(this);\r\n\t},\r\n\r\n\t/**\r\n\t * Adds time to the timer's internal clock. \r\n\t * @param {Number} time The time in milliseconds to add to the timer's internal clock.\r\n\t * @returns {*}\r\n\t */\r\n\taddTime: function (time) {\r\n\t\tthis._time += time;\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * Cancels the timer stopping all future method calls.\r\n\t * @returns {*}\r\n\t */\r\n\tcancel: function () {\r\n\t\tige.time.removeTimer(this);\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * Checks for a timer event to see if we should call the timer method. This is\r\n\t * called automatically by the IgeTimeComponent class and does not need to be\r\n\t * called manually.\r\n\t * @returns {*}\r\n\t */\r\n\tupdate: function () {\r\n\t\tif (this._time > this._interval) {\r\n\t\t\t// Fire an interval\r\n\t\t\tthis._method(ige._currentTime);\r\n\t\t\tthis._time -= this._interval;\r\n\t\t}\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n});\r\n\r\nif (typeof(module) !== 'undefined' && typeof(module.exports) !== 'undefined') { module.exports = IgeInterval; }","/**\r\n * Provides an alternative to setTimeout() which works based on the engine's internal\r\n * time system allowing timeouts to fire correctly, taking into account pausing the\r\n * game and differences in rendering speed etc.\r\n */\r\nvar IgeTimeout = IgeInterval.extend({\r\n\tclassId: 'IgeTimeout',\r\n\t\r\n\t/**\r\n\t * Creates a new timeout that will call the passed method after the number of\r\n\t * milliseconds specified by the timeout parameter has been reached.\r\n\t * @param {Function} method The method to call on timeout.\r\n\t * @param {Number} timeout The number of milliseconds before the timeout.\r\n\t */\r\n\tinit: function (method, timeout) {\r\n\t\tIgeInterval.prototype.init.call(this, method, timeout);\r\n\t},\r\n\r\n    /**\r\n     * Cancels the timer, stops the timeout.\r\n     * @returns {*}\r\n     */\r\n    cancel: function () {\r\n        return IgeInterval.prototype.cancel.call(this);\r\n    },\r\n\r\n    /**\r\n     * Resets the time and lets the timeout begin anew.\r\n     * @returns {*}\r\n     */\r\n    reset: function() {\r\n        this._time = 0;\r\n        if (ige.time._timers.indexOf(this) == -1) {\r\n            ige.time.addTimer(this);\r\n        }\r\n    },\r\n\t\r\n\t/**\r\n\t * Checks for a timeout event to see if we should call the timeout method. This is\r\n\t * called automatically by the IgeTimeComponent class and does not need to be\r\n\t * called manually.\r\n\t * @returns {*}\r\n\t */\r\n\tupdate: function () {\r\n\t\tif (this._time > this._interval) {\r\n\t\t\t// Fire an interval\r\n\t\t\tthis._method(ige._currentTime);\r\n\t\t\tige.time.removeTimer(this);\r\n\t\t}\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n});\r\n\r\nif (typeof(module) !== 'undefined' && typeof(module.exports) !== 'undefined') { module.exports = IgeTimeout; }","var IgeCuboidSmartTexture = {\r\n\trender: function (ctx, entity) {\r\n\t\tvar poly = entity.localIsoBoundsPoly();\r\n\t\t\r\n\t\tctx.strokeStyle = '#a200ff';\r\n\t\t\r\n\t\tpoly.render(ctx);\r\n\t}\r\n};","var IgeCuboid = IgeEntity.extend({\r\n\tclassId: 'IgeCuboid',\r\n\t\r\n\tinit: function () {\r\n\t\tIgeEntity.prototype.init.call(this);\r\n\t\t\r\n\t\tthis.bounds3d(40, 40, 40);\r\n\t\t\r\n\t\tvar tex = new IgeTexture(IgeCuboidSmartTexture);\r\n\t\tthis.texture(tex);\r\n\t}\r\n});\r\n\r\nif (typeof(module) !== 'undefined' && typeof(module.exports) !== 'undefined') { module.exports = IgeCuboid; }","var IgeArray = function () {};\r\nIgeArray.prototype = [];\r\n\r\n// Empower the IgeArray with all the method calls of the an IgeEntity\r\nfor (var methodName in IgeEntity.prototype) {\r\n\tif (IgeEntity.prototype.hasOwnProperty(methodName)) {\r\n\t\tif (methodName !== 'init') {\r\n\t\t\tIgeArray.prototype[methodName] = function (methodName) {\r\n\t\t\t\treturn function () {\r\n\t\t\t\t\tvar c = this.length;\r\n\t\t\t\t\tfor (var i = 0; i < c; i++) {\r\n\t\t\t\t\t\tthis[i][methodName].apply(this[i], arguments);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}(methodName);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nif (typeof(module) !== 'undefined' && typeof(module.exports) !== 'undefined') { module.exports = IgeArray; }","/**\r\n * Manages audio mixing and output.\r\n */\r\nvar IgeAudioComponent = IgeEventingClass.extend({\r\n\tclassId: 'IgeAudioComponent',\r\n\tcomponentId: 'audio',\r\n\t\r\n\tinit: function (entity, options) {\r\n\t\tthis._active = false;\r\n\t\tthis._disabled = false;\r\n\t\tthis._ctx = this.getContext();\r\n\t\t\r\n\t\tif (!this._ctx) {\r\n\t\t\tthis.log('No web audio API support, cannot play sounds!', 'warning');\r\n\t\t\tthis._disabled = true;\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\tthis.log('Web audio API connected successfully');\r\n\t},\r\n\r\n\t/**\r\n\t * Gets / sets the active flag to enable or disable audio support.\r\n\t * @param {Boolean=} val True to enable audio support.\r\n\t * @returns {*}\r\n\t */\r\n\tactive: function (val) {\r\n\t\tif (val !== undefined && !this._disabled) {\r\n\t\t\tthis._active = val;\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\treturn this._active;\r\n\t},\r\n\r\n\t/**\r\n\t * Returns an audio context.\r\n\t * @returns {*}\r\n\t */\r\n\tgetContext: function () {\r\n\t\tvar ctxProto = window.AudioContext || window.webkitAudioContext;\r\n\t\t\r\n\t\tif (ctxProto) {\r\n\t\t\treturn new ctxProto();\r\n\t\t} else {\r\n\t\t\treturn undefined;\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Loads an audio file from the given url and assigns it the id specified.\r\n\t * @param {String} url The url to load the audio from.\r\n\t * @param {String=} id The id to assign the audio.\r\n\t */\r\n\tload: function (url, id) {\r\n\t\tvar audio = new IgeAudio(url);\r\n\t\t\r\n\t\tif (id) {\r\n\t\t\taudio.id(id);\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Decodes audio data and calls back with an audio buffer.\r\n\t * @param {ArrayBuffer} data The audio data to decode.\r\n\t * @param {Function} callback The callback to pass the buffer to.\r\n\t */\r\n\tdecode: function (data, callback) {\r\n\t\tthis._ctx.decodeAudioData(data, function (buffer) {\r\n\t\t\tcallback(false, buffer);\r\n\t\t}, function (err) {\r\n\t\t\tcallback(err);\r\n\t\t});\r\n\t},\r\n\t\r\n\tplay: function (id) {\r\n\t\tvar audio = ige.$(id);\r\n\t\tif (audio) {\r\n\t\t\tif (audio.prototype.play) {\r\n\t\t\t\taudio.play();\r\n\t\t\t} else {\r\n\t\t\t\tthis.log('Trying to play audio with id \"\" but object with this id is not an IgeAudio instance, or does not implement the .play() method!', 'warnign');\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n});","var IgeAudio = IgeEventingClass.extend({\r\n\tclassId: 'IgeAudio',\r\n\t\r\n\tinit: function (url) {\r\n\t\tif (url) {\r\n\t\t\tthis.load(url);\r\n\t\t}\r\n\t},\r\n\t\r\n\t/**\r\n\t * Gets / sets the current object id. If no id is currently assigned and no\r\n\t * id is passed to the method, it will automatically generate and assign a\r\n\t * new id as a 16 character hexadecimal value typed as a string.\r\n\t * @param {String=} id The id to set to.\r\n\t * @return {*} Returns this when setting the value or the current value if none is specified.\r\n\t */\r\n\tid: function (id) {\r\n\t\tif (id !== undefined) {\r\n\t\t\t// Check if this ID already exists in the object register\r\n\t\t\tif (ige._register[id]) {\r\n\t\t\t\tif (ige._register[id] === this) {\r\n\t\t\t\t\t// We are already registered as this id\r\n\t\t\t\t\treturn this;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t// Already an object with this ID!\r\n\t\t\t\tthis.log('Cannot set ID of object to \"' + id + '\" because that ID is already in use by another object!', 'error');\r\n\t\t\t} else {\r\n\t\t\t\t// Check if we already have an id assigned\r\n\t\t\t\tif (this._id && ige._register[this._id]) {\r\n\t\t\t\t\t// Unregister the old ID before setting this new one\r\n\t\t\t\t\tige.unRegister(this);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._id = id;\r\n\r\n\t\t\t\t// Now register this object with the object register\r\n\t\t\t\tige.register(this);\r\n\r\n\t\t\t\treturn this;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!this._id) {\r\n\t\t\t// The item has no id so generate one automatically\r\n\t\t\tif (this._url) {\r\n\t\t\t\t// Generate an ID from the URL string of the audio file\r\n\t\t\t\t// this instance is using. Useful for always reproducing\r\n\t\t\t\t// the same ID for the same file :)\r\n\t\t\t\tthis._id = ige.newIdFromString(this._url);\r\n\t\t\t} else {\r\n\t\t\t\t// We don't have a URL so generate a random ID\r\n\t\t\t\tthis._id = ige.newIdHex();\r\n\t\t\t}\r\n\t\t\tige.register(this);\r\n\t\t}\r\n\r\n\t\treturn this._id;\r\n\t},\r\n\r\n\t/**\r\n\t * Loads an audio file from the given url.\r\n\t * @param {String} url The url to load the audio file from.\r\n\t * @param {Function=} callback Optional callback method to call when the audio\r\n\t * file has loaded or on error.\r\n\t */\r\n\tload: function (url, callback) {\r\n\t\tvar self = this,\r\n\t\t\trequest = new XMLHttpRequest();\r\n\t\t\r\n\t\trequest.open('GET', url, true);\r\n\t\trequest.responseType = 'arraybuffer';\r\n\t\t\r\n\t\t// Decode asynchronously\r\n\t\trequest.onload = function() {\r\n\t\t\tself._data = request.response;\r\n\t\t\tself._url = url;\r\n\t\t\tself._loaded(callback);\r\n\t\t};\r\n\t\t\r\n\t\trequest.onerror = function (err) {\r\n\t\t\tcallback.apply(self, [err]);\r\n\t\t};\r\n\t\t\r\n\t\trequest.send();\r\n\t},\r\n\t\r\n\t_loaded: function (callback) {\r\n\t\tvar self = this;\r\n\t\t\r\n\t\tige.audio.decode(self._data, function(err, buffer) {\r\n\t\t\tif (!err) {\r\n\t\t\t\tself._buffer = buffer;\r\n\t\t\t\tige.audio.log('Audio file (' + self._url + ') loaded successfully');\r\n\t\t\t\t\r\n\t\t\t\tif (callback) { callback.apply(self, [false]); }\r\n\t\t\t} else {\r\n\t\t\t\tself.log('Failed to decode audio data from: ' + self._url, 'warning');\r\n\t\t\t\tif (callback) { callback.apply(self, [err]); }\r\n\t\t\t}\r\n\t\t});\r\n\t},\r\n\r\n\t/**\r\n\t * Plays the audio.\r\n\t */\r\n\tplay: function () {\r\n\t\tvar self = this,\r\n\t\t\tbufferSource;\r\n\t\t\r\n\t\tif (self._buffer) {\r\n\t\t\tbufferSource = ige.audio._ctx.createBufferSource();\r\n\t\t\tbufferSource.buffer = self._buffer;\r\n\t\t\tbufferSource.connect(ige.audio._ctx.destination);\r\n\t\t\tbufferSource.start(0);\r\n\t\t}\r\n\t}\r\n});","/**\r\n * The engine's box2d component class.\r\n */\r\nvar IgeBox2dComponent = IgeEventingClass.extend({\r\n\tclassId: 'IgeBox2dComponent',\r\n\tcomponentId: 'box2d',\r\n\r\n\tinit: function (entity, options) {\r\n\t\t// Check that the engine has not already started\r\n\t\t// as this will mess everything up if it has\r\n\t\tif (ige._state !== 0) {\r\n\t\t\tthis.log('Cannot add box2d component to the ige instance once the engine has started!', 'error');\r\n\t\t}\r\n\r\n\t\tthis._entity = entity;\r\n\t\tthis._options = options;\r\n\t\tthis._mode = 0;\r\n\r\n\t\tthis.b2Color = Box2D.Common.b2Color;\r\n\t\tthis.b2Vec2 = Box2D.Common.Math.b2Vec2;\r\n\t\tthis.b2Math = Box2D.Common.Math.b2Math;\r\n\t\tthis.b2Shape = Box2D.Collision.Shapes.b2Shape;\r\n\t\tthis.b2BodyDef = Box2D.Dynamics.b2BodyDef;\r\n\t\tthis.b2Body = Box2D.Dynamics.b2Body;\r\n\t\tthis.b2FixtureDef = Box2D.Dynamics.b2FixtureDef;\r\n\t\tthis.b2Fixture = Box2D.Dynamics.b2Fixture;\r\n\t\tthis.b2World = Box2D.Dynamics.b2World;\r\n\t\tthis.b2MassData = Box2D.Collision.Shapes.b2MassData;\r\n\t\tthis.b2PolygonShape = Box2D.Collision.Shapes.b2PolygonShape;\r\n\t\tthis.b2CircleShape = Box2D.Collision.Shapes.b2CircleShape;\r\n\t\tthis.b2DebugDraw = Box2D.Dynamics.b2DebugDraw;\r\n\t\tthis.b2ContactListener = Box2D.Dynamics.b2ContactListener;\r\n\t\tthis.b2Distance = Box2D.Collision.b2Distance;\r\n\t\tthis.b2Contact = Box2D.Dynamics.Contacts.b2Contact;\r\n\t\tthis.b2FilterData = Box2D.Dynamics.b2FilterData;\r\n\t\tthis.b2DistanceJointDef = Box2D.Dynamics.Joints.b2DistanceJointDef;\r\n\r\n\t\t// Extend the b2Contact class to allow the IGE entity accessor\r\n\t\t// and other helper methods\r\n\t\tthis.b2Contact.prototype.igeEntityA = function () {\r\n\t\t\tvar ent = this.m_fixtureA.m_body._entity;\r\n\t\t\tent._box2dOurContactFixture = this.m_fixtureA;\r\n\t\t\tent._box2dTheirContactFixture = this.m_fixtureB;\r\n\t\t\treturn ent;\r\n\t\t};\r\n\r\n\t\tthis.b2Contact.prototype.igeEntityB = function () {\r\n\t\t\tvar ent = this.m_fixtureB.m_body._entity;\r\n\t\t\tent._box2dOurContactFixture = this.m_fixtureB;\r\n\t\t\tent._box2dTheirContactFixture = this.m_fixtureA;\r\n\t\t\treturn ent;\r\n\t\t};\r\n\r\n\t\tthis.b2Contact.prototype.igeEitherId = function (id1, id2) {\r\n\t\t\tif (!id2) {\r\n\t\t\t\treturn this.m_fixtureA.m_body._entity._id === id1 || this.m_fixtureB.m_body._entity._id === id1;\r\n\t\t\t} else {\r\n\t\t\t\treturn (this.m_fixtureA.m_body._entity._id === id1 || this.m_fixtureB.m_body._entity._id === id1) &&\r\n\t\t\t\t\t(this.m_fixtureA.m_body._entity._id === id2 || this.m_fixtureB.m_body._entity._id === id2);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tthis.b2Contact.prototype.igeEitherCategory = function (category1, category2) {\r\n\t\t\tif (!category2) {\r\n\t\t\t\treturn this.m_fixtureA.m_body._entity._category === category1 || this.m_fixtureB.m_body._entity._category === category1;\r\n\t\t\t} else {\r\n\t\t\t\treturn (this.m_fixtureA.m_body._entity._category === category1 || this.m_fixtureB.m_body._entity._category === category1) &&\r\n\t\t\t\t\t(this.m_fixtureA.m_body._entity._category === category2 || this.m_fixtureB.m_body._entity._category === category2);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tthis.b2Contact.prototype.igeBothCategories = function (category1) {\r\n\t\t\treturn (this.m_fixtureA.m_body._entity._category === category1 && this.m_fixtureB.m_body._entity._category === category1);\r\n\t\t};\r\n\r\n\t\tthis.b2Contact.prototype.igeEntityByCategory = function (category) {\r\n\t\t\tif (this.m_fixtureA.m_body._entity._category === category) {\r\n\t\t\t\treturn this.igeEntityA();\r\n\t\t\t}\r\n\r\n\t\t\tif (this.m_fixtureB.m_body._entity._category === category) {\r\n\t\t\t\treturn this.igeEntityB();\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tthis.b2Contact.prototype.igeEntityById = function (id) {\r\n\t\t\tif (this.m_fixtureA.m_body._entity._id === id) {\r\n\t\t\t\treturn this.igeEntityA();\r\n\t\t\t}\r\n\r\n\t\t\tif (this.m_fixtureB.m_body._entity._id === id) {\r\n\t\t\t\treturn this.igeEntityB();\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tthis.b2Contact.prototype.igeEntityByFixtureId = function (id) {\r\n\t\t\tif (this.m_fixtureA.igeId === id) {\r\n\t\t\t\treturn this.igeEntityA();\r\n\t\t\t}\r\n\r\n\t\t\tif (this.m_fixtureB.igeId === id) {\r\n\t\t\t\treturn this.igeEntityB();\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tthis.b2Contact.prototype.igeOtherEntity = function (entity) {\r\n\t\t\tif (this.m_fixtureA.m_body._entity === entity) {\r\n\t\t\t\treturn this.igeEntityB();\r\n\t\t\t} else {\r\n\t\t\t\treturn this.igeEntityA();\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tthis._sleep = true;\r\n\t\tthis._scaleRatio = 30;\r\n\t\tthis._gravity = new this.b2Vec2(0, 0);\r\n\r\n\t\tthis._removeWhenReady = [];\r\n\r\n\t\tthis.log('Physics component initiated!');\r\n\t},\r\n\r\n\tuseWorker: function (val) {\r\n\t\tif (typeof(Worker) !== 'undefined') {\r\n\t\t\tif (val !== undefined) {\r\n\t\t\t\tthis._useWorker = val;\r\n\t\t\t\treturn this._entity;\r\n\t\t\t}\r\n\r\n\t\t\treturn this._useWorker;\r\n\t\t} else {\r\n\t\t\tthis.log('Web workers were not detected on this browser. Cannot access useWorker() method.', 'warning');\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Gets / sets the world interval mode. In mode 0 (zero) the\r\n\t * box2d simulation is synced to the framerate of the engine's\r\n\t * renderer. In mode 1 the box2d simulation is stepped at a constant\r\n\t * speed regardless of the engine's renderer. This must be set *before*\r\n\t * calling the start() method in order for the setting to take effect.\r\n\t * @param {Integer} val The mode, either 0 or 1.\r\n\t * @returns {*}\r\n\t */\r\n\tmode: function (val) {\r\n\t\tif (val !== undefined) {\r\n\t\t\tthis._mode = val;\r\n\t\t\treturn this._entity;\r\n\t\t}\r\n\r\n\t\treturn this._mode;\r\n\t},\r\n\r\n\t/**\r\n\t * Gets / sets if the world should allow sleep or not.\r\n\t * @param {Boolean=} val\r\n\t * @return {*}\r\n\t */\r\n\tsleep: function (val) {\r\n\t\tif (val !== undefined) {\r\n\t\t\tthis._sleep = val;\r\n\t\t\treturn this._entity;\r\n\t\t}\r\n\r\n\t\treturn this._sleep;\r\n\t},\r\n\r\n\t/**\r\n\t * Gets / sets the current engine to box2d scaling ratio.\r\n\t * @param val\r\n\t * @return {*}\r\n\t */\r\n\tscaleRatio: function (val) {\r\n\t\tif (val !== undefined) {\r\n\t\t\tthis._scaleRatio = val;\r\n\t\t\treturn this._entity;\r\n\t\t}\r\n\r\n\t\treturn this._scaleRatio;\r\n\t},\r\n\r\n\t/**\r\n\t * Gets / sets the gravity vector.\r\n\t * @param x\r\n\t * @param y\r\n\t * @return {*}\r\n\t */\r\n\tgravity: function (x, y) {\r\n\t\tif (x !== undefined && y !== undefined) {\r\n\t\t\tthis._gravity = new this.b2Vec2(x, y);\r\n\t\t\treturn this._entity;\r\n\t\t}\r\n\r\n\t\treturn this._gravity;\r\n\t},\r\n\r\n\t/**\r\n\t * Gets the current Box2d world object.\r\n\t * @return {b2World}\r\n\t */\r\n\tworld: function () {\r\n\t\treturn this._world;\r\n\t},\r\n\r\n\t/**\r\n\t * Creates the Box2d world.\r\n\t * @param {String=} id\r\n\t * @param {Object=} options\r\n\t * @return {*}\r\n\t */\r\n\tcreateWorld: function (id, options) {\r\n\t\tthis._world = new this.b2World(\r\n\t\t\tthis._gravity,\r\n\t\t\tthis._sleep\r\n\t\t);\r\n\r\n\t\tthis.log('World created');\r\n\r\n\t\treturn this._entity;\r\n\t},\r\n\r\n\t/**\r\n\t * Creates a Box2d fixture and returns it.\r\n\t * @param params\r\n\t * @return {b2FixtureDef}\r\n\t */\r\n\tcreateFixture: function (params) {\r\n\t\tvar tempDef = new this.b2FixtureDef(),\r\n\t\t\tparam;\r\n\r\n\t\tfor (param in params) {\r\n\t\t\tif (params.hasOwnProperty(param)) {\r\n\t\t\t\tif (param !== 'shape' && param !== 'filter') {\r\n\t\t\t\t\ttempDef[param] = params[param];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn tempDef;\r\n\t},\r\n\r\n\t/**\r\n\t * Creates a Box2d body and attaches it to an IGE entity\r\n\t * based on the supplied body definition.\r\n\t * @param {IgeEntity} entity\r\n\t * @param {Object} body\r\n\t * @return {b2Body}\r\n\t */\r\n\tcreateBody: function (entity, body) {\r\n\t\tvar tempDef = new this.b2BodyDef(),\r\n\t\t\tparam,\r\n\t\t\ttempBod,\r\n\t\t\tfixtureDef,\r\n\t\t\ttempFixture,\r\n\t\t\tfinalFixture,\r\n\t\t\ttempShape,\r\n\t\t\ttempFilterData,\r\n\t\t\ti,\r\n\t\t\tfinalX, finalY,\r\n\t\t\tfinalWidth, finalHeight;\r\n\r\n\t\t// Process body definition and create a box2d body for it\r\n\t\tswitch (body.type) {\r\n\t\t\tcase 'static':\r\n\t\t\t\ttempDef.type = this.b2Body.b2_staticBody;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'dynamic':\r\n\t\t\t\ttempDef.type = this.b2Body.b2_dynamicBody;\r\n\t\t\t\tbreak;\r\n\t\t\t\r\n\t\t\tcase 'kinematic':\r\n                tempDef.type = this.b2Body.b2_kinematicBody;\r\n                break;\r\n\t\t}\r\n\r\n\t\t// Add the parameters of the body to the new body instance\r\n\t\tfor (param in body) {\r\n\t\t\tif (body.hasOwnProperty(param)) {\r\n\t\t\t\tswitch (param) {\r\n\t\t\t\t\tcase 'type':\r\n\t\t\t\t\tcase 'gravitic':\r\n\t\t\t\t\tcase 'fixedRotation':\r\n\t\t\t\t\tcase 'fixtures':\r\n\t\t\t\t\t\t// Ignore these for now, we process them\r\n\t\t\t\t\t\t// below as post-creation attributes\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\ttempDef[param] = body[param];\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Set the position\r\n\t\ttempDef.position = new this.b2Vec2(entity._translate.x / this._scaleRatio, entity._translate.y / this._scaleRatio);\r\n\r\n\t\t// Create the new body\r\n\t\ttempBod = this._world.CreateBody(tempDef);\r\n\r\n\t\t// Now apply any post-creation attributes we need to\r\n\t\tfor (param in body) {\r\n\t\t\tif (body.hasOwnProperty(param)) {\r\n\t\t\t\tswitch (param) {\r\n\t\t\t\t\tcase 'gravitic':\r\n\t\t\t\t\t\tif (!body.gravitic) {\r\n\t\t\t\t\t\t\ttempBod.m_nonGravitic = true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'fixedRotation':\r\n\t\t\t\t\t\tif (body.fixedRotation) {\r\n\t\t\t\t\t\t\ttempBod.SetFixedRotation(true);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'fixtures':\r\n\t\t\t\t\t\tif (body.fixtures && body.fixtures.length) {\r\n\t\t\t\t\t\t\tfor (i = 0; i < body.fixtures.length; i++) {\r\n\t\t\t\t\t\t\t\t// Grab the fixture definition\r\n\t\t\t\t\t\t\t\tfixtureDef = body.fixtures[i];\r\n\t\r\n\t\t\t\t\t\t\t\t// Create the fixture\r\n\t\t\t\t\t\t\t\ttempFixture = this.createFixture(fixtureDef);\r\n\t\t\t\t\t\t\t\ttempFixture.igeId = fixtureDef.igeId;\r\n\t\r\n\t\t\t\t\t\t\t\t// Check for a shape definition for the fixture\r\n\t\t\t\t\t\t\t\tif (fixtureDef.shape) {\r\n\t\t\t\t\t\t\t\t\t// Create based on the shape type\r\n\t\t\t\t\t\t\t\t\tswitch (fixtureDef.shape.type) {\r\n\t\t\t\t\t\t\t\t\t\tcase 'circle':\r\n\t\t\t\t\t\t\t\t\t\t\ttempShape = new this.b2CircleShape();\r\n\t\t\t\t\t\t\t\t\t\t\tif (fixtureDef.shape.data && typeof(fixtureDef.shape.data.radius) !== 'undefined') {\r\n\t\t\t\t\t\t\t\t\t\t\t\ttempShape.SetRadius(fixtureDef.shape.data.radius / this._scaleRatio);\r\n\t\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\t\ttempShape.SetRadius((entity._bounds2d.x / this._scaleRatio) / 2);\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\tif (fixtureDef.shape.data) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tfinalX = fixtureDef.shape.data.x !== undefined ? fixtureDef.shape.data.x : 0;\r\n\t\t\t\t\t\t\t\t\t\t\t\tfinalY = fixtureDef.shape.data.y !== undefined ? fixtureDef.shape.data.y : 0;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\ttempShape.SetLocalPosition(new this.b2Vec2(finalX / this._scaleRatio, finalY / this._scaleRatio));\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\t\t\t\t\tcase 'polygon':\r\n\t\t\t\t\t\t\t\t\t\t\ttempShape = new this.b2PolygonShape();\r\n\t\t\t\t\t\t\t\t\t\t\ttempShape.SetAsArray(fixtureDef.shape.data._poly, fixtureDef.shape.data.length());\r\n\t\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\t\t\t\t\tcase 'rectangle':\r\n\t\t\t\t\t\t\t\t\t\t\ttempShape = new this.b2PolygonShape();\r\n\t\r\n\t\t\t\t\t\t\t\t\t\t\tif (fixtureDef.shape.data) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tfinalX = fixtureDef.shape.data.x !== undefined ? fixtureDef.shape.data.x : 0;\r\n\t\t\t\t\t\t\t\t\t\t\t\tfinalY = fixtureDef.shape.data.y !== undefined ? fixtureDef.shape.data.y : 0;\r\n\t\t\t\t\t\t\t\t\t\t\t\tfinalWidth = fixtureDef.shape.data.width !== undefined ? fixtureDef.shape.data.width : (entity._bounds2d.x / 2);\r\n\t\t\t\t\t\t\t\t\t\t\t\tfinalHeight = fixtureDef.shape.data.height !== undefined ? fixtureDef.shape.data.height : (entity._bounds2d.y / 2);\r\n\t\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\t\tfinalX = 0;\r\n\t\t\t\t\t\t\t\t\t\t\t\tfinalY = 0;\r\n\t\t\t\t\t\t\t\t\t\t\t\tfinalWidth = (entity._bounds2d.x / 2);\r\n\t\t\t\t\t\t\t\t\t\t\t\tfinalHeight = (entity._bounds2d.y / 2);\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\t\t\t\t\t// Set the polygon as a box\r\n\t\t\t\t\t\t\t\t\t\t\ttempShape.SetAsOrientedBox(\r\n\t\t\t\t\t\t\t\t\t\t\t\t(finalWidth / this._scaleRatio),\r\n\t\t\t\t\t\t\t\t\t\t\t\t(finalHeight / this._scaleRatio),\r\n\t\t\t\t\t\t\t\t\t\t\t\tnew this.b2Vec2(finalX / this._scaleRatio, finalY / this._scaleRatio),\r\n\t\t\t\t\t\t\t\t\t\t\t\t0\r\n\t\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\t\t\tif (tempShape) {\r\n\t\t\t\t\t\t\t\t\t\ttempFixture.shape = tempShape;\r\n\t\t\t\t\t\t\t\t\t\tfinalFixture = tempBod.CreateFixture(tempFixture);\r\n\t\t\t\t\t\t\t\t\t\tfinalFixture.igeId = tempFixture.igeId;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\t\tif (fixtureDef.filter && finalFixture) {\r\n\t\t\t\t\t\t\t\t\ttempFilterData = new this._entity.box2d.b2FilterData();\r\n\t\r\n\t\t\t\t\t\t\t\t\tif (fixtureDef.filter.categoryBits !== undefined) { tempFilterData.categoryBits = fixtureDef.filter.categoryBits; }\r\n\t\t\t\t\t\t\t\t\tif (fixtureDef.filter.maskBits !== undefined) { tempFilterData.maskBits = fixtureDef.filter.maskBits; }\r\n\t\t\t\t\t\t\t\t\tif (fixtureDef.filter.categoryIndex !== undefined) { tempFilterData.categoryIndex = fixtureDef.filter.categoryIndex; }\r\n\t\r\n\t\t\t\t\t\t\t\t\tfinalFixture.SetFilterData(tempFilterData);\r\n\t\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\t\tif (fixtureDef.density !== undefined && finalFixture) {\r\n\t\t\t\t\t\t\t\t\tfinalFixture.SetDensity(fixtureDef.density);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tthis.log('Box2D body has no fixtures, have you specified fixtures correctly? They are supposed to be an array of fixture objects.', 'warning');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Store the entity that is linked to this body\r\n\t\ttempBod._entity = entity;\r\n\r\n\t\t// Add the body to the world with the passed fixture\r\n\t\treturn tempBod;\r\n\t},\r\n\r\n\t/**\r\n\t * Produces static box2d bodies from passed map data.\r\n\t * @param {IgeTileMap2d} mapLayer\r\n\t * @param {Function=} callback Returns true or false depending\r\n\t * on if the passed map data should be included as part of the\r\n\t * box2d static object data. This allows you to control what\r\n\t * parts of the map data are to be considered for box2d static\r\n\t * objects and which parts are to be ignored. If not passed then\r\n\t * any tile with any map data is considered part of the static\r\n\t * object data.\r\n\t */\r\n\tstaticsFromMap: function (mapLayer, callback) {\r\n\t\tif (mapLayer.map) {\r\n\t\t\tvar tileWidth = mapLayer.tileWidth(),\r\n\t\t\t\ttileHeight = mapLayer.tileHeight(),\r\n\t\t\t\tposX, posY,\r\n\t\t\t\trectArray, rectCount, rect;\r\n\r\n\t\t\t// Get the array of rectangle bounds based on\r\n\t\t\t// the map's data\r\n\t\t\trectArray = mapLayer.scanRects(callback);\r\n\t\t\trectCount = rectArray.length;\r\n\r\n\t\t\twhile (rectCount--) {\r\n\t\t\t\trect = rectArray[rectCount];\r\n\r\n\t\t\t\tposX = (tileWidth * (rect.width / 2));\r\n\t\t\t\tposY = (tileHeight * (rect.height / 2));\r\n\r\n\t\t\t\tnew IgeEntityBox2d()\r\n\t\t\t\t\t.translateTo(rect.x * tileWidth + posX, rect.y * tileHeight + posY, 0)\r\n\t\t\t\t\t.width(rect.width * tileWidth)\r\n\t\t\t\t\t.height(rect.height * tileHeight)\r\n\t\t\t\t\t.drawBounds(true)\r\n\t\t\t\t\t.drawBoundsData(false)\r\n\t\t\t\t\t.box2dBody({\r\n\t\t\t\t\t\ttype: 'static',\r\n\t\t\t\t\t\tallowSleep: true,\r\n\t\t\t\t\t\tfixtures: [{\r\n\t\t\t\t\t\t\tshape: {\r\n\t\t\t\t\t\t\t\ttype: 'rectangle'\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}]\r\n\t\t\t\t\t});\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthis.log('Cannot extract box2d static bodies from map data because passed map does not have a .map property!', 'error');\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Creates a contact listener with the specified callbacks. When\r\n\t * contacts begin and end inside the box2d simulation the specified\r\n\t * callbacks are fired.\r\n\t * @param {Function} beginContactCallback The method to call when the contact listener detects contact has started.\r\n\t * @param {Function} endContactCallback The method to call when the contact listener detects contact has ended.\r\n\t * @param {Function} preSolve\r\n\t * @param {Function} postSolve\r\n\t */\r\n\tcontactListener: function (beginContactCallback, endContactCallback, preSolve, postSolve) {\r\n\t\tvar contactListener = new this.b2ContactListener();\r\n\t\tif (beginContactCallback !== undefined) {\r\n\t\t\tcontactListener.BeginContact = beginContactCallback;\r\n\t\t}\r\n\r\n\t\tif (endContactCallback !== undefined) {\r\n\t\t\tcontactListener.EndContact = endContactCallback;\r\n\t\t}\r\n\r\n\t\tif (preSolve !== undefined) {\r\n\t\t\tcontactListener.PreSolve = preSolve;\r\n\t\t}\r\n\r\n\t\tif (postSolve !== undefined) {\r\n\t\t\tcontactListener.PostSolve = postSolve;\r\n\t\t}\r\n\t\tthis._world.SetContactListener(contactListener);\r\n\t},\r\n\t\r\n\t/**\r\n\t * If enabled, sets the physics world into network debug mode which\r\n\t * will stop the world from generating collisions but still allow us\r\n\t * to see shape outlines as they are attached to bodies. Useful when\r\n\t * your physics system is server-side but seeing client-side shape\r\n\t * data is useful for debugging collisions.\r\n\t * @param {Boolean} val\r\n\t */\r\n\tnetworkDebugMode: function (val) {\r\n\t\tif (val !== undefined) {\r\n\t\t\tthis._networkDebugMode = val;\r\n\t\t\t\r\n\t\t\tif (val === true) {\r\n\t\t\t\t// We are enabled so disable all physics contacts\r\n\t\t\t\tthis.contactListener(\r\n\t\t\t\t\t// Begin contact\r\n\t\t\t\t\tfunction (contact) {},\r\n\t\t\t\t\t// End contact\r\n\t\t\t\t\tfunction (contact) {},\r\n\t\t\t\t\t// Pre-solve\r\n\t\t\t\t\tfunction (contact) {\r\n\t\t\t\t\t\t// Cancel the contact\r\n\t\t\t\t\t\tcontact.SetEnabled(false);\r\n\t\t\t\t\t},\r\n\t\t\t\t\t// Post-solve\r\n\t\t\t\t\tfunction (contact) {}\r\n\t\t\t\t);\r\n\t\t\t} else {\r\n\t\t\t\t// Re-enable contacts\r\n\t\t\t\tthis.contactListener();\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn this._entity;\r\n\t\t}\r\n\t\t\r\n\t\treturn this._networkDebugMode;\r\n\t},\r\n\r\n\t/**\r\n\t * Creates a debug entity that outputs the bounds of each box2d\r\n\t * body during standard engine ticks.\r\n\t * @param {IgeEntity} mountScene\r\n\t */\r\n\tenableDebug: function (mountScene) {\r\n\t\tif (mountScene) {\r\n\t\t\t// Define the debug drawing instance\r\n\t\t\tvar debugDraw = new this.b2DebugDraw();\r\n\t\t\tthis._box2dDebug = true;\r\n\r\n\t\t\tdebugDraw.SetSprite(ige._ctx);\r\n\t\t\tdebugDraw.SetDrawScale(this._scaleRatio);\r\n\t\t\tdebugDraw.SetFillAlpha(0.3);\r\n\t\t\tdebugDraw.SetLineThickness(1.0);\r\n\t\t\tdebugDraw.SetFlags(\r\n\t\t\t\tthis.b2DebugDraw.e_controllerBit\r\n\t\t\t\t| this.b2DebugDraw.e_jointBit\r\n\t\t\t\t| this.b2DebugDraw.e_pairBit\r\n\t\t\t\t| this.b2DebugDraw.e_shapeBit\r\n\t\t\t\t//| this.b2DebugDraw.e_aabbBit\r\n\t\t\t\t//| this.b2DebugDraw.e_centerOfMassBit\r\n\t\t\t);\r\n\r\n\t\t\t// Set the debug draw for the world\r\n\t\t\tthis._world.SetDebugDraw(debugDraw);\r\n\r\n\t\t\t// Create the debug painter entity and mount\r\n\t\t\t// it to the passed scene\r\n\t\t\tnew igeClassStore.IgeBox2dDebugPainter(this._entity)\r\n\t\t\t\t.depth(40000) // Set a really high depth\r\n\t\t\t\t.drawBounds(false)\r\n\t\t\t\t.mount(mountScene);\r\n\t\t} else {\r\n\t\t\tthis.log('Cannot enable box2d debug drawing because the passed argument is not an object on the scenegraph.', 'error');\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Queues a body for removal from the physics world.\r\n\t * @param body\r\n\t */\r\n\tdestroyBody: function (body) {\r\n\t\tthis._removeWhenReady.push(body);\r\n\t},\r\n\r\n\t/**\r\n\t * Gets / sets the callback method that will be called after\r\n\t * every physics world step.\r\n\t * @param method\r\n\t * @return {*}\r\n\t */\r\n\tupdateCallback: function (method) {\r\n\t\tif (method !== undefined) {\r\n\t\t\tthis._updateCallback = method;\r\n\t\t\treturn this._entity;\r\n\t\t}\r\n\r\n\t\treturn this._updateCallback;\r\n\t},\r\n\r\n\tstart: function () {\r\n\t\tif (!this._active) {\r\n\t\t\tthis._active = true;\r\n\t\t\t\r\n\t\t\tif (!this._networkDebugMode) {\r\n\t\t\t\tif (this._mode === 0) {\r\n\t\t\t\t\t// Add the box2d behaviour to the ige\r\n\t\t\t\t\tthis._entity.addBehaviour('box2dStep', this._behaviour);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._intervalTimer = setInterval(this._behaviour, 1000 / 60);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\tstop: function () {\r\n\t\tif (this._active) {\r\n\t\t\tthis._active = false;\r\n\r\n\t\t\tif (this._mode === 0) {\r\n\t\t\t\t// Add the box2d behaviour to the ige\r\n\t\t\t\tthis._entity.removeBehaviour('box2dStep');\r\n\t\t\t} else {\r\n\t\t\t\tclearInterval(this._intervalTimer);\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Steps the physics simulation forward.\r\n\t * @param ctx\r\n\t * @private\r\n\t */\r\n\t_behaviour: function (ctx) {\r\n\t\tvar self = this.box2d,\r\n\t\t\ttempBod,\r\n\t\t\tentity,\r\n\t\t\tentityBox2dBody,\r\n\t\t\tremoveWhenReady,\r\n\t\t\tcount,\r\n\t\t\tdestroyBody;\r\n\r\n\t\tif (self._active && self._world) {\r\n\t\t\tif (!self._world.IsLocked()) {\r\n\t\t\t\t// Remove any bodies that were queued for removal\r\n\t\t\t\tremoveWhenReady = self._removeWhenReady;\r\n\t\t\t\tcount = removeWhenReady.length;\r\n\r\n\t\t\t\tif (count) {\r\n\t\t\t\t\tdestroyBody = self._world.DestroyBody;\r\n\t\t\t\t\twhile (count--) {\r\n\t\t\t\t\t\tdestroyBody.apply(self._world, [removeWhenReady[count]]);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tself._removeWhenReady = [];\r\n\t\t\t\t\tremoveWhenReady = null;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Call the world step; frame-rate, velocity iterations, position iterations\r\n\t\t\tif (self._mode === 0) {\r\n\t\t\t\tself._world.Step(ige._tickDelta / 1000, 8, 3);\r\n\t\t\t} else {\r\n\t\t\t\tself._world.Step(1 / 60, 8, 3);\r\n\t\t\t}\r\n\r\n\t\t\t// Loop the physics objects and move the entities they are assigned to\r\n\t\t\ttempBod = self._world.GetBodyList();\r\n\t\t\twhile (tempBod) {\r\n\t\t\t\tif (tempBod._entity) {\r\n\t\t\t\t\t// Body has an entity assigned to it\r\n\t\t\t\t\tentity = tempBod._entity; //self.ige.entities.read(tempBod.m_userData);\r\n\t\t\t\t\tentityBox2dBody = entity._box2dBody;\r\n\r\n\t\t\t\t\t// Check if the body is awake and is dynamic (we don't transform static bodies)\r\n\t\t\t\t\tif (tempBod.IsAwake() && tempBod.m_type !== 0) {\r\n\t\t\t\t\t\t// Update the entity data to match the body data\r\n\t\t\t\t\t\tentityBox2dBody.updating = true;\r\n\t\t\t\t\t\tentity.translateTo(tempBod.m_xf.position.x * self._scaleRatio, tempBod.m_xf.position.y * self._scaleRatio, entity._translate.z);\r\n\t\t\t\t\t\tentity.rotateTo(entity._rotate.x, entity._rotate.y, tempBod.GetAngle());\r\n\t\t\t\t\t\tentityBox2dBody.updating = false;\r\n\r\n\t\t\t\t\t\tif (entityBox2dBody.asleep) {\r\n\t\t\t\t\t\t\t// The body was asleep last frame, fire an awake event\r\n\t\t\t\t\t\t\tentityBox2dBody.asleep = false;\r\n\t\t\t\t\t\t\tself.emit('afterAwake', entity);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tif (!entityBox2dBody.asleep) {\r\n\t\t\t\t\t\t\t// The body was awake last frame, fire an asleep event\r\n\t\t\t\t\t\t\tentityBox2dBody.asleep = true;\r\n\t\t\t\t\t\t\tself.emit('afterAsleep', entity);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttempBod = tempBod.GetNext();\r\n\t\t\t}\r\n\r\n\t\t\t// Clear forces because we have ended our physics simulation frame\r\n\t\t\tself._world.ClearForces();\r\n\r\n\t\t\ttempBod = null;\r\n\t\t\tentity = null;\r\n\r\n\t\t\tif (typeof(self._updateCallback) === 'function') {\r\n\t\t\t\tself._updateCallback();\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\tdestroy: function () {\r\n\t\t// Stop processing box2d steps\r\n\t\tthis._entity.removeBehaviour('box2dStep');\r\n\r\n\t\t// Destroy all box2d world bodies\r\n\r\n\t}\r\n});\r\n\r\nif (typeof(module) !== 'undefined' && typeof(module.exports) !== 'undefined') { module.exports = IgeBox2dComponent; }","/**\r\n * The engine's box2d multi-world component class.\r\n */\r\nvar IgeBox2dMultiWorldComponent = IgeEventingClass.extend({\r\n\tclassId: 'IgeBox2dMultiWorldComponent',\r\n\tcomponentId: 'box2d',\r\n\r\n\tinit: function (entity, options) {\r\n\t\tthis._entity = entity;\r\n\t\tthis._options = options;\r\n\t\t\r\n\t\tthis._worlds = {};\r\n\r\n\t\tthis.b2Color = Box2D.Common.b2Color;\r\n\t\tthis.b2Vec2 = Box2D.Common.Math.b2Vec2;\r\n\t\tthis.b2Math = Box2D.Common.Math.b2Math;\r\n\t\tthis.b2Shape = Box2D.Collision.Shapes.b2Shape;\r\n\t\tthis.b2BodyDef = Box2D.Dynamics.b2BodyDef;\r\n\t\tthis.b2Body = Box2D.Dynamics.b2Body;\r\n\t\tthis.b2FixtureDef = Box2D.Dynamics.b2FixtureDef;\r\n\t\tthis.b2Fixture = Box2D.Dynamics.b2Fixture;\r\n\t\tthis.b2World = Box2D.Dynamics.b2World;\r\n\t\tthis.b2MassData = Box2D.Collision.Shapes.b2MassData;\r\n\t\tthis.b2PolygonShape = Box2D.Collision.Shapes.b2PolygonShape;\r\n\t\tthis.b2CircleShape = Box2D.Collision.Shapes.b2CircleShape;\r\n\t\tthis.b2DebugDraw = Box2D.Dynamics.b2DebugDraw;\r\n\t\tthis.b2ContactListener = Box2D.Dynamics.b2ContactListener;\r\n\t\tthis.b2Distance = Box2D.Collision.b2Distance;\r\n\t\tthis.b2Contact = Box2D.Dynamics.Contacts.b2Contact;\r\n\t\tthis.b2FilterData = Box2D.Dynamics.b2FilterData;\r\n\t\tthis.b2DistanceJointDef = Box2D.Dynamics.Joints.b2DistanceJointDef;\r\n\r\n\t\t// Extend the b2Contact class to allow the IGE entity accessor\r\n\t\t// and other helper methods\r\n\t\tthis.b2Contact.prototype.igeEntityA = function () {\r\n\t\t\tvar ent = this.m_fixtureA.m_body._entity;\r\n\t\t\tent._box2dOurContactFixture = this.m_fixtureA;\r\n\t\t\tent._box2dTheirContactFixture = this.m_fixtureB;\r\n\t\t\treturn ent;\r\n\t\t};\r\n\r\n\t\tthis.b2Contact.prototype.igeEntityB = function () {\r\n\t\t\tvar ent = this.m_fixtureB.m_body._entity;\r\n\t\t\tent._box2dOurContactFixture = this.m_fixtureB;\r\n\t\t\tent._box2dTheirContactFixture = this.m_fixtureA;\r\n\t\t\treturn ent;\r\n\t\t};\r\n\r\n\t\tthis.b2Contact.prototype.igeEitherId = function (id1, id2) {\r\n\t\t\tif (!id2) {\r\n\t\t\t\treturn this.m_fixtureA.m_body._entity._id === id1 || this.m_fixtureB.m_body._entity._id === id1;\r\n\t\t\t} else {\r\n\t\t\t\treturn (this.m_fixtureA.m_body._entity._id === id1 || this.m_fixtureB.m_body._entity._id === id1) &&\r\n\t\t\t\t\t(this.m_fixtureA.m_body._entity._id === id2 || this.m_fixtureB.m_body._entity._id === id2);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tthis.b2Contact.prototype.igeEitherCategory = function (category1, category2) {\r\n\t\t\tif (!category2) {\r\n\t\t\t\treturn this.m_fixtureA.m_body._entity._category === category1 || this.m_fixtureB.m_body._entity._category === category1;\r\n\t\t\t} else {\r\n\t\t\t\treturn (this.m_fixtureA.m_body._entity._category === category1 || this.m_fixtureB.m_body._entity._category === category1) &&\r\n\t\t\t\t\t(this.m_fixtureA.m_body._entity._category === category2 || this.m_fixtureB.m_body._entity._category === category2);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tthis.b2Contact.prototype.igeBothCategories = function (category1) {\r\n\t\t\treturn (this.m_fixtureA.m_body._entity._category === category1 && this.m_fixtureB.m_body._entity._category === category1);\r\n\t\t};\r\n\r\n\t\tthis.b2Contact.prototype.igeEntityByCategory = function (category) {\r\n\t\t\tif (this.m_fixtureA.m_body._entity._category === category) {\r\n\t\t\t\treturn this.igeEntityA();\r\n\t\t\t}\r\n\r\n\t\t\tif (this.m_fixtureB.m_body._entity._category === category) {\r\n\t\t\t\treturn this.igeEntityB();\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tthis.b2Contact.prototype.igeEntityById = function (id) {\r\n\t\t\tif (this.m_fixtureA.m_body._entity._id === id) {\r\n\t\t\t\treturn this.igeEntityA();\r\n\t\t\t}\r\n\r\n\t\t\tif (this.m_fixtureB.m_body._entity._id === id) {\r\n\t\t\t\treturn this.igeEntityB();\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tthis.b2Contact.prototype.igeEntityByFixtureId = function (id) {\r\n\t\t\tif (this.m_fixtureA.igeId === id) {\r\n\t\t\t\treturn this.igeEntityA();\r\n\t\t\t}\r\n\r\n\t\t\tif (this.m_fixtureB.igeId === id) {\r\n\t\t\t\treturn this.igeEntityB();\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tthis.b2Contact.prototype.igeOtherEntity = function (entity) {\r\n\t\t\tif (this.m_fixtureA.m_body._entity === entity) {\r\n\t\t\t\treturn this.igeEntityB();\r\n\t\t\t} else {\r\n\t\t\t\treturn this.igeEntityA();\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tthis.log('Physics component initiated!');\r\n\t},\r\n\r\n\t/**\r\n\t * Gets the Box2d world object by it's id.\r\n\t * @return {b2World}\r\n\t */\r\n\tworld: function (id) {\r\n\t\treturn this._worlds[id];\r\n\t},\r\n\r\n\t/**\r\n\t * Creates the Box2d world.\r\n\t * @param {String} id\r\n\t * @param {Object=} options\r\n\t * @return {*}\r\n\t */\r\n\tcreateWorld: function (options) {\r\n\t\tvar world;\r\n\t\t\r\n\t\toptions = options || {};\r\n\t\toptions.id = options.id || ige.newIdHex();\r\n\t\toptions.gravity = options.gravity || new this.b2Vec2(0, 0);\r\n\t\toptions.sleep = options.sleep !== undefined ? options.sleep : true;\r\n\t\t\r\n\t\t// Create world instance\r\n\t\tthis._worlds[options.id] = world = new IgeBox2dWorld(this, options);\r\n\t\t\r\n\t\treturn world;\r\n\t}\r\n});\r\n\r\nif (typeof(module) !== 'undefined' && typeof(module.exports) !== 'undefined') { module.exports = IgeBox2dMultiWorldComponent; }","var IgeBox2dWorld = IgeEventingClass.extend({\r\n\tclassId: 'IgeBox2dWorld',\r\n\t\r\n\tinit: function (entity, options) {\r\n\t\tthis.b2Color = Box2D.Common.b2Color;\r\n\t\tthis.b2Vec2 = Box2D.Common.Math.b2Vec2;\r\n\t\tthis.b2Math = Box2D.Common.Math.b2Math;\r\n\t\tthis.b2Shape = Box2D.Collision.Shapes.b2Shape;\r\n\t\tthis.b2BodyDef = Box2D.Dynamics.b2BodyDef;\r\n\t\tthis.b2Body = Box2D.Dynamics.b2Body;\r\n\t\tthis.b2FixtureDef = Box2D.Dynamics.b2FixtureDef;\r\n\t\tthis.b2Fixture = Box2D.Dynamics.b2Fixture;\r\n\t\tthis.b2World = Box2D.Dynamics.b2World;\r\n\t\tthis.b2MassData = Box2D.Collision.Shapes.b2MassData;\r\n\t\tthis.b2PolygonShape = Box2D.Collision.Shapes.b2PolygonShape;\r\n\t\tthis.b2CircleShape = Box2D.Collision.Shapes.b2CircleShape;\r\n\t\tthis.b2DebugDraw = Box2D.Dynamics.b2DebugDraw;\r\n\t\tthis.b2ContactListener = Box2D.Dynamics.b2ContactListener;\r\n\t\tthis.b2Distance = Box2D.Collision.b2Distance;\r\n\t\tthis.b2Contact = Box2D.Dynamics.Contacts.b2Contact;\r\n\t\tthis.b2FilterData = Box2D.Dynamics.b2FilterData;\r\n\t\tthis.b2DistanceJointDef = Box2D.Dynamics.Joints.b2DistanceJointDef;\r\n\t\t\r\n\t\tthis._entity = entity;\r\n\t\t\r\n\t\toptions = options || {\r\n\t\t\tid: ige.newIdHex(),\r\n\t\t\tgravity: new this.b2Vec2(0, 0),\r\n\t\t\tsleep: true\r\n\t\t};\r\n\t\t\r\n\t\tthis._id = options.id;\r\n\t\tthis._sleep = options.sleep;\r\n\t\tthis._scaleRatio = options.scaleRatio !== undefined ? options.scaleRatio : 30;\r\n\t\tthis._gravity = options.gravity;\r\n\t\tthis._mode = 0;\r\n\r\n\t\tthis._removeWhenReady = [];\r\n\t\t\r\n\t\tthis._world = new this.b2World(\r\n\t\t\toptions.gravity,\r\n\t\t\toptions.sleep\r\n\t\t);\r\n\t},\r\n\t\r\n\t/**\r\n\t * Creates a Box2d fixture and returns it.\r\n\t * @param params\r\n\t * @return {b2FixtureDef}\r\n\t */\r\n\tcreateFixture: function (params) {\r\n\t\tvar tempDef = new this.b2FixtureDef(),\r\n\t\t\tparam;\r\n\r\n\t\tfor (param in params) {\r\n\t\t\tif (params.hasOwnProperty(param)) {\r\n\t\t\t\tif (param !== 'shape' && param !== 'filter') {\r\n\t\t\t\t\ttempDef[param] = params[param];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn tempDef;\r\n\t},\r\n\r\n\t/**\r\n\t * Creates a Box2d body and attaches it to an IGE entity\r\n\t * based on the supplied body definition.\r\n\t * @param {IgeEntityBox2d} entity\r\n\t * @param {Object} body\r\n\t * @return {b2Body}\r\n\t */\r\n\tcreateBody: function (entity, body) {\r\n\t\tvar tempDef = new this.b2BodyDef(),\r\n\t\t\tparam,\r\n\t\t\ttempBod,\r\n\t\t\tfixtureDef,\r\n\t\t\ttempFixture,\r\n\t\t\tfinalFixture,\r\n\t\t\ttempShape,\r\n\t\t\ttempFilterData,\r\n\t\t\ti,\r\n\t\t\tfinalX, finalY,\r\n\t\t\tfinalWidth, finalHeight;\r\n\r\n\t\t// Process body definition and create a box2d body for it\r\n\t\tswitch (body.type) {\r\n\t\t\tcase 'static':\r\n\t\t\t\ttempDef.type = this.b2Body.b2_staticBody;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'dynamic':\r\n\t\t\t\ttempDef.type = this.b2Body.b2_dynamicBody;\r\n\t\t\t\tbreak;\r\n\t\t\t\r\n\t\t\tcase 'kinematic':\r\n                tempDef.type = this.b2Body.b2_kinematicBody;\r\n                break;\r\n\t\t}\r\n\r\n\t\t// Add the parameters of the body to the new body instance\r\n\t\tfor (param in body) {\r\n\t\t\tif (body.hasOwnProperty(param)) {\r\n\t\t\t\tswitch (param) {\r\n\t\t\t\t\tcase 'type':\r\n\t\t\t\t\tcase 'gravitic':\r\n\t\t\t\t\tcase 'fixedRotation':\r\n\t\t\t\t\tcase 'fixtures':\r\n\t\t\t\t\t\t// Ignore these for now, we process them\r\n\t\t\t\t\t\t// below as post-creation attributes\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\ttempDef[param] = body[param];\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Set the position\r\n\t\ttempDef.position = new this.b2Vec2(entity._translate.x / this._scaleRatio, entity._translate.y / this._scaleRatio);\r\n\t\t\r\n\t\t// Create the new body\r\n\t\ttempBod = this._world.CreateBody(tempDef);\r\n\r\n\t\t// Now apply any post-creation attributes we need to\r\n\t\tfor (param in body) {\r\n\t\t\tif (body.hasOwnProperty(param)) {\r\n\t\t\t\tswitch (param) {\r\n\t\t\t\t\tcase 'gravitic':\r\n\t\t\t\t\t\tif (!body.gravitic) {\r\n\t\t\t\t\t\t\ttempBod.m_nonGravitic = true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'fixedRotation':\r\n\t\t\t\t\t\tif (body.fixedRotation) {\r\n\t\t\t\t\t\t\ttempBod.SetFixedRotation(true);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'fixtures':\r\n\t\t\t\t\t\tif (body.fixtures && body.fixtures.length) {\r\n\t\t\t\t\t\t\tfor (i = 0; i < body.fixtures.length; i++) {\r\n\t\t\t\t\t\t\t\t// Grab the fixture definition\r\n\t\t\t\t\t\t\t\tfixtureDef = body.fixtures[i];\r\n\t\r\n\t\t\t\t\t\t\t\t// Create the fixture\r\n\t\t\t\t\t\t\t\ttempFixture = this.createFixture(fixtureDef);\r\n\t\t\t\t\t\t\t\ttempFixture.igeId = fixtureDef.igeId;\r\n\t\r\n\t\t\t\t\t\t\t\t// Check for a shape definition for the fixture\r\n\t\t\t\t\t\t\t\tif (fixtureDef.shape) {\r\n\t\t\t\t\t\t\t\t\t// Create based on the shape type\r\n\t\t\t\t\t\t\t\t\tswitch (fixtureDef.shape.type) {\r\n\t\t\t\t\t\t\t\t\t\tcase 'circle':\r\n\t\t\t\t\t\t\t\t\t\t\ttempShape = new this.b2CircleShape();\r\n\t\t\t\t\t\t\t\t\t\t\tif (fixtureDef.shape.data && typeof(fixtureDef.shape.data.radius) !== 'undefined') {\r\n\t\t\t\t\t\t\t\t\t\t\t\ttempShape.SetRadius(fixtureDef.shape.data.radius / this._scaleRatio);\r\n\t\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\t\ttempShape.SetRadius((entity._bounds2d.x / this._scaleRatio) / 2);\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\tif (fixtureDef.shape.data) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tfinalX = fixtureDef.shape.data.x !== undefined ? fixtureDef.shape.data.x : 0;\r\n\t\t\t\t\t\t\t\t\t\t\t\tfinalY = fixtureDef.shape.data.y !== undefined ? fixtureDef.shape.data.y : 0;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\ttempShape.SetLocalPosition(new this.b2Vec2(finalX / this._scaleRatio, finalY / this._scaleRatio));\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\t\t\t\t\tcase 'polygon':\r\n\t\t\t\t\t\t\t\t\t\t\ttempShape = new this.b2PolygonShape();\r\n\t\t\t\t\t\t\t\t\t\t\ttempShape.SetAsArray(fixtureDef.shape.data._poly, fixtureDef.shape.data.length());\r\n\t\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\t\t\t\t\tcase 'rectangle':\r\n\t\t\t\t\t\t\t\t\t\t\ttempShape = new this.b2PolygonShape();\r\n\t\r\n\t\t\t\t\t\t\t\t\t\t\tif (fixtureDef.shape.data) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tfinalX = fixtureDef.shape.data.x !== undefined ? fixtureDef.shape.data.x : 0;\r\n\t\t\t\t\t\t\t\t\t\t\t\tfinalY = fixtureDef.shape.data.y !== undefined ? fixtureDef.shape.data.y : 0;\r\n\t\t\t\t\t\t\t\t\t\t\t\tfinalWidth = fixtureDef.shape.data.width !== undefined ? fixtureDef.shape.data.width : (entity._bounds2d.x / 2);\r\n\t\t\t\t\t\t\t\t\t\t\t\tfinalHeight = fixtureDef.shape.data.height !== undefined ? fixtureDef.shape.data.height : (entity._bounds2d.y / 2);\r\n\t\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\t\tfinalX = 0;\r\n\t\t\t\t\t\t\t\t\t\t\t\tfinalY = 0;\r\n\t\t\t\t\t\t\t\t\t\t\t\tfinalWidth = (entity._bounds2d.x / 2);\r\n\t\t\t\t\t\t\t\t\t\t\t\tfinalHeight = (entity._bounds2d.y / 2);\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\t\t\t\t\t// Set the polygon as a box\r\n\t\t\t\t\t\t\t\t\t\t\ttempShape.SetAsOrientedBox(\r\n\t\t\t\t\t\t\t\t\t\t\t\t(finalWidth / this._scaleRatio),\r\n\t\t\t\t\t\t\t\t\t\t\t\t(finalHeight / this._scaleRatio),\r\n\t\t\t\t\t\t\t\t\t\t\t\tnew this.b2Vec2(finalX / this._scaleRatio, finalY / this._scaleRatio),\r\n\t\t\t\t\t\t\t\t\t\t\t\t0\r\n\t\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\t\t\tif (tempShape) {\r\n\t\t\t\t\t\t\t\t\t\ttempFixture.shape = tempShape;\r\n\t\t\t\t\t\t\t\t\t\tfinalFixture = tempBod.CreateFixture(tempFixture);\r\n\t\t\t\t\t\t\t\t\t\tfinalFixture.igeId = tempFixture.igeId;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\t\tif (fixtureDef.filter && finalFixture) {\r\n\t\t\t\t\t\t\t\t\ttempFilterData = new this.b2FilterData();\r\n\t\r\n\t\t\t\t\t\t\t\t\tif (fixtureDef.filter.categoryBits !== undefined) { tempFilterData.categoryBits = fixtureDef.filter.categoryBits; }\r\n\t\t\t\t\t\t\t\t\tif (fixtureDef.filter.maskBits !== undefined) { tempFilterData.maskBits = fixtureDef.filter.maskBits; }\r\n\t\t\t\t\t\t\t\t\tif (fixtureDef.filter.categoryIndex !== undefined) { tempFilterData.categoryIndex = fixtureDef.filter.categoryIndex; }\r\n\t\r\n\t\t\t\t\t\t\t\t\tfinalFixture.SetFilterData(tempFilterData);\r\n\t\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\t\tif (fixtureDef.density !== undefined && finalFixture) {\r\n\t\t\t\t\t\t\t\t\tfinalFixture.SetDensity(fixtureDef.density);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tthis.log('Box2D body has no fixtures, have you specified fixtures correctly? They are supposed to be an array of fixture objects.', 'warning');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Store the entity that is linked to this body\r\n\t\ttempBod._entity = entity;\r\n\r\n\t\t// Add the body to the world with the passed fixture\r\n\t\treturn tempBod;\r\n\t},\r\n\r\n\t/**\r\n\t * Produces static box2d bodies from passed map data.\r\n\t * @param {IgeTileMap2d} mapLayer\r\n\t * @param {Function=} callback Returns true or false depending\r\n\t * on if the passed map data should be included as part of the\r\n\t * box2d static object data. This allows you to control what\r\n\t * parts of the map data are to be considered for box2d static\r\n\t * objects and which parts are to be ignored. If not passed then\r\n\t * any tile with any map data is considered part of the static\r\n\t * object data.\r\n\t */\r\n\tstaticsFromMap: function (mapLayer, callback) {\r\n\t\tif (mapLayer.map) {\r\n\t\t\tvar tileWidth = mapLayer.tileWidth(),\r\n\t\t\t\ttileHeight = mapLayer.tileHeight(),\r\n\t\t\t\tposX, posY,\r\n\t\t\t\trectArray, rectCount, rect;\r\n\r\n\t\t\t// Get the array of rectangle bounds based on\r\n\t\t\t// the map's data\r\n\t\t\trectArray = mapLayer.scanRects(callback);\r\n\t\t\trectCount = rectArray.length;\r\n\r\n\t\t\twhile (rectCount--) {\r\n\t\t\t\trect = rectArray[rectCount];\r\n\r\n\t\t\t\tposX = (tileWidth * (rect.width / 2));\r\n\t\t\t\tposY = (tileHeight * (rect.height / 2));\r\n\r\n\t\t\t\tnew IgeEntityBox2d()\r\n\t\t\t\t\t.translateTo(rect.x * tileWidth + posX, rect.y * tileHeight + posY, 0)\r\n\t\t\t\t\t.width(rect.width * tileWidth)\r\n\t\t\t\t\t.height(rect.height * tileHeight)\r\n\t\t\t\t\t.drawBounds(true)\r\n\t\t\t\t\t.drawBoundsData(false)\r\n\t\t\t\t\t.box2dBody({\r\n\t\t\t\t\t\ttype: 'static',\r\n\t\t\t\t\t\tallowSleep: true,\r\n\t\t\t\t\t\tfixtures: [{\r\n\t\t\t\t\t\t\tshape: {\r\n\t\t\t\t\t\t\t\ttype: 'rectangle'\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}]\r\n\t\t\t\t\t});\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthis.log('Cannot extract box2d static bodies from map data because passed map does not have a .map property!', 'error');\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Creates a contact listener with the specified callbacks. When\r\n\t * contacts begin and end inside the box2d simulation the specified\r\n\t * callbacks are fired.\r\n\t * @param {Function} beginContactCallback The method to call when the contact listener detects contact has started.\r\n\t * @param {Function} endContactCallback The method to call when the contact listener detects contact has ended.\r\n\t * @param {Function} preSolve\r\n\t * @param {Function} postSolve\r\n\t */\r\n\tcontactListener: function (beginContactCallback, endContactCallback, preSolve, postSolve) {\r\n\t\tvar contactListener = new this.b2ContactListener();\r\n\t\tif (beginContactCallback !== undefined) {\r\n\t\t\tcontactListener.BeginContact = beginContactCallback;\r\n\t\t}\r\n\r\n\t\tif (endContactCallback !== undefined) {\r\n\t\t\tcontactListener.EndContact = endContactCallback;\r\n\t\t}\r\n\r\n\t\tif (preSolve !== undefined) {\r\n\t\t\tcontactListener.PreSolve = preSolve;\r\n\t\t}\r\n\r\n\t\tif (postSolve !== undefined) {\r\n\t\t\tcontactListener.PostSolve = postSolve;\r\n\t\t}\r\n\t\tthis._world.SetContactListener(contactListener);\r\n\t},\r\n\t\r\n\t/**\r\n\t * If enabled, sets the physics world into network debug mode which\r\n\t * will stop the world from generating collisions but still allow us\r\n\t * to see shape outlines as they are attached to bodies. Useful when\r\n\t * your physics system is server-side but seeing client-side shape\r\n\t * data is useful for debugging collisions.\r\n\t * @param {Boolean} val\r\n\t */\r\n\tnetworkDebugMode: function (val) {\r\n\t\tif (val !== undefined) {\r\n\t\t\tthis._networkDebugMode = val;\r\n\t\t\t\r\n\t\t\tif (val === true) {\r\n\t\t\t\t// We are enabled so disable all physics contacts\r\n\t\t\t\tthis.contactListener(\r\n\t\t\t\t\t// Begin contact\r\n\t\t\t\t\tfunction (contact) {},\r\n\t\t\t\t\t// End contact\r\n\t\t\t\t\tfunction (contact) {},\r\n\t\t\t\t\t// Pre-solve\r\n\t\t\t\t\tfunction (contact) {\r\n\t\t\t\t\t\t// Cancel the contact\r\n\t\t\t\t\t\tcontact.SetEnabled(false);\r\n\t\t\t\t\t},\r\n\t\t\t\t\t// Post-solve\r\n\t\t\t\t\tfunction (contact) {}\r\n\t\t\t\t);\r\n\t\t\t} else {\r\n\t\t\t\t// Re-enable contacts\r\n\t\t\t\tthis.contactListener();\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\treturn this._networkDebugMode;\r\n\t},\r\n\r\n\t/**\r\n\t * Creates a debug entity that outputs the bounds of each box2d\r\n\t * body during standard engine ticks.\r\n\t * @param {IgeEntity} mountScene\r\n\t */\r\n\tenableDebug: function (mountScene) {\r\n\t\tif (mountScene) {\r\n\t\t\t// Define the debug drawing instance\r\n\t\t\tvar debugDraw = new this.b2DebugDraw();\r\n\t\t\tthis._box2dDebug = true;\r\n\r\n\t\t\tdebugDraw.SetSprite(ige._ctx);\r\n\t\t\tdebugDraw.SetDrawScale(this._scaleRatio);\r\n\t\t\tdebugDraw.SetFillAlpha(0.3);\r\n\t\t\tdebugDraw.SetLineThickness(1.0);\r\n\t\t\tdebugDraw.SetFlags(\r\n\t\t\t\tthis.b2DebugDraw.e_controllerBit\r\n\t\t\t\t| this.b2DebugDraw.e_jointBit\r\n\t\t\t\t| this.b2DebugDraw.e_pairBit\r\n\t\t\t\t| this.b2DebugDraw.e_shapeBit\r\n\t\t\t\t//| this.b2DebugDraw.e_aabbBit\r\n\t\t\t\t//| this.b2DebugDraw.e_centerOfMassBit\r\n\t\t\t);\r\n\r\n\t\t\t// Set the debug draw for the world\r\n\t\t\tthis._world.SetDebugDraw(debugDraw);\r\n\r\n\t\t\t// Create the debug painter entity and mount\r\n\t\t\t// it to the passed scene\r\n\t\t\tnew igeClassStore.IgeBox2dDebugPainter()\r\n\t\t\t\t.depth(40000) // Set a really high depth\r\n\t\t\t\t.drawBounds(false)\r\n\t\t\t\t.mount(mountScene);\r\n\t\t} else {\r\n\t\t\tthis.log('Cannot enable box2d debug drawing because the passed argument is not an object on the scenegraph.', 'error');\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Queues a body for removal from the physics world.\r\n\t * @param body\r\n\t */\r\n\tdestroyBody: function (body) {\r\n\t\tthis._removeWhenReady.push(body);\r\n\t},\r\n\r\n\t/**\r\n\t * Gets / sets the callback method that will be called after\r\n\t * every physics world step.\r\n\t * @param method\r\n\t * @return {*}\r\n\t */\r\n\tupdateCallback: function (method) {\r\n\t\tif (method !== undefined) {\r\n\t\t\tthis._updateCallback = method;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\treturn this._updateCallback;\r\n\t},\r\n\r\n\tstart: function () {\r\n\t\tvar self = this;\r\n\t\tif (!this._active) {\r\n\t\t\tthis._active = true;\r\n\t\t\t\r\n\t\t\tif (!this._networkDebugMode) {\r\n\t\t\t\tif (this._mode === 0) {\r\n\t\t\t\t\t// Add the box2d behaviour to the ige\r\n\t\t\t\t\tige.addBehaviour('box2dStep_' + self._id, function () { self._behaviour.apply(self, arguments); });\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._intervalTimer = setInterval(function () { self._behaviour.apply(self, arguments); }, 1000 / 60);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\tstop: function () {\r\n\t\tif (this._active) {\r\n\t\t\tthis._active = false;\r\n\r\n\t\t\tif (this._mode === 0) {\r\n\t\t\t\t// Add the box2d behaviour to the ige\r\n\t\t\t\tige.removeBehaviour('box2dStep_' + this._id);\r\n\t\t\t} else {\r\n\t\t\t\tclearInterval(this._intervalTimer);\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Steps the physics simulation forward.\r\n\t * @param ctx\r\n\t * @private\r\n\t */\r\n\t_behaviour: function (ctx) {\r\n\t\tvar self = this,\r\n\t\t\ttempBod,\r\n\t\t\tentity,\r\n\t\t\tentityBox2dBody,\r\n\t\t\tremoveWhenReady,\r\n\t\t\tcount,\r\n\t\t\tdestroyBody;\r\n\r\n\t\tif (self._active && self._world) {\r\n\t\t\tif (!self._world.IsLocked()) {\r\n\t\t\t\t// Remove any bodies that were queued for removal\r\n\t\t\t\tremoveWhenReady = self._removeWhenReady;\r\n\t\t\t\tcount = removeWhenReady.length;\r\n\r\n\t\t\t\tif (count) {\r\n\t\t\t\t\tdestroyBody = self._world.DestroyBody;\r\n\t\t\t\t\twhile (count--) {\r\n\t\t\t\t\t\tdestroyBody.apply(self._world, [removeWhenReady[count]]);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tself._removeWhenReady = [];\r\n\t\t\t\t\tremoveWhenReady = null;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Call the world step; frame-rate, velocity iterations, position iterations\r\n\t\t\tif (self._mode === 0) {\r\n\t\t\t\tself._world.Step(ige._tickDelta / 1000, 8, 3);\r\n\t\t\t} else {\r\n\t\t\t\tself._world.Step(1 / 60, 8, 3);\r\n\t\t\t}\r\n\r\n\t\t\t// Loop the physics objects and move the entities they are assigned to\r\n\t\t\ttempBod = self._world.GetBodyList();\r\n\t\t\twhile (tempBod) {\r\n\t\t\t\tif (tempBod._entity) {\r\n\t\t\t\t\t// Body has an entity assigned to it\r\n\t\t\t\t\tentity = tempBod._entity; //self.ige.entities.read(tempBod.m_userData);\r\n\t\t\t\t\tentityBox2dBody = entity._box2dBody;\r\n\r\n\t\t\t\t\t// Check if the body is awake and is dynamic (we don't transform static bodies)\r\n\t\t\t\t\tif (tempBod.IsAwake() && tempBod.m_type !== 0) {\r\n\t\t\t\t\t\t// Update the entity data to match the body data\r\n\t\t\t\t\t\tentityBox2dBody.updating = true;\r\n\t\t\t\t\t\tentity.translateTo(tempBod.m_xf.position.x * entity._b2dRef._scaleRatio, tempBod.m_xf.position.y * entity._b2dRef._scaleRatio, entity._translate.z);\r\n\t\t\t\t\t\tentity.rotateTo(entity._rotate.x, entity._rotate.y, tempBod.GetAngle());\r\n\t\t\t\t\t\tentityBox2dBody.updating = false;\r\n\r\n\t\t\t\t\t\tif (entityBox2dBody.asleep) {\r\n\t\t\t\t\t\t\t// The body was asleep last frame, fire an awake event\r\n\t\t\t\t\t\t\tentityBox2dBody.asleep = false;\r\n\t\t\t\t\t\t\tself.emit('afterAwake', entity);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tif (!entityBox2dBody.asleep) {\r\n\t\t\t\t\t\t\t// The body was awake last frame, fire an asleep event\r\n\t\t\t\t\t\t\tentityBox2dBody.asleep = true;\r\n\t\t\t\t\t\t\tself.emit('afterAsleep', entity);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttempBod = tempBod.GetNext();\r\n\t\t\t}\r\n\r\n\t\t\t// Clear forces because we have ended our physics simulation frame\r\n\t\t\tself._world.ClearForces();\r\n\r\n\t\t\ttempBod = null;\r\n\t\t\tentity = null;\r\n\r\n\t\t\tif (typeof(self._updateCallback) === 'function') {\r\n\t\t\t\tself._updateCallback();\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\tdestroy: function () {\r\n\t\t// Stop processing box2d steps\r\n\t\tthis.removeBehaviour('box2dStep');\r\n\r\n\t\t// Destroy all box2d world bodies\r\n\r\n\t}\r\n});\r\n\r\nif (typeof(module) !== 'undefined' && typeof(module.exports) !== 'undefined') { module.exports = IgeBox2dWorld; }","var IgeBox2dDebugPainter = IgeObject.extend({\r\n\tclassId: 'IgeBox2dDebugPainter',\r\n\t\r\n\tinit: function (entity, options) {\r\n\t\tIgeObject.prototype.init.call(this);\r\n\t\t\r\n\t\tthis._entity = entity;\r\n\t\tthis._options = options;\r\n\t},\r\n\r\n\ttick: function (ctx) {\r\n\t\tif (this._parent && this._parent.isometricMounts() === 1) {\r\n\t\t\tctx.scale(1.414, 0.707); // This should be super-accurate now\r\n\t\t\tctx.rotate(45  * Math.PI / 180);\r\n\t\t}\r\n\t\t\r\n\t\tthis._entity.box2d._world.DrawDebugData();\r\n\r\n\t\tIgeObject.prototype.tick.call(this, ctx);\r\n\t}\r\n});","/**\r\n * Creates a new entity with box2d integration.\r\n */\r\nvar IgeEntityBox2d = IgeEntity.extend({\r\n\tclassId: 'IgeEntityBox2d',\r\n\r\n\tinit: function (world) {\r\n\t\tIgeEntity.prototype.init.call(this);\r\n\t\t\r\n\t\tif (world) {\r\n\t\t\tif (typeof(world) === 'string') {\r\n\t\t\t\t// Get world reference\r\n\t\t\t\tworld = ige.box2d.world(world);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis._box2dWorld = world;\r\n\t\t\tthis._b2dRef = world;\r\n\t\t} else {\r\n\t\t\tthis._b2dRef = ige.box2d;\r\n\t\t}\r\n\t\t\r\n\t\t// Check if box2d is enabled in the engine\r\n\t\tif (ige.box2d) {\r\n\t\t\tif (!this._b2dRef._networkDebugMode) {\r\n\t\t\t\t// Store the existing transform methods\r\n\t\t\t\tthis._translateToProto = this.translateTo;\r\n\t\t\t\tthis._translateByProto = this.translateBy;\r\n\t\t\r\n\t\t\t\tthis._rotateToProto = this.rotateTo;\r\n\t\t\t\tthis._rotateByProto = this.rotateBy;\r\n\t\t\r\n\t\t\t\t// Take over the transform methods\r\n\t\t\t\tthis.translateTo = this._translateTo;\r\n\t\t\t\tthis.translateBy = this._translateBy;\r\n\t\t\r\n\t\t\t\tthis.rotateTo = this._rotateTo;\r\n\t\t\t\tthis.rotateBy = this._rotateBy;\r\n\t\t\t} else {\r\n\t\t\t\tthis._translateToProto = function () {};\r\n\t\t\t\tthis._translateByProto = function () {};\r\n\t\t\r\n\t\t\t\tthis._rotateToProto = function () {};\r\n\t\t\t\tthis._rotateByProto = function () {};\r\n\t\t\t\t\r\n\t\t\t\tthis._updateProto = this.update;\r\n\t\t\t\t\r\n\t\t\t\t// Make sure box2d is kept up to date by the engine\r\n\t\t\t\tthis.update = this._update;\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Gets / sets the box2d body's active flag which determines\r\n\t * if it will be included as part of the physics simulation\r\n\t * or not.\r\n\t * @param {Boolean=} val Set to true to include the body in\r\n\t * the physics simulation or false for it to be ignored.\r\n\t * @return {*}\r\n\t */\r\n\tbox2dActive: function (val) {\r\n\t\tif (this._box2dBody) {\r\n\t\t\tif (val !== undefined) {\r\n\t\t\t\tthis._box2dBody.SetActive(val);\r\n\t\t\t\treturn this;\r\n\t\t\t}\r\n\r\n\t\t\treturn this._box2dBody.IsActive();\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * Gets / sets the physics body definition. When setting the\r\n\t * definition the physics body will also be created automatically\r\n\t * from the supplied definition.\r\n\t * @param def\r\n\t * @return {*}\r\n\t */\r\n\tbox2dBody: function (def) {\r\n\t\tif (def !== undefined) {\r\n\t\t\tthis._box2dBodyDef = def;\r\n\r\n\t\t\t// Check that the box2d component exists\r\n\t\t\tif (ige.box2d) {\r\n\t\t\t\t// Ask the box2d component to create a new body for us\r\n\t\t\t\tthis._box2dBody = this._b2dRef.createBody(this, def);\r\n\t\t\t} else {\r\n\t\t\t\tthis.log('You are trying to create a box2d entity but you have not added the box2d component to the ige instance!', 'error');\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\treturn this._box2dBodyDef;\r\n\t},\r\n\r\n\t/**\r\n\t * Gets / sets the box2d body's gravitic value. If set to false,\r\n\t * this entity will not be affected by gravity. If set to true it\r\n\t * will be affected by gravity.\r\n\t * @param {Boolean=} val True to allow gravity to affect this entity.\r\n\t * @returns {*}\r\n\t */\r\n\tgravitic: function (val) {\r\n\t\tif (this._box2dBody) {\r\n\t\t\tif (val !== undefined) {\r\n\t\t\t\tthis._box2dBody.m_nonGravitic = !val;\r\n\t\t\t\tthis._box2dBodyDef.gravitic = val;\r\n\t\t\t\t\r\n\t\t\t\t// Wake up the body\r\n\t\t\t\tthis._box2dBody.SetAwake(true);\r\n\t\t\t\treturn this;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn !this._box2dBody.m_nonGravitic;\r\n\t\t}\r\n\t},\r\n\t\r\n\ton: function () {\r\n\t\tif (arguments.length === 3) {\r\n\t\t\tvar evName = arguments[0],\r\n\t\t\t\ttarget = arguments[1],\r\n\t\t\t\tcallback = arguments[2],\r\n\t\t\t\ttype;\r\n\r\n\t\t\tswitch (target.substr(0, 1)) {\r\n\t\t\t\tcase '#':\r\n\t\t\t\t\ttype = 0;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase '.':\r\n\t\t\t\t\ttype = 1;\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\ttarget = target.substr(1, target.length - 1);\r\n\t\t\t\r\n\t\t\tswitch (evName) {\r\n\t\t\t\tcase 'collisionStart':\r\n\t\t\t\t\tthis._collisionStartListeners = this._collisionStartListeners || [];\r\n\t\t\t\t\tthis._collisionStartListeners.push({\r\n\t\t\t\t\t\ttype: type,\r\n\t\t\t\t\t\ttarget: target,\r\n\t\t\t\t\t\tcallback: callback\r\n\t\t\t\t\t});\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (!this._contactListener) {\r\n\t\t\t\t\t\t// Setup contact listener\r\n\t\t\t\t\t\tthis._contactListener = this._setupContactListeners();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t\r\n\t\t\t\tcase 'collisionEnd':\r\n\t\t\t\t\tthis._collisionEndListeners = this._collisionEndListeners || [];\r\n\t\t\t\t\tthis._collisionEndListeners.push({\r\n\t\t\t\t\t\ttype: type,\r\n\t\t\t\t\t\ttarget: target,\r\n\t\t\t\t\t\tcallback: callback\r\n\t\t\t\t\t});\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (!this._contactListener) {\r\n\t\t\t\t\t\t// Setup contact listener\r\n\t\t\t\t\t\tthis._contactListener = this._setupContactListeners();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tthis.log('Cannot add event listener, event type ' + evName + ' not recognised', 'error');\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tIgeEntity.prototype.on.apply(this, arguments);\r\n\t\t}\r\n\t},\r\n\t\r\n\toff: function () {\r\n\t\tif (arguments.length === 3) {\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\tIgeEntity.prototype.off.apply(this, arguments);\r\n\t\t}\r\n\t},\r\n\t\r\n\t_setupContactListeners: function () {\r\n\t\tvar self = this;\r\n\t\t\r\n\t\tige.box2d.contactListener(\r\n\t\t\t// Listen for when contact's begin\r\n\t\t\tfunction (contact) {\r\n\t\t\t\t//console.log('Contact begins between', contact.igeEntityA()._id, 'and', contact.igeEntityB()._id);\r\n\t\t\t\t\r\n\t\t\t\t// Loop the collision listeners and check for a match\r\n\t\t\t\tvar arr = self._collisionStartListeners;\r\n\t\t\t\t\r\n\t\t\t\tif (arr) {\r\n\t\t\t\t\tself._checkContact(contact, arr);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t// Listen for when contact's end\r\n\t\t\tfunction (contact) {\r\n\t\t\t\t//console.log('Contact ends between', contact.igeEntityA()._id, 'and', contact.igeEntityB()._id);\r\n\t\t\t\t// Loop the collision listeners and check for a match\r\n\t\t\t\tvar arr = self._collisionEndListeners;\r\n\t\t\t\t\r\n\t\t\t\tif (arr) {\r\n\t\t\t\t\tself._checkContact(contact, arr);\r\n\t\t\t\t}\r\n\t\t\t}/*,\r\n\t\t\t// Handle pre-solver events\r\n\t\t\tfunction (contact) {\r\n\t\t\t\t// If player ship collides with lunar surface, crash!\r\n\t\t\t\tif (contact.igeEitherCategory('orb') && contact.igeEitherCategory('ship')) {\r\n\t\t\t\t\t// Cancel the contact\r\n\t\t\t\t\tcontact.SetEnabled(false);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// You can also check an entity by it's category using igeEitherCategory('categoryName')\r\n\t\t\t}*/\r\n\t\t);\r\n\t},\r\n\t\r\n\t_checkContact: function (contact, arr) {\r\n\t\tvar self = this,\r\n\t\t\tarrCount = arr.length,\r\n\t\t\totherEntity,\r\n\t\t\tlistener,\r\n\t\t\ti;\r\n\t\t\t\t\t\r\n\t\tif (contact.igeEntityA()._id === self._id) {\r\n\t\t\totherEntity = contact.igeEntityB();\r\n\t\t} else if (contact.igeEntityB()._id === self._id) {\r\n\t\t\totherEntity = contact.igeEntityA();\r\n\t\t} else {\r\n\t\t\t// This contact has nothing to do with us\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\tfor (i = 0; i < arrCount; i++) {\r\n\t\t\tlistener = arr[i];\r\n\t\t\t\r\n\t\t\tif (listener.type === 0) {\r\n\t\t\t\t// Listener target is an id\r\n\t\t\t\tif (otherEntity._id === listener.target) {\r\n\t\t\t\t\t// Contact with target established, fire callback\r\n\t\t\t\t\tlistener.callback(contact);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (arr[i].type === 1) {\r\n\t\t\t\t// Listener target is a category\r\n\t\t\t\tif (otherEntity._category === listener.target) {\r\n\t\t\t\t\t// Contact with target established, fire callback\r\n\t\t\t\t\tlistener.callback(contact);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Takes over translateTo calls and processes box2d movement as well.\r\n\t * @param x\r\n\t * @param y\r\n\t * @param z\r\n\t * @return {*}\r\n\t * @private\r\n\t */\r\n\t_translateTo: function (x, y, z) {\r\n\t\tvar entBox2d = this._box2dBody;\r\n\r\n\t\t// Call the original method\r\n\t\tthis._translateToProto(x, y, z);\r\n\r\n\t\t// Check if the entity has a box2d body attached\r\n\t\t// and if so, is it updating or not\r\n\t\tif (entBox2d && !entBox2d.updating) {\r\n\t\t\t// We have an entity with a box2d definition that is\r\n\t\t\t// not currently updating so let's override the standard\r\n\t\t\t// transform op and take over\r\n\r\n\t\t\t// Translate the body\r\n\t\t\tentBox2d.SetPosition({x: x / this._b2dRef._scaleRatio, y: y / this._b2dRef._scaleRatio});\r\n\t\t\tentBox2d.SetAwake(true);\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * Takes over translateBy calls and processes box2d movement as well.\r\n\t * @param x\r\n\t * @param y\r\n\t * @param z\r\n\t * @private\r\n\t */\r\n\t_translateBy: function (x, y, z) {\r\n\t\tthis._translateTo(this._translate.x + x, this._translate.y + y, this._translate.z + z);\r\n\t},\r\n\r\n\t/**\r\n\t * Takes over translateTo calls and processes box2d movement as well.\r\n\t * @param x\r\n\t * @param y\r\n\t * @param z\r\n\t * @return {*}\r\n\t * @private\r\n\t */\r\n\t_rotateTo: function (x, y, z) {\r\n\t\tvar entBox2d = this._box2dBody;\r\n\r\n\t\t// Call the original method\r\n\t\tthis._rotateToProto(x, y, z);\r\n\r\n\t\t// Check if the entity has a box2d body attached\r\n\t\t// and if so, is it updating or not\r\n\t\tif (entBox2d && !entBox2d.updating) {\r\n\t\t\t// We have an entity with a box2d definition that is\r\n\t\t\t// not currently updating so let's override the standard\r\n\t\t\t// transform op and take over\r\n\r\n\t\t\t// Translate the body\r\n\t\t\tentBox2d.SetAngle(z);\r\n\t\t\tentBox2d.SetAwake(true);\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * Takes over translateBy calls and processes box2d movement as well.\r\n\t * @param x\r\n\t * @param y\r\n\t * @param z\r\n\t * @private\r\n\t */\r\n\t_rotateBy: function (x, y, z) {\r\n\t\tthis._rotateTo(this._rotate.x + x, this._rotate.y + y, this._rotate.z + z);\r\n\t},\r\n\r\n\t/**\r\n\t * Purely for networkDebugMode handling, ensures that an entity's transform is\r\n\t * not taken over by the physics simulation and is instead handled by the engine.\r\n\t * @param ctx\r\n\t * @private\r\n\t */\r\n\t_update: function (ctx) {\r\n\t\t// Call the original method\r\n\t\tthis._updateProto(ctx);\r\n\t\t\r\n\t\t// Update the box2d body transform\r\n\t\tthis._translateTo(this._translate.x, this._translate.y, this._translate.z);\r\n\t\tthis._rotateTo(this._rotate.x, this._rotate.y, this._rotate.z);\r\n\t\t\r\n\t\t//IgeEntity.prototype.update.call(this, ctx);\r\n\t},\r\n\r\n\t/**\r\n\t * If true, disabled box2d debug shape drawing for this entity.\r\n\t * @param {Boolean} val\r\n\t */\r\n\tbox2dNoDebug: function (val) {\r\n\t\tif (val !== undefined) {\r\n\t\t\tthis._box2dNoDebug = val;\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\treturn this._box2dNoDebug;\r\n\t},\r\n\r\n\t/**\r\n\t * Destroys the physics entity and the box2d body that\r\n\t * is attached to it.\r\n\t */\r\n\tdestroy: function () {\r\n\t\tif (this._box2dBody) {\r\n\t\t\tthis._b2dRef.destroyBody(this._box2dBody);\r\n\t\t}\r\n\t\tIgeEntity.prototype.destroy.call(this);\r\n\t}\r\n});\r\n\r\nif (typeof(module) !== 'undefined' && typeof(module.exports) !== 'undefined') { module.exports = IgeEntityBox2d; }","/**\r\n * Creates a new entity with CANNON 3d physics integration.\r\n */\r\nvar IgeEntityCannon = IgeEntity.extend({\r\n\tclassId: 'IgeEntityCannon',\r\n\r\n\tinit: function () {\r\n\t\tIgeEntity.prototype.init.call(this);\r\n\r\n\t\t// Store the existing translate methods\r\n\t\tthis._translateToProto = this.translateTo;\r\n\t\tthis._translateByProto = this.translateBy;\r\n\r\n\t\t// Take over the translate methods\r\n\t\tthis.translateTo = this._translateTo;\r\n\t\tthis.translateBy = this._translateBy;\r\n\t},\r\n\r\n\tcannonBody: function (def) {\r\n\t\tif (def !== undefined) {\r\n\t\t\tthis._cannonBodyDef = def;\r\n\r\n\t\t\t// Ask the cannon component to create a new body for us\r\n\t\t\tthis._cannonBody = ige.cannon.createBody(this, def);\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\treturn this._cannonBodyDef;\r\n\t},\r\n\r\n\t_translateTo: function (x, y, z) {\r\n\t\tvar entCannon = this._cannonBody,\r\n\t\t\tscaleRatio = ige.cannon._scaleRatio;\r\n\r\n\t\t// Check if the entity has a cannon body attached\r\n\t\t// and if so, is it updating or not\r\n\t\tif (entCannon && !entCannon._igeUpdating) {\r\n\t\t\t// We have an entity with a cannon definition that is\r\n\t\t\t// not currently updating so let's override the standard\r\n\t\t\t// transform op and take over\r\n\r\n\t\t\t// Translate the body\r\n\t\t\tentCannon.position.x = x / scaleRatio;\r\n\t\t\tentCannon.position.y = y / scaleRatio;\r\n\t\t\tentCannon.position.z = (z + this._bounds3d.z2) / scaleRatio;\r\n\t\t}\r\n\r\n\t\t// Now call the original translate method\r\n\t\tthis._translateToProto(x, y, z);\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t_translateBy: function (x, y, z) {\r\n\t\tthis._translateTo(this._translate.x + x, this._translate.y + y, this._translate.z + z);\r\n\t}\r\n});\r\n\r\nif (typeof(module) !== 'undefined' && typeof(module.exports) !== 'undefined') { module.exports = IgeEntityCannon; }","var IgeUiDropDown = IgeUiElement.extend({\r\n\tclassId: 'IgeUiDropDown',\r\n\t\r\n\tinit: function () {\r\n\t\tvar self = this;\r\n\t\t\r\n\t\tIgeUiElement.prototype.init.call(this);\r\n\t\t\r\n\t\t// Define some default styles\r\n\t\tif (!ige.ui.style('.IgeUiDropDownOption')) {\r\n\t\t\tige.ui.style('.IgeUiDropDownOption', {\r\n\t\t\t\tbackgroundColor: null\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tige.ui.style('.IgeUiDropDownOption:hover', {\r\n\t\t\t\tbackgroundColor: '#00b4ff',\r\n\t\t\t\tcolor: '#ffffff'\r\n\t\t\t});\r\n\t\t}\r\n\t\t\r\n\t\t// Set defaults\r\n\t\tthis.borderColor('#000000');\r\n\t\tthis.borderWidth(1);\r\n\t\tthis.backgroundColor('#ffffff');\r\n\t\tthis.color('#000000');\r\n\t\tthis.width(200);\r\n\t\tthis.height(30);\r\n\t\t\r\n\t\tthis._options = [];\r\n\t\tthis._toggleState = false;\r\n\t\t\r\n\t\tthis._label = new IgeUiLabel()\r\n\t\t\t.left(0)\r\n\t\t\t.right(30)\r\n\t\t\t.top(0)\r\n\t\t\t.bottom(0)\r\n\t\t\t.mount(this);\r\n\t\t\r\n\t\tthis.on('mouseUp', function () {\r\n\t\t\t// Toggle the list drop-down\r\n\t\t\tself.toggle();\r\n\t\t});\r\n\t},\r\n\t\r\n\toptions: function (ops) {\r\n\t\tif (ops !== undefined) {\r\n\t\t\tthis._options = ops;\r\n\t\t\t\r\n\t\t\t// Loop the options and check for a selected one\r\n\t\t\tvar arrCount = ops.length;\r\n\t\t\t\r\n\t\t\twhile (arrCount--) {\r\n\t\t\t\tif (ops[arrCount].selected) {\r\n\t\t\t\t\t// Set this option as selected\r\n\t\t\t\t\tthis.selectIndex(arrCount);\r\n\t\t\t\t\treturn this;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t// No item selected, select the first option\r\n\t\t\tthis.selectIndex(0);\r\n\t\t\t\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\taddOption: function (op) {\r\n\t\tif (op !== undefined) {\r\n\t\t\tthis._options.push(op);\r\n\t\t\t\r\n\t\t\tif (op.selected) {\r\n\t\t\t\t// Set this option as selected\r\n\t\t\t\tthis.selectIndex(this._options.length - 1);\r\n\t\t\t\treturn this;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t// No item selected, select the first option\r\n\t\t\tthis.selectIndex(0);\r\n\t\t\t\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\tremoveAllOptions: function () {\r\n\t\tthis._options = [];\r\n\t\tthis.value({\r\n\t\t\ttext: '',\r\n\t\t\tvalue: ''\r\n\t\t});\r\n\t},\r\n\t\r\n\tblur: function () {\r\n\t\tIgeUiElement.prototype.blur.call(this);\r\n\t\tif (this._toggleState) {\r\n\t\t\tthis.toggle();\r\n\t\t}\r\n\t},\r\n\t\r\n\tselectIndex: function (index) {\r\n\t\tif (this._options[index]) {\r\n\t\t\tthis.value(this._options[index]);\r\n\t\t\tthis.emit('change', this.value());\r\n\t\t}\r\n\t},\r\n\t\r\n\tvalue: function (val) {\r\n\t\tif (val !== undefined) {\r\n\t\t\tIgeUiElement.prototype.value.call(this, val);\r\n\t\t\tthis._label.value(val.text);\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\treturn this._value.value;\r\n\t},\r\n\r\n\ttoggle: function () {\r\n\t\tthis._toggleState = !this._toggleState;\r\n\t\t\r\n\t\tif (this._toggleState) {\r\n\t\t\tvar self = this,\r\n\t\t\t\toptionContainer,\r\n\t\t\t\tmainTop = this._bounds2d.y + 5,\r\n\t\t\t\tmainHeight = this._options.length * 30,\r\n\t\t\t\toptionTop = 0,\r\n\t\t\t\ti;\r\n\t\t\t\r\n\t\t\toptionContainer =new IgeUiElement()\r\n\t\t\t\t.id(this._id + '_options')\r\n\t\t\t\t.backgroundColor(this._backgroundColor)\r\n\t\t\t\t.borderColor(this._borderColor)\r\n\t\t\t\t.borderWidth(this._borderWidth)\r\n\t\t\t\t.top(mainTop)\r\n\t\t\t\t.width(this._bounds2d.x)\r\n\t\t\t\t.height(mainHeight)\r\n\t\t\t\t.mount(this);\r\n\t\t\t\r\n\t\t\tfor (i = 0; i < this._options.length; i++) {\r\n\t\t\t\tige.ui.style('#' + this._id + '_options_' + i, {\r\n\t\t\t\t\tcolor: this._color\r\n\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t\tnew IgeUiLabel()\r\n\t\t\t\t\t.id(this._id + '_options_' + i)\r\n\t\t\t\t\t.data('optionIndex', i)\r\n\t\t\t\t\t.styleClass('IgeUiDropDownOption')\r\n\t\t\t\t\t.value(this._options[i].text)\r\n\t\t\t\t\t.top((this._bounds2d.y * i) + 1)\r\n\t\t\t\t\t.left(1)\r\n\t\t\t\t\t.width(this._bounds2d.x - 2)\r\n\t\t\t\t\t.height(this._bounds2d.y - 2)\r\n\t\t\t\t\t.allowFocus(true)\r\n\t\t\t\t\t.allowActive(true)\r\n\t\t\t\t\t.allowHover(true)\r\n\t\t\t\t\t.mouseUp(function () {\r\n\t\t\t\t\t\tself.selectIndex(this.data('optionIndex'));\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.mount(optionContainer);\r\n\t\t\t} \r\n\t\t} else {\r\n\t\t\tige.$(this._id + '_options').destroy();\r\n\t\t}\r\n\t},\r\n\t\r\n\ttick: function (ctx) {\r\n\t\tIgeUiElement.prototype.tick.call(this, ctx);\r\n\t\t\r\n\t\t// Draw drop-down box\r\n\t\tctx.fillStyle = '#cccccc';\r\n\t\tctx.fillRect(Math.floor(this._bounds2d.x2) - 30, -this._bounds2d.y2 + 1, 30, this._bounds2d.y - 2);\r\n\t\t\r\n\t\t// Chevron\r\n\t\tctx.strokeStyle = this._color;\r\n\t\tctx.beginPath();\r\n\t\tctx.moveTo(this._bounds2d.x2 - 18.5, -this._bounds2d.y2 + 14.5);\r\n\t\tctx.lineTo(this._bounds2d.x2 - 14.5, 2.5);\r\n\t\tctx.lineTo(this._bounds2d.x2 - 10.5, -this._bounds2d.y2 + 14.5);\r\n\t\tctx.stroke();\r\n\t\t\r\n\t\tthis._renderBorder(ctx);\r\n\t}\r\n});\r\n\r\nif (typeof(module) !== 'undefined' && typeof(module.exports) !== 'undefined') { module.exports = IgeUiDropDown; }","var IgeUiButton = IgeUiElement.extend({\r\n\tclassId: 'IgeUiButton',\r\n\t\r\n\tinit: function () {\r\n\t\tvar self = this;\r\n\t\t\r\n\t\tIgeUiElement.prototype.init.call(this);\r\n\t\t\r\n\t\tthis.on('mouseDown', function () {\r\n\t\t\tif (self._autoCell) {\r\n\t\t\t\t// React to the mouse events\r\n\t\t\t\tself.cell(this._cell + 1);\r\n\t\t\t\tself.cacheDirty(true);\r\n\t\t\t}\r\n\t\t});\r\n\t\t\r\n\t\tthis.on('mouseUp', function () {\r\n\t\t\tif (self._autoCell) {\r\n\t\t\t\t// React to the mouse events\r\n\t\t\t\tself.cell(this._cell - 1);\r\n\t\t\t\tself.cacheDirty(true);\r\n\t\t\t}\r\n\t\t});\r\n\t},\r\n\r\n\t/**\r\n\t * Gets / sets the auto cell flag. If true the button will automatically\r\n\t * react to being clicked on and update the texture cell to +1 when mousedown\r\n\t * and -1 when mouseup allowing you to define cell sheets of button graphics\r\n\t * with the up-state on cell 1 and the down-state on cell 2.\r\n\t * @param {Boolean=} val Either true or false.\r\n\t * @returns {*}\r\n\t */\r\n\tautoCell: function (val) {\r\n\t\tif (val !== undefined) {\r\n\t\t\tthis._autoCell = val;\r\n\t\t\t\r\n\t\t\tif (val) {\r\n\t\t\t\tthis.mouseEventsActive(true);\r\n\t\t\t}\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\treturn this._autoCell;\r\n\t},\r\n\t\r\n\t/**\r\n\t * Fires a mouse-down and a mouse-up event for the entity.\r\n\t * @returns {*}\r\n\t */\r\n\tclick: function () {\r\n\t\tif (this._mouseDown) { this._mouseDown(); }\r\n\t\tif (this._mouseUp) { this._mouseUp(); }\r\n\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\ttick: function (ctx) {\r\n\t\tIgeUiElement.prototype.tick.call(this, ctx);\r\n\t\t\r\n\t\t// Now draw any ui overlays\r\n\t\t\r\n\t\t// Check for the old way to assign text to the button\r\n\t\tvar uiData = this.data('ui');\r\n\t\tif (uiData) {\r\n\t\t\t// Draw text\r\n\t\t\tif (uiData['text']) {\r\n\t\t\t\tctx.font = uiData['text'].font || \"normal 12px Verdana\";\r\n\t\t\t\tctx.textAlign = uiData['text'].align || 'center';\r\n\t\t\t\tctx.textBaseline = uiData['text'].baseline || 'middle';\r\n\t\t\t\tctx.fillStyle = uiData['text'].color || '#ffffff';\r\n\t\t\t\tctx.fillText(uiData['text'].value, 0, 0);\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t// Check for the new way to assign text to the button\r\n\t\tif (this._value) {\r\n\t\t\t// Draw text\r\n\t\t\tctx.textAlign = 'center';\r\n\t\t\tctx.textBaseline = 'middle';\r\n\t\t\tctx.fillStyle = this._color;\r\n\t\t\tctx.fillText(this._value, 0, 0);\r\n\t\t}\r\n\t}\r\n});\r\n\r\nif (typeof(module) !== 'undefined' && typeof(module.exports) !== 'undefined') { module.exports = IgeUiButton; }","var IgeUiRadioButton = IgeUiButton.extend({\r\n\tclassId: 'IgeUiRadioButton',\r\n\r\n\tradioGroup: function (val) {\r\n\t\tif (val !== undefined) {\r\n\t\t\tthis._uiRadioGroup = val;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\treturn this._uiRadioGroup;\r\n\t},\r\n\r\n\tselect: function (val) {\r\n\t\tif (val !== undefined) {\r\n\t\t\tthis._uiOnSelect = val;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tif (this._parent) {\r\n\t\t\t// Loop the parent object's children, find any\r\n\t\t\t// radio buttons that belong to this radio group\r\n\t\t\t// and then deselect them\r\n\t\t\tvar arr = this._parent._children,\r\n\t\t\t\tarrCount = arr.length,\r\n\t\t\t\titem;\r\n\r\n\t\t\twhile (arrCount--) {\r\n\t\t\t\titem = arr[arrCount];\r\n\t\t\t\tif (item !== this) {\r\n\t\t\t\t\tif (item._uiRadioGroup === this._uiRadioGroup) {\r\n\t\t\t\t\t\t// The item is part of the same radio group!\r\n\t\t\t\t\t\tif (item._uiSelected) {\r\n\t\t\t\t\t\t\t// The item is selected so un-select it!\r\n\t\t\t\t\t\t\titem._uiSelected = false;\r\n\r\n\t\t\t\t\t\t\t// Fire the item's onDeSelect method\r\n\t\t\t\t\t\t\tif (item._uiOnDeSelect) {\r\n\t\t\t\t\t\t\t\titem._uiOnDeSelect();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Now set this item as selected\r\n\t\tthis._uiSelected = true;\r\n\r\n\t\t// Fire this item's onSelect method\r\n\t\tif (this._uiOnSelect) {\r\n\t\t\tthis._uiOnSelect();\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\tdeSelect: function (val) {\r\n\t\tif (val !== undefined) {\r\n\t\t\tthis._uiOnDeSelect = val;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tthis._uiSelected = false;\r\n\r\n\t\tif (this._uiOnDeSelect) {\r\n\t\t\tthis._uiOnDeSelect();\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t}\r\n});\r\n\r\nif (typeof(module) !== 'undefined' && typeof(module.exports) !== 'undefined') { module.exports = IgeUiRadioButton; }","// TODO: Document this class\r\nvar IgeUiProgressBar = IgeUiElement.extend({\r\n\tclassId: 'IgeUiProgressBar',\r\n\r\n\tinit: function () {\r\n\t\tIgeUiElement.prototype.init.call(this);\r\n\r\n\t\t// Set some defaults\r\n\t\tthis._min = 0;\r\n\t\tthis._max = 100;\r\n\t\tthis._progress = 0;\r\n\t\tthis._barColor = '#fff600';\r\n\t\tthis._barText = {\r\n\t\t\tpre: '',\r\n\t\t\tpost: '',\r\n\t\t\tcolor: ''\r\n\t\t};\r\n\t},\r\n\r\n\tbarBackColor: function (val) {\r\n\t\tif (val !== undefined) {\r\n\t\t\tthis._barBackColor = val;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\treturn this._barBackColor;\r\n\t},\r\n\r\n\tbarColor: function (val) {\r\n\t\tif (val !== undefined) {\r\n\t\t\tthis._barColor = val;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\treturn this._barColor;\r\n\t},\r\n\r\n\tbarBorderColor: function (val) {\r\n\t\tif (val !== undefined) {\r\n\t\t\tthis._barBorderColor = val;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\treturn this._barBorderColor;\r\n\t},\r\n\r\n\tbarText: function (pre, post, color) {\r\n\t\tif (pre !== undefined && post !== undefined && color !== undefined) {\r\n\t\t\tthis._barText = {\r\n\t\t\t\tpre: pre,\r\n\t\t\t\tpost: post,\r\n\t\t\t\tcolor: color\r\n\t\t\t};\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\treturn this._barText;\r\n\t},\r\n\t\r\n\tmin: function (val) {\r\n\t\tif (val !== undefined) {\r\n\t\t\tthis._min = val;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\treturn this._min;\r\n\t},\r\n\r\n\tmax: function (val) {\r\n\t\tif (val !== undefined) {\r\n\t\t\tthis._max = val;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\treturn this._max;\r\n\t},\r\n\r\n\tprogress: function (val) {\r\n\t\tif (val !== undefined) {\r\n\t\t\tif (val < this._min) {\r\n\t\t\t\tval = this._min;\r\n\t\t\t}\r\n\r\n\t\t\tif (val > this._max) {\r\n\t\t\t\tval = this._max;\r\n\t\t\t}\r\n\r\n\t\t\tthis._progress = val;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\treturn this._progress;\r\n\t},\r\n\r\n\tbindData: function (obj, propName) {\r\n\t\tif (obj !== undefined && propName !== undefined) {\r\n\t\t\t// Set the object and property to automatically\r\n\t\t\t// track progress from\r\n\t\t\tthis._bindDataObject = obj;\r\n\t\t\tthis._bindDataProperty = propName;\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\trender: function (ctx) {\r\n\t\t// Check for an auto-progress update\r\n\t\tif (this._bindDataObject && this._bindDataProperty) {\r\n\t\t\tif (this._bindDataObject._alive === false) {\r\n\t\t\t\t// The object we have bind data from has been\r\n\t\t\t\t// destroyed so release our reference to it!\r\n\t\t\t\tdelete this._bindDataObject;\r\n\t\t\t} else {\r\n\t\t\t\tthis.progress(parseInt(this._bindDataObject[this._bindDataProperty]));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar min = this._min,\r\n\t\t\tmax = this._max,\r\n\t\t\tprogress = this._progress,\r\n\t\t\tinterval = this._bounds2d.x / (max - min),\r\n\t\t\tbarWidth = (progress - min) * interval;\r\n\r\n\t\t// Check the value is not out of range\r\n\t\tif (progress > max) {\r\n\t\t\tprogress = max;\r\n\t\t}\r\n\r\n\t\tif (progress < min) {\r\n\t\t\tprogress = min;\r\n\t\t}\r\n\r\n\t\t// Draw bar fill\r\n\t\tif (this._barBackColor) {\r\n\t\t\tctx.fillStyle = this._barBackColor;\r\n\t\t\tctx.fillRect(-this._bounds2d.x2, -this._bounds2d.y2, this._bounds2d.x, this._bounds2d.y);\r\n\t\t}\r\n\r\n\t\t// Draw bar\r\n\t\tif (this._barColor) {\r\n\t\t\tctx.fillStyle = this._barColor;\r\n\t\t\tctx.fillRect(-this._bounds2d.x2, -this._bounds2d.y2, barWidth, this._bounds2d.y);\r\n\t\t}\r\n\r\n\t\t// Draw bar border\r\n\t\tif (this._barBorderColor) {\r\n\t\t\tctx.strokeStyle = this._barBorderColor;\r\n\t\t\tctx.strokeRect(-this._bounds2d.x2, -this._bounds2d.y2, this._bounds2d.x, this._bounds2d.y);\r\n\t\t}\r\n\r\n\t\t// Draw bar text centered\r\n\t\tif (this._barText && (this._barText.pre || this._barText.post)) {\r\n\t\t\tctx.textAlign = 'center';\r\n\t\t\tctx.textBaseline = 'middle';\r\n\r\n\t\t\tctx.fillStyle = this._barText.color;\r\n\t\t\tctx.fillText(this._barText.pre + String(Math.floor(progress)) + this._barText.post, 0, 0);\r\n\t\t}\r\n\t},\r\n\r\n\ttick: function (ctx) {\r\n\t\tthis._transformContext(ctx);\r\n\t\tthis.render(ctx);\r\n\t\tIgeUiElement.prototype.tick.call(this, ctx, true);\r\n\t}\r\n});","/**\r\n * Provides a UI text entry box. When provided with focus this UI entity will\r\n * capture keyboard input and display it, similar in usage to the HTML input\r\n * text element.\r\n */\r\n//TODO: Make cursor a text entry cursor on hover\r\nvar IgeUiTextBox = IgeUiElement.extend({\r\n\tclassId: 'IgeUiTextBox',\r\n\r\n\t/**\r\n\t * @constructor\r\n\t */\r\n\tinit: function () {\r\n\t\tIgeUiElement.prototype.init.call(this);\r\n\r\n\t\tvar self = this;\r\n\r\n\t\tthis._value = '';\r\n\t\tthis._caretStart = 0;\r\n\t\tthis._caretEnd = 0;\r\n\r\n\t\tthis._fontEntity = new IgeFontEntity()\r\n\t\t\t.left(5)\r\n\t\t\t.middle(0)\r\n\t\t\t.textAlignX(0)\r\n\t\t\t.textAlignY(0)\r\n\t\t\t.mount(this);\r\n\t\t\r\n\t\tvar blurFunc = function () {\r\n\t\t\tif (self._domElement) {\r\n\t\t\t\tself._domElement.parentNode.removeChild(self._domElement);\r\n\t\t\t\tdelete self._domElement;\r\n\t\t\t}\r\n\t\t};\r\n\t\t\r\n\t\tvar focusFunc = function () {\r\n\t\t\tige.input.stopPropagation();\r\n\t\t\tblurFunc();\r\n\t\t\t\r\n\t\t\tvar input,\r\n\t\t\t\tbody,\r\n\t\t\t\tentScreenPos = self.screenPosition();\r\n\t\t\t\r\n\t\t\tinput = document.createElement('input');\r\n\t\t\tinput.setAttribute('type', 'text');\r\n\t\t\t\r\n\t\t\t// Position the infobox and set content\r\n\t\t\tinput.style.position = 'absolute';\r\n\t\t\tinput.style.top = (entScreenPos.y - self._bounds2d.y2) + 'px';\r\n\t\t\tinput.style.left = (entScreenPos.x - self._bounds2d.x2) + 'px';\r\n\t\t\tinput.style.width = self._bounds2d.x + 'px';\r\n\t\t\tinput.style.zIndex = -1;\r\n\t\t\tinput.style.opacity = '0';\r\n\t\t\t\r\n\t\t\tbody = document.getElementsByTagName('body')[0];\r\n\t\t\t\r\n\t\t\tbody.appendChild(input);\r\n\t\t\tinput.focus();\r\n\t\t\t\r\n\t\t\t// Now add the existing text to the box\r\n\t\t\tinput.setAttribute('value', self._value);\r\n\t\t\t\r\n\t\t\t// Set the caret position\r\n\t\t\tinput.selectionStart = self._value.length;\r\n\t\t\tinput.selectionEnd = self._value.length;\r\n\t\t\t\r\n\t\t\tself._caretStart = self._value.length;\r\n\t\t\tself._caretEnd = self._value.length;\r\n\t\t\t\r\n\t\t\t// Listen for events from the temp input element\r\n\t\t\tinput.addEventListener('keyup', function (event) {\r\n\t\t\t\tself.value(this.value);\r\n\t\t\t\t\r\n\t\t\t\tif (event.keyCode === 13) {\r\n\t\t\t\t\t// Enter pressed\r\n\t\t\t\t\tself.emit('enter', self._value);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tinput.addEventListener('keydown', function (event) {\r\n\t\t\t\tself.value(this.value);\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tinput.addEventListener('mouseup', function (event) {\r\n\t\t\t\tself._caretStart = this.selectionStart;\r\n\t\t\t\tself._caretEnd = this.selectionEnd;\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tinput.addEventListener('blur', function (event) {\r\n\t\t\t\tthis.focus();\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tself._domElement = input;\r\n\t\t};\r\n\t\t\r\n\t\t// On focus, create a temp input element in the DOM and focus to it\r\n\t\tthis.on('focus', focusFunc);\r\n\t\tthis.on('mouseUp', focusFunc);\r\n\t\tthis.on('mouseDown', function () { ige.input.stopPropagation(); });\r\n\t\t\r\n\t\tthis.on('uiUpdate', function () {\r\n\t\t\tif (self._domElement) {\r\n\t\t\t\t// Update the transformation matrix\r\n\t\t\t\tself.updateTransform();\r\n\t\t\t\t\r\n\t\t\t\tvar input = self._domElement,\r\n\t\t\t\t\tentScreenPos = self.screenPosition();\r\n\t\t\t\t\r\n\t\t\t\t// Reposition the dom element\r\n\t\t\t\tinput.style.top = (entScreenPos.y - self._bounds2d.y2) + 'px';\r\n\t\t\t\tinput.style.left = (entScreenPos.x - self._bounds2d.x2) + 'px';\r\n\t\t\t}\r\n\t\t});\r\n\t\t\r\n\t\tthis.on('blur', blurFunc);\r\n\t},\r\n\r\n\t/**\r\n\t * Extended method to auto-update the width of the child\r\n\t * font entity automatically to fill the text box.\r\n\t * @param px\r\n\t * @param lockAspect\r\n\t * @param modifier\r\n\t * @param noUpdate\r\n\t * @return {*}\r\n\t */\r\n\twidth: function (px, lockAspect, modifier, noUpdate) {\r\n\t\tvar val;\r\n\r\n\t\t// Call the main super class method\r\n\t\tval = IgeUiElement.prototype.width.call(this, px, lockAspect, modifier, noUpdate);\r\n\r\n\t\t// Update the font entity width - 10px for margin\r\n\t\tthis._fontEntity.width(px - 10, lockAspect, modifier, noUpdate);\r\n\r\n\t\treturn val;\r\n\t},\r\n\r\n\t/**\r\n\t * Extended method to auto-update the height of the child\r\n\t * font entity automatically to fill the text box.\r\n\t * @param px\r\n\t * @param lockAspect\r\n\t * @param modifier\r\n\t * @param noUpdate\r\n\t * @return {*}\r\n\t */\r\n\theight: function (px, lockAspect, modifier, noUpdate) {\r\n\t\tvar val;\r\n\r\n\t\t// Call the main super class method\r\n\t\tval = IgeUiElement.prototype.height.call(this, px, lockAspect, modifier, noUpdate);\r\n\r\n\t\t// Update the font entity height\r\n\t\tthis._fontEntity.height(px, lockAspect, modifier, noUpdate);\r\n\r\n\t\treturn val;\r\n\t},\r\n\r\n\t/**\r\n\t * Gets / sets the text value of the input box.\r\n\t * @param {String=} val The text value.\r\n\t * @return {*}\r\n\t */\r\n\tvalue: function (val) {\r\n\t\tif (val !== undefined) {\r\n\t\t\tif (this._value !== val) {\r\n\t\t\t\tthis._value = val;\r\n\t\r\n\t\t\t\tif (!val && this._placeHolder) {\r\n\t\t\t\t\t// Assign placeholder text and color\r\n\t\t\t\t\tthis._fontEntity.text(this._placeHolder);\r\n\t\t\t\t\tthis._fontEntity.color(this._placeHolderColor);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// Set the text of the font entity to the value\r\n\t\t\t\t\tif (!this._mask) {\r\n\t\t\t\t\t\t// Assign text directly\r\n\t\t\t\t\t\tthis._fontEntity.text(this._value);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// Assign a mask value instead\r\n\t\t\t\t\t\tthis._fontEntity.text(new Array(this._value.length + 1).join(this._mask))\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis._fontEntity.color(this._color);\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tthis.emit('change', this._value);\r\n\t\t\t}\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\treturn this._value;\r\n\t},\r\n\t\r\n\tplaceHolder: function (val) {\r\n\t\tif (val !== undefined) {\r\n\t\t\tthis._placeHolder = val;\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\treturn this._placeHolder;\r\n\t},\r\n\t\r\n\tplaceHolderColor: function (val) {\r\n\t\tif (val !== undefined) {\r\n\t\t\tthis._placeHolderColor = val;\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\treturn this._placeHolderColor;\r\n\t},\r\n\t\r\n\tmask: function (val) {\r\n\t\tif (val !== undefined) {\r\n\t\t\tthis._mask = val;\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\treturn this._mask;\r\n\t},\r\n\r\n\t/**\r\n\t * Gets / sets the font sheet (texture) that the text box will\r\n\t * use when rendering text inside the box.\r\n\t * @param fontSheet\r\n\t * @return {*}\r\n\t */\r\n\tfontSheet: function (fontSheet) {\r\n\t\tif (fontSheet !== undefined) {\r\n\t\t\tthis._fontSheet = fontSheet;\r\n\r\n\t\t\t// Set the font sheet as the texture for our font entity\r\n\t\t\tthis._fontEntity.texture(this._fontSheet);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\treturn this._fontSheet;\r\n\t},\r\n\t\r\n\tfont: function (val) {\r\n\t\tif (val !== undefined) {\r\n\t\t\tif (typeof(val) === 'string') {\r\n\t\t\t\t// Native font name\r\n\t\t\t\treturn this.nativeFont(val);\r\n\t\t\t} else {\r\n\t\t\t\t// Font sheet\r\n\t\t\t\treturn this.fontSheet(val);\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tif (this._fontEntity._nativeMode) {\r\n\t\t\t// Return native font\r\n\t\t\treturn this.nativeFont();\r\n\t\t} else {\r\n\t\t\t// Return font sheet\r\n\t\t\treturn this.fontSheet();\r\n\t\t}\r\n\t},\r\n\t\r\n\tnativeFont: function (val) {\r\n\t\tif (val !== undefined) {\r\n\t\t\tthis._fontEntity.nativeFont(val);\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\treturn this._fontEntity.nativeFont();\r\n\t},\r\n\t\r\n\tnativeStroke: function (val) {\r\n\t\tif (val !== undefined) {\r\n\t\t\tthis._fontEntity.nativeStroke(val);\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\treturn this._fontEntity.nativeStroke();\r\n\t},\r\n\t\r\n\tnativeStrokeColor: function (val) {\r\n\t\tif (val !== undefined) {\r\n\t\t\tthis._fontEntity.nativeStrokeColor(val);\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\treturn this._fontEntity.nativeStrokeColor();\r\n\t},\r\n\t\r\n\tcolor: function (val) {\r\n\t\tif (val !== undefined) {\r\n\t\t\tthis._color = val;\r\n\t\t\t\r\n\t\t\tif (!this._value && this._placeHolder && this._placeHolderColor) {\r\n\t\t\t\tthis._fontEntity.color(this._placeHolderColor);\r\n\t\t\t} else {\r\n\t\t\t\tthis._fontEntity.color(val);\r\n\t\t\t}\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\treturn this._color;\r\n\t},\r\n\t\r\n\t_mounted: function () {\r\n\t\t// Check if we have a text value\r\n\t\tif (!this._value && this._placeHolder) {\r\n\t\t\t// Assign placeholder text and color\r\n\t\t\tthis._fontEntity.text(this._placeHolder);\r\n\t\t\tthis._fontEntity.color(this._placeHolderColor);\r\n\t\t}\r\n\t\t\r\n\t\tIgeUiElement.prototype._mounted.call(this);\r\n\t},\r\n\r\n\tdestroy: function () {\r\n\t\t/* The 'blur' function is called to destroy the DOM textbox. */\r\n\t\tthis.blur();\r\n\t\tIgeUiElement.prototype.destroy.call(this);\r\n\t}\r\n});","/**\r\n * Provides a UI label entity. Basic on-screen text label.\r\n */\r\nvar IgeUiLabel = IgeUiElement.extend({\r\n\tclassId: 'IgeUiLabel',\r\n\r\n\t/**\r\n\t * @constructor\r\n\t */\r\n\tinit: function () {\r\n\t\tIgeUiElement.prototype.init.call(this);\r\n\r\n\t\tvar self = this;\r\n\r\n\t\tthis._value = '';\r\n\r\n\t\tthis._fontEntity = new IgeFontEntity()\r\n\t\t\t.left(0)\r\n\t\t\t.middle(0)\r\n\t\t\t.textAlignX(0)\r\n\t\t\t.textAlignY(0)\r\n\t\t\t.mount(this);\r\n\t\t\r\n\t\t// Set defaults\r\n\t\tthis.font('10px Verdana');\r\n\t\tthis.paddingLeft(5);\r\n\t\tthis.allowActive(false);\r\n\t\tthis.allowFocus(false);\r\n\t\tthis.allowHover(false);\r\n\t},\r\n\r\n\t/**\r\n\t * Extended method to auto-update the width of the child\r\n\t * font entity automatically to fill the text box.\r\n\t * @param px\r\n\t * @param lockAspect\r\n\t * @param modifier\r\n\t * @param noUpdate\r\n\t * @return {*}\r\n\t */\r\n\twidth: function (px, lockAspect, modifier, noUpdate) {\r\n\t\tvar val;\r\n\r\n\t\t// Call the main super class method\r\n\t\tval = IgeUiElement.prototype.width.call(this, px, lockAspect, modifier, noUpdate);\r\n\r\n\t\t// Update the font entity width - 10px for margin\r\n\t\tthis._fontEntity.width(px - 10, lockAspect, modifier, noUpdate);\r\n\r\n\t\treturn val;\r\n\t},\r\n\r\n\t/**\r\n\t * Extended method to auto-update the height of the child\r\n\t * font entity automatically to fill the text box.\r\n\t * @param px\r\n\t * @param lockAspect\r\n\t * @param modifier\r\n\t * @param noUpdate\r\n\t * @return {*}\r\n\t */\r\n\theight: function (px, lockAspect, modifier, noUpdate) {\r\n\t\tvar val;\r\n\r\n\t\t// Call the main super class method\r\n\t\tval = IgeUiElement.prototype.height.call(this, px, lockAspect, modifier, noUpdate);\r\n\r\n\t\t// Update the font entity height\r\n\t\tthis._fontEntity.height(px, lockAspect, modifier, noUpdate);\r\n\r\n\t\treturn val;\r\n\t},\r\n\r\n\t/**\r\n\t * Gets / sets the text value of the input box.\r\n\t * @param {String=} val The text value.\r\n\t * @return {*}\r\n\t */\r\n\tvalue: function (val) {\r\n\t\tif (val !== undefined) {\r\n\t\t\tif (this._value !== val) {\r\n\t\t\t\tthis._value = val;\r\n\t\r\n\t\t\t\tif (!val && this._placeHolder) {\r\n\t\t\t\t\t// Assign placeholder text and color\r\n\t\t\t\t\tthis._fontEntity.text(this._placeHolder);\r\n\t\t\t\t\tthis._fontEntity.color(this._placeHolderColor);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// Set the text of the font entity to the value\r\n\t\t\t\t\tif (!this._mask) {\r\n\t\t\t\t\t\t// Assign text directly\r\n\t\t\t\t\t\tthis._fontEntity.text(this._value);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// Assign a mask value instead\r\n\t\t\t\t\t\tthis._fontEntity.text(new Array(this._value.length + 1).join(this._mask))\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis._fontEntity.color(this._color);\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tthis.emit('change', this._value);\r\n\t\t\t}\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\treturn this._value;\r\n\t},\r\n\t\r\n\t/**\r\n\t * Gets / sets the font sheet (texture) that the text box will\r\n\t * use when rendering text inside the box.\r\n\t * @param fontSheet\r\n\t * @return {*}\r\n\t */\r\n\tfontSheet: function (fontSheet) {\r\n\t\tif (fontSheet !== undefined) {\r\n\t\t\tthis._fontSheet = fontSheet;\r\n\r\n\t\t\t// Set the font sheet as the texture for our font entity\r\n\t\t\tthis._fontEntity.texture(this._fontSheet);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\treturn this._fontSheet;\r\n\t},\r\n\t\r\n\tfont: function (val) {\r\n\t\tif (val !== undefined) {\r\n\t\t\tif (typeof(val) === 'string') {\r\n\t\t\t\t// Native font name\r\n\t\t\t\treturn this.nativeFont(val);\r\n\t\t\t} else {\r\n\t\t\t\t// Font sheet\r\n\t\t\t\treturn this.fontSheet(val);\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tif (this._fontEntity._nativeMode) {\r\n\t\t\t// Return native font\r\n\t\t\treturn this.nativeFont();\r\n\t\t} else {\r\n\t\t\t// Return font sheet\r\n\t\t\treturn this.fontSheet();\r\n\t\t}\r\n\t},\r\n\t\r\n\tnativeFont: function (val) {\r\n\t\tif (val !== undefined) {\r\n\t\t\tthis._fontEntity.nativeFont(val);\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\treturn this._fontEntity.nativeFont();\r\n\t},\r\n\t\r\n\tnativeStroke: function (val) {\r\n\t\tif (val !== undefined) {\r\n\t\t\tthis._fontEntity.nativeStroke(val);\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\treturn this._fontEntity.nativeStroke();\r\n\t},\r\n\t\r\n\tnativeStrokeColor: function (val) {\r\n\t\tif (val !== undefined) {\r\n\t\t\tthis._fontEntity.nativeStrokeColor(val);\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\treturn this._fontEntity.nativeStrokeColor();\r\n\t},\r\n\t\r\n\tcolor: function (val) {\r\n\t\tif (val !== undefined) {\r\n\t\t\tthis._color = val;\r\n\t\t\t\r\n\t\t\tif (!this._value && this._placeHolder && this._placeHolderColor) {\r\n\t\t\t\tthis._fontEntity.color(this._placeHolderColor);\r\n\t\t\t} else {\r\n\t\t\t\tthis._fontEntity.color(val);\r\n\t\t\t}\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\treturn this._color;\r\n\t},\r\n\t\r\n\t_mounted: function () {\r\n\t\t// Check if we have a text value\r\n\t\tif (!this._value && this._placeHolder) {\r\n\t\t\t// Assign placeholder text and color\r\n\t\t\tthis._fontEntity.text(this._placeHolder);\r\n\t\t\tthis._fontEntity.color(this._placeHolderColor);\r\n\t\t}\r\n\t\t\r\n\t\tIgeUiElement.prototype._mounted.call(this);\r\n\t}\r\n});","/**\r\n * Provides a UI tooltip. Change properties (textBox, fonts, backgroundcolor)\r\n * at free will.\r\n */\r\nvar IgeUiTooltip = IgeUiElement.extend({\r\n\tclassId: 'IgeUiTooltip',\r\n\r\n\t/**\r\n\t * @constructor\r\n\t * @param parent Where the mousemove is captured i.e. on which element the tooltip should appear\r\n\t * @param mountEntity Where the tooltip should be mounted. A scene is suggested.\r\n\t * @param width Width of the tooltip\r\n\t * @param height Height of the tooltip\r\n\t * @param content The content which is set with public method \"setContent\". Can be string, array(2) or an entity\r\n\t */\r\n\tinit: function (parent, mountEntity, width, height, content) {\r\n\t\tIgeUiElement.prototype.init.call(this);\r\n\r\n\t\tvar self = this;\r\n\t\tthis.titleBox = new IgeUiElement()\r\n\t\t\t.left(0)\r\n\t\t\t.top(0)\r\n\t\t\t.width(width)\r\n\t\t\t.height(30)\r\n\t\t\t.mount(this);\r\n\t\tthis.titleBox.borderBottomColor('#ffffff');\r\n\t\tthis.titleBox.borderBottomWidth(1);\r\n\t\t\r\n\t\tthis.textBox = new IgeUiElement()\r\n\t\t\t.left(0)\r\n\t\t\t.top(30)\r\n\t\t\t.width(width)\r\n\t\t\t.height(height - 30)\r\n\t\t\t.mount(this);\r\n\t\t\r\n\t\tthis.fontEntityTitle = new IgeFontEntity()\r\n\t\t\t.left(5)\r\n\t\t\t.top(-4)\r\n\t\t\t.textAlignX(0)\r\n\t\t\t.textAlignY(0)\r\n\t\t\t.nativeFont('10pt Arial')\r\n\t\t\t.textLineSpacing(-5)\r\n\t\t\t.mount(this.titleBox);\r\n\t\t\t\r\n\t\tthis.fontEntityText = new IgeFontEntity()\r\n\t\t\t.left(5)\r\n\t\t\t.top(0)\r\n\t\t\t.textAlignX(0)\r\n\t\t\t.textAlignY(0)\r\n\t\t\t.nativeFont('10pt Arial')\r\n\t\t\t.textLineSpacing(-5)\r\n\t\t\t.mount(this.textBox);\r\n\t\t\t\r\n\t\tthis.setContent(content);\r\n\t\tthis.hide();\r\n\t\tthis._mountEntity = mountEntity;\r\n\t\tthis.mount(mountEntity);\r\n\t\tthis.backgroundColor('#53B2F3');\r\n\t\tthis.depth(10000);\r\n\t\tthis.translateTo(parent._translate.x, parent._translate.y, parent._translate.z);\r\n\t\tthis.width(width);\r\n\t\tthis.height(height);\r\n\t\t\r\n\t\tparent._tooltip = this;\r\n\r\n\t\t// Listen for keyboard events to capture text input\r\n\t\tparent._mouseEventsActive = true;\r\n\t\tparent.on('mouseMove', self._mousemove);\r\n\t\tparent.on('mouseOut', self._mouseout);\r\n\t\t\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * Extended method to auto-update the width of the child\r\n\t * font entity automatically to fill the text box.\r\n\t * @param px\r\n\t * @param lockAspect\r\n\t * @param modifier\r\n\t * @param noUpdate\r\n\t * @return {*}\r\n\t */\r\n\twidth: function (px, lockAspect, modifier, noUpdate) {\r\n\t\tvar val;\r\n\r\n\t\t// Call the main super class method\r\n\t\tval = IgeUiElement.prototype.width.call(this, px, lockAspect, modifier, noUpdate);\r\n\r\n\t\t// Update the font entity width\r\n\t\tthis.fontEntityTitle.width(px, lockAspect, modifier, noUpdate);\r\n\t\tthis.fontEntityText.width(px, lockAspect, modifier, noUpdate);\r\n\r\n\t\treturn val;\r\n\t},\r\n\r\n\t/**\r\n\t * Extended method to auto-update the height of the child\r\n\t * font entity automatically to fill the text box.\r\n\t * @param px\r\n\t * @param lockAspect\r\n\t * @param modifier\r\n\t * @param noUpdate\r\n\t * @return {*}\r\n\t */\r\n\theight: function (px, lockAspect, modifier, noUpdate) {\r\n\t\tvar val;\r\n\r\n\t\t// Call the main super class method\r\n\t\tval = IgeUiElement.prototype.height.call(this, px, lockAspect, modifier, noUpdate);\r\n\r\n\t\t// Update the font entity height\r\n\t\tthis.fontEntityTitle.width(px, lockAspect, modifier, noUpdate);\r\n\t\tthis.fontEntityText.width(px, lockAspect, modifier, noUpdate);\r\n\r\n\t\treturn val;\r\n\t},\r\n\r\n\t/**\r\n\t * Sets the content of the tooltip. Can be a string for\r\n\t * simple text, an array with two strings for text and title\r\n\t * or a whole entity\r\n\t * @param val The content, be it string, array(2) or an entity\r\n\t * @return {*}\r\n\t */\r\n\tsetContent: function (val) {\r\n\t\tif (val !== undefined) {\r\n\t\t\tthis.titleBox.unMount();\r\n\t\t\tthis.textBox.unMount();\r\n\t\t\tthis._children.forEach(function(child) {\r\n\t\t\t\tchild.unMount();\r\n\t\t\t\tchild.destroy();\r\n\t\t\t});\r\n\t\t\tif (typeof(val) == 'string') {\r\n\t\t\t\tthis.textBox.mount(this);\r\n\t\t\t\tthis.textBox.height(this._bounds2d.y);\r\n\t\t\t\tthis.textBox.top(0);\r\n\t\t\t\t// Set the text of the font entity to the value\r\n\t\t\t\tthis.fontEntityText.text(this._value);\r\n\t\t\t}\r\n\t\t\telse if (typeof(val) == 'object' && typeof(val[0] == 'string') && typeof(val[1] == 'string')) {\r\n\t\t\t\tthis.titleBox.mount(this);\r\n\t\t\t\tthis.textBox.mount(this);\r\n\t\t\t\tthis.textBox.height(this._bounds2d.y - this.titleBox._bounds2d.y);\r\n\t\t\t\tthis.textBox.top(this.titleBox._bounds2d.y);\r\n\t\t\t\t//title + text\r\n\t\t\t\tthis.fontEntityTitle.text(val[0]);\r\n\t\t\t\tthis.fontEntityText.text(val[1]);\r\n\t\t\t}\r\n\t\t\telse if (typeof(val) == 'object') {\r\n\t\t\t\tval.mount(this);\r\n\t\t\t}\r\n\t\t\tthis.updateUiChildren();\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * Gets / sets the font sheet (texture) that the text box will\r\n\t * use when rendering text inside the box.\r\n\t * @param fontSheet\r\n\t * @return {*}\r\n\t */\r\n\tfontSheet: function (fontSheet) {\r\n\t\tif (fontSheet !== undefined) {\r\n\t\t\t// Set the font sheet as the texture for our font entity\r\n\t\t\tthis.fontEntityTitle.texture(fontSheet);\r\n\t\t\tthis.fontEntityText.texture(fontSheet);\r\n\t\t}\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * Handles mousemove event to show the textbox and adjust its\r\n\t * position according to the mouse position\r\n\t * @param event\r\n\t * @private\r\n\t */\r\n\t_mousemove: function (event) {\r\n\t\tvar tt = this._tooltip;\r\n\t\tif (tt._hidden) tt.show();\r\n\t\tvar mountPos = tt._mountEntity.worldPosition();\r\n\t\ttt.translateTo(event.igeX - mountPos.x + tt._bounds2d.x2 + 10, event.igeY - mountPos.y + tt._bounds2d.y2, 0);\r\n\t\ttt.updateUiChildren();\r\n\t},\r\n\r\n\t/**\r\n\t * Handles mouseout event to hide the tooltip\r\n\t * @param event\r\n\t * @private\r\n\t */\r\n\t_mouseout: function (event) {\r\n\t\tthis._tooltip.hide();\r\n\t}\r\n});","/**\r\n * Provides a UI drop-down menu entity.\r\n */\r\nvar IgeUiMenu = IgeUiElement.extend({\r\n\tclassId: 'IgeUiMenu',\r\n\r\n\t/**\r\n\t * Gets / sets the menu definition.\r\n\t * @param {Object=} val The menu definition object.\r\n\t * @return {*}\r\n\t */\r\n\tmenuData: function (val) {\r\n\t\tif (val !== undefined) {\r\n\t\t\tthis._menuData = val;\r\n\r\n\t\t\t// Remove all existing children from the menu\r\n\t\t\tthis.destroyChildren();\r\n\r\n\t\t\t// Build the new menu\r\n\t\t\tthis._buildMenu(this._menuData, this);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\treturn this._menuData;\r\n\t},\r\n\r\n\tmenuMode: function (mode) {\r\n\t\tif (mode !== undefined) {\r\n\t\t\tthis._menuMode = mode;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\treturn this._menuMode;\r\n\t},\r\n\r\n\t/**\r\n\t * Gets / sets the font sheet (texture) that the text box will\r\n\t * use when rendering text inside the box.\r\n\t * @param fontSheet\r\n\t * @return {*}\r\n\t */\r\n\tfontSheet: function (fontSheet) {\r\n\t\tif (fontSheet !== undefined) {\r\n\t\t\tthis._fontSheet = fontSheet;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\treturn this._fontSheet;\r\n\t},\r\n\r\n\taddItem: function (item) {\r\n\t\tif (item !== undefined) {\r\n\t\t\t\r\n\t\t}\r\n\t},\r\n\r\n\t_buildMenu: function (data, parent) {\r\n\t\tvar arrCount = data.length, i,\r\n\t\t\titem, ent, left = 0, top = 0;\r\n\r\n\t\tfor (i = 0; i < arrCount; i++) {\r\n\t\t\titem = data[i];\r\n\r\n\t\t\tif (this._menuMode) {\r\n\t\t\t\ttop += this.height();\r\n\t\t\t}\r\n\r\n\t\t\tent = new IgeUiMenuItem()\r\n\t\t\t\t.backgroundColor('#666666')\r\n\t\t\t\t.left(left)\r\n\t\t\t\t.middle(top)\r\n\t\t\t\t.height(this.height())\r\n\t\t\t\t.fontSheet(this._fontSheet)\r\n\t\t\t\t.menuData(item)\r\n\t\t\t\t.mount(parent);\r\n\r\n\t\t\tif (!this._menuMode) {\r\n\t\t\t\tleft += item.width;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n});\r\n\r\nvar IgeUiMenuItem = IgeUiElement.extend({\r\n\tclassId: 'IgeUiMenuItem',\r\n\r\n\tmenuData: function (menuData) {\r\n\t\tif (menuData !== undefined) {\r\n\t\t\tthis._menuData = menuData;\r\n\r\n\t\t\tif (menuData.width) { this.width(menuData.width); }\r\n\t\t\tif (menuData.id) { this.id(menuData.id); }\r\n\t\t\tif (menuData.mouseUp) { this.mouseUp(menuData.mouseUp); }\r\n\t\t\tif (menuData.mouseOver) { this.mouseOver(menuData.mouseOver); }\r\n\t\t\tif (menuData.mouseOut) { this.mouseOut(menuData.mouseOut); }\r\n\r\n\t\t\tthis._labelEntity = new IgeFontEntity()\r\n\t\t\t\t.id(this.id() + '_label')\r\n\t\t\t\t.texture(this._fontSheet)\r\n\t\t\t\t.left(5)\r\n\t\t\t\t.middle(0)\r\n\t\t\t\t.width(menuData.width)\r\n\t\t\t\t.height(this.height())\r\n\t\t\t\t.textAlignX(0)\r\n\t\t\t\t.textAlignY(1)\r\n\t\t\t\t.text(menuData.text)\r\n\t\t\t\t.mount(this);\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\treturn this._menuData;\r\n\t},\r\n\r\n\t/**\r\n\t * Gets / sets the font sheet (texture) that the menu item will\r\n\t * use when rendering text.\r\n\t * @param fontSheet\r\n\t * @return {*}\r\n\t */\r\n\tfontSheet: function (fontSheet) {\r\n\t\tif (fontSheet !== undefined) {\r\n\t\t\tthis._fontSheet = fontSheet;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\treturn this._fontSheet;\r\n\t},\r\n\r\n\t/**\r\n\t * Opens the menu item so it's child items are visible.\r\n\t */\r\n\topen: function () {\r\n\t\tif (this._menuData.items) {\r\n\t\t\tthis._childMenu = new IgeUiMenu()\r\n\t\t\t\t.id(this.id() + '_childMenu')\r\n\t\t\t\t.depth(this.depth() + 1)\r\n\t\t\t\t.fontSheet(this._fontSheet)\r\n\t\t\t\t.left(0)\r\n\t\t\t\t.top(this.height())\r\n\t\t\t\t.width(100)\r\n\t\t\t\t.height(30)\r\n\t\t\t\t.menuMode(1)\r\n\t\t\t\t.menuData(this._menuData.items)\r\n\t\t\t\t.mount(this);\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Closes the menu item so it's child items are hidden.\r\n\t */\r\n\tclose: function () {\r\n\t\tif (this._childMenu) {\r\n\t\t\tthis._childMenu.destroy();\r\n\t\t}\r\n\t}\r\n});","var IgeUiTimeStream = IgeUiElement.extend({\r\n\tclassId: 'IgeUiTimeStream',\r\n\r\n\tmonitor: function (entity) {\r\n\t\tthis._entity = entity;\r\n\t},\r\n\r\n\ttick: function (ctx) {\r\n\t\t// Draw timeline\r\n\t\tvar i, text, xAdjust,\r\n\t\t\tarr, arrCount, arrItem,\r\n\t\t\trenderTime = ige._tickStart - ige.network.stream._renderLatency,\r\n\t\t\tdeltaTime;\r\n\r\n\t\tIgeUiElement.prototype.tick.call(this, ctx);\r\n\r\n\t\tctx.strokeStyle = '#fffc00';\r\n\t\tctx.beginPath();\r\n\t\tctx.moveTo(-200, -25.5);\r\n\t\tctx.lineTo(200, -25.5);\r\n\t\tctx.stroke();\r\n\r\n\t\tctx.font = 'normal 10px Verdana';\r\n\r\n\t\tfor (i = 0; i < 9; i++) {\r\n\t\t\tctx.beginPath();\r\n\t\t\tif (((i - 2) * 10) === 0) {\r\n\t\t\t\t// This is the render point, change colour for this one\r\n\t\t\t\tctx.strokeStyle = '#ff6600';\r\n\t\t\t} else {\r\n\t\t\t\tctx.strokeStyle = '#ffffff';\r\n\t\t\t}\r\n\t\t\tctx.moveTo(-200.5 + (i * 50), -30);\r\n\t\t\tctx.lineTo(-200.5 + (i * 50), 30);\r\n\t\t\tctx.stroke();\r\n\r\n\t\t\ttext = -ige.network.stream._renderLatency + ((i - 2) * 10) + 'ms';\r\n\t\t\txAdjust = ctx.measureText(text);\r\n\t\t\tctx.strokeText(text, -200 + (i * 50) - (xAdjust.width / 2), -38);\r\n\r\n\t\t\tif (((i - 2) * 10) === 0) {\r\n\t\t\t\ttext = 'Render Point';\r\n\t\t\t\txAdjust = ctx.measureText(text);\r\n\t\t\t\tctx.strokeText(text, -200 + (i * 50) - (xAdjust.width / 2), -52);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this._entity) {\r\n\t\t\tarr = this._entity._timeStream;\r\n\r\n\t\t\t// Check if we have a time stream and data\r\n\t\t\tif (arr && arr.length) {\r\n\t\t\t\tarrCount = arr.length;\r\n\r\n\t\t\t\tfor (i = 0; i < arrCount; i++) {\r\n\t\t\t\t\tarrItem = arr[i];\r\n\r\n\t\t\t\t\tdeltaTime = arrItem[0] - renderTime;\r\n\r\n\t\t\t\t\tctx.strokeRect(-105 + ((deltaTime / 10) * 50), -5, 10, 10);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tige.client.custom2.value = this._entity._timeStreamDataDelta;\r\n\t\t\tige.client.custom3.value = this._entity._timeStreamOffsetDelta;\r\n\t\t\tige.client.custom4.value = this._entity._timeStreamCurrentInterpolateTime;\r\n\t\t}\r\n\t}\r\n});\r\n\r\nif (typeof(module) !== 'undefined' && typeof(module.exports) !== 'undefined') { module.exports = IgeUiTimeStream; }","// See the ige/engine/filters folder for the individual filter source\r\nvar IgeFilters = {};\r\n\r\nif (typeof(window) !== 'undefined') {\r\n\t// Create a temporary canvas for the filter system to use\r\n\tIgeFilters.tmpCanvas = document.createElement('canvas');\r\n\tIgeFilters.tmpCtx = IgeFilters.tmpCanvas.getContext('2d');\r\n}\r\n\r\nif (typeof(module) !== 'undefined' && typeof(module.exports) !== 'undefined') { module.exports = IgeFilters; }","IgeFilters.createImageData = function(w,h) {\r\n\treturn IgeFilters.tmpCtx.createImageData(w,h);\r\n};\r\n\r\nIgeFilters._convolute = function(pixels, weights, opaque) {\r\n\tvar side = Math.round(Math.sqrt(weights.length));\r\n\tvar halfSide = Math.floor(side/2);\r\n\tvar src = pixels.data;\r\n\tvar sw = pixels.width;\r\n\tvar sh = pixels.height;\r\n\t// pad output by the convolution matrix\r\n\tvar w = sw;\r\n\tvar h = sh;\r\n\tvar output = IgeFilters.createImageData(w, h);\r\n\tvar dst = output.data;\r\n\t// go through the destination image pixels\r\n\tvar alphaFac = opaque ? 1 : 0;\r\n\tfor (var y=0; y<h; y++) {\r\n\t\tfor (var x=0; x<w; x++) {\r\n\t\t\tvar sy = y;\r\n\t\t\tvar sx = x;\r\n\t\t\tvar dstOff = (y*w+x)*4;\r\n\t\t\t// calculate the weighed sum of the source image pixels that\r\n\t\t\t// fall under the convolution matrix\r\n\t\t\tvar r=0, g=0, b=0, a=0;\r\n\t\t\tfor (var cy=0; cy<side; cy++) {\r\n\t\t\t\tfor (var cx=0; cx<side; cx++) {\r\n\t\t\t\t\tvar scy = sy + cy - halfSide;\r\n\t\t\t\t\tvar scx = sx + cx - halfSide;\r\n\t\t\t\t\tif (scy >= 0 && scy < sh && scx >= 0 && scx < sw) {\r\n\t\t\t\t\t\tvar srcOff = (scy*sw+scx)*4;\r\n\t\t\t\t\t\tvar wt = weights[cy*side+cx];\r\n\t\t\t\t\t\tr += src[srcOff] * wt;\r\n\t\t\t\t\t\tg += src[srcOff+1] * wt;\r\n\t\t\t\t\t\tb += src[srcOff+2] * wt;\r\n\t\t\t\t\t\ta += src[srcOff+3] * wt;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tdst[dstOff] = r;\r\n\t\t\tdst[dstOff+1] = g;\r\n\t\t\tdst[dstOff+2] = b;\r\n\t\t\tdst[dstOff+3] = a + alphaFac*(255-a);\r\n\t\t}\r\n\t}\r\n\treturn output;\r\n};","IgeFilters.greyScale = function (canvas, ctx, originalImage, texture, data) {\r\n\t// Apply the filter and then put the new pixel data\r\n\tctx.putImageData(\r\n\t\tIgeFilters._greyScale(\r\n\t\t\tctx.getImageData(\r\n\t\t\t\t0,\r\n\t\t\t\t0,\r\n\t\t\t\tcanvas.width,\r\n\t\t\t\tcanvas.height\r\n\t\t\t)\r\n\t\t),\r\n\t\t0,\r\n\t\t0\r\n\t);\r\n};\r\n\r\nIgeFilters._greyScale = function (imageData) {\r\n\tvar arr,\r\n\t\tarrCount,\r\n\t\ti, r, g, b, v;\r\n\r\n\tarr = imageData.data;\r\n\tarrCount = arr.length;\r\n\r\n\tfor (i = 0; i < arrCount; i += 4) {\r\n\t\t// Extract pixel colour values\r\n\t\tr = arr[i];\r\n\t\tg = arr[i + 1];\r\n\t\tb = arr[i + 2];\r\n\r\n\t\t// CIE luminance for the RGB\r\n\t\t// The human eye is bad at seeing red and blue, so we de-emphasize them.\r\n\t\tv = 0.2126*r + 0.7152*g + 0.0722*b;\r\n\r\n\t\t// Set the new pixel colour value\r\n\t\tarr[i] = arr[i + 1] = arr[i + 2] = v;\r\n\t}\r\n\r\n\treturn imageData;\r\n};","IgeFilters.brighten = function (canvas, ctx, originalImage, texture, data) {\r\n\t// Apply the filter and then put the new pixel data\r\n\tctx.putImageData(\r\n\t\tIgeFilters._brighten(\r\n\t\t\tctx.getImageData(\r\n\t\t\t\t0,\r\n\t\t\t\t0,\r\n\t\t\t\tcanvas.width,\r\n\t\t\t\tcanvas.height\r\n\t\t\t),\r\n\t\t\ttexture,\r\n\t\t\tdata\r\n\t\t),\r\n\t\t0,\r\n\t\t0\r\n\t);\r\n};\r\n\r\nIgeFilters._brighten = function (imageData, texture, data) {\r\n\tvar arr,\r\n\t\tarrCount,\r\n\t\ti, adjustment = texture.data('IgeFilters.brighten.value') || data.value;\r\n\r\n\tarr = imageData.data;\r\n\tarrCount = arr.length;\r\n\r\n\tfor (i = 0; i < arrCount; i += 4) {\r\n\t\tarr[i] += adjustment;\r\n\t\tarr[i + 1] += adjustment;\r\n\t\tarr[i + 2] += adjustment;\r\n\t}\r\n\r\n\treturn imageData;\r\n};","IgeFilters.threshold = function (canvas, ctx, originalImage, texture, data) {\r\n\t// Apply the filter and then put the new pixel data\r\n\tctx.putImageData(\r\n\t\tIgeFilters._threshold(\r\n\t\t\tctx.getImageData(\r\n\t\t\t\t0,\r\n\t\t\t\t0,\r\n\t\t\t\tcanvas.width,\r\n\t\t\t\tcanvas.height\r\n\t\t\t),\r\n\t\t\ttexture,\r\n\t\t\tdata\r\n\t\t),\r\n\t\t0,\r\n\t\t0\r\n\t);\r\n};\r\n\r\nIgeFilters._threshold = function (imageData, texture, data) {\r\n\tvar arr,\r\n\t\tarrCount,\r\n\t\ti, r, g, b, v,\r\n\t\tthreshold = texture.data('IgeFilters.threshold.value') || data.value;\r\n\r\n\tarr = imageData.data;\r\n\tarrCount = arr.length;\r\n\r\n\tfor (i = 0; i < arrCount; i += 4) {\r\n\t\tr = arr[i];\r\n\t\tg = arr[i+1];\r\n\t\tb = arr[i+2];\r\n\t\tv = (0.2126*r + 0.7152*g + 0.0722*b >= threshold) ? 255 : 0;\r\n\t\tarr[i] = arr[i+1] = arr[i+2] = v;\r\n\t}\r\n\r\n\treturn imageData;\r\n};","IgeFilters.sharpen = function (canvas, ctx, originalImage, texture, data) {\t\t\r\n\tvar strength = 1,\r\n\t\tloop;\r\n\r\n\tif (data && data.value) {\r\n\t\tstrength = data.value;\r\n\t}\r\n\r\n\tfor (loop = 0; loop < strength; loop++) {\r\n\t\t// Apply the filter and then put the new pixel data\r\n\t\tctx.putImageData(\r\n\t\t\tIgeFilters._convolute(\r\n\t\t\t\tctx.getImageData(\r\n\t\t\t\t\t0,\r\n\t\t\t\t\t0,\r\n\t\t\t\t\tcanvas.width,\r\n\t\t\t\t\tcanvas.height\r\n\t\t\t\t),\r\n\t\t\t\t[  0, -1,  0,\r\n\t\t\t\t\t-1,  5, -1,\r\n\t\t\t\t\t0, -1,  0 ]\r\n\t\t\t),\r\n\t\t\t0,\r\n\t\t\t0\r\n\t\t);\r\n\t}\r\n};","IgeFilters.blur = function (canvas, ctx, originalImage, texture, data) {\r\n\tvar strength = 1,\r\n\t\tloop,\r\n\t\toneNinth = 1 / 9,\r\n\t\tpixelData;\r\n\r\n\tpixelData = ctx.getImageData(\r\n\t\t0,\r\n\t\t0,\r\n\t\tcanvas.width,\r\n\t\tcanvas.height\r\n\t);\r\n\r\n\tif (data && data.value) {\r\n\t\tstrength = data.value;\r\n\t}\r\n\r\n\tfor (loop = 0; loop < strength; loop++) {\r\n\t\tpixelData = IgeFilters._convolute(\r\n\t\t\tpixelData,\r\n\t\t\t[\r\n\t\t\t\toneNinth, oneNinth, oneNinth,\r\n\t\t\t\toneNinth, oneNinth, oneNinth,\r\n\t\t\t\toneNinth, oneNinth, oneNinth\r\n\t\t\t]\r\n\t\t);\r\n\t}\r\n\r\n\t// Put the new pixel data\r\n\tctx.putImageData(\r\n\t\tpixelData,\r\n\t\t0,\r\n\t\t0\r\n\t);\r\n};","IgeFilters.emboss = function (canvas, ctx, originalImage, texture, data) {\r\n\t// Apply the filter and then put the new pixel data\r\n\tctx.putImageData(\r\n\t\tIgeFilters._convolute(\r\n\t\t\tctx.getImageData(\r\n\t\t\t\t0,\r\n\t\t\t\t0,\r\n\t\t\t\tcanvas.width,\r\n\t\t\t\tcanvas.height\r\n\t\t\t),\r\n\t\t\t[\r\n\t\t\t\t-2, -1, 0,\r\n\t\t\t\t-1,  1, 1,\r\n\t\t\t\t0, 1, 2\r\n\t\t\t]\r\n\t\t),\r\n\t\t0,\r\n\t\t0\r\n\t);\r\n};","IgeFilters.edgeDetect = function (canvas, ctx, originalImage, texture, data) {\r\n\tif (!texture._filterImageDrawn || !data || !data.cumulative) {\r\n\t\tctx.clearRect(0, 0, canvas.width, canvas.height);\r\n\t\tctx.drawImage(originalImage, 0, 0);\r\n\t\ttexture._filterImageDrawn = true;\r\n\t}\r\n\r\n\tvar newData = IgeFilters._convolute(\r\n\t\t\tctx.getImageData(\r\n\t\t\t\t0,\r\n\t\t\t\t0,\r\n\t\t\t\tcanvas.width,\r\n\t\t\t\tcanvas.height\r\n\t\t\t),\r\n\t\t\t[\r\n\t\t\t\t-1,\t-1,\t-1,\t-1,\t-1,\r\n\t\t\t\t-1,\t2,\t2,\t2,\t-1,\r\n\t\t\t\t-1,\t2,\t0,\t2,\t-1,\r\n\t\t\t\t-1,\t2,\t2,\t2,\t-1,\r\n\t\t\t\t-1,\t-1,\t-1,\t-1,\t-1\r\n\t\t\t],\r\n\t\t\ttrue\r\n\t\t),\r\n\t\tarr = newData.data,\r\n\t\tarrCount = arr.length,\r\n\t\ti, r, g, b, v;\r\n\r\n\tfor (i = 0; i < arrCount; i += 4) {\r\n\t\tr = arr[i];\r\n\t\tg = arr[i+1];\r\n\t\tb = arr[i+2];\r\n\r\n\t\tv = (r + g + b) / 3;\r\n\t\tv *= 1.1;\r\n\r\n\t\tv = v >= data.value ? 255 : 0;\r\n\r\n\t\tarr[i] = arr[i+1] = arr[i+2] = v;\r\n\t}\r\n\r\n\t// Apply the filter and then put the new pixel data\r\n\tctx.putImageData(\r\n\t\tnewData,\r\n\t\t0,\r\n\t\t0\r\n\t);\r\n};","IgeFilters.edgeEnhance = function (canvas, ctx, originalImage, texture, data) {\r\n\tif (!texture._filterImageDrawn || !data || !data.cumulative) {\r\n\t\tctx.clearRect(0, 0, canvas.width, canvas.height);\r\n\t\tctx.drawImage(originalImage, 0, 0);\r\n\t\ttexture._filterImageDrawn = true;\r\n\t}\r\n\r\n\t// Apply the filter and then put the new pixel data\r\n\tctx.putImageData(\r\n\t\tIgeFilters._convolute(\r\n\t\t\tctx.getImageData(\r\n\t\t\t\t0,\r\n\t\t\t\t0,\r\n\t\t\t\tcanvas.width,\r\n\t\t\t\tcanvas.height\r\n\t\t\t),\r\n\t\t\t[\r\n\t\t\t\t0, 0, 0,\r\n\t\t\t\t-1,  1, 0,\r\n\t\t\t\t0, 0, 0\r\n\t\t\t],\r\n\t\t\ttrue\r\n\t\t),\r\n\t\t0,\r\n\t\t0\r\n\t);\r\n};","IgeFilters.outlineDetect = function (canvas, ctx, originalImage, texture, data) {\r\n\t// Apply the filter and then put the new pixel data\r\n\tctx.putImageData(\r\n\t\tIgeFilters._convolute(\r\n\t\t\tctx.getImageData(\r\n\t\t\t\t0,\r\n\t\t\t\t0,\r\n\t\t\t\tcanvas.width,\r\n\t\t\t\tcanvas.height\r\n\t\t\t),\r\n\t\t\t[\r\n\t\t\t\t0, 1, 0,\r\n\t\t\t\t1,  -4, 1,\r\n\t\t\t\t0, 1, 0\r\n\t\t\t]\r\n\t\t),\r\n\t\t0,\r\n\t\t0\r\n\t);\r\n};","IgeFilters.colorOverlay = function (canvas, ctx, originalImage, texture, data) {\r\n\t// Set the composite operation and draw the colour over the top\r\n\tctx.globalCompositeOperation = 'source-atop';\r\n\r\n\tctx.fillStyle = data.color;\r\n\tctx.fillRect(0, 0, canvas.width, canvas.height);\r\n};","IgeFilters.sobel = function (canvas, ctx, originalImage, texture, data) {\r\n\tvar strength = 1,\r\n\t\tloop;\r\n\r\n\tif (data && data.value) {\r\n\t\tstrength = data.value;\r\n\t}\r\n\r\n\tfor (loop = 0; loop < strength; loop++) {\r\n\t\t// Apply the filter and then put the new pixel data\r\n\t\tctx.putImageData(\r\n\t\t\tIgeFilters._convolute(\r\n\t\t\t\tctx.getImageData(\r\n\t\t\t\t\t0,\r\n\t\t\t\t\t0,\r\n\t\t\t\t\tcanvas.width,\r\n\t\t\t\t\tcanvas.height\r\n\t\t\t\t),\r\n\t\t\t\t[\r\n\t\t\t\t\t-1, -1,  1,\r\n\t\t\t\t\t-2,  0, 2,\r\n\t\t\t\t\t-1, 1,  1\r\n\t\t\t\t],\r\n\t\t\t\ttrue\r\n\t\t\t),\r\n\t\t\t0,\r\n\t\t\t0\r\n\t\t);\r\n\t}\r\n\r\n\t//IgeFilters._invert(canvas, ctx);\r\n};\r\n\r\nIgeFilters._invert = function (canvas, ctx) {\r\n\tvar w, h, canvasData, i;\r\n\tw = canvas.width;\r\n\th = canvas.height;\r\n\r\n\tcanvasData = ctx.getImageData(0, 0, w, h);\r\n\r\n\tfor (i = 0; i < w * h * 4; i += 4)  {\r\n\t\tcanvasData.data[i] = 255 - canvasData.data[i];\r\n\t\tcanvasData.data[i+1] = 255 - canvasData.data[i+1];\r\n\t\tcanvasData.data[i+2] = 255 - canvasData.data[i+2];\r\n\t}\r\n\r\n\tctx.putImageData(canvasData, 0, 0);\r\n};","IgeFilters.invert = function (canvas, ctx, originalImage, texture, data) {\r\n\tvar w, h, canvasData, i;\r\n\tw = canvas.width;\r\n\th = canvas.height;\r\n\r\n\tcanvasData = ctx.getImageData(0, 0, w, h);\r\n\r\n\tfor (i = 0; i < w * h * 4; i += 4)  {\r\n\t\tcanvasData.data[i] = 255 - canvasData.data[i];\r\n\t\tcanvasData.data[i+1] = 255 - canvasData.data[i+1];\r\n\t\tcanvasData.data[i+2] = 255 - canvasData.data[i+2];\r\n\t}\r\n\r\n\tctx.putImageData(canvasData, 0, 0);\r\n};","IgeFilters.glowMask = function (canvas, ctx, originalImage, texture, data) {\r\n\tvar oneNinth = 1 / 9,\r\n\t\tpixelData,\r\n\t\ttempCanvas,\r\n\t\ttempCtx,\r\n\t\ti;\r\n\r\n\tctx.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n\tif (data.blurPasses) {\r\n\t\tctx.drawImage(data.glowMask.image, 0, 0);\r\n\r\n\t\tpixelData = ctx.getImageData(\r\n\t\t\t0,\r\n\t\t\t0,\r\n\t\t\tcanvas.width,\r\n\t\t\tcanvas.height\r\n\t\t);\r\n\r\n\t\tctx.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n\t\tfor (i = 0; i < data.blurPasses; i++) {\r\n\t\t\tpixelData = IgeFilters._convolute(\r\n\t\t\t\tpixelData,\r\n\t\t\t\t[\r\n\t\t\t\t\toneNinth, oneNinth,  oneNinth,\r\n\t\t\t\t\toneNinth, oneNinth,  oneNinth,\r\n\t\t\t\t\toneNinth, oneNinth,  oneNinth\r\n\t\t\t\t],\r\n\t\t\t\tfalse\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\ttempCanvas = document.createElement(\"canvas\");\r\n\t\ttempCtx = tempCanvas.getContext('2d');\r\n\r\n\t\ttempCanvas.width = canvas.width;\r\n\t\ttempCanvas.height = canvas.height;\r\n\r\n\t\ttempCtx.putImageData(pixelData, 0, 0);\r\n\t} else {\r\n\t\ttempCanvas = data.glowMask.image;\r\n\t}\r\n\r\n\tctx.drawImage(originalImage, 0, 0);\r\n\r\n\tctx.globalCompositeOperation = \"lighter\";\r\n\r\n\tfor (i = 0; i < data.glowPasses; i++) {\r\n\t\t// Apply the filter and then put the new pixel data\r\n\t\tctx.drawImage(tempCanvas, 0, 0);\r\n\t}\r\n};","// three.min.js - http://github.com/mrdoob/three.js\r\n'use strict';var THREE=THREE||{REVISION:\"52\"};self.console=self.console||{info:function(){},log:function(){},debug:function(){},warn:function(){},error:function(){}};self.Int32Array=self.Int32Array||Array;self.Float32Array=self.Float32Array||Array;String.prototype.startsWith=String.prototype.startsWith||function(a){return this.slice(0,a.length)===a};String.prototype.endsWith=String.prototype.endsWith||function(a){var a=String(a),b=this.lastIndexOf(a);return(-1<b&&b)===this.length-a.length};\r\nString.prototype.trim=String.prototype.trim||function(){return this.replace(/^\\s+|\\s+$/g,\"\")};\r\n(function(){for(var a=0,b=[\"ms\",\"moz\",\"webkit\",\"o\"],c=0;c<b.length&&!window.requestAnimationFrame;++c)window.requestAnimationFrame=window[b[c]+\"RequestAnimationFrame\"],window.cancelAnimationFrame=window[b[c]+\"CancelAnimationFrame\"]||window[b[c]+\"CancelRequestAnimationFrame\"];void 0===window.requestAnimationFrame&&(window.requestAnimationFrame=function(b){var c=Date.now(),f=Math.max(0,16-(c-a)),g=window.setTimeout(function(){b(c+f)},f);a=c+f;return g});window.cancelAnimationFrame=window.cancelAnimationFrame||\r\nfunction(a){window.clearTimeout(a)}})();THREE.FrontSide=0;THREE.BackSide=1;THREE.DoubleSide=2;THREE.NoShading=0;THREE.FlatShading=1;THREE.SmoothShading=2;THREE.NoColors=0;THREE.FaceColors=1;THREE.VertexColors=2;THREE.NoBlending=0;THREE.NormalBlending=1;THREE.AdditiveBlending=2;THREE.SubtractiveBlending=3;THREE.MultiplyBlending=4;THREE.CustomBlending=5;THREE.AddEquation=100;THREE.SubtractEquation=101;THREE.ReverseSubtractEquation=102;THREE.ZeroFactor=200;THREE.OneFactor=201;THREE.SrcColorFactor=202;\r\nTHREE.OneMinusSrcColorFactor=203;THREE.SrcAlphaFactor=204;THREE.OneMinusSrcAlphaFactor=205;THREE.DstAlphaFactor=206;THREE.OneMinusDstAlphaFactor=207;THREE.DstColorFactor=208;THREE.OneMinusDstColorFactor=209;THREE.SrcAlphaSaturateFactor=210;THREE.MultiplyOperation=0;THREE.MixOperation=1;THREE.UVMapping=function(){};THREE.CubeReflectionMapping=function(){};THREE.CubeRefractionMapping=function(){};THREE.SphericalReflectionMapping=function(){};THREE.SphericalRefractionMapping=function(){};\r\nTHREE.RepeatWrapping=1E3;THREE.ClampToEdgeWrapping=1001;THREE.MirroredRepeatWrapping=1002;THREE.NearestFilter=1003;THREE.NearestMipMapNearestFilter=1004;THREE.NearestMipMapLinearFilter=1005;THREE.LinearFilter=1006;THREE.LinearMipMapNearestFilter=1007;THREE.LinearMipMapLinearFilter=1008;THREE.UnsignedByteType=1009;THREE.ByteType=1010;THREE.ShortType=1011;THREE.UnsignedShortType=1012;THREE.IntType=1013;THREE.UnsignedIntType=1014;THREE.FloatType=1015;THREE.UnsignedShort4444Type=1016;\r\nTHREE.UnsignedShort5551Type=1017;THREE.UnsignedShort565Type=1018;THREE.AlphaFormat=1019;THREE.RGBFormat=1020;THREE.RGBAFormat=1021;THREE.LuminanceFormat=1022;THREE.LuminanceAlphaFormat=1023;THREE.RGB_S3TC_DXT1_Format=2001;THREE.RGBA_S3TC_DXT1_Format=2002;THREE.RGBA_S3TC_DXT3_Format=2003;THREE.RGBA_S3TC_DXT5_Format=2004;THREE.Clock=function(a){this.autoStart=void 0!==a?a:!0;this.elapsedTime=this.oldTime=this.startTime=0;this.running=!1};\r\nTHREE.Clock.prototype.start=function(){this.oldTime=this.startTime=Date.now();this.running=!0};THREE.Clock.prototype.stop=function(){this.getElapsedTime();this.running=!1};THREE.Clock.prototype.getElapsedTime=function(){return this.elapsedTime+=this.getDelta()};THREE.Clock.prototype.getDelta=function(){var a=0;this.autoStart&&!this.running&&this.start();if(this.running){var b=Date.now(),a=0.001*(b-this.oldTime);this.oldTime=b;this.elapsedTime+=a}return a};\r\nTHREE.Color=function(a){void 0!==a&&this.setHex(a);return this};\r\nTHREE.Color.prototype={constructor:THREE.Color,r:1,g:1,b:1,copy:function(a){this.r=a.r;this.g=a.g;this.b=a.b;return this},copyGammaToLinear:function(a){this.r=a.r*a.r;this.g=a.g*a.g;this.b=a.b*a.b;return this},copyLinearToGamma:function(a){this.r=Math.sqrt(a.r);this.g=Math.sqrt(a.g);this.b=Math.sqrt(a.b);return this},convertGammaToLinear:function(){var a=this.r,b=this.g,c=this.b;this.r=a*a;this.g=b*b;this.b=c*c;return this},convertLinearToGamma:function(){this.r=Math.sqrt(this.r);this.g=Math.sqrt(this.g);\r\nthis.b=Math.sqrt(this.b);return this},setRGB:function(a,b,c){this.r=a;this.g=b;this.b=c;return this},setHSV:function(a,b,c){var d,e,f;0===c?this.r=this.g=this.b=0:(d=Math.floor(6*a),e=6*a-d,a=c*(1-b),f=c*(1-b*e),b=c*(1-b*(1-e)),0===d?(this.r=c,this.g=b,this.b=a):1===d?(this.r=f,this.g=c,this.b=a):2===d?(this.r=a,this.g=c,this.b=b):3===d?(this.r=a,this.g=f,this.b=c):4===d?(this.r=b,this.g=a,this.b=c):5===d&&(this.r=c,this.g=a,this.b=f));return this},setHex:function(a){a=Math.floor(a);this.r=(a>>16&\r\n255)/255;this.g=(a>>8&255)/255;this.b=(a&255)/255;return this},lerpSelf:function(a,b){this.r+=(a.r-this.r)*b;this.g+=(a.g-this.g)*b;this.b+=(a.b-this.b)*b;return this},getHex:function(){return 255*this.r<<16^255*this.g<<8^255*this.b<<0},getContextStyle:function(){return\"rgb(\"+(255*this.r|0)+\",\"+(255*this.g|0)+\",\"+(255*this.b|0)+\")\"},clone:function(){return(new THREE.Color).setRGB(this.r,this.g,this.b)}};THREE.Vector2=function(a,b){this.x=a||0;this.y=b||0};\r\nTHREE.Vector2.prototype={constructor:THREE.Vector2,set:function(a,b){this.x=a;this.y=b;return this},copy:function(a){this.x=a.x;this.y=a.y;return this},add:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;return this},addSelf:function(a){this.x+=a.x;this.y+=a.y;return this},sub:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;return this},subSelf:function(a){this.x-=a.x;this.y-=a.y;return this},multiplyScalar:function(a){this.x*=a;this.y*=a;return this},divideScalar:function(a){a?(this.x/=a,this.y/=a):this.set(0,\r\n0);return this},negate:function(){return this.multiplyScalar(-1)},dot:function(a){return this.x*a.x+this.y*a.y},lengthSq:function(){return this.x*this.x+this.y*this.y},length:function(){return Math.sqrt(this.lengthSq())},normalize:function(){return this.divideScalar(this.length())},distanceTo:function(a){return Math.sqrt(this.distanceToSquared(a))},distanceToSquared:function(a){var b=this.x-a.x,a=this.y-a.y;return b*b+a*a},setLength:function(a){return this.normalize().multiplyScalar(a)},lerpSelf:function(a,\r\nb){this.x+=(a.x-this.x)*b;this.y+=(a.y-this.y)*b;return this},equals:function(a){return a.x===this.x&&a.y===this.y},isZero:function(a){return this.lengthSq()<(void 0!==a?a:1E-4)},clone:function(){return new THREE.Vector2(this.x,this.y)}};THREE.Vector3=function(a,b,c){this.x=a||0;this.y=b||0;this.z=c||0};\r\nTHREE.Vector3.prototype={constructor:THREE.Vector3,set:function(a,b,c){this.x=a;this.y=b;this.z=c;return this},setX:function(a){this.x=a;return this},setY:function(a){this.y=a;return this},setZ:function(a){this.z=a;return this},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;return this},add:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;this.z=a.z+b.z;return this},addSelf:function(a){this.x+=a.x;this.y+=a.y;this.z+=a.z;return this},addScalar:function(a){this.x+=a;this.y+=a;this.z+=a;return this},\r\nsub:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;this.z=a.z-b.z;return this},subSelf:function(a){this.x-=a.x;this.y-=a.y;this.z-=a.z;return this},multiply:function(a,b){this.x=a.x*b.x;this.y=a.y*b.y;this.z=a.z*b.z;return this},multiplySelf:function(a){this.x*=a.x;this.y*=a.y;this.z*=a.z;return this},multiplyScalar:function(a){this.x*=a;this.y*=a;this.z*=a;return this},divideSelf:function(a){this.x/=a.x;this.y/=a.y;this.z/=a.z;return this},divideScalar:function(a){a?(this.x/=a,this.y/=a,this.z/=a):\r\nthis.z=this.y=this.x=0;return this},negate:function(){return this.multiplyScalar(-1)},dot:function(a){return this.x*a.x+this.y*a.y+this.z*a.z},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},length:function(){return Math.sqrt(this.lengthSq())},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)},normalize:function(){return this.divideScalar(this.length())},setLength:function(a){return this.normalize().multiplyScalar(a)},lerpSelf:function(a,b){this.x+=\r\n(a.x-this.x)*b;this.y+=(a.y-this.y)*b;this.z+=(a.z-this.z)*b;return this},cross:function(a,b){this.x=a.y*b.z-a.z*b.y;this.y=a.z*b.x-a.x*b.z;this.z=a.x*b.y-a.y*b.x;return this},crossSelf:function(a){var b=this.x,c=this.y,d=this.z;this.x=c*a.z-d*a.y;this.y=d*a.x-b*a.z;this.z=b*a.y-c*a.x;return this},angleTo:function(a){return Math.acos(this.dot(a)/this.length()/a.length())},distanceTo:function(a){return Math.sqrt(this.distanceToSquared(a))},distanceToSquared:function(a){return(new THREE.Vector3).sub(this,\r\na).lengthSq()},getPositionFromMatrix:function(a){this.x=a.elements[12];this.y=a.elements[13];this.z=a.elements[14];return this},setEulerFromRotationMatrix:function(a,b){function c(a){return Math.min(Math.max(a,-1),1)}var d=a.elements,e=d[0],f=d[4],g=d[8],h=d[1],i=d[5],j=d[9],l=d[2],m=d[6],d=d[10];void 0===b||\"XYZ\"===b?(this.y=Math.asin(c(g)),0.99999>Math.abs(g)?(this.x=Math.atan2(-j,d),this.z=Math.atan2(-f,e)):(this.x=Math.atan2(m,i),this.z=0)):\"YXZ\"===b?(this.x=Math.asin(-c(j)),0.99999>Math.abs(j)?\r\n(this.y=Math.atan2(g,d),this.z=Math.atan2(h,i)):(this.y=Math.atan2(-l,e),this.z=0)):\"ZXY\"===b?(this.x=Math.asin(c(m)),0.99999>Math.abs(m)?(this.y=Math.atan2(-l,d),this.z=Math.atan2(-f,i)):(this.y=0,this.z=Math.atan2(h,e))):\"ZYX\"===b?(this.y=Math.asin(-c(l)),0.99999>Math.abs(l)?(this.x=Math.atan2(m,d),this.z=Math.atan2(h,e)):(this.x=0,this.z=Math.atan2(-f,i))):\"YZX\"===b?(this.z=Math.asin(c(h)),0.99999>Math.abs(h)?(this.x=Math.atan2(-j,i),this.y=Math.atan2(-l,e)):(this.x=0,this.y=Math.atan2(g,d))):\r\n\"XZY\"===b&&(this.z=Math.asin(-c(f)),0.99999>Math.abs(f)?(this.x=Math.atan2(m,i),this.y=Math.atan2(g,e)):(this.x=Math.atan2(-j,d),this.y=0));return this},setEulerFromQuaternion:function(a,b){function c(a){return Math.min(Math.max(a,-1),1)}var d=a.x*a.x,e=a.y*a.y,f=a.z*a.z,g=a.w*a.w;void 0===b||\"XYZ\"===b?(this.x=Math.atan2(2*(a.x*a.w-a.y*a.z),g-d-e+f),this.y=Math.asin(c(2*(a.x*a.z+a.y*a.w))),this.z=Math.atan2(2*(a.z*a.w-a.x*a.y),g+d-e-f)):\"YXZ\"===b?(this.x=Math.asin(c(2*(a.x*a.w-a.y*a.z))),this.y=Math.atan2(2*\r\n(a.x*a.z+a.y*a.w),g-d-e+f),this.z=Math.atan2(2*(a.x*a.y+a.z*a.w),g-d+e-f)):\"ZXY\"===b?(this.x=Math.asin(c(2*(a.x*a.w+a.y*a.z))),this.y=Math.atan2(2*(a.y*a.w-a.z*a.x),g-d-e+f),this.z=Math.atan2(2*(a.z*a.w-a.x*a.y),g-d+e-f)):\"ZYX\"===b?(this.x=Math.atan2(2*(a.x*a.w+a.z*a.y),g-d-e+f),this.y=Math.asin(c(2*(a.y*a.w-a.x*a.z))),this.z=Math.atan2(2*(a.x*a.y+a.z*a.w),g+d-e-f)):\"YZX\"===b?(this.x=Math.atan2(2*(a.x*a.w-a.z*a.y),g-d+e-f),this.y=Math.atan2(2*(a.y*a.w-a.x*a.z),g+d-e-f),this.z=Math.asin(c(2*(a.x*a.y+\r\na.z*a.w)))):\"XZY\"===b&&(this.x=Math.atan2(2*(a.x*a.w+a.y*a.z),g-d+e-f),this.y=Math.atan2(2*(a.x*a.z+a.y*a.w),g+d-e-f),this.z=Math.asin(c(2*(a.z*a.w-a.x*a.y))));return this},getScaleFromMatrix:function(a){var b=this.set(a.elements[0],a.elements[1],a.elements[2]).length(),c=this.set(a.elements[4],a.elements[5],a.elements[6]).length(),a=this.set(a.elements[8],a.elements[9],a.elements[10]).length();this.x=b;this.y=c;this.z=a;return this},equals:function(a){return a.x===this.x&&a.y===this.y&&a.z===this.z},\r\nisZero:function(a){return this.lengthSq()<(void 0!==a?a:1E-4)},clone:function(){return new THREE.Vector3(this.x,this.y,this.z)}};THREE.Vector4=function(a,b,c,d){this.x=a||0;this.y=b||0;this.z=c||0;this.w=void 0!==d?d:1};\r\nTHREE.Vector4.prototype={constructor:THREE.Vector4,set:function(a,b,c,d){this.x=a;this.y=b;this.z=c;this.w=d;return this},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;this.w=void 0!==a.w?a.w:1;return this},add:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;this.z=a.z+b.z;this.w=a.w+b.w;return this},addSelf:function(a){this.x+=a.x;this.y+=a.y;this.z+=a.z;this.w+=a.w;return this},sub:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;this.z=a.z-b.z;this.w=a.w-b.w;return this},subSelf:function(a){this.x-=\r\na.x;this.y-=a.y;this.z-=a.z;this.w-=a.w;return this},multiplyScalar:function(a){this.x*=a;this.y*=a;this.z*=a;this.w*=a;return this},divideScalar:function(a){a?(this.x/=a,this.y/=a,this.z/=a,this.w/=a):(this.z=this.y=this.x=0,this.w=1);return this},negate:function(){return this.multiplyScalar(-1)},dot:function(a){return this.x*a.x+this.y*a.y+this.z*a.z+this.w*a.w},lengthSq:function(){return this.dot(this)},length:function(){return Math.sqrt(this.lengthSq())},lengthManhattan:function(){return Math.abs(this.x)+\r\nMath.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)},normalize:function(){return this.divideScalar(this.length())},setLength:function(a){return this.normalize().multiplyScalar(a)},lerpSelf:function(a,b){this.x+=(a.x-this.x)*b;this.y+=(a.y-this.y)*b;this.z+=(a.z-this.z)*b;this.w+=(a.w-this.w)*b;return this},clone:function(){return new THREE.Vector4(this.x,this.y,this.z,this.w)},setAxisAngleFromQuaternion:function(a){this.w=2*Math.acos(a.w);var b=Math.sqrt(1-a.w*a.w);1E-4>b?(this.x=1,this.z=this.y=0):\r\n(this.x=a.x/b,this.y=a.y/b,this.z=a.z/b);return this},setAxisAngleFromRotationMatrix:function(a){var b,c,d,a=a.elements,e=a[0];d=a[4];var f=a[8],g=a[1],h=a[5],i=a[9];c=a[2];b=a[6];var j=a[10];if(0.01>Math.abs(d-g)&&0.01>Math.abs(f-c)&&0.01>Math.abs(i-b)){if(0.1>Math.abs(d+g)&&0.1>Math.abs(f+c)&&0.1>Math.abs(i+b)&&0.1>Math.abs(e+h+j-3))return this.set(1,0,0,0),this;a=Math.PI;e=(e+1)/2;h=(h+1)/2;j=(j+1)/2;d=(d+g)/4;f=(f+c)/4;i=(i+b)/4;e>h&&e>j?0.01>e?(b=0,d=c=0.707106781):(b=Math.sqrt(e),c=d/b,d=f/\r\nb):h>j?0.01>h?(b=0.707106781,c=0,d=0.707106781):(c=Math.sqrt(h),b=d/c,d=i/c):0.01>j?(c=b=0.707106781,d=0):(d=Math.sqrt(j),b=f/d,c=i/d);this.set(b,c,d,a);return this}a=Math.sqrt((b-i)*(b-i)+(f-c)*(f-c)+(g-d)*(g-d));0.001>Math.abs(a)&&(a=1);this.x=(b-i)/a;this.y=(f-c)/a;this.z=(g-d)/a;this.w=Math.acos((e+h+j-1)/2);return this}};THREE.Matrix3=function(){this.elements=new Float32Array(9)};\r\nTHREE.Matrix3.prototype={constructor:THREE.Matrix3,getInverse:function(a){var b=a.elements,a=b[10]*b[5]-b[6]*b[9],c=-b[10]*b[1]+b[2]*b[9],d=b[6]*b[1]-b[2]*b[5],e=-b[10]*b[4]+b[6]*b[8],f=b[10]*b[0]-b[2]*b[8],g=-b[6]*b[0]+b[2]*b[4],h=b[9]*b[4]-b[5]*b[8],i=-b[9]*b[0]+b[1]*b[8],j=b[5]*b[0]-b[1]*b[4],b=b[0]*a+b[1]*e+b[2]*h;0===b&&console.warn(\"Matrix3.getInverse(): determinant == 0\");var b=1/b,l=this.elements;l[0]=b*a;l[1]=b*c;l[2]=b*d;l[3]=b*e;l[4]=b*f;l[5]=b*g;l[6]=b*h;l[7]=b*i;l[8]=b*j;return this},\r\ntranspose:function(){var a,b=this.elements;a=b[1];b[1]=b[3];b[3]=a;a=b[2];b[2]=b[6];b[6]=a;a=b[5];b[5]=b[7];b[7]=a;return this},transposeIntoArray:function(a){var b=this.m;a[0]=b[0];a[1]=b[3];a[2]=b[6];a[3]=b[1];a[4]=b[4];a[5]=b[7];a[6]=b[2];a[7]=b[5];a[8]=b[8];return this}};THREE.Matrix4=function(a,b,c,d,e,f,g,h,i,j,l,m,n,p,o,q){this.elements=new Float32Array(16);this.set(void 0!==a?a:1,b||0,c||0,d||0,e||0,void 0!==f?f:1,g||0,h||0,i||0,j||0,void 0!==l?l:1,m||0,n||0,p||0,o||0,void 0!==q?q:1)};\r\nTHREE.Matrix4.prototype={constructor:THREE.Matrix4,set:function(a,b,c,d,e,f,g,h,i,j,l,m,n,p,o,q){var r=this.elements;r[0]=a;r[4]=b;r[8]=c;r[12]=d;r[1]=e;r[5]=f;r[9]=g;r[13]=h;r[2]=i;r[6]=j;r[10]=l;r[14]=m;r[3]=n;r[7]=p;r[11]=o;r[15]=q;return this},identity:function(){this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1);return this},copy:function(a){a=a.elements;this.set(a[0],a[4],a[8],a[12],a[1],a[5],a[9],a[13],a[2],a[6],a[10],a[14],a[3],a[7],a[11],a[15]);return this},lookAt:function(a,b,c){var d=this.elements,\r\ne=THREE.Matrix4.__v1,f=THREE.Matrix4.__v2,g=THREE.Matrix4.__v3;g.sub(a,b).normalize();0===g.length()&&(g.z=1);e.cross(c,g).normalize();0===e.length()&&(g.x+=1E-4,e.cross(c,g).normalize());f.cross(g,e);d[0]=e.x;d[4]=f.x;d[8]=g.x;d[1]=e.y;d[5]=f.y;d[9]=g.y;d[2]=e.z;d[6]=f.z;d[10]=g.z;return this},multiply:function(a,b){var c=a.elements,d=b.elements,e=this.elements,f=c[0],g=c[4],h=c[8],i=c[12],j=c[1],l=c[5],m=c[9],n=c[13],p=c[2],o=c[6],q=c[10],r=c[14],t=c[3],B=c[7],u=c[11],c=c[15],s=d[0],z=d[4],A=d[8],\r\nv=d[12],y=d[1],C=d[5],G=d[9],H=d[13],J=d[2],E=d[6],M=d[10],K=d[14],F=d[3],I=d[7],L=d[11],d=d[15];e[0]=f*s+g*y+h*J+i*F;e[4]=f*z+g*C+h*E+i*I;e[8]=f*A+g*G+h*M+i*L;e[12]=f*v+g*H+h*K+i*d;e[1]=j*s+l*y+m*J+n*F;e[5]=j*z+l*C+m*E+n*I;e[9]=j*A+l*G+m*M+n*L;e[13]=j*v+l*H+m*K+n*d;e[2]=p*s+o*y+q*J+r*F;e[6]=p*z+o*C+q*E+r*I;e[10]=p*A+o*G+q*M+r*L;e[14]=p*v+o*H+q*K+r*d;e[3]=t*s+B*y+u*J+c*F;e[7]=t*z+B*C+u*E+c*I;e[11]=t*A+B*G+u*M+c*L;e[15]=t*v+B*H+u*K+c*d;return this},multiplySelf:function(a){return this.multiply(this,\r\na)},multiplyToArray:function(a,b,c){var d=this.elements;this.multiply(a,b);c[0]=d[0];c[1]=d[1];c[2]=d[2];c[3]=d[3];c[4]=d[4];c[5]=d[5];c[6]=d[6];c[7]=d[7];c[8]=d[8];c[9]=d[9];c[10]=d[10];c[11]=d[11];c[12]=d[12];c[13]=d[13];c[14]=d[14];c[15]=d[15];return this},multiplyScalar:function(a){var b=this.elements;b[0]*=a;b[4]*=a;b[8]*=a;b[12]*=a;b[1]*=a;b[5]*=a;b[9]*=a;b[13]*=a;b[2]*=a;b[6]*=a;b[10]*=a;b[14]*=a;b[3]*=a;b[7]*=a;b[11]*=a;b[15]*=a;return this},multiplyVector3:function(a){var b=this.elements,\r\nc=a.x,d=a.y,e=a.z,f=1/(b[3]*c+b[7]*d+b[11]*e+b[15]);a.x=(b[0]*c+b[4]*d+b[8]*e+b[12])*f;a.y=(b[1]*c+b[5]*d+b[9]*e+b[13])*f;a.z=(b[2]*c+b[6]*d+b[10]*e+b[14])*f;return a},multiplyVector4:function(a){var b=this.elements,c=a.x,d=a.y,e=a.z,f=a.w;a.x=b[0]*c+b[4]*d+b[8]*e+b[12]*f;a.y=b[1]*c+b[5]*d+b[9]*e+b[13]*f;a.z=b[2]*c+b[6]*d+b[10]*e+b[14]*f;a.w=b[3]*c+b[7]*d+b[11]*e+b[15]*f;return a},multiplyVector3Array:function(a){for(var b=THREE.Matrix4.__v1,c=0,d=a.length;c<d;c+=3)b.x=a[c],b.y=a[c+1],b.z=a[c+2],\r\nthis.multiplyVector3(b),a[c]=b.x,a[c+1]=b.y,a[c+2]=b.z;return a},rotateAxis:function(a){var b=this.elements,c=a.x,d=a.y,e=a.z;a.x=c*b[0]+d*b[4]+e*b[8];a.y=c*b[1]+d*b[5]+e*b[9];a.z=c*b[2]+d*b[6]+e*b[10];a.normalize();return a},crossVector:function(a){var b=this.elements,c=new THREE.Vector4;c.x=b[0]*a.x+b[4]*a.y+b[8]*a.z+b[12]*a.w;c.y=b[1]*a.x+b[5]*a.y+b[9]*a.z+b[13]*a.w;c.z=b[2]*a.x+b[6]*a.y+b[10]*a.z+b[14]*a.w;c.w=a.w?b[3]*a.x+b[7]*a.y+b[11]*a.z+b[15]*a.w:1;return c},determinant:function(){var a=\r\nthis.elements,b=a[0],c=a[4],d=a[8],e=a[12],f=a[1],g=a[5],h=a[9],i=a[13],j=a[2],l=a[6],m=a[10],n=a[14],p=a[3],o=a[7],q=a[11],a=a[15];return e*h*l*p-d*i*l*p-e*g*m*p+c*i*m*p+d*g*n*p-c*h*n*p-e*h*j*o+d*i*j*o+e*f*m*o-b*i*m*o-d*f*n*o+b*h*n*o+e*g*j*q-c*i*j*q-e*f*l*q+b*i*l*q+c*f*n*q-b*g*n*q-d*g*j*a+c*h*j*a+d*f*l*a-b*h*l*a-c*f*m*a+b*g*m*a},transpose:function(){var a=this.elements,b;b=a[1];a[1]=a[4];a[4]=b;b=a[2];a[2]=a[8];a[8]=b;b=a[6];a[6]=a[9];a[9]=b;b=a[3];a[3]=a[12];a[12]=b;b=a[7];a[7]=a[13];a[13]=b;b=\r\na[11];a[11]=a[14];a[14]=b;return this},flattenToArray:function(a){var b=this.elements;a[0]=b[0];a[1]=b[1];a[2]=b[2];a[3]=b[3];a[4]=b[4];a[5]=b[5];a[6]=b[6];a[7]=b[7];a[8]=b[8];a[9]=b[9];a[10]=b[10];a[11]=b[11];a[12]=b[12];a[13]=b[13];a[14]=b[14];a[15]=b[15];return a},flattenToArrayOffset:function(a,b){var c=this.elements;a[b]=c[0];a[b+1]=c[1];a[b+2]=c[2];a[b+3]=c[3];a[b+4]=c[4];a[b+5]=c[5];a[b+6]=c[6];a[b+7]=c[7];a[b+8]=c[8];a[b+9]=c[9];a[b+10]=c[10];a[b+11]=c[11];a[b+12]=c[12];a[b+13]=c[13];a[b+\r\n14]=c[14];a[b+15]=c[15];return a},getPosition:function(){var a=this.elements;return THREE.Matrix4.__v1.set(a[12],a[13],a[14])},setPosition:function(a){var b=this.elements;b[12]=a.x;b[13]=a.y;b[14]=a.z;return this},getColumnX:function(){var a=this.elements;return THREE.Matrix4.__v1.set(a[0],a[1],a[2])},getColumnY:function(){var a=this.elements;return THREE.Matrix4.__v1.set(a[4],a[5],a[6])},getColumnZ:function(){var a=this.elements;return THREE.Matrix4.__v1.set(a[8],a[9],a[10])},getInverse:function(a){var b=\r\nthis.elements,c=a.elements,d=c[0],e=c[4],f=c[8],g=c[12],h=c[1],i=c[5],j=c[9],l=c[13],m=c[2],n=c[6],p=c[10],o=c[14],q=c[3],r=c[7],t=c[11],c=c[15];b[0]=j*o*r-l*p*r+l*n*t-i*o*t-j*n*c+i*p*c;b[4]=g*p*r-f*o*r-g*n*t+e*o*t+f*n*c-e*p*c;b[8]=f*l*r-g*j*r+g*i*t-e*l*t-f*i*c+e*j*c;b[12]=g*j*n-f*l*n-g*i*p+e*l*p+f*i*o-e*j*o;b[1]=l*p*q-j*o*q-l*m*t+h*o*t+j*m*c-h*p*c;b[5]=f*o*q-g*p*q+g*m*t-d*o*t-f*m*c+d*p*c;b[9]=g*j*q-f*l*q-g*h*t+d*l*t+f*h*c-d*j*c;b[13]=f*l*m-g*j*m+g*h*p-d*l*p-f*h*o+d*j*o;b[2]=i*o*q-l*n*q+l*m*r-h*o*\r\nr-i*m*c+h*n*c;b[6]=g*n*q-e*o*q-g*m*r+d*o*r+e*m*c-d*n*c;b[10]=e*l*q-g*i*q+g*h*r-d*l*r-e*h*c+d*i*c;b[14]=g*i*m-e*l*m-g*h*n+d*l*n+e*h*o-d*i*o;b[3]=j*n*q-i*p*q-j*m*r+h*p*r+i*m*t-h*n*t;b[7]=e*p*q-f*n*q+f*m*r-d*p*r-e*m*t+d*n*t;b[11]=f*i*q-e*j*q-f*h*r+d*j*r+e*h*t-d*i*t;b[15]=e*j*m-f*i*m+f*h*n-d*j*n-e*h*p+d*i*p;this.multiplyScalar(1/a.determinant());return this},setRotationFromEuler:function(a,b){var c=this.elements,d=a.x,e=a.y,f=a.z,g=Math.cos(d),d=Math.sin(d),h=Math.cos(e),e=Math.sin(e),i=Math.cos(f),f=\r\nMath.sin(f);if(void 0===b||\"XYZ\"===b){var j=g*i,l=g*f,m=d*i,n=d*f;c[0]=h*i;c[4]=-h*f;c[8]=e;c[1]=l+m*e;c[5]=j-n*e;c[9]=-d*h;c[2]=n-j*e;c[6]=m+l*e;c[10]=g*h}else\"YXZ\"===b?(j=h*i,l=h*f,m=e*i,n=e*f,c[0]=j+n*d,c[4]=m*d-l,c[8]=g*e,c[1]=g*f,c[5]=g*i,c[9]=-d,c[2]=l*d-m,c[6]=n+j*d,c[10]=g*h):\"ZXY\"===b?(j=h*i,l=h*f,m=e*i,n=e*f,c[0]=j-n*d,c[4]=-g*f,c[8]=m+l*d,c[1]=l+m*d,c[5]=g*i,c[9]=n-j*d,c[2]=-g*e,c[6]=d,c[10]=g*h):\"ZYX\"===b?(j=g*i,l=g*f,m=d*i,n=d*f,c[0]=h*i,c[4]=m*e-l,c[8]=j*e+n,c[1]=h*f,c[5]=n*e+j,c[9]=\r\nl*e-m,c[2]=-e,c[6]=d*h,c[10]=g*h):\"YZX\"===b?(j=g*h,l=g*e,m=d*h,n=d*e,c[0]=h*i,c[4]=n-j*f,c[8]=m*f+l,c[1]=f,c[5]=g*i,c[9]=-d*i,c[2]=-e*i,c[6]=l*f+m,c[10]=j-n*f):\"XZY\"===b&&(j=g*h,l=g*e,m=d*h,n=d*e,c[0]=h*i,c[4]=-f,c[8]=e*i,c[1]=j*f+n,c[5]=g*i,c[9]=l*f-m,c[2]=m*f-l,c[6]=d*i,c[10]=n*f+j);return this},setRotationFromQuaternion:function(a){var b=this.elements,c=a.x,d=a.y,e=a.z,f=a.w,g=c+c,h=d+d,i=e+e,a=c*g,j=c*h,c=c*i,l=d*h,d=d*i,e=e*i,g=f*g,h=f*h,f=f*i;b[0]=1-(l+e);b[4]=j-f;b[8]=c+h;b[1]=j+f;b[5]=1-(a+\r\ne);b[9]=d-g;b[2]=c-h;b[6]=d+g;b[10]=1-(a+l);return this},compose:function(a,b,c){var d=this.elements,e=THREE.Matrix4.__m1,f=THREE.Matrix4.__m2;e.identity();e.setRotationFromQuaternion(b);f.makeScale(c.x,c.y,c.z);this.multiply(e,f);d[12]=a.x;d[13]=a.y;d[14]=a.z;return this},decompose:function(a,b,c){var d=this.elements,e=THREE.Matrix4.__v1,f=THREE.Matrix4.__v2,g=THREE.Matrix4.__v3;e.set(d[0],d[1],d[2]);f.set(d[4],d[5],d[6]);g.set(d[8],d[9],d[10]);a=a instanceof THREE.Vector3?a:new THREE.Vector3;b=\r\nb instanceof THREE.Quaternion?b:new THREE.Quaternion;c=c instanceof THREE.Vector3?c:new THREE.Vector3;c.x=e.length();c.y=f.length();c.z=g.length();a.x=d[12];a.y=d[13];a.z=d[14];d=THREE.Matrix4.__m1;d.copy(this);d.elements[0]/=c.x;d.elements[1]/=c.x;d.elements[2]/=c.x;d.elements[4]/=c.y;d.elements[5]/=c.y;d.elements[6]/=c.y;d.elements[8]/=c.z;d.elements[9]/=c.z;d.elements[10]/=c.z;b.setFromRotationMatrix(d);return[a,b,c]},extractPosition:function(a){var b=this.elements,a=a.elements;b[12]=a[12];b[13]=\r\na[13];b[14]=a[14];return this},extractRotation:function(a){var b=this.elements,a=a.elements,c=THREE.Matrix4.__v1,d=1/c.set(a[0],a[1],a[2]).length(),e=1/c.set(a[4],a[5],a[6]).length(),c=1/c.set(a[8],a[9],a[10]).length();b[0]=a[0]*d;b[1]=a[1]*d;b[2]=a[2]*d;b[4]=a[4]*e;b[5]=a[5]*e;b[6]=a[6]*e;b[8]=a[8]*c;b[9]=a[9]*c;b[10]=a[10]*c;return this},translate:function(a){var b=this.elements,c=a.x,d=a.y,a=a.z;b[12]=b[0]*c+b[4]*d+b[8]*a+b[12];b[13]=b[1]*c+b[5]*d+b[9]*a+b[13];b[14]=b[2]*c+b[6]*d+b[10]*a+b[14];\r\nb[15]=b[3]*c+b[7]*d+b[11]*a+b[15];return this},rotateX:function(a){var b=this.elements,c=b[4],d=b[5],e=b[6],f=b[7],g=b[8],h=b[9],i=b[10],j=b[11],l=Math.cos(a),a=Math.sin(a);b[4]=l*c+a*g;b[5]=l*d+a*h;b[6]=l*e+a*i;b[7]=l*f+a*j;b[8]=l*g-a*c;b[9]=l*h-a*d;b[10]=l*i-a*e;b[11]=l*j-a*f;return this},rotateY:function(a){var b=this.elements,c=b[0],d=b[1],e=b[2],f=b[3],g=b[8],h=b[9],i=b[10],j=b[11],l=Math.cos(a),a=Math.sin(a);b[0]=l*c-a*g;b[1]=l*d-a*h;b[2]=l*e-a*i;b[3]=l*f-a*j;b[8]=l*g+a*c;b[9]=l*h+a*d;b[10]=\r\nl*i+a*e;b[11]=l*j+a*f;return this},rotateZ:function(a){var b=this.elements,c=b[0],d=b[1],e=b[2],f=b[3],g=b[4],h=b[5],i=b[6],j=b[7],l=Math.cos(a),a=Math.sin(a);b[0]=l*c+a*g;b[1]=l*d+a*h;b[2]=l*e+a*i;b[3]=l*f+a*j;b[4]=l*g-a*c;b[5]=l*h-a*d;b[6]=l*i-a*e;b[7]=l*j-a*f;return this},rotateByAxis:function(a,b){var c=this.elements;if(1===a.x&&0===a.y&&0===a.z)return this.rotateX(b);if(0===a.x&&1===a.y&&0===a.z)return this.rotateY(b);if(0===a.x&&0===a.y&&1===a.z)return this.rotateZ(b);var d=a.x,e=a.y,f=a.z,\r\ng=Math.sqrt(d*d+e*e+f*f),d=d/g,e=e/g,f=f/g,g=d*d,h=e*e,i=f*f,j=Math.cos(b),l=Math.sin(b),m=1-j,n=d*e*m,p=d*f*m,m=e*f*m,d=d*l,o=e*l,l=f*l,f=g+(1-g)*j,g=n+l,e=p-o,n=n-l,h=h+(1-h)*j,l=m+d,p=p+o,m=m-d,i=i+(1-i)*j,j=c[0],d=c[1],o=c[2],q=c[3],r=c[4],t=c[5],B=c[6],u=c[7],s=c[8],z=c[9],A=c[10],v=c[11];c[0]=f*j+g*r+e*s;c[1]=f*d+g*t+e*z;c[2]=f*o+g*B+e*A;c[3]=f*q+g*u+e*v;c[4]=n*j+h*r+l*s;c[5]=n*d+h*t+l*z;c[6]=n*o+h*B+l*A;c[7]=n*q+h*u+l*v;c[8]=p*j+m*r+i*s;c[9]=p*d+m*t+i*z;c[10]=p*o+m*B+i*A;c[11]=p*q+m*u+i*v;\r\nreturn this},scale:function(a){var b=this.elements,c=a.x,d=a.y,a=a.z;b[0]*=c;b[4]*=d;b[8]*=a;b[1]*=c;b[5]*=d;b[9]*=a;b[2]*=c;b[6]*=d;b[10]*=a;b[3]*=c;b[7]*=d;b[11]*=a;return this},getMaxScaleOnAxis:function(){var a=this.elements;return Math.sqrt(Math.max(a[0]*a[0]+a[1]*a[1]+a[2]*a[2],Math.max(a[4]*a[4]+a[5]*a[5]+a[6]*a[6],a[8]*a[8]+a[9]*a[9]+a[10]*a[10])))},makeTranslation:function(a,b,c){this.set(1,0,0,a,0,1,0,b,0,0,1,c,0,0,0,1);return this},makeRotationX:function(a){var b=Math.cos(a),a=Math.sin(a);\r\nthis.set(1,0,0,0,0,b,-a,0,0,a,b,0,0,0,0,1);return this},makeRotationY:function(a){var b=Math.cos(a),a=Math.sin(a);this.set(b,0,a,0,0,1,0,0,-a,0,b,0,0,0,0,1);return this},makeRotationZ:function(a){var b=Math.cos(a),a=Math.sin(a);this.set(b,-a,0,0,a,b,0,0,0,0,1,0,0,0,0,1);return this},makeRotationAxis:function(a,b){var c=Math.cos(b),d=Math.sin(b),e=1-c,f=a.x,g=a.y,h=a.z,i=e*f,j=e*g;this.set(i*f+c,i*g-d*h,i*h+d*g,0,i*g+d*h,j*g+c,j*h-d*f,0,i*h-d*g,j*h+d*f,e*h*h+c,0,0,0,0,1);return this},makeScale:function(a,\r\nb,c){this.set(a,0,0,0,0,b,0,0,0,0,c,0,0,0,0,1);return this},makeFrustum:function(a,b,c,d,e,f){var g=this.elements;g[0]=2*e/(b-a);g[4]=0;g[8]=(b+a)/(b-a);g[12]=0;g[1]=0;g[5]=2*e/(d-c);g[9]=(d+c)/(d-c);g[13]=0;g[2]=0;g[6]=0;g[10]=-(f+e)/(f-e);g[14]=-2*f*e/(f-e);g[3]=0;g[7]=0;g[11]=-1;g[15]=0;return this},makePerspective:function(a,b,c,d){var a=c*Math.tan(a*Math.PI/360),e=-a;return this.makeFrustum(e*b,a*b,e,a,c,d)},makeOrthographic:function(a,b,c,d,e,f){var g=this.elements,h=b-a,i=c-d,j=f-e;g[0]=2/\r\nh;g[4]=0;g[8]=0;g[12]=-((b+a)/h);g[1]=0;g[5]=2/i;g[9]=0;g[13]=-((c+d)/i);g[2]=0;g[6]=0;g[10]=-2/j;g[14]=-((f+e)/j);g[3]=0;g[7]=0;g[11]=0;g[15]=1;return this},clone:function(){var a=this.elements;return new THREE.Matrix4(a[0],a[4],a[8],a[12],a[1],a[5],a[9],a[13],a[2],a[6],a[10],a[14],a[3],a[7],a[11],a[15])}};THREE.Matrix4.__v1=new THREE.Vector3;THREE.Matrix4.__v2=new THREE.Vector3;THREE.Matrix4.__v3=new THREE.Vector3;THREE.Matrix4.__m1=new THREE.Matrix4;THREE.Matrix4.__m2=new THREE.Matrix4;\r\nTHREE.EventTarget=function(){var a={};this.addEventListener=function(b,c){void 0===a[b]&&(a[b]=[]);-1===a[b].indexOf(c)&&a[b].push(c)};this.dispatchEvent=function(b){for(var c in a[b.type])a[b.type][c](b)};this.removeEventListener=function(b,c){var d=a[b].indexOf(c);-1!==d&&a[b].splice(d,1)}};THREE.Frustum=function(){this.planes=[new THREE.Vector4,new THREE.Vector4,new THREE.Vector4,new THREE.Vector4,new THREE.Vector4,new THREE.Vector4]};\r\nTHREE.Frustum.prototype.setFromMatrix=function(a){var b=this.planes,c=a.elements,a=c[0],d=c[1],e=c[2],f=c[3],g=c[4],h=c[5],i=c[6],j=c[7],l=c[8],m=c[9],n=c[10],p=c[11],o=c[12],q=c[13],r=c[14],c=c[15];b[0].set(f-a,j-g,p-l,c-o);b[1].set(f+a,j+g,p+l,c+o);b[2].set(f+d,j+h,p+m,c+q);b[3].set(f-d,j-h,p-m,c-q);b[4].set(f-e,j-i,p-n,c-r);b[5].set(f+e,j+i,p+n,c+r);for(d=0;6>d;d++)a=b[d],a.divideScalar(Math.sqrt(a.x*a.x+a.y*a.y+a.z*a.z))};\r\nTHREE.Frustum.prototype.contains=function(a){for(var b=0,c=this.planes,b=a.matrixWorld,d=b.elements,a=-a.geometry.boundingSphere.radius*b.getMaxScaleOnAxis(),e=0;6>e;e++)if(b=c[e].x*d[12]+c[e].y*d[13]+c[e].z*d[14]+c[e].w,b<=a)return!1;return!0};THREE.Frustum.__v1=new THREE.Vector3;\r\n(function(a){a.Ray=function(b,c,d,e){this.origin=b||new a.Vector3;this.direction=c||new a.Vector3;this.near=d||0;this.far=e||Infinity};var b=new a.Vector3,c=new a.Vector3,d=new a.Vector3,e=new a.Vector3,f=new a.Vector3,g=new a.Vector3,h=new a.Matrix4,i=function(a,b){return a.distance-b.distance},j=new a.Vector3,l=new a.Vector3,m=new a.Vector3,n=function(a,b,c){j.sub(c,a);var d=j.dot(b),a=l.add(a,m.copy(b).multiplyScalar(d));return c.distanceTo(a)},p=function(a,b,c,d){j.sub(d,b);l.sub(c,b);m.sub(a,\r\nb);var a=j.dot(j),b=j.dot(l),c=j.dot(m),e=l.dot(l),d=l.dot(m),f=1/(a*e-b*b),e=(e*c-b*d)*f,a=(a*d-b*c)*f;return 0<=e&&0<=a&&1>e+a},o=function(i,l,j){var m,o;if(i instanceof a.Particle){m=n(l.origin,l.direction,i.matrixWorld.getPosition());if(m>i.scale.x)return j;o={distance:m,point:i.position,face:null,object:i};j.push(o)}else if(i instanceof a.Mesh){var q=i.geometry.boundingSphere.radius*i.matrixWorld.getMaxScaleOnAxis();m=n(l.origin,l.direction,i.matrixWorld.getPosition());if(m>q)return j;var A,\r\nv,y=i.geometry,C=y.vertices,G,H,J;G=i.geometry.materials;H=i.material instanceof a.MeshFaceMaterial;var E,M=l.precision;i.matrixRotationWorld.extractRotation(i.matrixWorld);b.copy(l.origin);h.getInverse(i.matrixWorld);c.copy(b);h.multiplyVector3(c);d.copy(l.direction);h.rotateAxis(d).normalize();q=0;for(A=y.faces.length;q<A;q++)if(o=y.faces[q],m=!0===H?G[o.materialIndex]:i.material,void 0!==m&&(J=m.side,e.sub(o.centroid,c),f=o.normal,m=d.dot(f),!(Math.abs(m)<M)&&(v=f.dot(e)/m,!(0>v)&&(J===a.DoubleSide||\r\n(J===a.FrontSide?0>m:0<m)))))if(g.add(c,d.multiplyScalar(v)),o instanceof a.Face3)m=C[o.a],v=C[o.b],J=C[o.c],p(g,m,v,J)&&(v=i.matrixWorld.multiplyVector3(g.clone()),m=b.distanceTo(v),m<l.near||m>l.far||(o={distance:m,point:v,face:o,faceIndex:q,object:i},j.push(o)));else if(o instanceof a.Face4&&(m=C[o.a],v=C[o.b],J=C[o.c],E=C[o.d],p(g,m,v,E)||p(g,v,J,E)))v=i.matrixWorld.multiplyVector3(g.clone()),m=b.distanceTo(v),m<l.near||m>l.far||(o={distance:m,point:v,face:o,faceIndex:q,object:i},j.push(o))}},\r\nq=function(a,b,c){for(var a=a.getDescendants(),d=0,e=a.length;d<e;d++)o(a[d],b,c)};a.Ray.prototype.precision=1E-4;a.Ray.prototype.set=function(a,b){this.origin=a;this.direction=b};a.Ray.prototype.intersectObject=function(a,b){var c=[];!0===b&&q(a,this,c);o(a,this,c);c.sort(i);return c};a.Ray.prototype.intersectObjects=function(a,b){for(var c=[],d=0,e=a.length;d<e;d++)o(a[d],this,c),!0===b&&q(a[d],this,c);c.sort(i);return c}})(THREE);\r\nTHREE.Rectangle=function(){function a(){f=d-b;g=e-c}var b=0,c=0,d=0,e=0,f=0,g=0,h=!0;this.getX=function(){return b};this.getY=function(){return c};this.getWidth=function(){return f};this.getHeight=function(){return g};this.getLeft=function(){return b};this.getTop=function(){return c};this.getRight=function(){return d};this.getBottom=function(){return e};this.set=function(f,g,l,m){h=!1;b=f;c=g;d=l;e=m;a()};this.addPoint=function(f,g){!0===h?(h=!1,b=f,c=g,d=f,e=g):(b=b<f?b:f,c=c<g?c:g,d=d>f?d:f,e=e>\r\ng?e:g);a()};this.add3Points=function(f,g,l,m,n,p){!0===h?(h=!1,b=f<l?f<n?f:n:l<n?l:n,c=g<m?g<p?g:p:m<p?m:p,d=f>l?f>n?f:n:l>n?l:n,e=g>m?g>p?g:p:m>p?m:p):(b=f<l?f<n?f<b?f:b:n<b?n:b:l<n?l<b?l:b:n<b?n:b,c=g<m?g<p?g<c?g:c:p<c?p:c:m<p?m<c?m:c:p<c?p:c,d=f>l?f>n?f>d?f:d:n>d?n:d:l>n?l>d?l:d:n>d?n:d,e=g>m?g>p?g>e?g:e:p>e?p:e:m>p?m>e?m:e:p>e?p:e);a()};this.addRectangle=function(f){!0===h?(h=!1,b=f.getLeft(),c=f.getTop(),d=f.getRight(),e=f.getBottom()):(b=b<f.getLeft()?b:f.getLeft(),c=c<f.getTop()?c:f.getTop(),\r\nd=d>f.getRight()?d:f.getRight(),e=e>f.getBottom()?e:f.getBottom());a()};this.inflate=function(f){b-=f;c-=f;d+=f;e+=f;a()};this.minSelf=function(f){b=b>f.getLeft()?b:f.getLeft();c=c>f.getTop()?c:f.getTop();d=d<f.getRight()?d:f.getRight();e=e<f.getBottom()?e:f.getBottom();a()};this.intersects=function(a){return d<a.getLeft()||b>a.getRight()||e<a.getTop()||c>a.getBottom()?!1:!0};this.empty=function(){h=!0;e=d=c=b=0;a()};this.isEmpty=function(){return h}};\r\nTHREE.Math={clamp:function(a,b,c){return a<b?b:a>c?c:a},clampBottom:function(a,b){return a<b?b:a},mapLinear:function(a,b,c,d,e){return d+(a-b)*(e-d)/(c-b)},random16:function(){return(65280*Math.random()+255*Math.random())/65535},randInt:function(a,b){return a+Math.floor(Math.random()*(b-a+1))},randFloat:function(a,b){return a+Math.random()*(b-a)},randFloatSpread:function(a){return a*(0.5-Math.random())},sign:function(a){return 0>a?-1:0<a?1:0}};\r\nTHREE.Object3D=function(){THREE.Object3DLibrary.push(this);this.id=THREE.Object3DIdCount++;this.name=\"\";this.properties={};this.parent=void 0;this.children=[];this.up=new THREE.Vector3(0,1,0);this.position=new THREE.Vector3;this.rotation=new THREE.Vector3;this.eulerOrder=THREE.Object3D.defaultEulerOrder;this.scale=new THREE.Vector3(1,1,1);this.renderDepth=null;this.rotationAutoUpdate=!0;this.matrix=new THREE.Matrix4;this.matrixWorld=new THREE.Matrix4;this.matrixRotationWorld=new THREE.Matrix4;this.matrixWorldNeedsUpdate=\r\nthis.matrixAutoUpdate=!0;this.quaternion=new THREE.Quaternion;this.useQuaternion=!1;this.boundRadius=0;this.boundRadiusScale=1;this.visible=!0;this.receiveShadow=this.castShadow=!1;this.frustumCulled=!0;this._vector=new THREE.Vector3};\r\nTHREE.Object3D.prototype={constructor:THREE.Object3D,applyMatrix:function(a){this.matrix.multiply(a,this.matrix);this.scale.getScaleFromMatrix(this.matrix);a=(new THREE.Matrix4).extractRotation(this.matrix);this.rotation.setEulerFromRotationMatrix(a,this.eulerOrder);this.position.getPositionFromMatrix(this.matrix)},translate:function(a,b){this.matrix.rotateAxis(b);this.position.addSelf(b.multiplyScalar(a))},translateX:function(a){this.translate(a,this._vector.set(1,0,0))},translateY:function(a){this.translate(a,\r\nthis._vector.set(0,1,0))},translateZ:function(a){this.translate(a,this._vector.set(0,0,1))},localToWorld:function(a){return this.matrixWorld.multiplyVector3(a)},worldToLocal:function(a){return THREE.Object3D.__m1.getInverse(this.matrixWorld).multiplyVector3(a)},lookAt:function(a){this.matrix.lookAt(a,this.position,this.up);this.rotationAutoUpdate&&this.rotation.setEulerFromRotationMatrix(this.matrix,this.eulerOrder)},add:function(a){if(a===this)console.warn(\"THREE.Object3D.add: An object can't be added as a child of itself.\");\r\nelse if(a instanceof THREE.Object3D){void 0!==a.parent&&a.parent.remove(a);a.parent=this;this.children.push(a);for(var b=this;void 0!==b.parent;)b=b.parent;void 0!==b&&b instanceof THREE.Scene&&b.__addObject(a)}},remove:function(a){var b=this.children.indexOf(a);if(-1!==b){a.parent=void 0;this.children.splice(b,1);for(b=this;void 0!==b.parent;)b=b.parent;void 0!==b&&b instanceof THREE.Scene&&b.__removeObject(a)}},traverse:function(a){a(this);for(var b=0,c=this.children.length;b<c;b++)this.children[b].traverse(a)},\r\ngetChildByName:function(a,b){for(var c=0,d=this.children.length;c<d;c++){var e=this.children[c];if(e.name===a||!0===b&&(e=e.getChildByName(a,b),void 0!==e))return e}},getDescendants:function(a){void 0===a&&(a=[]);Array.prototype.push.apply(a,this.children);for(var b=0,c=this.children.length;b<c;b++)this.children[b].getDescendants(a);return a},updateMatrix:function(){this.matrix.setPosition(this.position);!1===this.useQuaternion?this.matrix.setRotationFromEuler(this.rotation,this.eulerOrder):this.matrix.setRotationFromQuaternion(this.quaternion);\r\nif(1!==this.scale.x||1!==this.scale.y||1!==this.scale.z)this.matrix.scale(this.scale),this.boundRadiusScale=Math.max(this.scale.x,Math.max(this.scale.y,this.scale.z));this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(a){!0===this.matrixAutoUpdate&&this.updateMatrix();if(!0===this.matrixWorldNeedsUpdate||!0===a)void 0===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiply(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,a=!0;for(var b=0,c=this.children.length;b<\r\nc;b++)this.children[b].updateMatrixWorld(a)},clone:function(a){void 0===a&&(a=new THREE.Object3D);a.name=this.name;a.up.copy(this.up);a.position.copy(this.position);a.rotation instanceof THREE.Vector3&&a.rotation.copy(this.rotation);a.eulerOrder=this.eulerOrder;a.scale.copy(this.scale);a.renderDepth=this.renderDepth;a.rotationAutoUpdate=this.rotationAutoUpdate;a.matrix.copy(this.matrix);a.matrixWorld.copy(this.matrixWorld);a.matrixRotationWorld.copy(this.matrixRotationWorld);a.matrixAutoUpdate=this.matrixAutoUpdate;\r\na.matrixWorldNeedsUpdate=this.matrixWorldNeedsUpdate;a.quaternion.copy(this.quaternion);a.useQuaternion=this.useQuaternion;a.boundRadius=this.boundRadius;a.boundRadiusScale=this.boundRadiusScale;a.visible=this.visible;a.castShadow=this.castShadow;a.receiveShadow=this.receiveShadow;a.frustumCulled=this.frustumCulled;return a},deallocate:function(){var a=THREE.Object3DLibrary.indexOf(this);-1!==a&&THREE.Object3DLibrary.splice(a,1)}};THREE.Object3D.__m1=new THREE.Matrix4;\r\nTHREE.Object3D.defaultEulerOrder=\"XYZ\";THREE.Object3DIdCount=0;THREE.Object3DLibrary=[];\r\nTHREE.Projector=function(){function a(){if(f===h){var a=new THREE.RenderableObject;g.push(a);h++;f++;return a}return g[f++]}function b(){if(j===m){var a=new THREE.RenderableVertex;l.push(a);m++;j++;return a}return l[j++]}function c(a,b){return b.z-a.z}function d(a,b){var c=0,d=1,e=a.z+a.w,f=b.z+b.w,g=-a.z+a.w,h=-b.z+b.w;if(0<=e&&0<=f&&0<=g&&0<=h)return!0;if(0>e&&0>f||0>g&&0>h)return!1;0>e?c=Math.max(c,e/(e-f)):0>f&&(d=Math.min(d,e/(e-f)));0>g?c=Math.max(c,g/(g-h)):0>h&&(d=Math.min(d,g/(g-h)));if(d<\r\nc)return!1;a.lerpSelf(b,c);b.lerpSelf(a,1-d);return!0}var e,f,g=[],h=0,i,j,l=[],m=0,n,p,o=[],q=0,r,t=[],B=0,u,s,z=[],A=0,v,y,C=[],G=0,H={objects:[],sprites:[],lights:[],elements:[]},J=new THREE.Vector3,E=new THREE.Vector4,M=new THREE.Matrix4,K=new THREE.Matrix4,F=new THREE.Frustum,I=new THREE.Vector4,L=new THREE.Vector4;this.projectVector=function(a,b){b.matrixWorldInverse.getInverse(b.matrixWorld);M.multiply(b.projectionMatrix,b.matrixWorldInverse);M.multiplyVector3(a);return a};this.unprojectVector=\r\nfunction(a,b){b.projectionMatrixInverse.getInverse(b.projectionMatrix);M.multiply(b.matrixWorld,b.projectionMatrixInverse);M.multiplyVector3(a);return a};this.pickingRay=function(a,b){var c;a.z=-1;c=new THREE.Vector3(a.x,a.y,1);this.unprojectVector(a,b);this.unprojectVector(c,b);c.subSelf(a).normalize();return new THREE.Ray(a,c)};this.projectScene=function(g,h,m,N){var ea=h.near,Q=h.far,qa=!1,la,O,fa,W,V,ia,Z,ca,Ga,Pa,Ia,Ua,na,Va,ib,Ra;y=s=r=p=0;H.elements.length=0;g.updateMatrixWorld();void 0===\r\nh.parent&&h.updateMatrixWorld();h.matrixWorldInverse.getInverse(h.matrixWorld);M.multiply(h.projectionMatrix,h.matrixWorldInverse);F.setFromMatrix(M);f=0;H.objects.length=0;H.sprites.length=0;H.lights.length=0;var eb=function(b){for(var c=0,d=b.children.length;c<d;c++){var f=b.children[c];if(!1!==f.visible){if(f instanceof THREE.Light)H.lights.push(f);else if(f instanceof THREE.Mesh||f instanceof THREE.Line){if(!1===f.frustumCulled||!0===F.contains(f))e=a(),e.object=f,null!==f.renderDepth?e.z=f.renderDepth:\r\n(J.copy(f.matrixWorld.getPosition()),M.multiplyVector3(J),e.z=J.z),H.objects.push(e)}else f instanceof THREE.Sprite||f instanceof THREE.Particle?(e=a(),e.object=f,null!==f.renderDepth?e.z=f.renderDepth:(J.copy(f.matrixWorld.getPosition()),M.multiplyVector3(J),e.z=J.z),H.sprites.push(e)):(e=a(),e.object=f,null!==f.renderDepth?e.z=f.renderDepth:(J.copy(f.matrixWorld.getPosition()),M.multiplyVector3(J),e.z=J.z),H.objects.push(e));eb(f)}}};eb(g);!0===m&&H.objects.sort(c);g=0;for(m=H.objects.length;g<\r\nm;g++)if(ca=H.objects[g].object,Ga=ca.matrixWorld,j=0,ca instanceof THREE.Mesh){Pa=ca.geometry;Ia=ca.geometry.materials;fa=Pa.vertices;Ua=Pa.faces;Va=Pa.faceVertexUvs;Pa=ca.matrixRotationWorld.extractRotation(Ga);ib=ca.material instanceof THREE.MeshFaceMaterial;la=0;for(O=fa.length;la<O;la++)i=b(),i.positionWorld.copy(fa[la]),Ga.multiplyVector3(i.positionWorld),i.positionScreen.copy(i.positionWorld),M.multiplyVector4(i.positionScreen),i.positionScreen.x/=i.positionScreen.w,i.positionScreen.y/=i.positionScreen.w,\r\ni.visible=i.positionScreen.z>ea&&i.positionScreen.z<Q;fa=0;for(la=Ua.length;fa<la;fa++)if(O=Ua[fa],Ra=!0===ib?Ia[O.materialIndex]:ca.material,void 0!==Ra){ia=Ra.side;if(O instanceof THREE.Face3)if(W=l[O.a],V=l[O.b],Z=l[O.c],!0===W.visible&&!0===V.visible&&!0===Z.visible)if(qa=0>(Z.positionScreen.x-W.positionScreen.x)*(V.positionScreen.y-W.positionScreen.y)-(Z.positionScreen.y-W.positionScreen.y)*(V.positionScreen.x-W.positionScreen.x),ia===THREE.DoubleSide||qa===(ia===THREE.FrontSide))p===q?(na=new THREE.RenderableFace3,\r\no.push(na),q++,p++,n=na):n=o[p++],n.v1.copy(W),n.v2.copy(V),n.v3.copy(Z);else continue;else continue;else if(O instanceof THREE.Face4)if(W=l[O.a],V=l[O.b],Z=l[O.c],na=l[O.d],!0===W.visible&&!0===V.visible&&!0===Z.visible&&!0===na.visible)if(qa=0>(na.positionScreen.x-W.positionScreen.x)*(V.positionScreen.y-W.positionScreen.y)-(na.positionScreen.y-W.positionScreen.y)*(V.positionScreen.x-W.positionScreen.x)||0>(V.positionScreen.x-Z.positionScreen.x)*(na.positionScreen.y-Z.positionScreen.y)-(V.positionScreen.y-\r\nZ.positionScreen.y)*(na.positionScreen.x-Z.positionScreen.x),ia===THREE.DoubleSide||qa===(ia===THREE.FrontSide)){if(r===B){var pb=new THREE.RenderableFace4;t.push(pb);B++;r++;n=pb}else n=t[r++];n.v1.copy(W);n.v2.copy(V);n.v3.copy(Z);n.v4.copy(na)}else continue;else continue;n.normalWorld.copy(O.normal);!1===qa&&(ia===THREE.BackSide||ia===THREE.DoubleSide)&&n.normalWorld.negate();Pa.multiplyVector3(n.normalWorld);n.centroidWorld.copy(O.centroid);Ga.multiplyVector3(n.centroidWorld);n.centroidScreen.copy(n.centroidWorld);\r\nM.multiplyVector3(n.centroidScreen);Z=O.vertexNormals;W=0;for(V=Z.length;W<V;W++)na=n.vertexNormalsWorld[W],na.copy(Z[W]),!1===qa&&(ia===THREE.BackSide||ia===THREE.DoubleSide)&&na.negate(),Pa.multiplyVector3(na);n.vertexNormalsLength=Z.length;W=0;for(V=Va.length;W<V;W++)if(na=Va[W][fa],void 0!==na){ia=0;for(Z=na.length;ia<Z;ia++)n.uvs[W][ia]=na[ia]}n.color=O.color;n.material=Ra;n.z=n.centroidScreen.z;H.elements.push(n)}}else if(ca instanceof THREE.Line){K.multiply(M,Ga);fa=ca.geometry.vertices;W=\r\nb();W.positionScreen.copy(fa[0]);K.multiplyVector4(W.positionScreen);Ga=ca.type===THREE.LinePieces?2:1;la=1;for(O=fa.length;la<O;la++)W=b(),W.positionScreen.copy(fa[la]),K.multiplyVector4(W.positionScreen),0<(la+1)%Ga||(V=l[j-2],I.copy(W.positionScreen),L.copy(V.positionScreen),!0===d(I,L)&&(I.multiplyScalar(1/I.w),L.multiplyScalar(1/L.w),s===A?(Ia=new THREE.RenderableLine,z.push(Ia),A++,s++,u=Ia):u=z[s++],u.v1.positionScreen.copy(I),u.v2.positionScreen.copy(L),u.z=Math.max(I.z,L.z),u.material=ca.material,\r\nH.elements.push(u)))}g=0;for(m=H.sprites.length;g<m;g++)ca=H.sprites[g].object,Ga=ca.matrixWorld,ca instanceof THREE.Particle&&(E.set(Ga.elements[12],Ga.elements[13],Ga.elements[14],1),M.multiplyVector4(E),E.z/=E.w,0<E.z&&1>E.z&&(y===G?(ea=new THREE.RenderableParticle,C.push(ea),G++,y++,v=ea):v=C[y++],v.object=ca,v.x=E.x/E.w,v.y=E.y/E.w,v.z=E.z,v.rotation=ca.rotation.z,v.scale.x=ca.scale.x*Math.abs(v.x-(E.x+h.projectionMatrix.elements[0])/(E.w+h.projectionMatrix.elements[12])),v.scale.y=ca.scale.y*\r\nMath.abs(v.y-(E.y+h.projectionMatrix.elements[5])/(E.w+h.projectionMatrix.elements[13])),v.material=ca.material,H.elements.push(v)));!0===N&&H.elements.sort(c);return H}};THREE.Quaternion=function(a,b,c,d){this.x=a||0;this.y=b||0;this.z=c||0;this.w=void 0!==d?d:1};\r\nTHREE.Quaternion.prototype={constructor:THREE.Quaternion,set:function(a,b,c,d){this.x=a;this.y=b;this.z=c;this.w=d;return this},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;this.w=a.w;return this},setFromEuler:function(a,b){var c=Math.cos(a.x/2),d=Math.cos(a.y/2),e=Math.cos(a.z/2),f=Math.sin(a.x/2),g=Math.sin(a.y/2),h=Math.sin(a.z/2);void 0===b||\"XYZ\"===b?(this.x=f*d*e+c*g*h,this.y=c*g*e-f*d*h,this.z=c*d*h+f*g*e,this.w=c*d*e-f*g*h):\"YXZ\"===b?(this.x=f*d*e+c*g*h,this.y=c*g*e-f*d*h,this.z=c*d*\r\nh-f*g*e,this.w=c*d*e+f*g*h):\"ZXY\"===b?(this.x=f*d*e-c*g*h,this.y=c*g*e+f*d*h,this.z=c*d*h+f*g*e,this.w=c*d*e-f*g*h):\"ZYX\"===b?(this.x=f*d*e-c*g*h,this.y=c*g*e+f*d*h,this.z=c*d*h-f*g*e,this.w=c*d*e+f*g*h):\"YZX\"===b?(this.x=f*d*e+c*g*h,this.y=c*g*e+f*d*h,this.z=c*d*h-f*g*e,this.w=c*d*e-f*g*h):\"XZY\"===b&&(this.x=f*d*e-c*g*h,this.y=c*g*e-f*d*h,this.z=c*d*h+f*g*e,this.w=c*d*e+f*g*h);return this},setFromAxisAngle:function(a,b){var c=b/2,d=Math.sin(c);this.x=a.x*d;this.y=a.y*d;this.z=a.z*d;this.w=Math.cos(c);\r\nreturn this},setFromRotationMatrix:function(a){var b=a.elements,c=b[0],a=b[4],d=b[8],e=b[1],f=b[5],g=b[9],h=b[2],i=b[6],b=b[10],j=c+f+b;0<j?(c=0.5/Math.sqrt(j+1),this.w=0.25/c,this.x=(i-g)*c,this.y=(d-h)*c,this.z=(e-a)*c):c>f&&c>b?(c=2*Math.sqrt(1+c-f-b),this.w=(i-g)/c,this.x=0.25*c,this.y=(a+e)/c,this.z=(d+h)/c):f>b?(c=2*Math.sqrt(1+f-c-b),this.w=(d-h)/c,this.x=(a+e)/c,this.y=0.25*c,this.z=(g+i)/c):(c=2*Math.sqrt(1+b-c-f),this.w=(e-a)/c,this.x=(d+h)/c,this.y=(g+i)/c,this.z=0.25*c);return this},calculateW:function(){this.w=\r\n-Math.sqrt(Math.abs(1-this.x*this.x-this.y*this.y-this.z*this.z));return this},inverse:function(){this.x*=-1;this.y*=-1;this.z*=-1;return this},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},normalize:function(){var a=Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w);0===a?this.w=this.z=this.y=this.x=0:(a=1/a,this.x*=a,this.y*=a,this.z*=a,this.w*=a);return this},multiply:function(a,b){var c=a.x,d=a.y,e=a.z,f=a.w,g=b.x,h=b.y,i=b.z,j=b.w;\r\nthis.x=c*j+d*i-e*h+f*g;this.y=-c*i+d*j+e*g+f*h;this.z=c*h-d*g+e*j+f*i;this.w=-c*g-d*h-e*i+f*j;return this},multiplySelf:function(a){var b=this.x,c=this.y,d=this.z,e=this.w,f=a.x,g=a.y,h=a.z,a=a.w;this.x=b*a+e*f+c*h-d*g;this.y=c*a+e*g+d*f-b*h;this.z=d*a+e*h+b*g-c*f;this.w=e*a-b*f-c*g-d*h;return this},multiplyVector3:function(a,b){b||(b=a);var c=a.x,d=a.y,e=a.z,f=this.x,g=this.y,h=this.z,i=this.w,j=i*c+g*e-h*d,l=i*d+h*c-f*e,m=i*e+f*d-g*c,c=-f*c-g*d-h*e;b.x=j*i+c*-f+l*-h-m*-g;b.y=l*i+c*-g+m*-f-j*-h;\r\nb.z=m*i+c*-h+j*-g-l*-f;return b},slerpSelf:function(a,b){var c=this.x,d=this.y,e=this.z,f=this.w,g=f*a.w+c*a.x+d*a.y+e*a.z;0>g?(this.w=-a.w,this.x=-a.x,this.y=-a.y,this.z=-a.z,g=-g):this.copy(a);if(1<=g)return this.w=f,this.x=c,this.y=d,this.z=e,this;var h=Math.acos(g),i=Math.sqrt(1-g*g);if(0.001>Math.abs(i))return this.w=0.5*(f+this.w),this.x=0.5*(c+this.x),this.y=0.5*(d+this.y),this.z=0.5*(e+this.z),this;g=Math.sin((1-b)*h)/i;h=Math.sin(b*h)/i;this.w=f*g+this.w*h;this.x=c*g+this.x*h;this.y=d*g+\r\nthis.y*h;this.z=e*g+this.z*h;return this},clone:function(){return new THREE.Quaternion(this.x,this.y,this.z,this.w)}};\r\nTHREE.Quaternion.slerp=function(a,b,c,d){var e=a.w*b.w+a.x*b.x+a.y*b.y+a.z*b.z;0>e?(c.w=-b.w,c.x=-b.x,c.y=-b.y,c.z=-b.z,e=-e):c.copy(b);if(1<=Math.abs(e))return c.w=a.w,c.x=a.x,c.y=a.y,c.z=a.z,c;var b=Math.acos(e),f=Math.sqrt(1-e*e);if(0.001>Math.abs(f))return c.w=0.5*(a.w+c.w),c.x=0.5*(a.x+c.x),c.y=0.5*(a.y+c.y),c.z=0.5*(a.z+c.z),c;e=Math.sin((1-d)*b)/f;d=Math.sin(d*b)/f;c.w=a.w*e+c.w*d;c.x=a.x*e+c.x*d;c.y=a.y*e+c.y*d;c.z=a.z*e+c.z*d;return c};\r\nTHREE.Vertex=function(a){console.warn(\"THREE.Vertex has been DEPRECATED. Use THREE.Vector3 instead.\");return a};THREE.Face3=function(a,b,c,d,e,f){this.a=a;this.b=b;this.c=c;this.normal=d instanceof THREE.Vector3?d:new THREE.Vector3;this.vertexNormals=d instanceof Array?d:[];this.color=e instanceof THREE.Color?e:new THREE.Color;this.vertexColors=e instanceof Array?e:[];this.vertexTangents=[];this.materialIndex=f;this.centroid=new THREE.Vector3};\r\nTHREE.Face3.prototype={constructor:THREE.Face3,clone:function(){var a=new THREE.Face3(this.a,this.b,this.c);a.normal.copy(this.normal);a.color.copy(this.color);a.centroid.copy(this.centroid);a.materialIndex=this.materialIndex;var b,c;b=0;for(c=this.vertexNormals.length;b<c;b++)a.vertexNormals[b]=this.vertexNormals[b].clone();b=0;for(c=this.vertexColors.length;b<c;b++)a.vertexColors[b]=this.vertexColors[b].clone();b=0;for(c=this.vertexTangents.length;b<c;b++)a.vertexTangents[b]=this.vertexTangents[b].clone();\r\nreturn a}};THREE.Face4=function(a,b,c,d,e,f,g){this.a=a;this.b=b;this.c=c;this.d=d;this.normal=e instanceof THREE.Vector3?e:new THREE.Vector3;this.vertexNormals=e instanceof Array?e:[];this.color=f instanceof THREE.Color?f:new THREE.Color;this.vertexColors=f instanceof Array?f:[];this.vertexTangents=[];this.materialIndex=g;this.centroid=new THREE.Vector3};\r\nTHREE.Face4.prototype={constructor:THREE.Face4,clone:function(){var a=new THREE.Face4(this.a,this.b,this.c,this.d);a.normal.copy(this.normal);a.color.copy(this.color);a.centroid.copy(this.centroid);a.materialIndex=this.materialIndex;var b,c;b=0;for(c=this.vertexNormals.length;b<c;b++)a.vertexNormals[b]=this.vertexNormals[b].clone();b=0;for(c=this.vertexColors.length;b<c;b++)a.vertexColors[b]=this.vertexColors[b].clone();b=0;for(c=this.vertexTangents.length;b<c;b++)a.vertexTangents[b]=this.vertexTangents[b].clone();\r\nreturn a}};THREE.UV=function(a,b){this.u=a||0;this.v=b||0};THREE.UV.prototype={constructor:THREE.UV,set:function(a,b){this.u=a;this.v=b;return this},copy:function(a){this.u=a.u;this.v=a.v;return this},lerpSelf:function(a,b){this.u+=(a.u-this.u)*b;this.v+=(a.v-this.v)*b;return this},clone:function(){return new THREE.UV(this.u,this.v)}};\r\nTHREE.Geometry=function(){THREE.GeometryLibrary.push(this);this.id=THREE.GeometryIdCount++;this.name=\"\";this.vertices=[];this.colors=[];this.materials=[];this.faces=[];this.faceUvs=[[]];this.faceVertexUvs=[[]];this.morphTargets=[];this.morphColors=[];this.morphNormals=[];this.skinWeights=[];this.skinIndices=[];this.boundingSphere=this.boundingBox=null;this.hasTangents=!1;this.dynamic=!0;this.colorsNeedUpdate=this.tangentsNeedUpdate=this.normalsNeedUpdate=this.uvsNeedUpdate=this.elementsNeedUpdate=\r\nthis.verticesNeedUpdate=!1};\r\nTHREE.Geometry.prototype={constructor:THREE.Geometry,applyMatrix:function(a){var b=new THREE.Matrix4;b.extractRotation(a);for(var c=0,d=this.vertices.length;c<d;c++)a.multiplyVector3(this.vertices[c]);c=0;for(d=this.faces.length;c<d;c++){var e=this.faces[c];b.multiplyVector3(e.normal);for(var f=0,g=e.vertexNormals.length;f<g;f++)b.multiplyVector3(e.vertexNormals[f]);a.multiplyVector3(e.centroid)}},computeCentroids:function(){var a,b,c;a=0;for(b=this.faces.length;a<b;a++)c=this.faces[a],c.centroid.set(0,\r\n0,0),c instanceof THREE.Face3?(c.centroid.addSelf(this.vertices[c.a]),c.centroid.addSelf(this.vertices[c.b]),c.centroid.addSelf(this.vertices[c.c]),c.centroid.divideScalar(3)):c instanceof THREE.Face4&&(c.centroid.addSelf(this.vertices[c.a]),c.centroid.addSelf(this.vertices[c.b]),c.centroid.addSelf(this.vertices[c.c]),c.centroid.addSelf(this.vertices[c.d]),c.centroid.divideScalar(4))},computeFaceNormals:function(){var a,b,c,d,e,f,g=new THREE.Vector3,h=new THREE.Vector3;a=0;for(b=this.faces.length;a<\r\nb;a++)c=this.faces[a],d=this.vertices[c.a],e=this.vertices[c.b],f=this.vertices[c.c],g.sub(f,e),h.sub(d,e),g.crossSelf(h),g.isZero()||g.normalize(),c.normal.copy(g)},computeVertexNormals:function(){var a,b,c,d;if(void 0===this.__tmpVertices){d=this.__tmpVertices=Array(this.vertices.length);a=0;for(b=this.vertices.length;a<b;a++)d[a]=new THREE.Vector3;a=0;for(b=this.faces.length;a<b;a++)c=this.faces[a],c instanceof THREE.Face3?c.vertexNormals=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3]:\r\nc instanceof THREE.Face4&&(c.vertexNormals=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3])}else{d=this.__tmpVertices;a=0;for(b=this.vertices.length;a<b;a++)d[a].set(0,0,0)}a=0;for(b=this.faces.length;a<b;a++)c=this.faces[a],c instanceof THREE.Face3?(d[c.a].addSelf(c.normal),d[c.b].addSelf(c.normal),d[c.c].addSelf(c.normal)):c instanceof THREE.Face4&&(d[c.a].addSelf(c.normal),d[c.b].addSelf(c.normal),d[c.c].addSelf(c.normal),d[c.d].addSelf(c.normal));a=0;for(b=this.vertices.length;a<\r\nb;a++)d[a].normalize();a=0;for(b=this.faces.length;a<b;a++)c=this.faces[a],c instanceof THREE.Face3?(c.vertexNormals[0].copy(d[c.a]),c.vertexNormals[1].copy(d[c.b]),c.vertexNormals[2].copy(d[c.c])):c instanceof THREE.Face4&&(c.vertexNormals[0].copy(d[c.a]),c.vertexNormals[1].copy(d[c.b]),c.vertexNormals[2].copy(d[c.c]),c.vertexNormals[3].copy(d[c.d]))},computeMorphNormals:function(){var a,b,c,d,e;c=0;for(d=this.faces.length;c<d;c++){e=this.faces[c];e.__originalFaceNormal?e.__originalFaceNormal.copy(e.normal):\r\ne.__originalFaceNormal=e.normal.clone();e.__originalVertexNormals||(e.__originalVertexNormals=[]);a=0;for(b=e.vertexNormals.length;a<b;a++)e.__originalVertexNormals[a]?e.__originalVertexNormals[a].copy(e.vertexNormals[a]):e.__originalVertexNormals[a]=e.vertexNormals[a].clone()}var f=new THREE.Geometry;f.faces=this.faces;a=0;for(b=this.morphTargets.length;a<b;a++){if(!this.morphNormals[a]){this.morphNormals[a]={};this.morphNormals[a].faceNormals=[];this.morphNormals[a].vertexNormals=[];var g=this.morphNormals[a].faceNormals,\r\nh=this.morphNormals[a].vertexNormals,i,j;c=0;for(d=this.faces.length;c<d;c++)e=this.faces[c],i=new THREE.Vector3,j=e instanceof THREE.Face3?{a:new THREE.Vector3,b:new THREE.Vector3,c:new THREE.Vector3}:{a:new THREE.Vector3,b:new THREE.Vector3,c:new THREE.Vector3,d:new THREE.Vector3},g.push(i),h.push(j)}g=this.morphNormals[a];f.vertices=this.morphTargets[a].vertices;f.computeFaceNormals();f.computeVertexNormals();c=0;for(d=this.faces.length;c<d;c++)e=this.faces[c],i=g.faceNormals[c],j=g.vertexNormals[c],\r\ni.copy(e.normal),e instanceof THREE.Face3?(j.a.copy(e.vertexNormals[0]),j.b.copy(e.vertexNormals[1]),j.c.copy(e.vertexNormals[2])):(j.a.copy(e.vertexNormals[0]),j.b.copy(e.vertexNormals[1]),j.c.copy(e.vertexNormals[2]),j.d.copy(e.vertexNormals[3]))}c=0;for(d=this.faces.length;c<d;c++)e=this.faces[c],e.normal=e.__originalFaceNormal,e.vertexNormals=e.__originalVertexNormals},computeTangents:function(){function a(a,b,c,d,e,f,y){h=a.vertices[b];i=a.vertices[c];j=a.vertices[d];l=g[e];m=g[f];n=g[y];p=i.x-\r\nh.x;o=j.x-h.x;q=i.y-h.y;r=j.y-h.y;t=i.z-h.z;B=j.z-h.z;u=m.u-l.u;s=n.u-l.u;z=m.v-l.v;A=n.v-l.v;v=1/(u*A-s*z);H.set((A*p-z*o)*v,(A*q-z*r)*v,(A*t-z*B)*v);J.set((u*o-s*p)*v,(u*r-s*q)*v,(u*B-s*t)*v);C[b].addSelf(H);C[c].addSelf(H);C[d].addSelf(H);G[b].addSelf(J);G[c].addSelf(J);G[d].addSelf(J)}var b,c,d,e,f,g,h,i,j,l,m,n,p,o,q,r,t,B,u,s,z,A,v,y,C=[],G=[],H=new THREE.Vector3,J=new THREE.Vector3,E=new THREE.Vector3,M=new THREE.Vector3,K=new THREE.Vector3;b=0;for(c=this.vertices.length;b<c;b++)C[b]=new THREE.Vector3,\r\nG[b]=new THREE.Vector3;b=0;for(c=this.faces.length;b<c;b++)f=this.faces[b],g=this.faceVertexUvs[0][b],f instanceof THREE.Face3?a(this,f.a,f.b,f.c,0,1,2):f instanceof THREE.Face4&&(a(this,f.a,f.b,f.d,0,1,3),a(this,f.b,f.c,f.d,1,2,3));var F=[\"a\",\"b\",\"c\",\"d\"];b=0;for(c=this.faces.length;b<c;b++){f=this.faces[b];for(d=0;d<f.vertexNormals.length;d++)K.copy(f.vertexNormals[d]),e=f[F[d]],y=C[e],E.copy(y),E.subSelf(K.multiplyScalar(K.dot(y))).normalize(),M.cross(f.vertexNormals[d],y),e=M.dot(G[e]),e=0>e?\r\n-1:1,f.vertexTangents[d]=new THREE.Vector4(E.x,E.y,E.z,e)}this.hasTangents=!0},computeBoundingBox:function(){this.boundingBox||(this.boundingBox={min:new THREE.Vector3,max:new THREE.Vector3});if(0<this.vertices.length){var a;a=this.vertices[0];this.boundingBox.min.copy(a);this.boundingBox.max.copy(a);for(var b=this.boundingBox.min,c=this.boundingBox.max,d=1,e=this.vertices.length;d<e;d++)(a=this.vertices[d],a.x<b.x?b.x=a.x:a.x>c.x&&(c.x=a.x),a.y<b.y?b.y=a.y:a.y>c.y&&(c.y=a.y),a.z<b.z)?b.z=a.z:a.z>\r\nc.z&&(c.z=a.z)}else this.boundingBox.min.set(0,0,0),this.boundingBox.max.set(0,0,0)},computeBoundingSphere:function(){var a=0;null===this.boundingSphere&&(this.boundingSphere={radius:0});for(var b=0,c=this.vertices.length;b<c;b++){var d=this.vertices[b].lengthSq();d>a&&(a=d)}this.boundingSphere.radius=Math.sqrt(a)},mergeVertices:function(){var a={},b=[],c=[],d,e=Math.pow(10,4),f,g,h,i;f=0;for(g=this.vertices.length;f<g;f++)d=this.vertices[f],d=[Math.round(d.x*e),Math.round(d.y*e),Math.round(d.z*e)].join(\"_\"),\r\nvoid 0===a[d]?(a[d]=f,b.push(this.vertices[f]),c[f]=b.length-1):c[f]=c[a[d]];f=0;for(g=this.faces.length;f<g;f++)if(a=this.faces[f],a instanceof THREE.Face3)a.a=c[a.a],a.b=c[a.b],a.c=c[a.c];else if(a instanceof THREE.Face4){a.a=c[a.a];a.b=c[a.b];a.c=c[a.c];a.d=c[a.d];d=[a.a,a.b,a.c,a.d];for(e=3;0<e;e--)if(d.indexOf(a[\"abcd\"[e]])!==e){d.splice(e,1);this.faces[f]=new THREE.Face3(d[0],d[1],d[2],a.normal,a.color,a.materialIndex);d=0;for(h=this.faceVertexUvs.length;d<h;d++)(i=this.faceVertexUvs[d][f])&&\r\ni.splice(e,1);this.faces[f].vertexColors=a.vertexColors;break}}c=this.vertices.length-b.length;this.vertices=b;return c},clone:function(){},deallocate:function(){var a=THREE.GeometryLibrary.indexOf(this);-1!==a&&THREE.GeometryLibrary.splice(a,1)}};THREE.GeometryIdCount=0;THREE.GeometryLibrary=[];THREE.BufferGeometry=function(){this.id=THREE.GeometryCount++;this.attributes={};this.dynamic=!1;this.boundingSphere=this.boundingBox=null;this.hasTangents=!1;this.morphTargets=[]};\r\nTHREE.BufferGeometry.prototype={constructor:THREE.BufferGeometry,applyMatrix:function(a){var b,c;this.attributes.position&&(b=this.attributes.position.array);this.attributes.normal&&(c=this.attributes.normal.array);void 0!==b&&(a.multiplyVector3Array(b),this.verticesNeedUpdate=!0);void 0!==c&&(b=new THREE.Matrix4,b.extractRotation(a),b.multiplyVector3Array(c),this.normalsNeedUpdate=!0)},computeBoundingBox:function(){this.boundingBox||(this.boundingBox={min:new THREE.Vector3(Infinity,Infinity,Infinity),\r\nmax:new THREE.Vector3(-Infinity,-Infinity,-Infinity)});var a=this.attributes.position.array;if(a)for(var b=this.boundingBox,c,d,e,f=0,g=a.length;f<g;f+=3)(c=a[f],d=a[f+1],e=a[f+2],c<b.min.x?b.min.x=c:c>b.max.x&&(b.max.x=c),d<b.min.y?b.min.y=d:d>b.max.y&&(b.max.y=d),e<b.min.z)?b.min.z=e:e>b.max.z&&(b.max.z=e);if(void 0===a||0===a.length)this.boundingBox.min.set(0,0,0),this.boundingBox.max.set(0,0,0)},computeBoundingSphere:function(){this.boundingSphere||(this.boundingSphere={radius:0});var a=this.attributes.position.array;\r\nif(a){for(var b,c=0,d,e,f=0,g=a.length;f<g;f+=3)b=a[f],d=a[f+1],e=a[f+2],b=b*b+d*d+e*e,b>c&&(c=b);this.boundingSphere.radius=Math.sqrt(c)}},computeVertexNormals:function(){if(this.attributes.position&&this.attributes.index){var a,b,c,d;a=this.attributes.position.array.length;if(void 0===this.attributes.normal)this.attributes.normal={itemSize:3,array:new Float32Array(a),numItems:a};else{a=0;for(b=this.attributes.normal.array.length;a<b;a++)this.attributes.normal.array[a]=0}var e=this.offsets,f=this.attributes.index.array,\r\ng=this.attributes.position.array,h=this.attributes.normal.array,i,j,l,m,n,p,o=new THREE.Vector3,q=new THREE.Vector3,r=new THREE.Vector3,t=new THREE.Vector3,B=new THREE.Vector3;c=0;for(d=e.length;c<d;++c){b=e[c].start;i=e[c].count;var u=e[c].index;a=b;for(b+=i;a<b;a+=3)i=u+f[a],j=u+f[a+1],l=u+f[a+2],m=g[3*i],n=g[3*i+1],p=g[3*i+2],o.set(m,n,p),m=g[3*j],n=g[3*j+1],p=g[3*j+2],q.set(m,n,p),m=g[3*l],n=g[3*l+1],p=g[3*l+2],r.set(m,n,p),t.sub(r,q),B.sub(o,q),t.crossSelf(B),h[3*i]+=t.x,h[3*i+1]+=t.y,h[3*i+\r\n2]+=t.z,h[3*j]+=t.x,h[3*j+1]+=t.y,h[3*j+2]+=t.z,h[3*l]+=t.x,h[3*l+1]+=t.y,h[3*l+2]+=t.z}a=0;for(b=h.length;a<b;a+=3)m=h[a],n=h[a+1],p=h[a+2],c=1/Math.sqrt(m*m+n*n+p*p),h[a]*=c,h[a+1]*=c,h[a+2]*=c;this.normalsNeedUpdate=!0}},computeTangents:function(){function a(a){$.x=d[3*a];$.y=d[3*a+1];$.z=d[3*a+2];Y.copy($);ea=i[a];L.copy(ea);L.subSelf($.multiplyScalar($.dot(ea))).normalize();R.cross(Y,ea);Q=R.dot(j[a]);N=0>Q?-1:1;h[4*a]=L.x;h[4*a+1]=L.y;h[4*a+2]=L.z;h[4*a+3]=N}if(void 0===this.attributes.index||\r\nvoid 0===this.attributes.position||void 0===this.attributes.normal||void 0===this.attributes.uv)console.warn(\"Missing required attributes (index, position, normal or uv) in BufferGeometry.computeTangents()\");else{var b=this.attributes.index.array,c=this.attributes.position.array,d=this.attributes.normal.array,e=this.attributes.uv.array,f=c.length/3;if(void 0===this.attributes.tangent){var g=4*f;this.attributes.tangent={itemSize:4,array:new Float32Array(g),numItems:g}}for(var h=this.attributes.tangent.array,\r\ni=[],j=[],g=0;g<f;g++)i[g]=new THREE.Vector3,j[g]=new THREE.Vector3;var l,m,n,p,o,q,r,t,B,u,s,z,A,v,y,f=new THREE.Vector3,g=new THREE.Vector3,C,G,H,J,E,M,K,F=this.offsets;H=0;for(J=F.length;H<J;++H){G=F[H].start;E=F[H].count;var I=F[H].index;C=G;for(G+=E;C<G;C+=3)E=I+b[C],M=I+b[C+1],K=I+b[C+2],l=c[3*E],m=c[3*E+1],n=c[3*E+2],p=c[3*M],o=c[3*M+1],q=c[3*M+2],r=c[3*K],t=c[3*K+1],B=c[3*K+2],u=e[2*E],s=e[2*E+1],z=e[2*M],A=e[2*M+1],v=e[2*K],y=e[2*K+1],p-=l,l=r-l,o-=m,m=t-m,q-=n,n=B-n,z-=u,u=v-u,A-=s,s=y-\r\ns,y=1/(z*s-u*A),f.set((s*p-A*l)*y,(s*o-A*m)*y,(s*q-A*n)*y),g.set((z*l-u*p)*y,(z*m-u*o)*y,(z*n-u*q)*y),i[E].addSelf(f),i[M].addSelf(f),i[K].addSelf(f),j[E].addSelf(g),j[M].addSelf(g),j[K].addSelf(g)}var L=new THREE.Vector3,R=new THREE.Vector3,$=new THREE.Vector3,Y=new THREE.Vector3,N,ea,Q;H=0;for(J=F.length;H<J;++H){G=F[H].start;E=F[H].count;I=F[H].index;C=G;for(G+=E;C<G;C+=3)E=I+b[C],M=I+b[C+1],K=I+b[C+2],a(E),a(M),a(K)}this.tangentsNeedUpdate=this.hasTangents=!0}}};\r\nTHREE.Spline=function(a){function b(a,b,c,d,e,f,g){a=0.5*(c-a);d=0.5*(d-b);return(2*(b-c)+a+d)*g+(-3*(b-c)-2*a-d)*f+a*e+b}this.points=a;var c=[],d={x:0,y:0,z:0},e,f,g,h,i,j,l,m,n;this.initFromArray=function(a){this.points=[];for(var b=0;b<a.length;b++)this.points[b]={x:a[b][0],y:a[b][1],z:a[b][2]}};this.getPoint=function(a){e=(this.points.length-1)*a;f=Math.floor(e);g=e-f;c[0]=0===f?f:f-1;c[1]=f;c[2]=f>this.points.length-2?this.points.length-1:f+1;c[3]=f>this.points.length-3?this.points.length-1:\r\nf+2;j=this.points[c[0]];l=this.points[c[1]];m=this.points[c[2]];n=this.points[c[3]];h=g*g;i=g*h;d.x=b(j.x,l.x,m.x,n.x,g,h,i);d.y=b(j.y,l.y,m.y,n.y,g,h,i);d.z=b(j.z,l.z,m.z,n.z,g,h,i);return d};this.getControlPointsArray=function(){var a,b,c=this.points.length,d=[];for(a=0;a<c;a++)b=this.points[a],d[a]=[b.x,b.y,b.z];return d};this.getLength=function(a){var b,c,d,e=b=b=0,f=new THREE.Vector3,g=new THREE.Vector3,h=[],i=0;h[0]=0;a||(a=100);c=this.points.length*a;f.copy(this.points[0]);for(a=1;a<c;a++)b=\r\na/c,d=this.getPoint(b),g.copy(d),i+=g.distanceTo(f),f.copy(d),b*=this.points.length-1,b=Math.floor(b),b!=e&&(h[b]=i,e=b);h[h.length]=i;return{chunks:h,total:i}};this.reparametrizeByArcLength=function(a){var b,c,d,e,f,g,h=[],i=new THREE.Vector3,l=this.getLength();h.push(i.copy(this.points[0]).clone());for(b=1;b<this.points.length;b++){c=l.chunks[b]-l.chunks[b-1];g=Math.ceil(a*c/l.total);e=(b-1)/(this.points.length-1);f=b/(this.points.length-1);for(c=1;c<g-1;c++)d=e+c*(1/g)*(f-e),d=this.getPoint(d),\r\nh.push(i.copy(d).clone());h.push(i.copy(this.points[b]).clone())}this.points=h}};THREE.Camera=function(){THREE.Object3D.call(this);this.matrixWorldInverse=new THREE.Matrix4;this.projectionMatrix=new THREE.Matrix4;this.projectionMatrixInverse=new THREE.Matrix4};THREE.Camera.prototype=Object.create(THREE.Object3D.prototype);THREE.Camera.prototype.lookAt=function(a){this.matrix.lookAt(this.position,a,this.up);!0===this.rotationAutoUpdate&&this.rotation.setEulerFromRotationMatrix(this.matrix,this.eulerOrder)};\r\nTHREE.OrthographicCamera=function(a,b,c,d,e,f){THREE.Camera.call(this);this.left=a;this.right=b;this.top=c;this.bottom=d;this.near=void 0!==e?e:0.1;this.far=void 0!==f?f:2E3;this.updateProjectionMatrix()};THREE.OrthographicCamera.prototype=Object.create(THREE.Camera.prototype);THREE.OrthographicCamera.prototype.updateProjectionMatrix=function(){this.projectionMatrix.makeOrthographic(this.left,this.right,this.top,this.bottom,this.near,this.far)};\r\nTHREE.PerspectiveCamera=function(a,b,c,d){THREE.Camera.call(this);this.fov=void 0!==a?a:50;this.aspect=void 0!==b?b:1;this.near=void 0!==c?c:0.1;this.far=void 0!==d?d:2E3;this.updateProjectionMatrix()};THREE.PerspectiveCamera.prototype=Object.create(THREE.Camera.prototype);THREE.PerspectiveCamera.prototype.setLens=function(a,b){void 0===b&&(b=24);this.fov=2*Math.atan(b/(2*a))*(180/Math.PI);this.updateProjectionMatrix()};\r\nTHREE.PerspectiveCamera.prototype.setViewOffset=function(a,b,c,d,e,f){this.fullWidth=a;this.fullHeight=b;this.x=c;this.y=d;this.width=e;this.height=f;this.updateProjectionMatrix()};\r\nTHREE.PerspectiveCamera.prototype.updateProjectionMatrix=function(){if(this.fullWidth){var a=this.fullWidth/this.fullHeight,b=Math.tan(this.fov*Math.PI/360)*this.near,c=-b,d=a*c,a=Math.abs(a*b-d),c=Math.abs(b-c);this.projectionMatrix.makeFrustum(d+this.x*a/this.fullWidth,d+(this.x+this.width)*a/this.fullWidth,b-(this.y+this.height)*c/this.fullHeight,b-this.y*c/this.fullHeight,this.near,this.far)}else this.projectionMatrix.makePerspective(this.fov,this.aspect,this.near,this.far)};\r\nTHREE.Light=function(a){THREE.Object3D.call(this);this.color=new THREE.Color(a)};THREE.Light.prototype=Object.create(THREE.Object3D.prototype);THREE.AmbientLight=function(a){THREE.Light.call(this,a)};THREE.AmbientLight.prototype=Object.create(THREE.Light.prototype);\r\nTHREE.DirectionalLight=function(a,b,c){THREE.Light.call(this,a);this.position=new THREE.Vector3(0,1,0);this.target=new THREE.Object3D;this.intensity=void 0!==b?b:1;this.distance=void 0!==c?c:0;this.onlyShadow=this.castShadow=!1;this.shadowCameraNear=50;this.shadowCameraFar=5E3;this.shadowCameraLeft=-500;this.shadowCameraTop=this.shadowCameraRight=500;this.shadowCameraBottom=-500;this.shadowCameraVisible=!1;this.shadowBias=0;this.shadowDarkness=0.5;this.shadowMapHeight=this.shadowMapWidth=512;this.shadowCascade=\r\n!1;this.shadowCascadeOffset=new THREE.Vector3(0,0,-1E3);this.shadowCascadeCount=2;this.shadowCascadeBias=[0,0,0];this.shadowCascadeWidth=[512,512,512];this.shadowCascadeHeight=[512,512,512];this.shadowCascadeNearZ=[-1,0.99,0.998];this.shadowCascadeFarZ=[0.99,0.998,1];this.shadowCascadeArray=[];this.shadowMatrix=this.shadowCamera=this.shadowMapSize=this.shadowMap=null};THREE.DirectionalLight.prototype=Object.create(THREE.Light.prototype);\r\nTHREE.HemisphereLight=function(a,b,c){THREE.Light.call(this,a);this.groundColor=new THREE.Color(b);this.position=new THREE.Vector3(0,100,0);this.intensity=void 0!==c?c:1};THREE.HemisphereLight.prototype=Object.create(THREE.Light.prototype);THREE.PointLight=function(a,b,c){THREE.Light.call(this,a);this.position=new THREE.Vector3(0,0,0);this.intensity=void 0!==b?b:1;this.distance=void 0!==c?c:0};THREE.PointLight.prototype=Object.create(THREE.Light.prototype);\r\nTHREE.SpotLight=function(a,b,c,d,e){THREE.Light.call(this,a);this.position=new THREE.Vector3(0,1,0);this.target=new THREE.Object3D;this.intensity=void 0!==b?b:1;this.distance=void 0!==c?c:0;this.angle=void 0!==d?d:Math.PI/2;this.exponent=void 0!==e?e:10;this.onlyShadow=this.castShadow=!1;this.shadowCameraNear=50;this.shadowCameraFar=5E3;this.shadowCameraFov=50;this.shadowCameraVisible=!1;this.shadowBias=0;this.shadowDarkness=0.5;this.shadowMapHeight=this.shadowMapWidth=512;this.shadowMatrix=this.shadowCamera=\r\nthis.shadowMapSize=this.shadowMap=null};THREE.SpotLight.prototype=Object.create(THREE.Light.prototype);THREE.Loader=function(a){this.statusDomElement=(this.showStatus=a)?THREE.Loader.prototype.addStatusElement():null;this.onLoadStart=function(){};this.onLoadProgress=function(){};this.onLoadComplete=function(){}};\r\nTHREE.Loader.prototype={constructor:THREE.Loader,crossOrigin:\"anonymous\",addStatusElement:function(){var a=document.createElement(\"div\");a.style.position=\"absolute\";a.style.right=\"0px\";a.style.top=\"0px\";a.style.fontSize=\"0.8em\";a.style.textAlign=\"left\";a.style.background=\"rgba(0,0,0,0.25)\";a.style.color=\"#fff\";a.style.width=\"120px\";a.style.padding=\"0.5em 0.5em 0.5em 0.5em\";a.style.zIndex=1E3;a.innerHTML=\"Loading ...\";return a},updateProgress:function(a){var b=\"Loaded \",b=a.total?b+((100*a.loaded/\r\na.total).toFixed(0)+\"%\"):b+((a.loaded/1E3).toFixed(2)+\" KB\");this.statusDomElement.innerHTML=b},extractUrlBase:function(a){a=a.split(\"/\");a.pop();return(1>a.length?\".\":a.join(\"/\"))+\"/\"},initMaterials:function(a,b,c){a.materials=[];for(var d=0;d<b.length;++d)a.materials[d]=THREE.Loader.prototype.createMaterial(b[d],c)},hasNormals:function(a){var b,c,d=a.materials.length;for(c=0;c<d;c++)if(b=a.materials[c],b instanceof THREE.ShaderMaterial)return!0;return!1},createMaterial:function(a,b){function c(a){a=\r\nMath.log(a)/Math.LN2;return Math.floor(a)==a}function d(a){a=Math.log(a)/Math.LN2;return Math.pow(2,Math.round(a))}function e(a,e,f,h,i,j,r){var t=f.toLowerCase().endsWith(\".dds\"),B=b+\"/\"+f;if(t){var u=THREE.ImageUtils.loadCompressedTexture(B);a[e]=u}else u=document.createElement(\"canvas\"),a[e]=new THREE.Texture(u);a[e].sourceFile=f;if(h&&(a[e].repeat.set(h[0],h[1]),1!==h[0]&&(a[e].wrapS=THREE.RepeatWrapping),1!==h[1]))a[e].wrapT=THREE.RepeatWrapping;i&&a[e].offset.set(i[0],i[1]);if(j&&(f={repeat:THREE.RepeatWrapping,\r\nmirror:THREE.MirroredRepeatWrapping},void 0!==f[j[0]]&&(a[e].wrapS=f[j[0]]),void 0!==f[j[1]]))a[e].wrapT=f[j[1]];r&&(a[e].anisotropy=r);if(!t){var s=a[e],a=new Image;a.onload=function(){if(!c(this.width)||!c(this.height)){var a=d(this.width),b=d(this.height);s.image.width=a;s.image.height=b;s.image.getContext(\"2d\").drawImage(this,0,0,a,b)}else s.image=this;s.needsUpdate=true};a.crossOrigin=g.crossOrigin;a.src=B}}function f(a){return(255*a[0]<<16)+(255*a[1]<<8)+255*a[2]}var g=this,h=\"MeshLambertMaterial\",\r\ni={color:15658734,opacity:1,map:null,lightMap:null,normalMap:null,bumpMap:null,wireframe:!1};if(a.shading){var j=a.shading.toLowerCase();\"phong\"===j?h=\"MeshPhongMaterial\":\"basic\"===j&&(h=\"MeshBasicMaterial\")}void 0!==a.blending&&void 0!==THREE[a.blending]&&(i.blending=THREE[a.blending]);if(void 0!==a.transparent||1>a.opacity)i.transparent=a.transparent;void 0!==a.depthTest&&(i.depthTest=a.depthTest);void 0!==a.depthWrite&&(i.depthWrite=a.depthWrite);void 0!==a.visible&&(i.visible=a.visible);void 0!==\r\na.flipSided&&(i.side=THREE.BackSide);void 0!==a.doubleSided&&(i.side=THREE.DoubleSide);void 0!==a.wireframe&&(i.wireframe=a.wireframe);void 0!==a.vertexColors&&(\"face\"===a.vertexColors?i.vertexColors=THREE.FaceColors:a.vertexColors&&(i.vertexColors=THREE.VertexColors));a.colorDiffuse?i.color=f(a.colorDiffuse):a.DbgColor&&(i.color=a.DbgColor);a.colorSpecular&&(i.specular=f(a.colorSpecular));a.colorAmbient&&(i.ambient=f(a.colorAmbient));a.transparency&&(i.opacity=a.transparency);a.specularCoef&&(i.shininess=\r\na.specularCoef);a.mapDiffuse&&b&&e(i,\"map\",a.mapDiffuse,a.mapDiffuseRepeat,a.mapDiffuseOffset,a.mapDiffuseWrap,a.mapDiffuseAnisotropy);a.mapLight&&b&&e(i,\"lightMap\",a.mapLight,a.mapLightRepeat,a.mapLightOffset,a.mapLightWrap,a.mapLightAnisotropy);a.mapBump&&b&&e(i,\"bumpMap\",a.mapBump,a.mapBumpRepeat,a.mapBumpOffset,a.mapBumpWrap,a.mapBumpAnisotropy);a.mapNormal&&b&&e(i,\"normalMap\",a.mapNormal,a.mapNormalRepeat,a.mapNormalOffset,a.mapNormalWrap,a.mapNormalAnisotropy);a.mapSpecular&&b&&e(i,\"specularMap\",\r\na.mapSpecular,a.mapSpecularRepeat,a.mapSpecularOffset,a.mapSpecularWrap,a.mapSpecularAnisotropy);a.mapBumpScale&&(i.bumpScale=a.mapBumpScale);a.mapNormal?(h=THREE.ShaderUtils.lib.normal,j=THREE.UniformsUtils.clone(h.uniforms),j.tNormal.value=i.normalMap,a.mapNormalFactor&&j.uNormalScale.value.set(a.mapNormalFactor,a.mapNormalFactor),i.map&&(j.tDiffuse.value=i.map,j.enableDiffuse.value=!0),i.specularMap&&(j.tSpecular.value=i.specularMap,j.enableSpecular.value=!0),i.lightMap&&(j.tAO.value=i.lightMap,\r\nj.enableAO.value=!0),j.uDiffuseColor.value.setHex(i.color),j.uSpecularColor.value.setHex(i.specular),j.uAmbientColor.value.setHex(i.ambient),j.uShininess.value=i.shininess,void 0!==i.opacity&&(j.uOpacity.value=i.opacity),i=new THREE.ShaderMaterial({fragmentShader:h.fragmentShader,vertexShader:h.vertexShader,uniforms:j,lights:!0,fog:!0})):i=new THREE[h](i);void 0!==a.DbgName&&(i.name=a.DbgName);return i}};THREE.BinaryLoader=function(a){THREE.Loader.call(this,a)};THREE.BinaryLoader.prototype=Object.create(THREE.Loader.prototype);\r\nTHREE.BinaryLoader.prototype.load=function(a,b,c,d){var c=c?c:this.extractUrlBase(a),d=d?d:this.extractUrlBase(a),e=this.showProgress?THREE.Loader.prototype.updateProgress:null;this.onLoadStart();this.loadAjaxJSON(this,a,b,c,d,e)};\r\nTHREE.BinaryLoader.prototype.loadAjaxJSON=function(a,b,c,d,e,f){var g=new XMLHttpRequest;g.onreadystatechange=function(){if(4==g.readyState)if(200==g.status||0==g.status){var h=JSON.parse(g.responseText);a.loadAjaxBuffers(h,c,e,d,f)}else console.error(\"THREE.BinaryLoader: Couldn't load [\"+b+\"] [\"+g.status+\"]\")};g.open(\"GET\",b,!0);g.send(null)};\r\nTHREE.BinaryLoader.prototype.loadAjaxBuffers=function(a,b,c,d,e){var f=new XMLHttpRequest,g=c+\"/\"+a.buffers,h=0;f.onreadystatechange=function(){if(4==f.readyState)if(200==f.status||0==f.status){var c=f.response;void 0===c&&(c=(new Uint8Array(f.responseBody)).buffer);THREE.BinaryLoader.prototype.createBinModel(c,b,d,a.materials)}else console.error(\"THREE.BinaryLoader: Couldn't load [\"+g+\"] [\"+f.status+\"]\");else 3==f.readyState?e&&(0==h&&(h=f.getResponseHeader(\"Content-Length\")),e({total:h,loaded:f.responseText.length})):\r\n2==f.readyState&&(h=f.getResponseHeader(\"Content-Length\"))};f.open(\"GET\",g,!0);f.responseType=\"arraybuffer\";f.send(null)};\r\nTHREE.BinaryLoader.prototype.createBinModel=function(a,b,c,d){var e=function(b){var c,e,i,j,l,m,n,p,o,q,r,t,B,u,s;function z(a){return a%4?4-a%4:0}function A(a,b){return(new Uint8Array(a,b,1))[0]}function v(a,b){return(new Uint32Array(a,b,1))[0]}function y(b,c){var d,e,f,g,h,i,j,l,m=new Uint32Array(a,c,3*b);for(d=0;d<b;d++){e=m[3*d];f=m[3*d+1];g=m[3*d+2];h=I[2*e];e=I[2*e+1];i=I[2*f];j=I[2*f+1];f=I[2*g];l=I[2*g+1];g=M.faceVertexUvs[0];var n=[];n.push(new THREE.UV(h,e));n.push(new THREE.UV(i,j));n.push(new THREE.UV(f,\r\nl));g.push(n)}}function C(b,c){var d,e,f,g,h,i,j,l,m,n,o=new Uint32Array(a,c,4*b);for(d=0;d<b;d++){e=o[4*d];f=o[4*d+1];g=o[4*d+2];h=o[4*d+3];i=I[2*e];e=I[2*e+1];j=I[2*f];m=I[2*f+1];l=I[2*g];n=I[2*g+1];g=I[2*h];f=I[2*h+1];h=M.faceVertexUvs[0];var p=[];p.push(new THREE.UV(i,e));p.push(new THREE.UV(j,m));p.push(new THREE.UV(l,n));p.push(new THREE.UV(g,f));h.push(p)}}function G(b,c,d){for(var e,f,g,h,c=new Uint32Array(a,c,3*b),i=new Uint16Array(a,d,b),d=0;d<b;d++)e=c[3*d],f=c[3*d+1],g=c[3*d+2],h=i[d],\r\nM.faces.push(new THREE.Face3(e,f,g,null,null,h))}function H(b,c,d){for(var e,f,g,h,i,c=new Uint32Array(a,c,4*b),j=new Uint16Array(a,d,b),d=0;d<b;d++)e=c[4*d],f=c[4*d+1],g=c[4*d+2],h=c[4*d+3],i=j[d],M.faces.push(new THREE.Face4(e,f,g,h,null,null,i))}function J(b,c,d,e){for(var f,g,h,i,j,l,m,c=new Uint32Array(a,c,3*b),d=new Uint32Array(a,d,3*b),n=new Uint16Array(a,e,b),e=0;e<b;e++){f=c[3*e];g=c[3*e+1];h=c[3*e+2];j=d[3*e];l=d[3*e+1];m=d[3*e+2];i=n[e];var o=F[3*l],p=F[3*l+1];l=F[3*l+2];var q=F[3*m],r=\r\nF[3*m+1];m=F[3*m+2];M.faces.push(new THREE.Face3(f,g,h,[new THREE.Vector3(F[3*j],F[3*j+1],F[3*j+2]),new THREE.Vector3(o,p,l),new THREE.Vector3(q,r,m)],null,i))}}function E(b,c,d,e){for(var f,g,h,i,j,l,m,n,o,c=new Uint32Array(a,c,4*b),d=new Uint32Array(a,d,4*b),p=new Uint16Array(a,e,b),e=0;e<b;e++){f=c[4*e];g=c[4*e+1];h=c[4*e+2];i=c[4*e+3];l=d[4*e];m=d[4*e+1];n=d[4*e+2];o=d[4*e+3];j=p[e];var q=F[3*m],r=F[3*m+1];m=F[3*m+2];var s=F[3*n],t=F[3*n+1];n=F[3*n+2];var u=F[3*o],v=F[3*o+1];o=F[3*o+2];M.faces.push(new THREE.Face4(f,\r\ng,h,i,[new THREE.Vector3(F[3*l],F[3*l+1],F[3*l+2]),new THREE.Vector3(q,r,m),new THREE.Vector3(s,t,n),new THREE.Vector3(u,v,o)],null,j))}}var M=this,K=0,F=[],I=[],L,R,$;THREE.Geometry.call(this);THREE.Loader.prototype.initMaterials(M,d,b);s=a;R=K;b=new Uint8Array(s,R,12);q=\"\";for(B=0;12>B;B++)q+=String.fromCharCode(b[R+B]);c=A(s,R+12);A(s,R+13);A(s,R+14);A(s,R+15);e=A(s,R+16);i=A(s,R+17);j=A(s,R+18);l=A(s,R+19);m=v(s,R+20);n=v(s,R+20+4);p=v(s,R+20+8);o=v(s,R+20+12);q=v(s,R+20+16);r=v(s,R+20+20);t=\r\nv(s,R+20+24);B=v(s,R+20+28);b=v(s,R+20+32);u=v(s,R+20+36);s=v(s,R+20+40);K+=c;R=3*e+l;$=4*e+l;L=o*R;c=q*(R+3*i);e=r*(R+3*j);l=t*(R+3*i+3*j);R=B*$;i=b*($+4*i);j=u*($+4*j);$=K;var K=new Float32Array(a,K,3*m),Y,N,ea,Q;for(Y=0;Y<m;Y++)N=K[3*Y],ea=K[3*Y+1],Q=K[3*Y+2],M.vertices.push(new THREE.Vector3(N,ea,Q));m=K=$+3*m*Float32Array.BYTES_PER_ELEMENT;if(n){K=new Int8Array(a,K,3*n);for($=0;$<n;$++)Y=K[3*$],N=K[3*$+1],ea=K[3*$+2],F.push(Y/127,N/127,ea/127)}K=m+3*n*Int8Array.BYTES_PER_ELEMENT;n=K+=z(3*n);\r\nif(p){K=new Float32Array(a,K,2*p);for(m=0;m<p;m++)$=K[2*m],Y=K[2*m+1],I.push($,Y)}p=K=n+2*p*Float32Array.BYTES_PER_ELEMENT;L=p+L+z(2*o);n=L+c+z(2*q);c=n+e+z(2*r);e=c+l+z(2*t);R=e+R+z(2*B);l=R+i+z(2*b);i=l+j+z(2*u);r&&(j=n+3*r*Uint32Array.BYTES_PER_ELEMENT,G(r,n,j+3*r*Uint32Array.BYTES_PER_ELEMENT),y(r,j));t&&(r=c+3*t*Uint32Array.BYTES_PER_ELEMENT,j=r+3*t*Uint32Array.BYTES_PER_ELEMENT,J(t,c,r,j+3*t*Uint32Array.BYTES_PER_ELEMENT),y(t,j));u&&(t=l+4*u*Uint32Array.BYTES_PER_ELEMENT,H(u,l,t+4*u*Uint32Array.BYTES_PER_ELEMENT),\r\nC(u,t));s&&(u=i+4*s*Uint32Array.BYTES_PER_ELEMENT,t=u+4*s*Uint32Array.BYTES_PER_ELEMENT,E(s,i,u,t+4*s*Uint32Array.BYTES_PER_ELEMENT),C(s,t));o&&G(o,p,p+3*o*Uint32Array.BYTES_PER_ELEMENT);q&&(o=L+3*q*Uint32Array.BYTES_PER_ELEMENT,J(q,L,o,o+3*q*Uint32Array.BYTES_PER_ELEMENT));B&&H(B,e,e+4*B*Uint32Array.BYTES_PER_ELEMENT);b&&(q=R+4*b*Uint32Array.BYTES_PER_ELEMENT,E(b,R,q,q+4*b*Uint32Array.BYTES_PER_ELEMENT));this.computeCentroids();this.computeFaceNormals();THREE.Loader.prototype.hasNormals(this)&&this.computeTangents()};\r\ne.prototype=Object.create(THREE.Geometry.prototype);b(new e(c))};THREE.ImageLoader=function(){THREE.EventTarget.call(this);this.crossOrigin=null};\r\nTHREE.ImageLoader.prototype={constructor:THREE.ImageLoader,load:function(a,b){var c=this;void 0===b&&(b=new Image);b.addEventListener(\"load\",function(){c.dispatchEvent({type:\"load\",content:b})},!1);b.addEventListener(\"error\",function(){c.dispatchEvent({type:\"error\",message:\"Couldn't load URL [\"+a+\"]\"})},!1);c.crossOrigin&&(b.crossOrigin=c.crossOrigin);b.src=a}};THREE.JSONLoader=function(a){THREE.Loader.call(this,a)};THREE.JSONLoader.prototype=Object.create(THREE.Loader.prototype);\r\nTHREE.JSONLoader.prototype.load=function(a,b,c){c=c?c:this.extractUrlBase(a);this.onLoadStart();this.loadAjaxJSON(this,a,b,c)};\r\nTHREE.JSONLoader.prototype.loadAjaxJSON=function(a,b,c,d,e){var f=new XMLHttpRequest,g=0;f.onreadystatechange=function(){if(f.readyState===f.DONE)if(200===f.status||0===f.status){if(f.responseText){var h=JSON.parse(f.responseText);a.createModel(h,c,d)}else console.warn(\"THREE.JSONLoader: [\"+b+\"] seems to be unreachable or file there is empty\");a.onLoadComplete()}else console.error(\"THREE.JSONLoader: Couldn't load [\"+b+\"] [\"+f.status+\"]\");else f.readyState===f.LOADING?e&&(0===g&&(g=f.getResponseHeader(\"Content-Length\")),\r\ne({total:g,loaded:f.responseText.length})):f.readyState===f.HEADERS_RECEIVED&&(g=f.getResponseHeader(\"Content-Length\"))};f.open(\"GET\",b,!0);f.send(null)};\r\nTHREE.JSONLoader.prototype.createModel=function(a,b,c){var d=new THREE.Geometry,e=void 0!==a.scale?1/a.scale:1;this.initMaterials(d,a.materials,c);var f,g,h,i,j,l,m,n,p,o,q,r,t,B,u=a.faces;p=a.vertices;var s=a.normals,z=a.colors,A=0;for(f=0;f<a.uvs.length;f++)a.uvs[f].length&&A++;for(f=0;f<A;f++)d.faceUvs[f]=[],d.faceVertexUvs[f]=[];c=0;for(i=p.length;c<i;)j=new THREE.Vector3,j.x=p[c++]*e,j.y=p[c++]*e,j.z=p[c++]*e,d.vertices.push(j);c=0;for(i=u.length;c<i;){p=u[c++];j=p&1;h=p&2;f=p&4;g=p&8;m=p&16;\r\nl=p&32;o=p&64;p&=128;j?(q=new THREE.Face4,q.a=u[c++],q.b=u[c++],q.c=u[c++],q.d=u[c++],j=4):(q=new THREE.Face3,q.a=u[c++],q.b=u[c++],q.c=u[c++],j=3);h&&(h=u[c++],q.materialIndex=h);h=d.faces.length;if(f)for(f=0;f<A;f++)r=a.uvs[f],n=u[c++],B=r[2*n],n=r[2*n+1],d.faceUvs[f][h]=new THREE.UV(B,n);if(g)for(f=0;f<A;f++){r=a.uvs[f];t=[];for(g=0;g<j;g++)n=u[c++],B=r[2*n],n=r[2*n+1],t[g]=new THREE.UV(B,n);d.faceVertexUvs[f][h]=t}m&&(m=3*u[c++],g=new THREE.Vector3,g.x=s[m++],g.y=s[m++],g.z=s[m],q.normal=g);if(l)for(f=\r\n0;f<j;f++)m=3*u[c++],g=new THREE.Vector3,g.x=s[m++],g.y=s[m++],g.z=s[m],q.vertexNormals.push(g);o&&(l=u[c++],l=new THREE.Color(z[l]),q.color=l);if(p)for(f=0;f<j;f++)l=u[c++],l=new THREE.Color(z[l]),q.vertexColors.push(l);d.faces.push(q)}if(a.skinWeights){c=0;for(i=a.skinWeights.length;c<i;c+=2)u=a.skinWeights[c],s=a.skinWeights[c+1],d.skinWeights.push(new THREE.Vector4(u,s,0,0))}if(a.skinIndices){c=0;for(i=a.skinIndices.length;c<i;c+=2)u=a.skinIndices[c],s=a.skinIndices[c+1],d.skinIndices.push(new THREE.Vector4(u,\r\ns,0,0))}d.bones=a.bones;d.animation=a.animation;if(void 0!==a.morphTargets){c=0;for(i=a.morphTargets.length;c<i;c++){d.morphTargets[c]={};d.morphTargets[c].name=a.morphTargets[c].name;d.morphTargets[c].vertices=[];z=d.morphTargets[c].vertices;A=a.morphTargets[c].vertices;u=0;for(s=A.length;u<s;u+=3)p=new THREE.Vector3,p.x=A[u]*e,p.y=A[u+1]*e,p.z=A[u+2]*e,z.push(p)}}if(void 0!==a.morphColors){c=0;for(i=a.morphColors.length;c<i;c++){d.morphColors[c]={};d.morphColors[c].name=a.morphColors[c].name;d.morphColors[c].colors=\r\n[];s=d.morphColors[c].colors;z=a.morphColors[c].colors;e=0;for(u=z.length;e<u;e+=3)A=new THREE.Color(16755200),A.setRGB(z[e],z[e+1],z[e+2]),s.push(A)}}d.computeCentroids();d.computeFaceNormals();this.hasNormals(d)&&d.computeTangents();b(d)};THREE.LoadingMonitor=function(){THREE.EventTarget.call(this);var a=this,b=0,c=0,d=function(){b++;a.dispatchEvent({type:\"progress\",loaded:b,total:c});b===c&&a.dispatchEvent({type:\"load\"})};this.add=function(a){c++;a.addEventListener(\"load\",d,!1)}};\r\nTHREE.GeometryLoader=function(){THREE.EventTarget.call(this);this.path=this.crossOrigin=null};\r\nTHREE.GeometryLoader.prototype={constructor:THREE.GeometryLoader,load:function(a){var b=this,c=null;if(null===b.path){var d=a.split(\"/\");d.pop();b.path=1>d.length?\".\":d.join(\"/\")}d=new XMLHttpRequest;d.addEventListener(\"load\",function(d){d.target.responseText?c=b.parse(JSON.parse(d.target.responseText),e):b.dispatchEvent({type:\"error\",message:\"Invalid file [\"+a+\"]\"})},!1);d.addEventListener(\"error\",function(){b.dispatchEvent({type:\"error\",message:\"Couldn't load URL [\"+a+\"]\"})},!1);d.open(\"GET\",a,\r\n!0);d.send(null);var e=new THREE.LoadingMonitor;e.addEventListener(\"load\",function(){b.dispatchEvent({type:\"load\",content:c})});e.add(d)},parse:function(a,b){var c=this,d=new THREE.Geometry,e=void 0!==a.scale?1/a.scale:1;if(a.materials){d.materials=[];for(var f=0;f<a.materials.length;++f){var g=a.materials[f],h=function(a){a=Math.log(a)/Math.LN2;return Math.floor(a)==a},i=function(a){a=Math.log(a)/Math.LN2;return Math.pow(2,Math.round(a))},j=function(a,d,e,f,g,l){a[d]=new THREE.Texture;a[d].sourceFile=\r\ne;if(f&&(a[d].repeat.set(f[0],f[1]),1!==f[0]&&(a[d].wrapS=THREE.RepeatWrapping),1!==f[1]))a[d].wrapT=THREE.RepeatWrapping;g&&a[d].offset.set(g[0],g[1]);if(l&&(f={repeat:THREE.RepeatWrapping,mirror:THREE.MirroredRepeatWrapping},void 0!==f[l[0]]&&(a[d].wrapS=f[l[0]]),void 0!==f[l[1]]))a[d].wrapT=f[l[1]];var j=a[d],a=new THREE.ImageLoader;a.addEventListener(\"load\",function(a){a=a.content;if(!h(a.width)||!h(a.height)){var b=i(a.width),c=i(a.height);j.image=document.createElement(\"canvas\");j.image.width=\r\nb;j.image.height=c;j.image.getContext(\"2d\").drawImage(a,0,0,b,c)}else j.image=a;j.needsUpdate=!0});a.crossOrigin=c.crossOrigin;a.load(c.path+\"/\"+e);b&&b.add(a)},l=function(a){return(255*a[0]<<16)+(255*a[1]<<8)+255*a[2]},m=\"MeshLambertMaterial\",n={color:15658734,opacity:1,map:null,lightMap:null,normalMap:null,bumpMap:null,wireframe:!1};if(g.shading){var p=g.shading.toLowerCase();\"phong\"===p?m=\"MeshPhongMaterial\":\"basic\"===p&&(m=\"MeshBasicMaterial\")}void 0!==g.blending&&void 0!==THREE[g.blending]&&\r\n(n.blending=THREE[g.blending]);if(void 0!==g.transparent||1>g.opacity)n.transparent=g.transparent;void 0!==g.depthTest&&(n.depthTest=g.depthTest);void 0!==g.depthWrite&&(n.depthWrite=g.depthWrite);void 0!==g.vertexColors&&(\"face\"==g.vertexColors?n.vertexColors=THREE.FaceColors:g.vertexColors&&(n.vertexColors=THREE.VertexColors));g.colorDiffuse?n.color=l(g.colorDiffuse):g.DbgColor&&(n.color=g.DbgColor);g.colorSpecular&&(n.specular=l(g.colorSpecular));g.colorAmbient&&(n.ambient=l(g.colorAmbient));g.transparency&&\r\n(n.opacity=g.transparency);g.specularCoef&&(n.shininess=g.specularCoef);void 0!==g.visible&&(n.visible=g.visible);void 0!==g.flipSided&&(n.side=THREE.BackSide);void 0!==g.doubleSided&&(n.side=THREE.DoubleSide);void 0!==g.wireframe&&(n.wireframe=g.wireframe);g.mapDiffuse&&j(n,\"map\",g.mapDiffuse,g.mapDiffuseRepeat,g.mapDiffuseOffset,g.mapDiffuseWrap);g.mapLight&&j(n,\"lightMap\",g.mapLight,g.mapLightRepeat,g.mapLightOffset,g.mapLightWrap);g.mapBump&&j(n,\"bumpMap\",g.mapBump,g.mapBumpRepeat,g.mapBumpOffset,\r\ng.mapBumpWrap);g.mapNormal&&j(n,\"normalMap\",g.mapNormal,g.mapNormalRepeat,g.mapNormalOffset,g.mapNormalWrap);g.mapSpecular&&j(n,\"specularMap\",g.mapSpecular,g.mapSpecularRepeat,g.mapSpecularOffset,g.mapSpecularWrap);g.mapNormal?(j=THREE.ShaderUtils.lib.normal,l=THREE.UniformsUtils.clone(j.uniforms),l.tNormal.value=n.normalMap,g.mapNormalFactor&&l.uNormalScale.value.set(g.mapNormalFactor,g.mapNormalFactor),n.map&&(l.tDiffuse.value=n.map,l.enableDiffuse.value=!0),n.specularMap&&(l.tSpecular.value=n.specularMap,\r\nl.enableSpecular.value=!0),n.lightMap&&(l.tAO.value=n.lightMap,l.enableAO.value=!0),l.uDiffuseColor.value.setHex(n.color),l.uSpecularColor.value.setHex(n.specular),l.uAmbientColor.value.setHex(n.ambient),l.uShininess.value=n.shininess,void 0!==n.opacity&&(l.uOpacity.value=n.opacity),n=new THREE.ShaderMaterial({fragmentShader:j.fragmentShader,vertexShader:j.vertexShader,uniforms:l,lights:!0,fog:!0})):n=new THREE[m](n);void 0!==g.DbgName&&(n.name=g.DbgName);d.materials[f]=n}}var g=a.faces,o=a.vertices,\r\nn=a.normals,j=a.colors,l=0;if(a.uvs)for(f=0;f<a.uvs.length;f++)a.uvs[f].length&&l++;for(f=0;f<l;f++)d.faceUvs[f]=[],d.faceVertexUvs[f]=[];m=0;for(p=o.length;m<p;){var q=new THREE.Vector3;q.x=o[m++]*e;q.y=o[m++]*e;q.z=o[m++]*e;d.vertices.push(q)}m=0;for(p=g.length;m<p;){var r=g[m++],t=r&2,f=r&4,B=r&8,u=r&16,o=r&32,s=r&64,q=r&128;if(r&1){r=new THREE.Face4;r.a=g[m++];r.b=g[m++];r.c=g[m++];r.d=g[m++];var z=4}else r=new THREE.Face3,r.a=g[m++],r.b=g[m++],r.c=g[m++],z=3;t&&(t=g[m++],r.materialIndex=t);var A=\r\nd.faces.length;if(f)for(f=0;f<l;f++){var v=a.uvs[f],t=g[m++],y=v[2*t],t=v[2*t+1];d.faceUvs[f][A]=new THREE.UV(y,t)}if(B)for(f=0;f<l;f++){for(var v=a.uvs[f],B=[],C=0;C<z;C++)t=g[m++],y=v[2*t],t=v[2*t+1],B[C]=new THREE.UV(y,t);d.faceVertexUvs[f][A]=B}u&&(u=3*g[m++],t=new THREE.Vector3,t.x=n[u++],t.y=n[u++],t.z=n[u],r.normal=t);if(o)for(f=0;f<z;f++)u=3*g[m++],t=new THREE.Vector3,t.x=n[u++],t.y=n[u++],t.z=n[u],r.vertexNormals.push(t);s&&(o=g[m++],r.color=new THREE.Color(j[o]));if(q)for(f=0;f<z;f++)o=\r\ng[m++],r.vertexColors.push(new THREE.Color(j[o]));d.faces.push(r)}if(a.skinWeights){f=0;for(g=a.skinWeights.length;f<g;f+=2)d.skinWeights.push(new THREE.Vector4(a.skinWeights[f],a.skinWeights[f+1],0,0))}if(a.skinIndices){f=0;for(g=a.skinIndices.length;f<g;f+=2)n=0,d.skinIndices.push(new THREE.Vector4(a.skinIndices[f],a.skinIndices[f+1],n,0))}d.bones=a.bones;d.animation=a.animation;if(a.morphTargets){f=0;for(g=a.morphTargets.length;f<g;f++){d.morphTargets[f]={};d.morphTargets[f].name=a.morphTargets[f].name;\r\nd.morphTargets[f].vertices=[];n=d.morphTargets[f].vertices;j=a.morphTargets[f].vertices;t=0;for(l=j.length;t<l;t+=3)q=new THREE.Vector3,q.x=j[t]*e,q.y=j[t+1]*e,q.z=j[t+2]*e,n.push(q)}}if(a.morphColors){f=0;for(g=a.morphColors.length;f<g;f++){d.morphColors[f]={};d.morphColors[f].name=a.morphColors[f].name;d.morphColors[f].colors=[];e=d.morphColors[f].colors;j=a.morphColors[f].colors;n=0;for(l=j.length;n<l;n+=3)m=new THREE.Color(16755200),m.setRGB(j[n],j[n+1],j[n+2]),e.push(m)}}d.computeCentroids();\r\nd.computeFaceNormals();return d}};THREE.SceneLoader=function(){this.onLoadStart=function(){};this.onLoadProgress=function(){};this.onLoadComplete=function(){};this.callbackSync=function(){};this.callbackProgress=function(){};this.geometryHandlerMap={};this.addGeometryHandler(\"ascii\",THREE.JSONLoader);this.addGeometryHandler(\"binary\",THREE.BinaryLoader)};THREE.SceneLoader.prototype.constructor=THREE.SceneLoader;\r\nTHREE.SceneLoader.prototype.load=function(a,b){var c=this,d=new XMLHttpRequest;d.onreadystatechange=function(){if(4===d.readyState)if(200===d.status||0===d.status){var e=JSON.parse(d.responseText);c.parse(e,b,a)}else console.error(\"THREE.SceneLoader: Couldn't load [\"+a+\"] [\"+d.status+\"]\")};d.open(\"GET\",a,!0);d.send(null)};THREE.SceneLoader.prototype.addGeometryHandler=function(a,b){this.geometryHandlerMap[a]={loaderClass:b}};\r\nTHREE.SceneLoader.prototype.parse=function(a,b,c){function d(a,b){return\"relativeToHTML\"==b?a:j+\"/\"+a}function e(a,b){for(var c in b)if(void 0===I.objects[c]){var d=b[c],f=null;if(void 0!==d.geometry){if(y=I.geometries[d.geometry])f=!1,C=I.materials[d.materials[0]],(f=C instanceof THREE.ShaderMaterial)&&y.computeTangents(),B=d.position,u=d.rotation,s=d.quaternion,z=d.scale,r=d.matrix,s=0,0===d.materials.length&&(C=new THREE.MeshFaceMaterial),1<d.materials.length&&(C=new THREE.MeshFaceMaterial),d.morph?\r\n(f=new THREE.MorphAnimMesh(y,C),void 0!==d.duration&&(f.duration=d.duration),void 0!==d.time&&(f.time=d.time),void 0!==d.mirroredLoop&&(f.mirroredLoop=d.mirroredLoop),C.morphNormals&&y.computeMorphNormals()):f=new THREE.Mesh(y,C),f.name=c,r?(f.matrixAutoUpdate=!1,f.matrix.set(r[0],r[1],r[2],r[3],r[4],r[5],r[6],r[7],r[8],r[9],r[10],r[11],r[12],r[13],r[14],r[15])):(f.position.set(B[0],B[1],B[2]),s?(f.quaternion.set(s[0],s[1],s[2],s[3]),f.useQuaternion=!0):f.rotation.set(u[0],u[1],u[2]),f.scale.set(z[0],\r\nz[1],z[2])),f.visible=d.visible,f.castShadow=d.castShadow,f.receiveShadow=d.receiveShadow,a.add(f),I.objects[c]=f}else B=d.position,u=d.rotation,s=d.quaternion,z=d.scale,s=0,f=new THREE.Object3D,f.name=c,f.position.set(B[0],B[1],B[2]),s?(f.quaternion.set(s[0],s[1],s[2],s[3]),f.useQuaternion=!0):f.rotation.set(u[0],u[1],u[2]),f.scale.set(z[0],z[1],z[2]),f.visible=void 0!==d.visible?d.visible:!1,a.add(f),I.objects[c]=f,I.empties[c]=f;if(f){if(void 0!==d.properties)for(var g in d.properties)f.properties[g]=\r\nd.properties[g];void 0!==d.children&&e(f,d.children)}}}function f(a){return function(b){I.geometries[a]=b;e(I.scene,L.objects);E-=1;i.onLoadComplete();h()}}function g(a){return function(b){I.geometries[a]=b}}function h(){i.callbackProgress({totalModels:K,totalTextures:F,loadedModels:K-E,loadedTextures:F-M},I);i.onLoadProgress();0===E&&0===M&&b(I)}var i=this,j=THREE.Loader.prototype.extractUrlBase(c),l,m,n,p,o,q,r,t,B,u,s,z,A,v,y,C,G,H,J,E,M,K,F,I,L=a;for(A in this.geometryHandlerMap)this.geometryHandlerMap[A].loaderObject=\r\nnew this.geometryHandlerMap[A].loaderClass;M=E=0;I={scene:new THREE.Scene,geometries:{},materials:{},textures:{},objects:{},cameras:{},lights:{},fogs:{},empties:{}};if(L.transform&&(a=L.transform.position,c=L.transform.rotation,A=L.transform.scale,a&&I.scene.position.set(a[0],a[1],a[2]),c&&I.scene.rotation.set(c[0],c[1],c[2]),A&&I.scene.scale.set(A[0],A[1],A[2]),a||c||A))I.scene.updateMatrix(),I.scene.updateMatrixWorld();a=function(a){return function(){M-=a;h();i.onLoadComplete()}};for(p in L.cameras)A=\r\nL.cameras[p],\"perspective\"===A.type?G=new THREE.PerspectiveCamera(A.fov,A.aspect,A.near,A.far):\"ortho\"===A.type&&(G=new THREE.OrthographicCamera(A.left,A.right,A.top,A.bottom,A.near,A.far)),B=A.position,c=A.target,A=A.up,G.position.set(B[0],B[1],B[2]),G.target=new THREE.Vector3(c[0],c[1],c[2]),A&&G.up.set(A[0],A[1],A[2]),I.cameras[p]=G;for(n in L.lights)c=L.lights[n],p=void 0!==c.color?c.color:16777215,G=void 0!==c.intensity?c.intensity:1,\"directional\"===c.type?(B=c.direction,t=new THREE.DirectionalLight(p,\r\nG),t.position.set(B[0],B[1],B[2]),t.position.normalize()):\"point\"===c.type?(B=c.position,t=c.distance,t=new THREE.PointLight(p,G,t),t.position.set(B[0],B[1],B[2])):\"ambient\"===c.type&&(t=new THREE.AmbientLight(p)),I.scene.add(t),I.lights[n]=t;for(o in L.fogs)n=L.fogs[o],\"linear\"===n.type?H=new THREE.Fog(0,n.near,n.far):\"exp2\"===n.type&&(H=new THREE.FogExp2(0,n.density)),A=n.color,H.color.setRGB(A[0],A[1],A[2]),I.fogs[o]=H;I.cameras&&L.defaults.camera&&(I.currentCamera=I.cameras[L.defaults.camera]);\r\nI.fogs&&L.defaults.fog&&(I.scene.fog=I.fogs[L.defaults.fog]);A=L.defaults.bgcolor;I.bgColor=new THREE.Color;I.bgColor.setRGB(A[0],A[1],A[2]);I.bgColorAlpha=L.defaults.bgalpha;for(l in L.geometries)o=L.geometries[l],o.type in this.geometryHandlerMap&&(E+=1,i.onLoadStart());K=E;for(l in L.geometries)if(o=L.geometries[l],\"cube\"===o.type)y=new THREE.CubeGeometry(o.width,o.height,o.depth,o.segmentsWidth,o.segmentsHeight,o.segmentsDepth,null,o.flipped,o.sides),I.geometries[l]=y;else if(\"plane\"===o.type)y=\r\nnew THREE.PlaneGeometry(o.width,o.height,o.segmentsWidth,o.segmentsHeight),I.geometries[l]=y;else if(\"sphere\"===o.type)y=new THREE.SphereGeometry(o.radius,o.segmentsWidth,o.segmentsHeight),I.geometries[l]=y;else if(\"cylinder\"===o.type)y=new THREE.CylinderGeometry(o.topRad,o.botRad,o.height,o.radSegs,o.heightSegs),I.geometries[l]=y;else if(\"torus\"===o.type)y=new THREE.TorusGeometry(o.radius,o.tube,o.segmentsR,o.segmentsT),I.geometries[l]=y;else if(\"icosahedron\"===o.type)y=new THREE.IcosahedronGeometry(o.radius,\r\no.subdivisions),I.geometries[l]=y;else if(o.type in this.geometryHandlerMap){H={};for(J in o)\"type\"!==J&&\"url\"!==J&&(H[J]=o[J]);this.geometryHandlerMap[o.type].loaderObject.load(d(o.url,L.urlBaseType),f(l),H)}else\"embedded\"===o.type&&(o=L.embeds[o.id],o.metadata=L.metadata,o&&this.geometryHandlerMap.ascii.loaderObject.createModel(o,g(l),\"\"));for(q in L.textures)if(l=L.textures[q],l.url instanceof Array){M+=l.url.length;for(J=0;J<l.url.length;J++)i.onLoadStart()}else M+=1,i.onLoadStart();F=M;for(q in L.textures){l=\r\nL.textures[q];void 0!==l.mapping&&void 0!==THREE[l.mapping]&&(l.mapping=new THREE[l.mapping]);if(l.url instanceof Array){o=l.url.length;H=[];for(J=0;J<o;J++)H[J]=d(l.url[J],L.urlBaseType);J=(J=H[0].endsWith(\".dds\"))?THREE.ImageUtils.loadCompressedTextureCube(H,l.mapping,a(o)):THREE.ImageUtils.loadTextureCube(H,l.mapping,a(o))}else{J=l.url.toLowerCase().endsWith(\".dds\");o=d(l.url,L.urlBaseType);H=a(1);J=J?THREE.ImageUtils.loadCompressedTexture(o,l.mapping,H):THREE.ImageUtils.loadTexture(o,l.mapping,\r\nH);void 0!==THREE[l.minFilter]&&(J.minFilter=THREE[l.minFilter]);void 0!==THREE[l.magFilter]&&(J.magFilter=THREE[l.magFilter]);l.anisotropy&&(J.anisotropy=l.anisotropy);if(l.repeat&&(J.repeat.set(l.repeat[0],l.repeat[1]),1!==l.repeat[0]&&(J.wrapS=THREE.RepeatWrapping),1!==l.repeat[1]))J.wrapT=THREE.RepeatWrapping;l.offset&&J.offset.set(l.offset[0],l.offset[1]);if(l.wrap&&(o={repeat:THREE.RepeatWrapping,mirror:THREE.MirroredRepeatWrapping},void 0!==o[l.wrap[0]]&&(J.wrapS=o[l.wrap[0]]),void 0!==o[l.wrap[1]]))J.wrapT=\r\no[l.wrap[1]]}I.textures[q]=J}for(m in L.materials){r=L.materials[m];for(v in r.parameters)\"envMap\"===v||\"map\"===v||\"lightMap\"===v||\"bumpMap\"===v?r.parameters[v]=I.textures[r.parameters[v]]:\"shading\"===v?r.parameters[v]=\"flat\"===r.parameters[v]?THREE.FlatShading:THREE.SmoothShading:\"side\"===v?r.parameters[v]=\"double\"==r.parameters[v]?THREE.DoubleSide:\"back\"==r.parameters[v]?THREE.BackSide:THREE.FrontSide:\"blending\"===v?r.parameters[v]=r.parameters[v]in THREE?THREE[r.parameters[v]]:THREE.NormalBlending:\r\n\"combine\"===v?r.parameters[v]=\"MixOperation\"==r.parameters[v]?THREE.MixOperation:THREE.MultiplyOperation:\"vertexColors\"===v?\"face\"==r.parameters[v]?r.parameters[v]=THREE.FaceColors:r.parameters[v]&&(r.parameters[v]=THREE.VertexColors):\"wrapRGB\"===v&&(q=r.parameters[v],r.parameters[v]=new THREE.Vector3(q[0],q[1],q[2]));void 0!==r.parameters.opacity&&1>r.parameters.opacity&&(r.parameters.transparent=!0);r.parameters.normalMap?(q=THREE.ShaderUtils.lib.normal,a=THREE.UniformsUtils.clone(q.uniforms),l=\r\nr.parameters.color,J=r.parameters.specular,o=r.parameters.ambient,H=r.parameters.shininess,a.tNormal.value=I.textures[r.parameters.normalMap],r.parameters.normalScale&&a.uNormalScale.value.set(r.parameters.normalScale[0],r.parameters.normalScale[1]),r.parameters.map&&(a.tDiffuse.value=r.parameters.map,a.enableDiffuse.value=!0),r.parameters.envMap&&(a.tCube.value=r.parameters.envMap,a.enableReflection.value=!0,a.uReflectivity.value=r.parameters.reflectivity),r.parameters.lightMap&&(a.tAO.value=r.parameters.lightMap,\r\na.enableAO.value=!0),r.parameters.specularMap&&(a.tSpecular.value=I.textures[r.parameters.specularMap],a.enableSpecular.value=!0),r.parameters.displacementMap&&(a.tDisplacement.value=I.textures[r.parameters.displacementMap],a.enableDisplacement.value=!0,a.uDisplacementBias.value=r.parameters.displacementBias,a.uDisplacementScale.value=r.parameters.displacementScale),a.uDiffuseColor.value.setHex(l),a.uSpecularColor.value.setHex(J),a.uAmbientColor.value.setHex(o),a.uShininess.value=H,r.parameters.opacity&&\r\n(a.uOpacity.value=r.parameters.opacity),C=new THREE.ShaderMaterial({fragmentShader:q.fragmentShader,vertexShader:q.vertexShader,uniforms:a,lights:!0,fog:!0})):C=new THREE[r.type](r.parameters);I.materials[m]=C}e(I.scene,L.objects);i.callbackSync(I);h()};THREE.TextureLoader=function(){THREE.EventTarget.call(this);this.crossOrigin=null};\r\nTHREE.TextureLoader.prototype={constructor:THREE.TextureLoader,load:function(a){var b=this,c=new Image;c.addEventListener(\"load\",function(){var a=new THREE.Texture(c);a.needsUpdate=!0;b.dispatchEvent({type:\"load\",content:a})},!1);c.addEventListener(\"error\",function(){b.dispatchEvent({type:\"error\",message:\"Couldn't load URL [\"+a+\"]\"})},!1);b.crossOrigin&&(c.crossOrigin=b.crossOrigin);c.src=a}};\r\nTHREE.Material=function(){THREE.MaterialLibrary.push(this);this.id=THREE.MaterialIdCount++;this.name=\"\";this.side=THREE.FrontSide;this.opacity=1;this.transparent=!1;this.blending=THREE.NormalBlending;this.blendSrc=THREE.SrcAlphaFactor;this.blendDst=THREE.OneMinusSrcAlphaFactor;this.blendEquation=THREE.AddEquation;this.depthWrite=this.depthTest=!0;this.polygonOffset=!1;this.alphaTest=this.polygonOffsetUnits=this.polygonOffsetFactor=0;this.overdraw=!1;this.needsUpdate=this.visible=!0};\r\nTHREE.Material.prototype.setValues=function(a){if(void 0!==a)for(var b in a){var c=a[b];if(void 0===c)console.warn(\"THREE.Material: '\"+b+\"' parameter is undefined.\");else if(b in this){var d=this[b];d instanceof THREE.Color&&c instanceof THREE.Color?d.copy(c):d instanceof THREE.Color&&\"number\"===typeof c?d.setHex(c):d instanceof THREE.Vector3&&c instanceof THREE.Vector3?d.copy(c):this[b]=c}}};\r\nTHREE.Material.prototype.clone=function(a){void 0===a&&(a=new THREE.Material);a.name=this.name;a.side=this.side;a.opacity=this.opacity;a.transparent=this.transparent;a.blending=this.blending;a.blendSrc=this.blendSrc;a.blendDst=this.blendDst;a.blendEquation=this.blendEquation;a.depthTest=this.depthTest;a.depthWrite=this.depthWrite;a.polygonOffset=this.polygonOffset;a.polygonOffsetFactor=this.polygonOffsetFactor;a.polygonOffsetUnits=this.polygonOffsetUnits;a.alphaTest=this.alphaTest;a.overdraw=this.overdraw;\r\na.visible=this.visible;return a};THREE.Material.prototype.deallocate=function(){var a=THREE.MaterialLibrary.indexOf(this);-1!==a&&THREE.MaterialLibrary.splice(a,1)};THREE.MaterialIdCount=0;THREE.MaterialLibrary=[];THREE.LineBasicMaterial=function(a){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.linewidth=1;this.linejoin=this.linecap=\"round\";this.vertexColors=!1;this.fog=!0;this.setValues(a)};THREE.LineBasicMaterial.prototype=Object.create(THREE.Material.prototype);\r\nTHREE.LineBasicMaterial.prototype.clone=function(){var a=new THREE.LineBasicMaterial;THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.linewidth=this.linewidth;a.linecap=this.linecap;a.linejoin=this.linejoin;a.vertexColors=this.vertexColors;a.fog=this.fog;return a};\r\nTHREE.MeshBasicMaterial=function(a){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.envMap=this.specularMap=this.lightMap=this.map=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refractionRatio=0.98;this.fog=!0;this.shading=THREE.SmoothShading;this.wireframe=!1;this.wireframeLinewidth=1;this.wireframeLinejoin=this.wireframeLinecap=\"round\";this.vertexColors=THREE.NoColors;this.morphTargets=this.skinning=!1;this.setValues(a)};\r\nTHREE.MeshBasicMaterial.prototype=Object.create(THREE.Material.prototype);\r\nTHREE.MeshBasicMaterial.prototype.clone=function(){var a=new THREE.MeshBasicMaterial;THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.map=this.map;a.lightMap=this.lightMap;a.specularMap=this.specularMap;a.envMap=this.envMap;a.combine=this.combine;a.reflectivity=this.reflectivity;a.refractionRatio=this.refractionRatio;a.fog=this.fog;a.shading=this.shading;a.wireframe=this.wireframe;a.wireframeLinewidth=this.wireframeLinewidth;a.wireframeLinecap=this.wireframeLinecap;a.wireframeLinejoin=\r\nthis.wireframeLinejoin;a.vertexColors=this.vertexColors;a.skinning=this.skinning;a.morphTargets=this.morphTargets;return a};\r\nTHREE.MeshLambertMaterial=function(a){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.ambient=new THREE.Color(16777215);this.emissive=new THREE.Color(0);this.wrapAround=!1;this.wrapRGB=new THREE.Vector3(1,1,1);this.envMap=this.specularMap=this.lightMap=this.map=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refractionRatio=0.98;this.fog=!0;this.shading=THREE.SmoothShading;this.wireframe=!1;this.wireframeLinewidth=1;this.wireframeLinejoin=this.wireframeLinecap=\r\n\"round\";this.vertexColors=THREE.NoColors;this.morphNormals=this.morphTargets=this.skinning=!1;this.setValues(a)};THREE.MeshLambertMaterial.prototype=Object.create(THREE.Material.prototype);\r\nTHREE.MeshLambertMaterial.prototype.clone=function(){var a=new THREE.MeshLambertMaterial;THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.ambient.copy(this.ambient);a.emissive.copy(this.emissive);a.wrapAround=this.wrapAround;a.wrapRGB.copy(this.wrapRGB);a.map=this.map;a.lightMap=this.lightMap;a.specularMap=this.specularMap;a.envMap=this.envMap;a.combine=this.combine;a.reflectivity=this.reflectivity;a.refractionRatio=this.refractionRatio;a.fog=this.fog;a.shading=this.shading;\r\na.wireframe=this.wireframe;a.wireframeLinewidth=this.wireframeLinewidth;a.wireframeLinecap=this.wireframeLinecap;a.wireframeLinejoin=this.wireframeLinejoin;a.vertexColors=this.vertexColors;a.skinning=this.skinning;a.morphTargets=this.morphTargets;a.morphNormals=this.morphNormals;return a};\r\nTHREE.MeshPhongMaterial=function(a){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.ambient=new THREE.Color(16777215);this.emissive=new THREE.Color(0);this.specular=new THREE.Color(1118481);this.shininess=30;this.wrapAround=this.perPixel=this.metal=!1;this.wrapRGB=new THREE.Vector3(1,1,1);this.bumpMap=this.lightMap=this.map=null;this.bumpScale=1;this.normalMap=null;this.normalScale=new THREE.Vector2(1,1);this.envMap=this.specularMap=null;this.combine=THREE.MultiplyOperation;this.reflectivity=\r\n1;this.refractionRatio=0.98;this.fog=!0;this.shading=THREE.SmoothShading;this.wireframe=!1;this.wireframeLinewidth=1;this.wireframeLinejoin=this.wireframeLinecap=\"round\";this.vertexColors=THREE.NoColors;this.morphNormals=this.morphTargets=this.skinning=!1;this.setValues(a)};THREE.MeshPhongMaterial.prototype=Object.create(THREE.Material.prototype);\r\nTHREE.MeshPhongMaterial.prototype.clone=function(){var a=new THREE.MeshPhongMaterial;THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.ambient.copy(this.ambient);a.emissive.copy(this.emissive);a.specular.copy(this.specular);a.shininess=this.shininess;a.metal=this.metal;a.perPixel=this.perPixel;a.wrapAround=this.wrapAround;a.wrapRGB.copy(this.wrapRGB);a.map=this.map;a.lightMap=this.lightMap;a.bumpMap=this.bumpMap;a.bumpScale=this.bumpScale;a.normalMap=this.normalMap;a.normalScale.copy(this.normalScale);\r\na.specularMap=this.specularMap;a.envMap=this.envMap;a.combine=this.combine;a.reflectivity=this.reflectivity;a.refractionRatio=this.refractionRatio;a.fog=this.fog;a.shading=this.shading;a.wireframe=this.wireframe;a.wireframeLinewidth=this.wireframeLinewidth;a.wireframeLinecap=this.wireframeLinecap;a.wireframeLinejoin=this.wireframeLinejoin;a.vertexColors=this.vertexColors;a.skinning=this.skinning;a.morphTargets=this.morphTargets;a.morphNormals=this.morphNormals;return a};\r\nTHREE.MeshDepthMaterial=function(a){THREE.Material.call(this);this.wireframe=!1;this.wireframeLinewidth=1;this.setValues(a)};THREE.MeshDepthMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshDepthMaterial.prototype.clone=function(){var a=new THREE.LineBasicMaterial;THREE.Material.prototype.clone.call(this,a);a.wireframe=this.wireframe;a.wireframeLinewidth=this.wireframeLinewidth;return a};\r\nTHREE.MeshNormalMaterial=function(a){THREE.Material.call(this,a);this.shading=THREE.FlatShading;this.wireframe=!1;this.wireframeLinewidth=1;this.setValues(a)};THREE.MeshNormalMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshNormalMaterial.prototype.clone=function(){var a=new THREE.MeshNormalMaterial;THREE.Material.prototype.clone.call(this,a);a.shading=this.shading;a.wireframe=this.wireframe;a.wireframeLinewidth=this.wireframeLinewidth;return a};THREE.MeshFaceMaterial=function(){};\r\nTHREE.MeshFaceMaterial.prototype.clone=function(){return new THREE.MeshFaceMaterial};THREE.ParticleBasicMaterial=function(a){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.map=null;this.size=1;this.sizeAttenuation=!0;this.vertexColors=!1;this.fog=!0;this.setValues(a)};THREE.ParticleBasicMaterial.prototype=Object.create(THREE.Material.prototype);\r\nTHREE.ParticleBasicMaterial.prototype.clone=function(){var a=new THREE.ParticleBasicMaterial;THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.map=this.map;a.size=this.size;a.sizeAttenuation=this.sizeAttenuation;a.vertexColors=this.vertexColors;a.fog=this.fog;return a};THREE.ParticleCanvasMaterial=function(a){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.program=function(){};this.setValues(a)};THREE.ParticleCanvasMaterial.prototype=Object.create(THREE.Material.prototype);\r\nTHREE.ParticleCanvasMaterial.prototype.clone=function(){var a=new THREE.ParticleCanvasMaterial;THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.program=this.program;return a};THREE.ParticleDOMMaterial=function(a){this.element=a};THREE.ParticleDOMMaterial.prototype.clone=function(){return new THREE.ParticleDOMMaterial(this.element)};\r\nTHREE.ShaderMaterial=function(a){THREE.Material.call(this);this.vertexShader=this.fragmentShader=\"void main() {}\";this.uniforms={};this.defines={};this.attributes=null;this.shading=THREE.SmoothShading;this.wireframe=!1;this.wireframeLinewidth=1;this.lights=this.fog=!1;this.vertexColors=THREE.NoColors;this.morphNormals=this.morphTargets=this.skinning=!1;this.setValues(a)};THREE.ShaderMaterial.prototype=Object.create(THREE.Material.prototype);\r\nTHREE.ShaderMaterial.prototype.clone=function(){var a=new THREE.ShaderMaterial;THREE.Material.prototype.clone.call(this,a);a.fragmentShader=this.fragmentShader;a.vertexShader=this.vertexShader;a.uniforms=this.uniforms;a.attributes=this.attributes;a.defines=this.defines;a.shading=this.shading;a.wireframe=this.wireframe;a.wireframeLinewidth=this.wireframeLinewidth;a.fog=this.fog;a.lights=this.lights;a.vertexColors=this.vertexColors;a.skinning=this.skinning;a.morphTargets=this.morphTargets;a.morphNormals=\r\nthis.morphNormals;return a};\r\nTHREE.Texture=function(a,b,c,d,e,f,g,h,i){THREE.TextureLibrary.push(this);this.id=THREE.TextureIdCount++;this.image=a;this.mapping=void 0!==b?b:new THREE.UVMapping;this.wrapS=void 0!==c?c:THREE.ClampToEdgeWrapping;this.wrapT=void 0!==d?d:THREE.ClampToEdgeWrapping;this.magFilter=void 0!==e?e:THREE.LinearFilter;this.minFilter=void 0!==f?f:THREE.LinearMipMapLinearFilter;this.anisotropy=void 0!==i?i:1;this.format=void 0!==g?g:THREE.RGBAFormat;this.type=void 0!==h?h:THREE.UnsignedByteType;this.offset=\r\nnew THREE.Vector2(0,0);this.repeat=new THREE.Vector2(1,1);this.generateMipmaps=!0;this.premultiplyAlpha=!1;this.flipY=!0;this.needsUpdate=!1;this.onUpdate=null};\r\nTHREE.Texture.prototype={constructor:THREE.Texture,clone:function(){var a=new THREE.Texture;a.image=this.image;a.mapping=this.mapping;a.wrapS=this.wrapS;a.wrapT=this.wrapT;a.magFilter=this.magFilter;a.minFilter=this.minFilter;a.anisotropy=this.anisotropy;a.format=this.format;a.type=this.type;a.offset.copy(this.offset);a.repeat.copy(this.repeat);a.generateMipmaps=this.generateMipmaps;a.premultiplyAlpha=this.premultiplyAlpha;a.flipY=this.flipY;return a},deallocate:function(){var a=THREE.TextureLibrary.indexOf(this);\r\n-1!==a&&THREE.TextureLibrary.splice(a,1)}};THREE.TextureIdCount=0;THREE.TextureLibrary=[];THREE.CompressedTexture=function(a,b,c,d,e,f,g,h,i,j){THREE.Texture.call(this,null,f,g,h,i,j,d,e);this.image={width:b,height:c};this.mipmaps=a};THREE.CompressedTexture.prototype=Object.create(THREE.Texture.prototype);\r\nTHREE.CompressedTexture.prototype.clone=function(){var a=new THREE.CompressedTexture;a.image=this.image;a.mipmaps=this.mipmaps;a.format=this.format;a.type=this.type;a.mapping=this.mapping;a.wrapS=this.wrapS;a.wrapT=this.wrapT;a.magFilter=this.magFilter;a.minFilter=this.minFilter;a.anisotropy=this.anisotropy;a.offset.copy(this.offset);a.repeat.copy(this.repeat);return a};THREE.DataTexture=function(a,b,c,d,e,f,g,h,i,j){THREE.Texture.call(this,null,f,g,h,i,j,d,e);this.image={data:a,width:b,height:c}};\r\nTHREE.DataTexture.prototype=Object.create(THREE.Texture.prototype);THREE.DataTexture.prototype.clone=function(){var a=new THREE.DataTexture(this.image.data,this.image.width,this.image.height,this.format,this.type,this.mapping,this.wrapS,this.wrapT,this.magFilter,this.minFilter);a.offset.copy(this.offset);a.repeat.copy(this.repeat);return a};THREE.Particle=function(a){THREE.Object3D.call(this);this.material=a};THREE.Particle.prototype=Object.create(THREE.Object3D.prototype);\r\nTHREE.Particle.prototype.clone=function(a){void 0===a&&(a=new THREE.Particle(this.material));THREE.Object3D.prototype.clone.call(this,a);return a};THREE.ParticleSystem=function(a,b){THREE.Object3D.call(this);this.geometry=a;this.material=void 0!==b?b:new THREE.ParticleBasicMaterial({color:16777215*Math.random()});this.sortParticles=!1;this.geometry&&(null===this.geometry.boundingSphere&&this.geometry.computeBoundingSphere(),this.boundRadius=a.boundingSphere.radius);this.frustumCulled=!1};\r\nTHREE.ParticleSystem.prototype=Object.create(THREE.Object3D.prototype);THREE.ParticleSystem.prototype.clone=function(a){void 0===a&&(a=new THREE.ParticleSystem(this.geometry,this.material));a.sortParticles=this.sortParticles;THREE.Object3D.prototype.clone.call(this,a);return a};\r\nTHREE.Line=function(a,b,c){THREE.Object3D.call(this);this.geometry=a;this.material=void 0!==b?b:new THREE.LineBasicMaterial({color:16777215*Math.random()});this.type=void 0!==c?c:THREE.LineStrip;this.geometry&&(this.geometry.boundingSphere||this.geometry.computeBoundingSphere())};THREE.LineStrip=0;THREE.LinePieces=1;THREE.Line.prototype=Object.create(THREE.Object3D.prototype);\r\nTHREE.Line.prototype.clone=function(a){void 0===a&&(a=new THREE.Line(this.geometry,this.material,this.type));THREE.Object3D.prototype.clone.call(this,a);return a};\r\nTHREE.Mesh=function(a,b){THREE.Object3D.call(this);this.geometry=a;this.material=void 0!==b?b:new THREE.MeshBasicMaterial({color:16777215*Math.random(),wireframe:!0});if(this.geometry&&(null===this.geometry.boundingSphere&&this.geometry.computeBoundingSphere(),this.boundRadius=a.boundingSphere.radius,this.geometry.morphTargets.length)){this.morphTargetBase=-1;this.morphTargetForcedOrder=[];this.morphTargetInfluences=[];this.morphTargetDictionary={};for(var c=0;c<this.geometry.morphTargets.length;c++)this.morphTargetInfluences.push(0),\r\nthis.morphTargetDictionary[this.geometry.morphTargets[c].name]=c}};THREE.Mesh.prototype=Object.create(THREE.Object3D.prototype);THREE.Mesh.prototype.getMorphTargetIndexByName=function(a){if(void 0!==this.morphTargetDictionary[a])return this.morphTargetDictionary[a];console.log(\"THREE.Mesh.getMorphTargetIndexByName: morph target \"+a+\" does not exist. Returning 0.\");return 0};\r\nTHREE.Mesh.prototype.clone=function(a){void 0===a&&(a=new THREE.Mesh(this.geometry,this.material));THREE.Object3D.prototype.clone.call(this,a);return a};THREE.Bone=function(a){THREE.Object3D.call(this);this.skin=a;this.skinMatrix=new THREE.Matrix4};THREE.Bone.prototype=Object.create(THREE.Object3D.prototype);\r\nTHREE.Bone.prototype.update=function(a,b){this.matrixAutoUpdate&&(b|=this.updateMatrix());if(b||this.matrixWorldNeedsUpdate)a?this.skinMatrix.multiply(a,this.matrix):this.skinMatrix.copy(this.matrix),this.matrixWorldNeedsUpdate=!1,b=!0;var c,d=this.children.length;for(c=0;c<d;c++)this.children[c].update(this.skinMatrix,b)};\r\nTHREE.SkinnedMesh=function(a,b,c){THREE.Mesh.call(this,a,b);this.useVertexTexture=void 0!==c?c:!0;this.identityMatrix=new THREE.Matrix4;this.bones=[];this.boneMatrices=[];var d,e,f;if(void 0!==this.geometry.bones){for(a=0;a<this.geometry.bones.length;a++)c=this.geometry.bones[a],d=c.pos,e=c.rotq,f=c.scl,b=this.addBone(),b.name=c.name,b.position.set(d[0],d[1],d[2]),b.quaternion.set(e[0],e[1],e[2],e[3]),b.useQuaternion=!0,void 0!==f?b.scale.set(f[0],f[1],f[2]):b.scale.set(1,1,1);for(a=0;a<this.bones.length;a++)c=\r\nthis.geometry.bones[a],b=this.bones[a],-1===c.parent?this.add(b):this.bones[c.parent].add(b);a=this.bones.length;this.useVertexTexture?(this.boneTextureHeight=this.boneTextureWidth=a=256<a?64:64<a?32:16<a?16:8,this.boneMatrices=new Float32Array(4*this.boneTextureWidth*this.boneTextureHeight),this.boneTexture=new THREE.DataTexture(this.boneMatrices,this.boneTextureWidth,this.boneTextureHeight,THREE.RGBAFormat,THREE.FloatType),this.boneTexture.minFilter=THREE.NearestFilter,this.boneTexture.magFilter=\r\nTHREE.NearestFilter,this.boneTexture.generateMipmaps=!1,this.boneTexture.flipY=!1):this.boneMatrices=new Float32Array(16*a);this.pose()}};THREE.SkinnedMesh.prototype=Object.create(THREE.Mesh.prototype);THREE.SkinnedMesh.prototype.addBone=function(a){void 0===a&&(a=new THREE.Bone(this));this.bones.push(a);return a};\r\nTHREE.SkinnedMesh.prototype.updateMatrixWorld=function(a){this.matrixAutoUpdate&&this.updateMatrix();if(this.matrixWorldNeedsUpdate||a)this.parent?this.matrixWorld.multiply(this.parent.matrixWorld,this.matrix):this.matrixWorld.copy(this.matrix),this.matrixWorldNeedsUpdate=!1;for(var a=0,b=this.children.length;a<b;a++){var c=this.children[a];c instanceof THREE.Bone?c.update(this.identityMatrix,!1):c.updateMatrixWorld(!0)}if(void 0==this.boneInverses){this.boneInverses=[];a=0;for(b=this.bones.length;a<\r\nb;a++)c=new THREE.Matrix4,c.getInverse(this.bones[a].skinMatrix),this.boneInverses.push(c)}a=0;for(b=this.bones.length;a<b;a++)THREE.SkinnedMesh.offsetMatrix.multiply(this.bones[a].skinMatrix,this.boneInverses[a]),THREE.SkinnedMesh.offsetMatrix.flattenToArrayOffset(this.boneMatrices,16*a);this.useVertexTexture&&(this.boneTexture.needsUpdate=!0)};\r\nTHREE.SkinnedMesh.prototype.pose=function(){this.updateMatrixWorld(!0);for(var a=0;a<this.geometry.skinIndices.length;a++){var b=this.geometry.skinWeights[a],c=1/b.lengthManhattan();Infinity!==c?b.multiplyScalar(c):b.set(1)}};THREE.SkinnedMesh.prototype.clone=function(a){void 0===a&&(a=new THREE.SkinnedMesh(this.geometry,this.material,this.useVertexTexture));THREE.Mesh.prototype.clone.call(this,a);return a};THREE.SkinnedMesh.offsetMatrix=new THREE.Matrix4;\r\nTHREE.MorphAnimMesh=function(a,b){THREE.Mesh.call(this,a,b);this.duration=1E3;this.mirroredLoop=!1;this.currentKeyframe=this.lastKeyframe=this.time=0;this.direction=1;this.directionBackwards=!1;this.setFrameRange(0,this.geometry.morphTargets.length-1)};THREE.MorphAnimMesh.prototype=Object.create(THREE.Mesh.prototype);THREE.MorphAnimMesh.prototype.setFrameRange=function(a,b){this.startKeyframe=a;this.endKeyframe=b;this.length=this.endKeyframe-this.startKeyframe+1};\r\nTHREE.MorphAnimMesh.prototype.setDirectionForward=function(){this.direction=1;this.directionBackwards=!1};THREE.MorphAnimMesh.prototype.setDirectionBackward=function(){this.direction=-1;this.directionBackwards=!0};\r\nTHREE.MorphAnimMesh.prototype.parseAnimations=function(){var a=this.geometry;a.animations||(a.animations={});for(var b,c=a.animations,d=/([a-z]+)(\\d+)/,e=0,f=a.morphTargets.length;e<f;e++){var g=a.morphTargets[e].name.match(d);if(g&&1<g.length){g=g[1];c[g]||(c[g]={start:Infinity,end:-Infinity});var h=c[g];e<h.start&&(h.start=e);e>h.end&&(h.end=e);b||(b=g)}}a.firstAnimation=b};\r\nTHREE.MorphAnimMesh.prototype.setAnimationLabel=function(a,b,c){this.geometry.animations||(this.geometry.animations={});this.geometry.animations[a]={start:b,end:c}};THREE.MorphAnimMesh.prototype.playAnimation=function(a,b){var c=this.geometry.animations[a];c?(this.setFrameRange(c.start,c.end),this.duration=1E3*((c.end-c.start)/b),this.time=0):console.warn(\"animation[\"+a+\"] undefined\")};\r\nTHREE.MorphAnimMesh.prototype.updateAnimation=function(a){var b=this.duration/this.length;this.time+=this.direction*a;if(this.mirroredLoop){if(this.time>this.duration||0>this.time)if(this.direction*=-1,this.time>this.duration&&(this.time=this.duration,this.directionBackwards=!0),0>this.time)this.time=0,this.directionBackwards=!1}else this.time%=this.duration,0>this.time&&(this.time+=this.duration);a=this.startKeyframe+THREE.Math.clamp(Math.floor(this.time/b),0,this.length-1);a!==this.currentKeyframe&&\r\n(this.morphTargetInfluences[this.lastKeyframe]=0,this.morphTargetInfluences[this.currentKeyframe]=1,this.morphTargetInfluences[a]=0,this.lastKeyframe=this.currentKeyframe,this.currentKeyframe=a);b=this.time%b/b;this.directionBackwards&&(b=1-b);this.morphTargetInfluences[this.currentKeyframe]=b;this.morphTargetInfluences[this.lastKeyframe]=1-b};\r\nTHREE.MorphAnimMesh.prototype.clone=function(a){void 0===a&&(a=new THREE.MorphAnimMesh(this.geometry,this.material));a.duration=this.duration;a.mirroredLoop=this.mirroredLoop;a.time=this.time;a.lastKeyframe=this.lastKeyframe;a.currentKeyframe=this.currentKeyframe;a.direction=this.direction;a.directionBackwards=this.directionBackwards;THREE.Mesh.prototype.clone.call(this,a);return a};THREE.Ribbon=function(a,b){THREE.Object3D.call(this);this.geometry=a;this.material=b};THREE.Ribbon.prototype=Object.create(THREE.Object3D.prototype);\r\nTHREE.Ribbon.prototype.clone=function(a){void 0===a&&(a=new THREE.Ribbon(this.geometry,this.material));THREE.Object3D.prototype.clone.call(this,a);return a};THREE.LOD=function(){THREE.Object3D.call(this);this.LODs=[]};THREE.LOD.prototype=Object.create(THREE.Object3D.prototype);THREE.LOD.prototype.addLevel=function(a,b){void 0===b&&(b=0);for(var b=Math.abs(b),c=0;c<this.LODs.length&&!(b<this.LODs[c].visibleAtDistance);c++);this.LODs.splice(c,0,{visibleAtDistance:b,object3D:a});this.add(a)};\r\nTHREE.LOD.prototype.update=function(a){if(1<this.LODs.length){a.matrixWorldInverse.getInverse(a.matrixWorld);a=a.matrixWorldInverse;a=-(a.elements[2]*this.matrixWorld.elements[12]+a.elements[6]*this.matrixWorld.elements[13]+a.elements[10]*this.matrixWorld.elements[14]+a.elements[14]);this.LODs[0].object3D.visible=!0;for(var b=1;b<this.LODs.length;b++)if(a>=this.LODs[b].visibleAtDistance)this.LODs[b-1].object3D.visible=!1,this.LODs[b].object3D.visible=!0;else break;for(;b<this.LODs.length;b++)this.LODs[b].object3D.visible=\r\n!1}};THREE.LOD.prototype.clone=function(){};\r\nTHREE.Sprite=function(a){THREE.Object3D.call(this);this.color=void 0!==a.color?new THREE.Color(a.color):new THREE.Color(16777215);this.map=void 0!==a.map?a.map:new THREE.Texture;this.blending=void 0!==a.blending?a.blending:THREE.NormalBlending;this.blendSrc=void 0!==a.blendSrc?a.blendSrc:THREE.SrcAlphaFactor;this.blendDst=void 0!==a.blendDst?a.blendDst:THREE.OneMinusSrcAlphaFactor;this.blendEquation=void 0!==a.blendEquation?a.blendEquation:THREE.AddEquation;this.useScreenCoordinates=void 0!==a.useScreenCoordinates?\r\na.useScreenCoordinates:!0;this.mergeWith3D=void 0!==a.mergeWith3D?a.mergeWith3D:!this.useScreenCoordinates;this.affectedByDistance=void 0!==a.affectedByDistance?a.affectedByDistance:!this.useScreenCoordinates;this.scaleByViewport=void 0!==a.scaleByViewport?a.scaleByViewport:!this.affectedByDistance;this.alignment=a.alignment instanceof THREE.Vector2?a.alignment:THREE.SpriteAlignment.center;this.rotation3d=this.rotation;this.rotation=0;this.opacity=1;this.uvOffset=new THREE.Vector2(0,0);this.uvScale=\r\nnew THREE.Vector2(1,1)};THREE.Sprite.prototype=Object.create(THREE.Object3D.prototype);THREE.Sprite.prototype.updateMatrix=function(){this.matrix.setPosition(this.position);this.rotation3d.set(0,0,this.rotation);this.matrix.setRotationFromEuler(this.rotation3d);if(1!==this.scale.x||1!==this.scale.y)this.matrix.scale(this.scale),this.boundRadiusScale=Math.max(this.scale.x,this.scale.y);this.matrixWorldNeedsUpdate=!0};\r\nTHREE.Sprite.prototype.clone=function(a){void 0===a&&(a=new THREE.Sprite({}));a.color.copy(this.color);a.map=this.map;a.blending=this.blending;a.useScreenCoordinates=this.useScreenCoordinates;a.mergeWith3D=this.mergeWith3D;a.affectedByDistance=this.affectedByDistance;a.scaleByViewport=this.scaleByViewport;a.alignment=this.alignment;a.rotation3d.copy(this.rotation3d);a.rotation=this.rotation;a.opacity=this.opacity;a.uvOffset.copy(this.uvOffset);a.uvScale.copy(this.uvScale);THREE.Object3D.prototype.clone.call(this,\r\na);return a};THREE.SpriteAlignment={};THREE.SpriteAlignment.topLeft=new THREE.Vector2(1,-1);THREE.SpriteAlignment.topCenter=new THREE.Vector2(0,-1);THREE.SpriteAlignment.topRight=new THREE.Vector2(-1,-1);THREE.SpriteAlignment.centerLeft=new THREE.Vector2(1,0);THREE.SpriteAlignment.center=new THREE.Vector2(0,0);THREE.SpriteAlignment.centerRight=new THREE.Vector2(-1,0);THREE.SpriteAlignment.bottomLeft=new THREE.Vector2(1,1);THREE.SpriteAlignment.bottomCenter=new THREE.Vector2(0,1);\r\nTHREE.SpriteAlignment.bottomRight=new THREE.Vector2(-1,1);THREE.Scene=function(){THREE.Object3D.call(this);this.overrideMaterial=this.fog=null;this.matrixAutoUpdate=!1;this.__objects=[];this.__lights=[];this.__objectsAdded=[];this.__objectsRemoved=[]};THREE.Scene.prototype=Object.create(THREE.Object3D.prototype);\r\nTHREE.Scene.prototype.__addObject=function(a){if(a instanceof THREE.Light)-1===this.__lights.indexOf(a)&&this.__lights.push(a),a.target&&void 0===a.target.parent&&this.add(a.target);else if(!(a instanceof THREE.Camera||a instanceof THREE.Bone)&&-1===this.__objects.indexOf(a)){this.__objects.push(a);this.__objectsAdded.push(a);var b=this.__objectsRemoved.indexOf(a);-1!==b&&this.__objectsRemoved.splice(b,1)}for(b=0;b<a.children.length;b++)this.__addObject(a.children[b])};\r\nTHREE.Scene.prototype.__removeObject=function(a){if(a instanceof THREE.Light){var b=this.__lights.indexOf(a);-1!==b&&this.__lights.splice(b,1)}else a instanceof THREE.Camera||(b=this.__objects.indexOf(a),-1!==b&&(this.__objects.splice(b,1),this.__objectsRemoved.push(a),b=this.__objectsAdded.indexOf(a),-1!==b&&this.__objectsAdded.splice(b,1)));for(b=0;b<a.children.length;b++)this.__removeObject(a.children[b])};\r\nTHREE.Fog=function(a,b,c){this.color=new THREE.Color(a);this.near=void 0!==b?b:1;this.far=void 0!==c?c:1E3};THREE.FogExp2=function(a,b){this.color=new THREE.Color(a);this.density=void 0!==b?b:2.5E-4};\r\nTHREE.CanvasRenderer=function(a){function b(a){B!==a&&(B=q.globalAlpha=a)}function c(a){u!==a&&(a===THREE.NormalBlending?q.globalCompositeOperation=\"source-over\":a===THREE.AdditiveBlending?q.globalCompositeOperation=\"lighter\":a===THREE.SubtractiveBlending&&(q.globalCompositeOperation=\"darker\"),u=a)}function d(a){s!==a&&(s=q.strokeStyle=a)}function e(a){z!==a&&(z=q.fillStyle=a)}console.log(\"THREE.CanvasRenderer\",THREE.REVISION);var a=a||{},f=this,g,h,i,j=new THREE.Projector,l=void 0!==a.canvas?a.canvas:\r\ndocument.createElement(\"canvas\"),m,n,p,o,q=l.getContext(\"2d\"),r=new THREE.Color(0),t=0,B=1,u=0,s=null,z=null,A=null,v=null,y=null,C,G,H,J,E=new THREE.RenderableVertex,M=new THREE.RenderableVertex,K,F,I,L,R,$,Y,N,ea,Q,qa,la,O=new THREE.Color,fa=new THREE.Color,W=new THREE.Color,V=new THREE.Color,ia=new THREE.Color,Z=new THREE.Color,ca=new THREE.Color,Ga={},Pa={},Ia,Ua,na,Va,ib,Ra,eb,pb,Pb,db,$a=new THREE.Rectangle,Ja=new THREE.Rectangle,wa=new THREE.Rectangle,wb=!1,Da=new THREE.Color,qb=new THREE.Color,\r\nfb=new THREE.Color,ra=new THREE.Vector3,gb,Za,Wa,Ea,xb,k,a=16;gb=document.createElement(\"canvas\");gb.width=gb.height=2;Za=gb.getContext(\"2d\");Za.fillStyle=\"rgba(0,0,0,1)\";Za.fillRect(0,0,2,2);Wa=Za.getImageData(0,0,2,2);Ea=Wa.data;xb=document.createElement(\"canvas\");xb.width=xb.height=a;k=xb.getContext(\"2d\");k.translate(-a/2,-a/2);k.scale(a,a);a--;this.domElement=l;this.sortElements=this.sortObjects=this.autoClear=!0;this.info={render:{vertices:0,faces:0}};this.setSize=function(a,b){m=a;n=b;p=Math.floor(m/\r\n2);o=Math.floor(n/2);l.width=m;l.height=n;$a.set(-p,-o,p,o);Ja.set(-p,-o,p,o);B=1;u=0;y=v=A=z=s=null};this.setClearColor=function(a,b){r.copy(a);t=void 0!==b?b:1;Ja.set(-p,-o,p,o)};this.setClearColorHex=function(a,b){r.setHex(a);t=void 0!==b?b:1;Ja.set(-p,-o,p,o)};this.getMaxAnisotropy=function(){return 0};this.clear=function(){q.setTransform(1,0,0,-1,p,o);!1===Ja.isEmpty()&&(Ja.minSelf($a),Ja.inflate(2),1>t&&q.clearRect(Math.floor(Ja.getX()),Math.floor(Ja.getY()),Math.floor(Ja.getWidth()),Math.floor(Ja.getHeight())),\r\n0<t&&(c(THREE.NormalBlending),b(1),e(\"rgba(\"+Math.floor(255*r.r)+\",\"+Math.floor(255*r.g)+\",\"+Math.floor(255*r.b)+\",\"+t+\")\"),q.fillRect(Math.floor(Ja.getX()),Math.floor(Ja.getY()),Math.floor(Ja.getWidth()),Math.floor(Ja.getHeight()))),Ja.empty())};this.render=function(a,l){function m(a,b,c){for(var d=0,e=i.length;d<e;d++){var f=i[d],g=f.color;if(f instanceof THREE.DirectionalLight){var h=f.matrixWorld.getPosition().normalize(),k=b.dot(h);0>=k||(k*=f.intensity,c.r+=g.r*k,c.g+=g.g*k,c.b+=g.b*k)}else f instanceof\r\nTHREE.PointLight&&(h=f.matrixWorld.getPosition(),k=b.dot(ra.sub(h,a).normalize()),0>=k||(k*=0==f.distance?1:1-Math.min(a.distanceTo(h)/f.distance,1),0!=k&&(k*=f.intensity,c.r+=g.r*k,c.g+=g.g*k,c.b+=g.b*k)))}}function n(a,d,e,g,h,k,i,j){f.info.render.vertices+=3;f.info.render.faces++;b(j.opacity);c(j.blending);K=a.positionScreen.x;F=a.positionScreen.y;I=d.positionScreen.x;L=d.positionScreen.y;R=e.positionScreen.x;$=e.positionScreen.y;r(K,F,I,L,R,$);(j instanceof THREE.MeshLambertMaterial||j instanceof\r\nTHREE.MeshPhongMaterial)&&null===j.map&&null===j.map?(Z.copy(j.color),ca.copy(j.emissive),j.vertexColors===THREE.FaceColors&&(Z.r*=i.color.r,Z.g*=i.color.g,Z.b*=i.color.b),!0===wb)?!1===j.wireframe&&j.shading==THREE.SmoothShading&&3==i.vertexNormalsLength?(fa.r=W.r=V.r=Da.r,fa.g=W.g=V.g=Da.g,fa.b=W.b=V.b=Da.b,m(i.v1.positionWorld,i.vertexNormalsWorld[0],fa),m(i.v2.positionWorld,i.vertexNormalsWorld[1],W),m(i.v3.positionWorld,i.vertexNormalsWorld[2],V),fa.r=fa.r*Z.r+ca.r,fa.g=fa.g*Z.g+ca.g,fa.b=fa.b*\r\nZ.b+ca.b,W.r=W.r*Z.r+ca.r,W.g=W.g*Z.g+ca.g,W.b=W.b*Z.b+ca.b,V.r=V.r*Z.r+ca.r,V.g=V.g*Z.g+ca.g,V.b=V.b*Z.b+ca.b,ia.r=0.5*(W.r+V.r),ia.g=0.5*(W.g+V.g),ia.b=0.5*(W.b+V.b),na=Dc(fa,W,V,ia),gc(K,F,I,L,R,$,0,0,1,0,0,1,na)):(O.r=Da.r,O.g=Da.g,O.b=Da.b,m(i.centroidWorld,i.normalWorld,O),O.r=O.r*Z.r+ca.r,O.g=O.g*Z.g+ca.g,O.b=O.b*Z.b+ca.b,!0===j.wireframe?t(O,j.wireframeLinewidth,j.wireframeLinecap,j.wireframeLinejoin):u(O)):!0===j.wireframe?t(j.color,j.wireframeLinewidth,j.wireframeLinecap,j.wireframeLinejoin):\r\nu(j.color):j instanceof THREE.MeshBasicMaterial||j instanceof THREE.MeshLambertMaterial||j instanceof THREE.MeshPhongMaterial?null!==j.map?j.map.mapping instanceof THREE.UVMapping&&(Va=i.uvs[0],Ba(K,F,I,L,R,$,Va[g].u,Va[g].v,Va[h].u,Va[h].v,Va[k].u,Va[k].v,j.map)):null!==j.envMap?j.envMap.mapping instanceof THREE.SphericalReflectionMapping&&(a=l.matrixWorldInverse,ra.copy(i.vertexNormalsWorld[g]),ib=0.5*(ra.x*a.elements[0]+ra.y*a.elements[4]+ra.z*a.elements[8])+0.5,Ra=0.5*(ra.x*a.elements[1]+ra.y*\r\na.elements[5]+ra.z*a.elements[9])+0.5,ra.copy(i.vertexNormalsWorld[h]),eb=0.5*(ra.x*a.elements[0]+ra.y*a.elements[4]+ra.z*a.elements[8])+0.5,pb=0.5*(ra.x*a.elements[1]+ra.y*a.elements[5]+ra.z*a.elements[9])+0.5,ra.copy(i.vertexNormalsWorld[k]),Pb=0.5*(ra.x*a.elements[0]+ra.y*a.elements[4]+ra.z*a.elements[8])+0.5,db=0.5*(ra.x*a.elements[1]+ra.y*a.elements[5]+ra.z*a.elements[9])+0.5,Ba(K,F,I,L,R,$,ib,Ra,eb,pb,Pb,db,j.envMap)):(O.copy(j.color),j.vertexColors===THREE.FaceColors&&(O.r*=i.color.r,O.g*=\r\ni.color.g,O.b*=i.color.b),!0===j.wireframe?t(O,j.wireframeLinewidth,j.wireframeLinecap,j.wireframeLinejoin):u(O)):j instanceof THREE.MeshDepthMaterial?(Ia=l.near,Ua=l.far,fa.r=fa.g=fa.b=1-tb(a.positionScreen.z,Ia,Ua),W.r=W.g=W.b=1-tb(d.positionScreen.z,Ia,Ua),V.r=V.g=V.b=1-tb(e.positionScreen.z,Ia,Ua),ia.r=0.5*(W.r+V.r),ia.g=0.5*(W.g+V.g),ia.b=0.5*(W.b+V.b),na=Dc(fa,W,V,ia),gc(K,F,I,L,R,$,0,0,1,0,0,1,na)):j instanceof THREE.MeshNormalMaterial&&(O.r=jc(i.normalWorld.x),O.g=jc(i.normalWorld.y),O.b=\r\njc(i.normalWorld.z),!0===j.wireframe?t(O,j.wireframeLinewidth,j.wireframeLinecap,j.wireframeLinejoin):u(O))}function r(a,b,c,d,e,f){q.beginPath();q.moveTo(a,b);q.lineTo(c,d);q.lineTo(e,f);q.closePath()}function s(a,b,c,d,e,f,g,h){q.beginPath();q.moveTo(a,b);q.lineTo(c,d);q.lineTo(e,f);q.lineTo(g,h);q.closePath()}function t(a,b,c,e){A!==b&&(A=q.lineWidth=b);v!==c&&(v=q.lineCap=c);y!==e&&(y=q.lineJoin=e);d(a.getContextStyle());q.stroke();wa.inflate(2*b)}function u(a){e(a.getContextStyle());q.fill()}\r\nfunction Ba(a,b,c,d,f,g,h,k,i,j,l,m,n){if(!(n instanceof THREE.DataTexture||void 0===n.image||0==n.image.width)){if(!0===n.needsUpdate){var Ba=n.wrapS==THREE.RepeatWrapping,o=n.wrapT==THREE.RepeatWrapping;Ga[n.id]=q.createPattern(n.image,!0===Ba&&!0===o?\"repeat\":!0===Ba&&!1===o?\"repeat-x\":!1===Ba&&!0===o?\"repeat-y\":\"no-repeat\");n.needsUpdate=!1}void 0===Ga[n.id]?e(\"rgba(0,0,0,1)\"):e(Ga[n.id]);var Ba=n.offset.x/n.repeat.x,o=n.offset.y/n.repeat.y,p=n.image.width*n.repeat.x,tb=n.image.height*n.repeat.y,\r\nh=(h+Ba)*p,k=(1-k+o)*tb,c=c-a,d=d-b,f=f-a,g=g-b,i=(i+Ba)*p-h,j=(1-j+o)*tb-k,l=(l+Ba)*p-h,m=(1-m+o)*tb-k,Ba=i*m-l*j;0===Ba?(void 0===Pa[n.id]&&(b=document.createElement(\"canvas\"),b.width=n.image.width,b.height=n.image.height,b=b.getContext(\"2d\"),b.drawImage(n.image,0,0),Pa[n.id]=b.getImageData(0,0,n.image.width,n.image.height).data),b=Pa[n.id],h=4*(Math.floor(h)+Math.floor(k)*n.image.width),O.setRGB(b[h]/255,b[h+1]/255,b[h+2]/255),u(O)):(Ba=1/Ba,n=(m*c-j*f)*Ba,j=(m*d-j*g)*Ba,c=(i*f-l*c)*Ba,d=(i*g-\r\nl*d)*Ba,a=a-n*h-c*k,h=b-j*h-d*k,q.save(),q.transform(n,j,c,d,a,h),q.fill(),q.restore())}}function gc(a,b,c,d,e,f,g,h,k,i,j,l,n){var m,Ba;m=n.width-1;Ba=n.height-1;g*=m;h*=Ba;c-=a;d-=b;e-=a;f-=b;k=k*m-g;i=i*Ba-h;j=j*m-g;l=l*Ba-h;Ba=1/(k*l-j*i);m=(l*c-i*e)*Ba;i=(l*d-i*f)*Ba;c=(k*e-j*c)*Ba;d=(k*f-j*d)*Ba;a=a-m*g-c*h;b=b-i*g-d*h;q.save();q.transform(m,i,c,d,a,b);q.clip();q.drawImage(n,0,0);q.restore()}function Dc(a,b,c,d){Ea[0]=255*a.r|0;Ea[1]=255*a.g|0;Ea[2]=255*a.b|0;Ea[4]=255*b.r|0;Ea[5]=255*b.g|0;\r\nEa[6]=255*b.b|0;Ea[8]=255*c.r|0;Ea[9]=255*c.g|0;Ea[10]=255*c.b|0;Ea[12]=255*d.r|0;Ea[13]=255*d.g|0;Ea[14]=255*d.b|0;Za.putImageData(Wa,0,0);k.drawImage(gb,0,0);return xb}function tb(a,b,c){a=(a-b)/(c-b);return a*a*(3-2*a)}function jc(a){a=0.5*(a+1);return 0>a?0:1<a?1:a}function Wb(a,b){var c=b.x-a.x,d=b.y-a.y,e=c*c+d*d;0!==e&&(e=1/Math.sqrt(e),c*=e,d*=e,b.x+=c,b.y+=d,a.x-=c,a.y-=d)}if(!1===l instanceof THREE.Camera)console.error(\"THREE.CanvasRenderer.render: camera is not an instance of THREE.Camera.\");\r\nelse{var B,Fc,ja,aa;!0===this.autoClear?this.clear():q.setTransform(1,0,0,-1,p,o);f.info.render.vertices=0;f.info.render.faces=0;g=j.projectScene(a,l,this.sortObjects,this.sortElements);h=g.elements;i=g.lights;wb=0<i.length;if(!0===wb){Da.setRGB(0,0,0);qb.setRGB(0,0,0);fb.setRGB(0,0,0);B=0;for(Fc=i.length;B<Fc;B++){aa=i[B];var z=aa.color;aa instanceof THREE.AmbientLight?(Da.r+=z.r,Da.g+=z.g,Da.b+=z.b):aa instanceof THREE.DirectionalLight?(qb.r+=z.r,qb.g+=z.g,qb.b+=z.b):aa instanceof THREE.PointLight&&\r\n(fb.r+=z.r,fb.g+=z.g,fb.b+=z.b)}}B=0;for(Fc=h.length;B<Fc;B++)if(ja=h[B],aa=ja.material,!(void 0===aa||!1===aa.visible)){wa.empty();if(ja instanceof THREE.RenderableParticle){C=ja;C.x*=p;C.y*=o;var z=C,Xa=ja;b(aa.opacity);c(aa.blending);var rb=void 0,sb=void 0,jb=void 0,kb=void 0,kc=ja=void 0,Uc=void 0;aa instanceof THREE.ParticleBasicMaterial?null===aa.map?(jb=Xa.object.scale.x,kb=Xa.object.scale.y,jb*=Xa.scale.x*p,kb*=Xa.scale.y*o,wa.set(z.x-jb,z.y-kb,z.x+jb,z.y+kb),!1!==$a.intersects(wa)&&(e(aa.color.getContextStyle()),\r\nq.save(),q.translate(z.x,z.y),q.rotate(-Xa.rotation),q.scale(jb,kb),q.fillRect(-1,-1,2,2),q.restore())):(ja=aa.map.image,kc=ja.width>>1,Uc=ja.height>>1,jb=Xa.scale.x*p,kb=Xa.scale.y*o,rb=jb*kc,sb=kb*Uc,wa.set(z.x-rb,z.y-sb,z.x+rb,z.y+sb),!1!==$a.intersects(wa)&&(q.save(),q.translate(z.x,z.y),q.rotate(-Xa.rotation),q.scale(jb,-kb),q.translate(-kc,-Uc),q.drawImage(ja,0,0),q.restore())):aa instanceof THREE.ParticleCanvasMaterial&&(rb=Xa.scale.x*p,sb=Xa.scale.y*o,wa.set(z.x-rb,z.y-sb,z.x+rb,z.y+sb),!1!==\r\n$a.intersects(wa)&&(d(aa.color.getContextStyle()),e(aa.color.getContextStyle()),q.save(),q.translate(z.x,z.y),q.rotate(-Xa.rotation),q.scale(rb,sb),aa.program(q),q.restore()))}else if(ja instanceof THREE.RenderableLine){if(C=ja.v1,G=ja.v2,C.positionScreen.x*=p,C.positionScreen.y*=o,G.positionScreen.x*=p,G.positionScreen.y*=o,wa.addPoint(C.positionScreen.x,C.positionScreen.y),wa.addPoint(G.positionScreen.x,G.positionScreen.y),!0===$a.intersects(wa)&&(z=C,Xa=G,b(aa.opacity),c(aa.blending),q.beginPath(),\r\nq.moveTo(z.positionScreen.x,z.positionScreen.y),q.lineTo(Xa.positionScreen.x,Xa.positionScreen.y),aa instanceof THREE.LineBasicMaterial))z=aa.linewidth,A!==z&&(A=q.lineWidth=z),z=aa.linecap,v!==z&&(v=q.lineCap=z),z=aa.linejoin,y!==z&&(y=q.lineJoin=z),d(aa.color.getContextStyle()),q.stroke(),wa.inflate(2*aa.linewidth)}else if(ja instanceof THREE.RenderableFace3)C=ja.v1,G=ja.v2,H=ja.v3,C.positionScreen.x*=p,C.positionScreen.y*=o,G.positionScreen.x*=p,G.positionScreen.y*=o,H.positionScreen.x*=p,H.positionScreen.y*=\r\no,!0===aa.overdraw&&(Wb(C.positionScreen,G.positionScreen),Wb(G.positionScreen,H.positionScreen),Wb(H.positionScreen,C.positionScreen)),wa.add3Points(C.positionScreen.x,C.positionScreen.y,G.positionScreen.x,G.positionScreen.y,H.positionScreen.x,H.positionScreen.y),!0===$a.intersects(wa)&&n(C,G,H,0,1,2,ja,aa,a);else if(ja instanceof THREE.RenderableFace4&&(C=ja.v1,G=ja.v2,H=ja.v3,J=ja.v4,C.positionScreen.x*=p,C.positionScreen.y*=o,G.positionScreen.x*=p,G.positionScreen.y*=o,H.positionScreen.x*=p,H.positionScreen.y*=\r\no,J.positionScreen.x*=p,J.positionScreen.y*=o,E.positionScreen.copy(G.positionScreen),M.positionScreen.copy(J.positionScreen),!0===aa.overdraw&&(Wb(C.positionScreen,G.positionScreen),Wb(G.positionScreen,J.positionScreen),Wb(J.positionScreen,C.positionScreen),Wb(H.positionScreen,E.positionScreen),Wb(H.positionScreen,M.positionScreen)),wa.addPoint(C.positionScreen.x,C.positionScreen.y),wa.addPoint(G.positionScreen.x,G.positionScreen.y),wa.addPoint(H.positionScreen.x,H.positionScreen.y),wa.addPoint(J.positionScreen.x,\r\nJ.positionScreen.y),!0===$a.intersects(wa)))(z=C,Xa=G,rb=H,sb=J,jb=E,kb=M,kc=a,f.info.render.vertices+=4,f.info.render.faces++,b(aa.opacity),c(aa.blending),void 0!==aa.map&&null!==aa.map||void 0!==aa.envMap&&null!==aa.envMap)?(n(z,Xa,sb,0,1,3,ja,aa,kc),n(jb,rb,kb,1,2,3,ja,aa,kc)):(K=z.positionScreen.x,F=z.positionScreen.y,I=Xa.positionScreen.x,L=Xa.positionScreen.y,R=rb.positionScreen.x,$=rb.positionScreen.y,Y=sb.positionScreen.x,N=sb.positionScreen.y,ea=jb.positionScreen.x,Q=jb.positionScreen.y,\r\nqa=kb.positionScreen.x,la=kb.positionScreen.y,aa instanceof THREE.MeshLambertMaterial||aa instanceof THREE.MeshPhongMaterial)?(Z.copy(aa.color),ca.copy(aa.emissive),aa.vertexColors===THREE.FaceColors&&(Z.r*=ja.color.r,Z.g*=ja.color.g,Z.b*=ja.color.b),!0===wb)?!1===aa.wireframe&&aa.shading==THREE.SmoothShading&&4==ja.vertexNormalsLength?(fa.r=W.r=V.r=ia.r=Da.r,fa.g=W.g=V.g=ia.g=Da.g,fa.b=W.b=V.b=ia.b=Da.b,m(ja.v1.positionWorld,ja.vertexNormalsWorld[0],fa),m(ja.v2.positionWorld,ja.vertexNormalsWorld[1],\r\nW),m(ja.v4.positionWorld,ja.vertexNormalsWorld[3],V),m(ja.v3.positionWorld,ja.vertexNormalsWorld[2],ia),fa.r=fa.r*Z.r+ca.r,fa.g=fa.g*Z.g+ca.g,fa.b=fa.b*Z.b+ca.b,W.r=W.r*Z.r+ca.r,W.g=W.g*Z.g+ca.g,W.b=W.b*Z.b+ca.b,V.r=V.r*Z.r+ca.r,V.g=V.g*Z.g+ca.g,V.b=V.b*Z.b+ca.b,ia.r=ia.r*Z.r+ca.r,ia.g=ia.g*Z.g+ca.g,ia.b=ia.b*Z.b+ca.b,na=Dc(fa,W,V,ia),r(K,F,I,L,Y,N),gc(K,F,I,L,Y,N,0,0,1,0,0,1,na),r(ea,Q,R,$,qa,la),gc(ea,Q,R,$,qa,la,1,0,1,1,0,1,na)):(O.r=Da.r,O.g=Da.g,O.b=Da.b,m(ja.centroidWorld,ja.normalWorld,O),\r\nO.r=O.r*Z.r+ca.r,O.g=O.g*Z.g+ca.g,O.b=O.b*Z.b+ca.b,s(K,F,I,L,R,$,Y,N),!0===aa.wireframe?t(O,aa.wireframeLinewidth,aa.wireframeLinecap,aa.wireframeLinejoin):u(O)):(O.r=Z.r+ca.r,O.g=Z.g+ca.g,O.b=Z.b+ca.b,s(K,F,I,L,R,$,Y,N),!0===aa.wireframe?t(O,aa.wireframeLinewidth,aa.wireframeLinecap,aa.wireframeLinejoin):u(O)):aa instanceof THREE.MeshBasicMaterial?(O.copy(aa.color),aa.vertexColors===THREE.FaceColors&&(O.r*=ja.color.r,O.g*=ja.color.g,O.b*=ja.color.b),s(K,F,I,L,R,$,Y,N),!0===aa.wireframe?t(O,aa.wireframeLinewidth,\r\naa.wireframeLinecap,aa.wireframeLinejoin):u(O)):aa instanceof THREE.MeshNormalMaterial?(O.r=jc(ja.normalWorld.x),O.g=jc(ja.normalWorld.y),O.b=jc(ja.normalWorld.z),s(K,F,I,L,R,$,Y,N),!0===aa.wireframe?t(O,aa.wireframeLinewidth,aa.wireframeLinecap,aa.wireframeLinejoin):u(O)):aa instanceof THREE.MeshDepthMaterial&&(Ia=l.near,Ua=l.far,fa.r=fa.g=fa.b=1-tb(z.positionScreen.z,Ia,Ua),W.r=W.g=W.b=1-tb(Xa.positionScreen.z,Ia,Ua),V.r=V.g=V.b=1-tb(sb.positionScreen.z,Ia,Ua),ia.r=ia.g=ia.b=1-tb(rb.positionScreen.z,\r\nIa,Ua),na=Dc(fa,W,V,ia),r(K,F,I,L,Y,N),gc(K,F,I,L,Y,N,0,0,1,0,0,1,na),r(ea,Q,R,$,qa,la),gc(ea,Q,R,$,qa,la,1,0,1,1,0,1,na));Ja.addRectangle(wa)}q.setTransform(1,0,0,1,0,0)}}};\r\nTHREE.ShaderChunk={fog_pars_fragment:\"#ifdef USE_FOG\\nuniform vec3 fogColor;\\n#ifdef FOG_EXP2\\nuniform float fogDensity;\\n#else\\nuniform float fogNear;\\nuniform float fogFar;\\n#endif\\n#endif\",fog_fragment:\"#ifdef USE_FOG\\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\\n#ifdef FOG_EXP2\\nconst float LOG2 = 1.442695;\\nfloat fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );\\nfogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );\\n#else\\nfloat fogFactor = smoothstep( fogNear, fogFar, depth );\\n#endif\\ngl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\\n#endif\",envmap_pars_fragment:\"#ifdef USE_ENVMAP\\nuniform float reflectivity;\\nuniform samplerCube envMap;\\nuniform float flipEnvMap;\\nuniform int combine;\\n#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\\nuniform bool useRefract;\\nuniform float refractionRatio;\\n#else\\nvarying vec3 vReflect;\\n#endif\\n#endif\",\r\nenvmap_fragment:\"#ifdef USE_ENVMAP\\nvec3 reflectVec;\\n#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\\nvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\\nif ( useRefract ) {\\nreflectVec = refract( cameraToVertex, normal, refractionRatio );\\n} else { \\nreflectVec = reflect( cameraToVertex, normal );\\n}\\n#else\\nreflectVec = vReflect;\\n#endif\\n#ifdef DOUBLE_SIDED\\nfloat flipNormal = ( -1.0 + 2.0 * float( gl_FrontFacing ) );\\nvec4 cubeColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n#else\\nvec4 cubeColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n#endif\\n#ifdef GAMMA_INPUT\\ncubeColor.xyz *= cubeColor.xyz;\\n#endif\\nif ( combine == 1 ) {\\ngl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, specularStrength * reflectivity );\\n} else {\\ngl_FragColor.xyz = mix( gl_FragColor.xyz, gl_FragColor.xyz * cubeColor.xyz, specularStrength * reflectivity );\\n}\\n#endif\",\r\nenvmap_pars_vertex:\"#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP )\\nvarying vec3 vReflect;\\nuniform float refractionRatio;\\nuniform bool useRefract;\\n#endif\",worldpos_vertex:\"#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( LAMBERT ) || defined ( USE_SHADOWMAP )\\n#ifdef USE_SKINNING\\nvec4 mPosition = modelMatrix * skinned;\\n#endif\\n#if defined( USE_MORPHTARGETS ) && ! defined( USE_SKINNING )\\nvec4 mPosition = modelMatrix * vec4( morphed, 1.0 );\\n#endif\\n#if ! defined( USE_MORPHTARGETS ) && ! defined( USE_SKINNING )\\nvec4 mPosition = modelMatrix * vec4( position, 1.0 );\\n#endif\\n#endif\",\r\nenvmap_vertex:\"#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP )\\nvec3 nWorld = mat3( modelMatrix[ 0 ].xyz, modelMatrix[ 1 ].xyz, modelMatrix[ 2 ].xyz ) * objectNormal;\\nif ( useRefract ) {\\nvReflect = refract( normalize( mPosition.xyz - cameraPosition ), normalize( nWorld.xyz ), refractionRatio );\\n} else {\\nvReflect = reflect( normalize( mPosition.xyz - cameraPosition ), normalize( nWorld.xyz ) );\\n}\\n#endif\",map_particle_pars_fragment:\"#ifdef USE_MAP\\nuniform sampler2D map;\\n#endif\",\r\nmap_particle_fragment:\"#ifdef USE_MAP\\ngl_FragColor = gl_FragColor * texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) );\\n#endif\",map_pars_vertex:\"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP )\\nvarying vec2 vUv;\\nuniform vec4 offsetRepeat;\\n#endif\",map_pars_fragment:\"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP )\\nvarying vec2 vUv;\\n#endif\\n#ifdef USE_MAP\\nuniform sampler2D map;\\n#endif\",\r\nmap_vertex:\"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP )\\nvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\\n#endif\",map_fragment:\"#ifdef USE_MAP\\n#ifdef GAMMA_INPUT\\nvec4 texelColor = texture2D( map, vUv );\\ntexelColor.xyz *= texelColor.xyz;\\ngl_FragColor = gl_FragColor * texelColor;\\n#else\\ngl_FragColor = gl_FragColor * texture2D( map, vUv );\\n#endif\\n#endif\",lightmap_pars_fragment:\"#ifdef USE_LIGHTMAP\\nvarying vec2 vUv2;\\nuniform sampler2D lightMap;\\n#endif\",\r\nlightmap_pars_vertex:\"#ifdef USE_LIGHTMAP\\nvarying vec2 vUv2;\\n#endif\",lightmap_fragment:\"#ifdef USE_LIGHTMAP\\ngl_FragColor = gl_FragColor * texture2D( lightMap, vUv2 );\\n#endif\",lightmap_vertex:\"#ifdef USE_LIGHTMAP\\nvUv2 = uv2;\\n#endif\",bumpmap_pars_fragment:\"#ifdef USE_BUMPMAP\\nuniform sampler2D bumpMap;\\nuniform float bumpScale;\\nvec2 dHdxy_fwd() {\\nvec2 dSTdx = dFdx( vUv );\\nvec2 dSTdy = dFdy( vUv );\\nfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\\nfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\\nfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\\nreturn vec2( dBx, dBy );\\n}\\nvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\\nvec3 vSigmaX = dFdx( surf_pos );\\nvec3 vSigmaY = dFdy( surf_pos );\\nvec3 vN = surf_norm;\\nvec3 R1 = cross( vSigmaY, vN );\\nvec3 R2 = cross( vN, vSigmaX );\\nfloat fDet = dot( vSigmaX, R1 );\\nvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\nreturn normalize( abs( fDet ) * surf_norm - vGrad );\\n}\\n#endif\",\r\nnormalmap_pars_fragment:\"#ifdef USE_NORMALMAP\\nuniform sampler2D normalMap;\\nuniform vec2 normalScale;\\nvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\\nvec3 q0 = dFdx( eye_pos.xyz );\\nvec3 q1 = dFdy( eye_pos.xyz );\\nvec2 st0 = dFdx( vUv.st );\\nvec2 st1 = dFdy( vUv.st );\\nvec3 S = normalize(  q0 * st1.t - q1 * st0.t );\\nvec3 T = normalize( -q0 * st1.s + q1 * st0.s );\\nvec3 N = normalize( surf_norm );\\nvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\nmapN.xy = normalScale * mapN.xy;\\nmat3 tsn = mat3( S, T, N );\\nreturn normalize( tsn * mapN );\\n}\\n#endif\",\r\nspecularmap_pars_fragment:\"#ifdef USE_SPECULARMAP\\nuniform sampler2D specularMap;\\n#endif\",specularmap_fragment:\"float specularStrength;\\n#ifdef USE_SPECULARMAP\\nvec4 texelSpecular = texture2D( specularMap, vUv );\\nspecularStrength = texelSpecular.r;\\n#else\\nspecularStrength = 1.0;\\n#endif\",lights_lambert_pars_vertex:\"uniform vec3 ambient;\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform vec3 ambientLightColor;\\n#if MAX_DIR_LIGHTS > 0\\nuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\\n#endif\\n#if MAX_HEMI_LIGHTS > 0\\nuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\\nuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\\nuniform vec3 hemisphereLightPosition[ MAX_HEMI_LIGHTS ];\\n#endif\\n#if MAX_POINT_LIGHTS > 0\\nuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\\n#endif\\n#if MAX_SPOT_LIGHTS > 0\\nuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\\nuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\\nuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\\nuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\\nuniform float spotLightAngle[ MAX_SPOT_LIGHTS ];\\nuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\\n#endif\\n#ifdef WRAP_AROUND\\nuniform vec3 wrapRGB;\\n#endif\",\r\nlights_lambert_vertex:\"vLightFront = vec3( 0.0 );\\n#ifdef DOUBLE_SIDED\\nvLightBack = vec3( 0.0 );\\n#endif\\ntransformedNormal = normalize( transformedNormal );\\n#if MAX_DIR_LIGHTS > 0\\nfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\\nvec3 dirVector = normalize( lDirection.xyz );\\nfloat dotProduct = dot( transformedNormal, dirVector );\\nvec3 directionalLightWeighting = vec3( max( dotProduct, 0.0 ) );\\n#ifdef DOUBLE_SIDED\\nvec3 directionalLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\\n#ifdef WRAP_AROUND\\nvec3 directionalLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\\n#endif\\n#endif\\n#ifdef WRAP_AROUND\\nvec3 directionalLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\\ndirectionalLightWeighting = mix( directionalLightWeighting, directionalLightWeightingHalf, wrapRGB );\\n#ifdef DOUBLE_SIDED\\ndirectionalLightWeightingBack = mix( directionalLightWeightingBack, directionalLightWeightingHalfBack, wrapRGB );\\n#endif\\n#endif\\nvLightFront += directionalLightColor[ i ] * directionalLightWeighting;\\n#ifdef DOUBLE_SIDED\\nvLightBack += directionalLightColor[ i ] * directionalLightWeightingBack;\\n#endif\\n}\\n#endif\\n#if MAX_POINT_LIGHTS > 0\\nfor( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\\nfloat lDistance = 1.0;\\nif ( pointLightDistance[ i ] > 0.0 )\\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\\nlVector = normalize( lVector );\\nfloat dotProduct = dot( transformedNormal, lVector );\\nvec3 pointLightWeighting = vec3( max( dotProduct, 0.0 ) );\\n#ifdef DOUBLE_SIDED\\nvec3 pointLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\\n#ifdef WRAP_AROUND\\nvec3 pointLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\\n#endif\\n#endif\\n#ifdef WRAP_AROUND\\nvec3 pointLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\\npointLightWeighting = mix( pointLightWeighting, pointLightWeightingHalf, wrapRGB );\\n#ifdef DOUBLE_SIDED\\npointLightWeightingBack = mix( pointLightWeightingBack, pointLightWeightingHalfBack, wrapRGB );\\n#endif\\n#endif\\nvLightFront += pointLightColor[ i ] * pointLightWeighting * lDistance;\\n#ifdef DOUBLE_SIDED\\nvLightBack += pointLightColor[ i ] * pointLightWeightingBack * lDistance;\\n#endif\\n}\\n#endif\\n#if MAX_SPOT_LIGHTS > 0\\nfor( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\\nvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\\nlVector = normalize( lVector );\\nfloat spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - mPosition.xyz ) );\\nif ( spotEffect > spotLightAngle[ i ] ) {\\nspotEffect = pow( spotEffect, spotLightExponent[ i ] );\\nfloat lDistance = 1.0;\\nif ( spotLightDistance[ i ] > 0.0 )\\nlDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\\nfloat dotProduct = dot( transformedNormal, lVector );\\nvec3 spotLightWeighting = vec3( max( dotProduct, 0.0 ) );\\n#ifdef DOUBLE_SIDED\\nvec3 spotLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\\n#ifdef WRAP_AROUND\\nvec3 spotLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\\n#endif\\n#endif\\n#ifdef WRAP_AROUND\\nvec3 spotLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\\nspotLightWeighting = mix( spotLightWeighting, spotLightWeightingHalf, wrapRGB );\\n#ifdef DOUBLE_SIDED\\nspotLightWeightingBack = mix( spotLightWeightingBack, spotLightWeightingHalfBack, wrapRGB );\\n#endif\\n#endif\\nvLightFront += spotLightColor[ i ] * spotLightWeighting * lDistance * spotEffect;\\n#ifdef DOUBLE_SIDED\\nvLightBack += spotLightColor[ i ] * spotLightWeightingBack * lDistance * spotEffect;\\n#endif\\n}\\n}\\n#endif\\n#if MAX_HEMI_LIGHTS > 0\\nfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\\nvec4 lPosition = viewMatrix * vec4( hemisphereLightPosition[ i ], 1.0 );\\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\\nlVector = normalize( lVector );\\nfloat dotProduct = dot( transformedNormal, lVector );\\nfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\\nfloat hemiDiffuseWeightBack = -0.5 * dotProduct + 0.5;\\nvLightFront += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\\n#ifdef DOUBLE_SIDED\\nvLightBack += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeightBack );\\n#endif\\n}\\n#endif\\nvLightFront = vLightFront * diffuse + ambient * ambientLightColor + emissive;\\n#ifdef DOUBLE_SIDED\\nvLightBack = vLightBack * diffuse + ambient * ambientLightColor + emissive;\\n#endif\",\r\nlights_phong_pars_vertex:\"#ifndef PHONG_PER_PIXEL\\n#if MAX_POINT_LIGHTS > 0\\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\\nvarying vec4 vPointLight[ MAX_POINT_LIGHTS ];\\n#endif\\n#if MAX_SPOT_LIGHTS > 0\\nuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\\nuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\\nvarying vec4 vSpotLight[ MAX_SPOT_LIGHTS ];\\n#endif\\n#endif\\n#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP )\\nvarying vec3 vWorldPosition;\\n#endif\",\r\nlights_phong_vertex:\"#ifndef PHONG_PER_PIXEL\\n#if MAX_POINT_LIGHTS > 0\\nfor( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\\nfloat lDistance = 1.0;\\nif ( pointLightDistance[ i ] > 0.0 )\\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\\nvPointLight[ i ] = vec4( lVector, lDistance );\\n}\\n#endif\\n#if MAX_SPOT_LIGHTS > 0\\nfor( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\\nvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\\nfloat lDistance = 1.0;\\nif ( spotLightDistance[ i ] > 0.0 )\\nlDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\\nvSpotLight[ i ] = vec4( lVector, lDistance );\\n}\\n#endif\\n#endif\\n#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP )\\nvWorldPosition = mPosition.xyz;\\n#endif\",\r\nlights_phong_pars_fragment:\"uniform vec3 ambientLightColor;\\n#if MAX_DIR_LIGHTS > 0\\nuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\\n#endif\\n#if MAX_HEMI_LIGHTS > 0\\nuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\\nuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\\nuniform vec3 hemisphereLightPosition[ MAX_HEMI_LIGHTS ];\\n#endif\\n#if MAX_POINT_LIGHTS > 0\\nuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\\n#ifdef PHONG_PER_PIXEL\\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\\n#else\\nvarying vec4 vPointLight[ MAX_POINT_LIGHTS ];\\n#endif\\n#endif\\n#if MAX_SPOT_LIGHTS > 0\\nuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\\nuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\\nuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\\nuniform float spotLightAngle[ MAX_SPOT_LIGHTS ];\\nuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\\n#ifdef PHONG_PER_PIXEL\\nuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\\n#else\\nvarying vec4 vSpotLight[ MAX_SPOT_LIGHTS ];\\n#endif\\n#endif\\n#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP )\\nvarying vec3 vWorldPosition;\\n#endif\\n#ifdef WRAP_AROUND\\nuniform vec3 wrapRGB;\\n#endif\\nvarying vec3 vViewPosition;\\nvarying vec3 vNormal;\",\r\nlights_phong_fragment:\"vec3 normal = normalize( vNormal );\\nvec3 viewPosition = normalize( vViewPosition );\\n#ifdef DOUBLE_SIDED\\nnormal = normal * ( -1.0 + 2.0 * float( gl_FrontFacing ) );\\n#endif\\n#ifdef USE_NORMALMAP\\nnormal = perturbNormal2Arb( -viewPosition, normal );\\n#elif defined( USE_BUMPMAP )\\nnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\\n#endif\\n#if MAX_POINT_LIGHTS > 0\\nvec3 pointDiffuse  = vec3( 0.0 );\\nvec3 pointSpecular = vec3( 0.0 );\\nfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\\n#ifdef PHONG_PER_PIXEL\\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\\nvec3 lVector = lPosition.xyz + vViewPosition.xyz;\\nfloat lDistance = 1.0;\\nif ( pointLightDistance[ i ] > 0.0 )\\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\\nlVector = normalize( lVector );\\n#else\\nvec3 lVector = normalize( vPointLight[ i ].xyz );\\nfloat lDistance = vPointLight[ i ].w;\\n#endif\\nfloat dotProduct = dot( normal, lVector );\\n#ifdef WRAP_AROUND\\nfloat pointDiffuseWeightFull = max( dotProduct, 0.0 );\\nfloat pointDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\\nvec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );\\n#else\\nfloat pointDiffuseWeight = max( dotProduct, 0.0 );\\n#endif\\npointDiffuse  += diffuse * pointLightColor[ i ] * pointDiffuseWeight * lDistance;\\nvec3 pointHalfVector = normalize( lVector + viewPosition );\\nfloat pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\\nfloat pointSpecularWeight = specularStrength * max( pow( pointDotNormalHalf, shininess ), 0.0 );\\n#ifdef PHYSICALLY_BASED_SHADING\\nfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\\nvec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, pointHalfVector ), 5.0 );\\npointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * lDistance * specularNormalization;\\n#else\\npointSpecular += specular * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * lDistance;\\n#endif\\n}\\n#endif\\n#if MAX_SPOT_LIGHTS > 0\\nvec3 spotDiffuse  = vec3( 0.0 );\\nvec3 spotSpecular = vec3( 0.0 );\\nfor ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\\n#ifdef PHONG_PER_PIXEL\\nvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\\nvec3 lVector = lPosition.xyz + vViewPosition.xyz;\\nfloat lDistance = 1.0;\\nif ( spotLightDistance[ i ] > 0.0 )\\nlDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\\nlVector = normalize( lVector );\\n#else\\nvec3 lVector = normalize( vSpotLight[ i ].xyz );\\nfloat lDistance = vSpotLight[ i ].w;\\n#endif\\nfloat spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );\\nif ( spotEffect > spotLightAngle[ i ] ) {\\nspotEffect = pow( spotEffect, spotLightExponent[ i ] );\\nfloat dotProduct = dot( normal, lVector );\\n#ifdef WRAP_AROUND\\nfloat spotDiffuseWeightFull = max( dotProduct, 0.0 );\\nfloat spotDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\\nvec3 spotDiffuseWeight = mix( vec3 ( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );\\n#else\\nfloat spotDiffuseWeight = max( dotProduct, 0.0 );\\n#endif\\nspotDiffuse += diffuse * spotLightColor[ i ] * spotDiffuseWeight * lDistance * spotEffect;\\nvec3 spotHalfVector = normalize( lVector + viewPosition );\\nfloat spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );\\nfloat spotSpecularWeight = specularStrength * max( pow( spotDotNormalHalf, shininess ), 0.0 );\\n#ifdef PHYSICALLY_BASED_SHADING\\nfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\\nvec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, spotHalfVector ), 5.0 );\\nspotSpecular += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * lDistance * specularNormalization * spotEffect;\\n#else\\nspotSpecular += specular * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * lDistance * spotEffect;\\n#endif\\n}\\n}\\n#endif\\n#if MAX_DIR_LIGHTS > 0\\nvec3 dirDiffuse  = vec3( 0.0 );\\nvec3 dirSpecular = vec3( 0.0 );\\nfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\\nvec3 dirVector = normalize( lDirection.xyz );\\nfloat dotProduct = dot( normal, dirVector );\\n#ifdef WRAP_AROUND\\nfloat dirDiffuseWeightFull = max( dotProduct, 0.0 );\\nfloat dirDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\\nvec3 dirDiffuseWeight = mix( vec3( dirDiffuseWeightFull ), vec3( dirDiffuseWeightHalf ), wrapRGB );\\n#else\\nfloat dirDiffuseWeight = max( dotProduct, 0.0 );\\n#endif\\ndirDiffuse  += diffuse * directionalLightColor[ i ] * dirDiffuseWeight;\\nvec3 dirHalfVector = normalize( dirVector + viewPosition );\\nfloat dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\\nfloat dirSpecularWeight = specularStrength * max( pow( dirDotNormalHalf, shininess ), 0.0 );\\n#ifdef PHYSICALLY_BASED_SHADING\\nfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\\nvec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( dirVector, dirHalfVector ), 5.0 );\\ndirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;\\n#else\\ndirSpecular += specular * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight;\\n#endif\\n}\\n#endif\\n#if MAX_HEMI_LIGHTS > 0\\nvec3 hemiDiffuse  = vec3( 0.0 );\\nvec3 hemiSpecular = vec3( 0.0 );\\nfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\\nvec4 lPosition = viewMatrix * vec4( hemisphereLightPosition[ i ], 1.0 );\\nvec3 lVector = normalize( lPosition.xyz + vViewPosition.xyz );\\nfloat dotProduct = dot( normal, lVector );\\nfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\\nvec3 hemiColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\\nhemiDiffuse += diffuse * hemiColor;\\nvec3 hemiHalfVectorSky = normalize( lVector + viewPosition );\\nfloat hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;\\nfloat hemiSpecularWeightSky = specularStrength * max( pow( hemiDotNormalHalfSky, shininess ), 0.0 );\\nvec3 lVectorGround = normalize( -lPosition.xyz + vViewPosition.xyz );\\nvec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );\\nfloat hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;\\nfloat hemiSpecularWeightGround = specularStrength * max( pow( hemiDotNormalHalfGround, shininess ), 0.0 );\\n#ifdef PHYSICALLY_BASED_SHADING\\nfloat dotProductGround = dot( normal, lVectorGround );\\nfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\\nvec3 schlickSky = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, hemiHalfVectorSky ), 5.0 );\\nvec3 schlickGround = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVectorGround, hemiHalfVectorGround ), 5.0 );\\nhemiSpecular += hemiColor * specularNormalization * ( schlickSky * hemiSpecularWeightSky * max( dotProduct, 0.0 ) + schlickGround * hemiSpecularWeightGround * max( dotProductGround, 0.0 ) );\\n#else\\nhemiSpecular += specular * hemiColor * ( hemiSpecularWeightSky + hemiSpecularWeightGround ) * hemiDiffuseWeight;\\n#endif\\n}\\n#endif\\nvec3 totalDiffuse = vec3( 0.0 );\\nvec3 totalSpecular = vec3( 0.0 );\\n#if MAX_DIR_LIGHTS > 0\\ntotalDiffuse += dirDiffuse;\\ntotalSpecular += dirSpecular;\\n#endif\\n#if MAX_HEMI_LIGHTS > 0\\ntotalDiffuse += hemiDiffuse;\\ntotalSpecular += hemiSpecular;\\n#endif\\n#if MAX_POINT_LIGHTS > 0\\ntotalDiffuse += pointDiffuse;\\ntotalSpecular += pointSpecular;\\n#endif\\n#if MAX_SPOT_LIGHTS > 0\\ntotalDiffuse += spotDiffuse;\\ntotalSpecular += spotSpecular;\\n#endif\\n#ifdef METAL\\ngl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient + totalSpecular );\\n#else\\ngl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient ) + totalSpecular;\\n#endif\",\r\ncolor_pars_fragment:\"#ifdef USE_COLOR\\nvarying vec3 vColor;\\n#endif\",color_fragment:\"#ifdef USE_COLOR\\ngl_FragColor = gl_FragColor * vec4( vColor, opacity );\\n#endif\",color_pars_vertex:\"#ifdef USE_COLOR\\nvarying vec3 vColor;\\n#endif\",color_vertex:\"#ifdef USE_COLOR\\n#ifdef GAMMA_INPUT\\nvColor = color * color;\\n#else\\nvColor = color;\\n#endif\\n#endif\",skinning_pars_vertex:\"#ifdef USE_SKINNING\\n#ifdef BONE_TEXTURE\\nuniform sampler2D boneTexture;\\nmat4 getBoneMatrix( const in float i ) {\\nfloat j = i * 4.0;\\nfloat x = mod( j, N_BONE_PIXEL_X );\\nfloat y = floor( j / N_BONE_PIXEL_X );\\nconst float dx = 1.0 / N_BONE_PIXEL_X;\\nconst float dy = 1.0 / N_BONE_PIXEL_Y;\\ny = dy * ( y + 0.5 );\\nvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\\nvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\\nvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\\nvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\\nmat4 bone = mat4( v1, v2, v3, v4 );\\nreturn bone;\\n}\\n#else\\nuniform mat4 boneGlobalMatrices[ MAX_BONES ];\\nmat4 getBoneMatrix( const in float i ) {\\nmat4 bone = boneGlobalMatrices[ int(i) ];\\nreturn bone;\\n}\\n#endif\\n#endif\",\r\nskinbase_vertex:\"#ifdef USE_SKINNING\\nmat4 boneMatX = getBoneMatrix( skinIndex.x );\\nmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n#endif\",skinning_vertex:\"#ifdef USE_SKINNING\\n#ifdef USE_MORPHTARGETS\\nvec4 skinVertex = vec4( morphed, 1.0 );\\n#else\\nvec4 skinVertex = vec4( position, 1.0 );\\n#endif\\nvec4 skinned  = boneMatX * skinVertex * skinWeight.x;\\nskinned \\t  += boneMatY * skinVertex * skinWeight.y;\\n#endif\",morphtarget_pars_vertex:\"#ifdef USE_MORPHTARGETS\\n#ifndef USE_MORPHNORMALS\\nuniform float morphTargetInfluences[ 8 ];\\n#else\\nuniform float morphTargetInfluences[ 4 ];\\n#endif\\n#endif\",\r\nmorphtarget_vertex:\"#ifdef USE_MORPHTARGETS\\nvec3 morphed = vec3( 0.0 );\\nmorphed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\\nmorphed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\\nmorphed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\\nmorphed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\\n#ifndef USE_MORPHNORMALS\\nmorphed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\\nmorphed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\\nmorphed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\\nmorphed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\\n#endif\\nmorphed += position;\\n#endif\",\r\ndefault_vertex:\"vec4 mvPosition;\\n#ifdef USE_SKINNING\\nmvPosition = modelViewMatrix * skinned;\\n#endif\\n#if !defined( USE_SKINNING ) && defined( USE_MORPHTARGETS )\\nmvPosition = modelViewMatrix * vec4( morphed, 1.0 );\\n#endif\\n#if !defined( USE_SKINNING ) && ! defined( USE_MORPHTARGETS )\\nmvPosition = modelViewMatrix * vec4( position, 1.0 );\\n#endif\\ngl_Position = projectionMatrix * mvPosition;\",morphnormal_vertex:\"#ifdef USE_MORPHNORMALS\\nvec3 morphedNormal = vec3( 0.0 );\\nmorphedNormal +=  ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\\nmorphedNormal +=  ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\\nmorphedNormal +=  ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\\nmorphedNormal +=  ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\\nmorphedNormal += normal;\\n#endif\",\r\nskinnormal_vertex:\"#ifdef USE_SKINNING\\nmat4 skinMatrix = skinWeight.x * boneMatX;\\nskinMatrix \\t+= skinWeight.y * boneMatY;\\n#ifdef USE_MORPHNORMALS\\nvec4 skinnedNormal = skinMatrix * vec4( morphedNormal, 0.0 );\\n#else\\nvec4 skinnedNormal = skinMatrix * vec4( normal, 0.0 );\\n#endif\\n#endif\",defaultnormal_vertex:\"vec3 objectNormal;\\n#ifdef USE_SKINNING\\nobjectNormal = skinnedNormal.xyz;\\n#endif\\n#if !defined( USE_SKINNING ) && defined( USE_MORPHNORMALS )\\nobjectNormal = morphedNormal;\\n#endif\\n#if !defined( USE_SKINNING ) && ! defined( USE_MORPHNORMALS )\\nobjectNormal = normal;\\n#endif\\n#ifdef FLIP_SIDED\\nobjectNormal = -objectNormal;\\n#endif\\nvec3 transformedNormal = normalMatrix * objectNormal;\",\r\nshadowmap_pars_fragment:\"#ifdef USE_SHADOWMAP\\nuniform sampler2D shadowMap[ MAX_SHADOWS ];\\nuniform vec2 shadowMapSize[ MAX_SHADOWS ];\\nuniform float shadowDarkness[ MAX_SHADOWS ];\\nuniform float shadowBias[ MAX_SHADOWS ];\\nvarying vec4 vShadowCoord[ MAX_SHADOWS ];\\nfloat unpackDepth( const in vec4 rgba_depth ) {\\nconst vec4 bit_shift = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );\\nfloat depth = dot( rgba_depth, bit_shift );\\nreturn depth;\\n}\\n#endif\",shadowmap_fragment:\"#ifdef USE_SHADOWMAP\\n#ifdef SHADOWMAP_DEBUG\\nvec3 frustumColors[3];\\nfrustumColors[0] = vec3( 1.0, 0.5, 0.0 );\\nfrustumColors[1] = vec3( 0.0, 1.0, 0.8 );\\nfrustumColors[2] = vec3( 0.0, 0.5, 1.0 );\\n#endif\\n#ifdef SHADOWMAP_CASCADE\\nint inFrustumCount = 0;\\n#endif\\nfloat fDepth;\\nvec3 shadowColor = vec3( 1.0 );\\nfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\\nvec3 shadowCoord = vShadowCoord[ i ].xyz / vShadowCoord[ i ].w;\\nbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\\nbool inFrustum = all( inFrustumVec );\\n#ifdef SHADOWMAP_CASCADE\\ninFrustumCount += int( inFrustum );\\nbvec3 frustumTestVec = bvec3( inFrustum, inFrustumCount == 1, shadowCoord.z <= 1.0 );\\n#else\\nbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\\n#endif\\nbool frustumTest = all( frustumTestVec );\\nif ( frustumTest ) {\\nshadowCoord.z += shadowBias[ i ];\\n#ifdef SHADOWMAP_SOFT\\nfloat shadow = 0.0;\\nconst float shadowDelta = 1.0 / 9.0;\\nfloat xPixelOffset = 1.0 / shadowMapSize[ i ].x;\\nfloat yPixelOffset = 1.0 / shadowMapSize[ i ].y;\\nfloat dx0 = -1.25 * xPixelOffset;\\nfloat dy0 = -1.25 * yPixelOffset;\\nfloat dx1 = 1.25 * xPixelOffset;\\nfloat dy1 = 1.25 * yPixelOffset;\\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\nshadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );\\n#else\\nvec4 rgbaDepth = texture2D( shadowMap[ i ], shadowCoord.xy );\\nfloat fDepth = unpackDepth( rgbaDepth );\\nif ( fDepth < shadowCoord.z )\\nshadowColor = shadowColor * vec3( 1.0 - shadowDarkness[ i ] );\\n#endif\\n}\\n#ifdef SHADOWMAP_DEBUG\\n#ifdef SHADOWMAP_CASCADE\\nif ( inFrustum && inFrustumCount == 1 ) gl_FragColor.xyz *= frustumColors[ i ];\\n#else\\nif ( inFrustum ) gl_FragColor.xyz *= frustumColors[ i ];\\n#endif\\n#endif\\n}\\n#ifdef GAMMA_OUTPUT\\nshadowColor *= shadowColor;\\n#endif\\ngl_FragColor.xyz = gl_FragColor.xyz * shadowColor;\\n#endif\",\r\nshadowmap_pars_vertex:\"#ifdef USE_SHADOWMAP\\nvarying vec4 vShadowCoord[ MAX_SHADOWS ];\\nuniform mat4 shadowMatrix[ MAX_SHADOWS ];\\n#endif\",shadowmap_vertex:\"#ifdef USE_SHADOWMAP\\nfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\\nvShadowCoord[ i ] = shadowMatrix[ i ] * mPosition;\\n}\\n#endif\",alphatest_fragment:\"#ifdef ALPHATEST\\nif ( gl_FragColor.a < ALPHATEST ) discard;\\n#endif\",linear_to_gamma_fragment:\"#ifdef GAMMA_OUTPUT\\ngl_FragColor.xyz = sqrt( gl_FragColor.xyz );\\n#endif\"};\r\nTHREE.UniformsUtils={merge:function(a){var b,c,d,e={};for(b=0;b<a.length;b++)for(c in d=this.clone(a[b]),d)e[c]=d[c];return e},clone:function(a){var b,c,d,e={};for(b in a)for(c in e[b]={},a[b])d=a[b][c],e[b][c]=d instanceof THREE.Color||d instanceof THREE.Vector2||d instanceof THREE.Vector3||d instanceof THREE.Vector4||d instanceof THREE.Matrix4||d instanceof THREE.Texture?d.clone():d instanceof Array?d.slice():d;return e}};\r\nTHREE.UniformsLib={common:{diffuse:{type:\"c\",value:new THREE.Color(15658734)},opacity:{type:\"f\",value:1},map:{type:\"t\",value:null},offsetRepeat:{type:\"v4\",value:new THREE.Vector4(0,0,1,1)},lightMap:{type:\"t\",value:null},specularMap:{type:\"t\",value:null},envMap:{type:\"t\",value:null},flipEnvMap:{type:\"f\",value:-1},useRefract:{type:\"i\",value:0},reflectivity:{type:\"f\",value:1},refractionRatio:{type:\"f\",value:0.98},combine:{type:\"i\",value:0},morphTargetInfluences:{type:\"f\",value:0}},bump:{bumpMap:{type:\"t\",\r\nvalue:null},bumpScale:{type:\"f\",value:1}},normalmap:{normalMap:{type:\"t\",value:null},normalScale:{type:\"v2\",value:new THREE.Vector2(1,1)}},fog:{fogDensity:{type:\"f\",value:2.5E-4},fogNear:{type:\"f\",value:1},fogFar:{type:\"f\",value:2E3},fogColor:{type:\"c\",value:new THREE.Color(16777215)}},lights:{ambientLightColor:{type:\"fv\",value:[]},directionalLightDirection:{type:\"fv\",value:[]},directionalLightColor:{type:\"fv\",value:[]},hemisphereLightPosition:{type:\"fv\",value:[]},hemisphereLightSkyColor:{type:\"fv\",\r\nvalue:[]},hemisphereLightGroundColor:{type:\"fv\",value:[]},pointLightColor:{type:\"fv\",value:[]},pointLightPosition:{type:\"fv\",value:[]},pointLightDistance:{type:\"fv1\",value:[]},spotLightColor:{type:\"fv\",value:[]},spotLightPosition:{type:\"fv\",value:[]},spotLightDirection:{type:\"fv\",value:[]},spotLightDistance:{type:\"fv1\",value:[]},spotLightAngle:{type:\"fv1\",value:[]},spotLightExponent:{type:\"fv1\",value:[]}},particle:{psColor:{type:\"c\",value:new THREE.Color(15658734)},opacity:{type:\"f\",value:1},size:{type:\"f\",\r\nvalue:1},scale:{type:\"f\",value:1},map:{type:\"t\",value:null},fogDensity:{type:\"f\",value:2.5E-4},fogNear:{type:\"f\",value:1},fogFar:{type:\"f\",value:2E3},fogColor:{type:\"c\",value:new THREE.Color(16777215)}},shadowmap:{shadowMap:{type:\"tv\",value:[]},shadowMapSize:{type:\"v2v\",value:[]},shadowBias:{type:\"fv1\",value:[]},shadowDarkness:{type:\"fv1\",value:[]},shadowMatrix:{type:\"m4v\",value:[]}}};\r\nTHREE.ShaderLib={depth:{uniforms:{mNear:{type:\"f\",value:1},mFar:{type:\"f\",value:2E3},opacity:{type:\"f\",value:1}},vertexShader:\"void main() {\\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}\",fragmentShader:\"uniform float mNear;\\nuniform float mFar;\\nuniform float opacity;\\nvoid main() {\\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\\nfloat color = 1.0 - smoothstep( mNear, mFar, depth );\\ngl_FragColor = vec4( vec3( color ), opacity );\\n}\"},normal:{uniforms:{opacity:{type:\"f\",\r\nvalue:1}},vertexShader:\"varying vec3 vNormal;\\nvoid main() {\\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\\nvNormal = normalMatrix * normal;\\ngl_Position = projectionMatrix * mvPosition;\\n}\",fragmentShader:\"uniform float opacity;\\nvarying vec3 vNormal;\\nvoid main() {\\ngl_FragColor = vec4( 0.5 * normalize( vNormal ) + 0.5, opacity );\\n}\"},basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.shadowmap]),vertexShader:[THREE.ShaderChunk.map_pars_vertex,\r\nTHREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,\"void main() {\",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,\"#ifdef USE_ENVMAP\",THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,\r\n\"#endif\",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.shadowmap_vertex,\"}\"].join(\"\\n\"),fragmentShader:[\"uniform vec3 diffuse;\\nuniform float opacity;\",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,\r\nTHREE.ShaderChunk.specularmap_pars_fragment,\"void main() {\\ngl_FragColor = vec4( diffuse, opacity );\",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,\"}\"].join(\"\\n\")},lambert:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,\r\nTHREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{ambient:{type:\"c\",value:new THREE.Color(16777215)},emissive:{type:\"c\",value:new THREE.Color(0)},wrapRGB:{type:\"v3\",value:new THREE.Vector3(1,1,1)}}]),vertexShader:[\"#define LAMBERT\\nvarying vec3 vLightFront;\\n#ifdef DOUBLE_SIDED\\nvarying vec3 vLightBack;\\n#endif\",THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_lambert_pars_vertex,THREE.ShaderChunk.color_pars_vertex,\r\nTHREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,\"void main() {\",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.worldpos_vertex,\r\nTHREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.lights_lambert_vertex,THREE.ShaderChunk.shadowmap_vertex,\"}\"].join(\"\\n\"),fragmentShader:[\"uniform float opacity;\\nvarying vec3 vLightFront;\\n#ifdef DOUBLE_SIDED\\nvarying vec3 vLightBack;\\n#endif\",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,\r\n\"void main() {\\ngl_FragColor = vec4( vec3 ( 1.0 ), opacity );\",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,\"#ifdef DOUBLE_SIDED\\nif ( gl_FrontFacing )\\ngl_FragColor.xyz *= vLightFront;\\nelse\\ngl_FragColor.xyz *= vLightBack;\\n#else\\ngl_FragColor.xyz *= vLightFront;\\n#endif\",THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,\r\nTHREE.ShaderChunk.fog_fragment,\"}\"].join(\"\\n\")},phong:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.bump,THREE.UniformsLib.normalmap,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{ambient:{type:\"c\",value:new THREE.Color(16777215)},emissive:{type:\"c\",value:new THREE.Color(0)},specular:{type:\"c\",value:new THREE.Color(1118481)},shininess:{type:\"f\",value:30},wrapRGB:{type:\"v3\",value:new THREE.Vector3(1,1,1)}}]),vertexShader:[\"#define PHONG\\nvarying vec3 vViewPosition;\\nvarying vec3 vNormal;\",\r\nTHREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_phong_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,\"void main() {\",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,\r\nTHREE.ShaderChunk.defaultnormal_vertex,\"vNormal = transformedNormal;\",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,\"vViewPosition = -mvPosition.xyz;\",THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.lights_phong_vertex,THREE.ShaderChunk.shadowmap_vertex,\"}\"].join(\"\\n\"),fragmentShader:[\"uniform vec3 diffuse;\\nuniform float opacity;\\nuniform vec3 ambient;\\nuniform vec3 emissive;\\nuniform vec3 specular;\\nuniform float shininess;\",\r\nTHREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.lights_phong_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.bumpmap_pars_fragment,THREE.ShaderChunk.normalmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,\"void main() {\\ngl_FragColor = vec4( vec3 ( 1.0 ), opacity );\",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,\r\nTHREE.ShaderChunk.specularmap_fragment,THREE.ShaderChunk.lights_phong_fragment,THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,\"}\"].join(\"\\n\")},particle_basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.particle,THREE.UniformsLib.shadowmap]),vertexShader:[\"uniform float size;\\nuniform float scale;\",THREE.ShaderChunk.color_pars_vertex,\r\nTHREE.ShaderChunk.shadowmap_pars_vertex,\"void main() {\",THREE.ShaderChunk.color_vertex,\"vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\\n#ifdef USE_SIZEATTENUATION\\ngl_PointSize = size * ( scale / length( mvPosition.xyz ) );\\n#else\\ngl_PointSize = size;\\n#endif\\ngl_Position = projectionMatrix * mvPosition;\",THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.shadowmap_vertex,\"}\"].join(\"\\n\"),fragmentShader:[\"uniform vec3 psColor;\\nuniform float opacity;\",THREE.ShaderChunk.color_pars_fragment,\r\nTHREE.ShaderChunk.map_particle_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,\"void main() {\\ngl_FragColor = vec4( psColor, opacity );\",THREE.ShaderChunk.map_particle_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.fog_fragment,\"}\"].join(\"\\n\")},depthRGBA:{uniforms:{},vertexShader:[THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,\"void main() {\",\r\nTHREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,\"}\"].join(\"\\n\"),fragmentShader:\"vec4 pack_depth( const in float depth ) {\\nconst vec4 bit_shift = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );\\nconst vec4 bit_mask  = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );\\nvec4 res = fract( depth * bit_shift );\\nres -= res.xxyz * bit_mask;\\nreturn res;\\n}\\nvoid main() {\\ngl_FragData[ 0 ] = pack_depth( gl_FragCoord.z );\\n}\"}};\r\nTHREE.WebGLRenderer=function(a){function b(a,b){var c=a.vertices.length,d=b.material;if(d.attributes){void 0===a.__webglCustomAttributesList&&(a.__webglCustomAttributesList=[]);for(var e in d.attributes){var f=d.attributes[e];if(!f.__webglInitialized||f.createUniqueBuffers){f.__webglInitialized=!0;var g=1;\"v2\"===f.type?g=2:\"v3\"===f.type?g=3:\"v4\"===f.type?g=4:\"c\"===f.type&&(g=3);f.size=g;f.array=new Float32Array(c*g);f.buffer=k.createBuffer();f.buffer.belongsToAttribute=e;f.needsUpdate=!0}a.__webglCustomAttributesList.push(f)}}}\r\nfunction c(a,b){if(a.material&&!(a.material instanceof THREE.MeshFaceMaterial))return a.material;if(0<=b.materialIndex)return a.geometry.materials[b.materialIndex]}function d(a){return a instanceof THREE.MeshBasicMaterial&&!a.envMap||a instanceof THREE.MeshDepthMaterial?!1:a&&void 0!==a.shading&&a.shading===THREE.SmoothShading?THREE.SmoothShading:THREE.FlatShading}function e(a){return a.map||a.lightMap||a.bumpMap||a.normalMap||a.specularMap||a instanceof THREE.ShaderMaterial?!0:!1}function f(a){var b,\r\nc,d;for(b in a.attributes)d=\"index\"===b?k.ELEMENT_ARRAY_BUFFER:k.ARRAY_BUFFER,c=a.attributes[b],c.buffer=k.createBuffer(),k.bindBuffer(d,c.buffer),k.bufferData(d,c.array,k.STATIC_DRAW)}function g(a,b,c){var d,e,f,g,h=a.vertices;g=h.length;var i=a.colors,j=i.length,l=a.__vertexArray,n=a.__colorArray,m=a.__sortArray,o=a.verticesNeedUpdate,p=a.colorsNeedUpdate,q=a.__webglCustomAttributesList;if(c.sortParticles){gb.copy(ra);gb.multiplySelf(c.matrixWorld);for(d=0;d<g;d++)e=h[d],Za.copy(e),gb.multiplyVector3(Za),\r\nm[d]=[Za.z,d];m.sort(function(a,b){return b[0]-a[0]});for(d=0;d<g;d++)e=h[m[d][1]],f=3*d,l[f]=e.x,l[f+1]=e.y,l[f+2]=e.z;for(d=0;d<j;d++)f=3*d,e=i[m[d][1]],n[f]=e.r,n[f+1]=e.g,n[f+2]=e.b;if(q){i=0;for(j=q.length;i<j;i++)if(h=q[i],void 0===h.boundTo||\"vertices\"===h.boundTo)if(f=0,e=h.value.length,1===h.size)for(d=0;d<e;d++)g=m[d][1],h.array[d]=h.value[g];else if(2===h.size)for(d=0;d<e;d++)g=m[d][1],g=h.value[g],h.array[f]=g.x,h.array[f+1]=g.y,f+=2;else if(3===h.size)if(\"c\"===h.type)for(d=0;d<e;d++)g=\r\nm[d][1],g=h.value[g],h.array[f]=g.r,h.array[f+1]=g.g,h.array[f+2]=g.b,f+=3;else for(d=0;d<e;d++)g=m[d][1],g=h.value[g],h.array[f]=g.x,h.array[f+1]=g.y,h.array[f+2]=g.z,f+=3;else if(4===h.size)for(d=0;d<e;d++)g=m[d][1],g=h.value[g],h.array[f]=g.x,h.array[f+1]=g.y,h.array[f+2]=g.z,h.array[f+3]=g.w,f+=4}}else{if(o)for(d=0;d<g;d++)e=h[d],f=3*d,l[f]=e.x,l[f+1]=e.y,l[f+2]=e.z;if(p)for(d=0;d<j;d++)e=i[d],f=3*d,n[f]=e.r,n[f+1]=e.g,n[f+2]=e.b;if(q){i=0;for(j=q.length;i<j;i++)if(h=q[i],h.needsUpdate&&(void 0===\r\nh.boundTo||\"vertices\"===h.boundTo))if(e=h.value.length,f=0,1===h.size)for(d=0;d<e;d++)h.array[d]=h.value[d];else if(2===h.size)for(d=0;d<e;d++)g=h.value[d],h.array[f]=g.x,h.array[f+1]=g.y,f+=2;else if(3===h.size)if(\"c\"===h.type)for(d=0;d<e;d++)g=h.value[d],h.array[f]=g.r,h.array[f+1]=g.g,h.array[f+2]=g.b,f+=3;else for(d=0;d<e;d++)g=h.value[d],h.array[f]=g.x,h.array[f+1]=g.y,h.array[f+2]=g.z,f+=3;else if(4===h.size)for(d=0;d<e;d++)g=h.value[d],h.array[f]=g.x,h.array[f+1]=g.y,h.array[f+2]=g.z,h.array[f+\r\n3]=g.w,f+=4}}if(o||c.sortParticles)k.bindBuffer(k.ARRAY_BUFFER,a.__webglVertexBuffer),k.bufferData(k.ARRAY_BUFFER,l,b);if(p||c.sortParticles)k.bindBuffer(k.ARRAY_BUFFER,a.__webglColorBuffer),k.bufferData(k.ARRAY_BUFFER,n,b);if(q){i=0;for(j=q.length;i<j;i++)if(h=q[i],h.needsUpdate||c.sortParticles)k.bindBuffer(k.ARRAY_BUFFER,h.buffer),k.bufferData(k.ARRAY_BUFFER,h.array,b)}}function h(a,b,c){var d=a.attributes,f=d.index,e=d.position,g=d.normal,h=d.uv,i=d.color,d=d.tangent;a.elementsNeedUpdate&&void 0!==\r\nf&&(k.bindBuffer(k.ELEMENT_ARRAY_BUFFER,f.buffer),k.bufferData(k.ELEMENT_ARRAY_BUFFER,f.array,b));a.verticesNeedUpdate&&void 0!==e&&(k.bindBuffer(k.ARRAY_BUFFER,e.buffer),k.bufferData(k.ARRAY_BUFFER,e.array,b));a.normalsNeedUpdate&&void 0!==g&&(k.bindBuffer(k.ARRAY_BUFFER,g.buffer),k.bufferData(k.ARRAY_BUFFER,g.array,b));a.uvsNeedUpdate&&void 0!==h&&(k.bindBuffer(k.ARRAY_BUFFER,h.buffer),k.bufferData(k.ARRAY_BUFFER,h.array,b));a.colorsNeedUpdate&&void 0!==i&&(k.bindBuffer(k.ARRAY_BUFFER,i.buffer),\r\nk.bufferData(k.ARRAY_BUFFER,i.array,b));a.tangentsNeedUpdate&&void 0!==d&&(k.bindBuffer(k.ARRAY_BUFFER,d.buffer),k.bufferData(k.ARRAY_BUFFER,d.array,b));if(c)for(var j in a.attributes)delete a.attributes[j].array}function i(a,b){return b.z-a.z}function j(a,b){return b[1]-a[1]}function l(a,b,c){if(a.length)for(var d=0,f=a.length;d<f;d++)ia=O=null,W=V=Pa=Ga=Ra=ib=Ia=-1,Ea=!0,a[d].render(b,c,Da,qb),ia=O=null,W=V=Pa=Ga=Ra=ib=Ia=-1,Ea=!0}function m(a,b,c,d,f,e,g,h){var k,i,j,l;b?(i=a.length-1,l=b=-1):\r\n(i=0,b=a.length,l=1);for(var n=i;n!==b;n+=l)if(k=a[n],k.render){i=k.object;j=k.buffer;if(h)k=h;else{k=k[c];if(!k)continue;g&&Q.setBlending(k.blending,k.blendEquation,k.blendSrc,k.blendDst);Q.setDepthTest(k.depthTest);Q.setDepthWrite(k.depthWrite);v(k.polygonOffset,k.polygonOffsetFactor,k.polygonOffsetUnits)}Q.setMaterialFaces(k);j instanceof THREE.BufferGeometry?Q.renderBufferDirect(d,f,e,k,j,i):Q.renderBuffer(d,f,e,k,j,i)}}function n(a,b,c,d,f,e,g){for(var h,k,i=0,j=a.length;i<j;i++)if(h=a[i],k=\r\nh.object,k.visible){if(g)h=g;else{h=h[b];if(!h)continue;e&&Q.setBlending(h.blending,h.blendEquation,h.blendSrc,h.blendDst);Q.setDepthTest(h.depthTest);Q.setDepthWrite(h.depthWrite);v(h.polygonOffset,h.polygonOffsetFactor,h.polygonOffsetUnits)}Q.renderImmediateObject(c,d,f,h,k)}}function p(a,b,c){a.push({buffer:b,object:c,opaque:null,transparent:null})}function o(a){for(var b in a.attributes)if(a.attributes[b].needsUpdate)return!0;return!1}function q(a){for(var b in a.attributes)a.attributes[b].needsUpdate=\r\n!1}function r(a,b){for(var c=a.length-1;0<=c;c--)a[c].object===b&&a.splice(c,1)}function t(a,b){for(var c=a.length-1;0<=c;c--)a[c]===b&&a.splice(c,1)}function B(a,b,c,d,f){ca=0;d.needsUpdate&&(d.program&&Q.deallocateMaterial(d),Q.initMaterial(d,b,c,f),d.needsUpdate=!1);d.morphTargets&&!f.__webglMorphTargetInfluences&&(f.__webglMorphTargetInfluences=new Float32Array(Q.maxMorphTargets));var e=!1,g=d.program,h=g.uniforms,i=d.uniforms;g!==O&&(k.useProgram(g),O=g,e=!0);d.id!==W&&(W=d.id,e=!0);if(e||a!==\r\nia)k.uniformMatrix4fv(h.projectionMatrix,!1,a._projectionMatrixArray),a!==ia&&(ia=a);if(d.skinning)if(ic&&f.useVertexTexture){if(null!==h.boneTexture){var j=u();k.uniform1i(h.boneTexture,j);Q.setTexture(f.boneTexture,j)}}else null!==h.boneGlobalMatrices&&k.uniformMatrix4fv(h.boneGlobalMatrices,!1,f.boneMatrices);if(e){c&&d.fog&&(i.fogColor.value=c.color,c instanceof THREE.Fog?(i.fogNear.value=c.near,i.fogFar.value=c.far):c instanceof THREE.FogExp2&&(i.fogDensity.value=c.density));if(d instanceof THREE.MeshPhongMaterial||\r\nd instanceof THREE.MeshLambertMaterial||d.lights){if(Ea){for(var l=0,n=0,m=0,o,p,q,r,s=xb,t=s.directional.colors,v=s.directional.positions,y=s.point.colors,B=s.point.positions,C=s.point.distances,H=s.spot.colors,J=s.spot.positions,I=s.spot.distances,K=s.spot.directions,F=s.spot.angles,L=s.spot.exponents,N=s.hemi.skyColors,V=s.hemi.groundColors,Z=s.hemi.positions,fa=0,R=0,ea=0,$=0,c=o=q=q=p=0,e=b.length;c<e;c++)j=b[c],!j.onlyShadow&&j.visible&&(o=j.color,r=j.intensity,p=j.distance,j instanceof THREE.AmbientLight?\r\nQ.gammaInput?(l+=o.r*o.r,n+=o.g*o.g,m+=o.b*o.b):(l+=o.r,n+=o.g,m+=o.b):j instanceof THREE.DirectionalLight?(p=3*fa,Q.gammaInput?z(t,p,o,r*r):A(t,p,o,r),Wa.copy(j.matrixWorld.getPosition()),Wa.subSelf(j.target.matrixWorld.getPosition()),Wa.normalize(),v[p]=Wa.x,v[p+1]=Wa.y,v[p+2]=Wa.z,fa+=1):j instanceof THREE.PointLight?(q=3*R,Q.gammaInput?z(y,q,o,r*r):A(y,q,o,r),r=j.matrixWorld.getPosition(),B[q]=r.x,B[q+1]=r.y,B[q+2]=r.z,C[R]=p,R+=1):j instanceof THREE.SpotLight?(q=3*ea,Q.gammaInput?z(H,q,o,r*r):\r\nA(H,q,o,r),r=j.matrixWorld.getPosition(),J[q]=r.x,J[q+1]=r.y,J[q+2]=r.z,I[ea]=p,Wa.copy(r),Wa.subSelf(j.target.matrixWorld.getPosition()),Wa.normalize(),K[q]=Wa.x,K[q+1]=Wa.y,K[q+2]=Wa.z,F[ea]=Math.cos(j.angle),L[ea]=j.exponent,ea+=1):j instanceof THREE.HemisphereLight&&(p=j.color,q=j.groundColor,o=3*$,Q.gammaInput?(r*=r,z(N,o,p,r),z(V,o,q,r)):(A(N,o,p,r),A(V,o,q,r)),r=j.matrixWorld.getPosition(),Z[o]=r.x,Z[o+1]=r.y,Z[o+2]=r.z,$+=1));c=3*fa;for(e=t.length;c<e;c++)t[c]=0;c=3*R;for(e=y.length;c<e;c++)y[c]=\r\n0;c=3*ea;for(e=H.length;c<e;c++)H[c]=0;c=3*$;for(e=N.length;c<e;c++)N[c]=0;c=3*$;for(e=V.length;c<e;c++)V[c]=0;s.directional.length=fa;s.point.length=R;s.spot.length=ea;s.hemi.length=$;s.ambient[0]=l;s.ambient[1]=n;s.ambient[2]=m;Ea=!1}c=xb;i.ambientLightColor.value=c.ambient;i.directionalLightColor.value=c.directional.colors;i.directionalLightDirection.value=c.directional.positions;i.pointLightColor.value=c.point.colors;i.pointLightPosition.value=c.point.positions;i.pointLightDistance.value=c.point.distances;\r\ni.spotLightColor.value=c.spot.colors;i.spotLightPosition.value=c.spot.positions;i.spotLightDistance.value=c.spot.distances;i.spotLightDirection.value=c.spot.directions;i.spotLightAngle.value=c.spot.angles;i.spotLightExponent.value=c.spot.exponents;i.hemisphereLightSkyColor.value=c.hemi.skyColors;i.hemisphereLightGroundColor.value=c.hemi.groundColors;i.hemisphereLightPosition.value=c.hemi.positions}if(d instanceof THREE.MeshBasicMaterial||d instanceof THREE.MeshLambertMaterial||d instanceof THREE.MeshPhongMaterial){i.opacity.value=\r\nd.opacity;Q.gammaInput?i.diffuse.value.copyGammaToLinear(d.color):i.diffuse.value=d.color;i.map.value=d.map;i.lightMap.value=d.lightMap;i.specularMap.value=d.specularMap;d.bumpMap&&(i.bumpMap.value=d.bumpMap,i.bumpScale.value=d.bumpScale);d.normalMap&&(i.normalMap.value=d.normalMap,i.normalScale.value.copy(d.normalScale));var Y;d.map?Y=d.map:d.specularMap?Y=d.specularMap:d.normalMap?Y=d.normalMap:d.bumpMap&&(Y=d.bumpMap);void 0!==Y&&(c=Y.offset,Y=Y.repeat,i.offsetRepeat.value.set(c.x,c.y,Y.x,Y.y));\r\ni.envMap.value=d.envMap;i.flipEnvMap.value=d.envMap instanceof THREE.WebGLRenderTargetCube?1:-1;i.reflectivity.value=d.reflectivity;i.refractionRatio.value=d.refractionRatio;i.combine.value=d.combine;i.useRefract.value=d.envMap&&d.envMap.mapping instanceof THREE.CubeRefractionMapping}d instanceof THREE.LineBasicMaterial?(i.diffuse.value=d.color,i.opacity.value=d.opacity):d instanceof THREE.ParticleBasicMaterial?(i.psColor.value=d.color,i.opacity.value=d.opacity,i.size.value=d.size,i.scale.value=M.height/\r\n2,i.map.value=d.map):d instanceof THREE.MeshPhongMaterial?(i.shininess.value=d.shininess,Q.gammaInput?(i.ambient.value.copyGammaToLinear(d.ambient),i.emissive.value.copyGammaToLinear(d.emissive),i.specular.value.copyGammaToLinear(d.specular)):(i.ambient.value=d.ambient,i.emissive.value=d.emissive,i.specular.value=d.specular),d.wrapAround&&i.wrapRGB.value.copy(d.wrapRGB)):d instanceof THREE.MeshLambertMaterial?(Q.gammaInput?(i.ambient.value.copyGammaToLinear(d.ambient),i.emissive.value.copyGammaToLinear(d.emissive)):\r\n(i.ambient.value=d.ambient,i.emissive.value=d.emissive),d.wrapAround&&i.wrapRGB.value.copy(d.wrapRGB)):d instanceof THREE.MeshDepthMaterial?(i.mNear.value=a.near,i.mFar.value=a.far,i.opacity.value=d.opacity):d instanceof THREE.MeshNormalMaterial&&(i.opacity.value=d.opacity);if(f.receiveShadow&&!d._shadowPass&&i.shadowMatrix){c=Y=0;for(e=b.length;c<e;c++)if(j=b[c],j.castShadow&&(j instanceof THREE.SpotLight||j instanceof THREE.DirectionalLight&&!j.shadowCascade))i.shadowMap.value[Y]=j.shadowMap,i.shadowMapSize.value[Y]=\r\nj.shadowMapSize,i.shadowMatrix.value[Y]=j.shadowMatrix,i.shadowDarkness.value[Y]=j.shadowDarkness,i.shadowBias.value[Y]=j.shadowBias,Y++}b=d.uniformsList;i=0;for(Y=b.length;i<Y;i++)if(e=g.uniforms[b[i][1]])if(c=b[i][0],l=c.type,j=c.value,\"i\"===l)k.uniform1i(e,j);else if(\"f\"===l)k.uniform1f(e,j);else if(\"v2\"===l)k.uniform2f(e,j.x,j.y);else if(\"v3\"===l)k.uniform3f(e,j.x,j.y,j.z);else if(\"v4\"===l)k.uniform4f(e,j.x,j.y,j.z,j.w);else if(\"c\"===l)k.uniform3f(e,j.r,j.g,j.b);else if(\"iv1\"===l)k.uniform1iv(e,\r\nj);else if(\"iv\"===l)k.uniform3iv(e,j);else if(\"fv1\"===l)k.uniform1fv(e,j);else if(\"fv\"===l)k.uniform3fv(e,j);else if(\"v2v\"===l){void 0===c._array&&(c._array=new Float32Array(2*j.length));l=0;for(n=j.length;l<n;l++)m=2*l,c._array[m]=j[l].x,c._array[m+1]=j[l].y;k.uniform2fv(e,c._array)}else if(\"v3v\"===l){void 0===c._array&&(c._array=new Float32Array(3*j.length));l=0;for(n=j.length;l<n;l++)m=3*l,c._array[m]=j[l].x,c._array[m+1]=j[l].y,c._array[m+2]=j[l].z;k.uniform3fv(e,c._array)}else if(\"v4v\"===l){void 0===\r\nc._array&&(c._array=new Float32Array(4*j.length));l=0;for(n=j.length;l<n;l++)m=4*l,c._array[m]=j[l].x,c._array[m+1]=j[l].y,c._array[m+2]=j[l].z,c._array[m+3]=j[l].w;k.uniform4fv(e,c._array)}else if(\"m4\"===l)void 0===c._array&&(c._array=new Float32Array(16)),j.flattenToArray(c._array),k.uniformMatrix4fv(e,!1,c._array);else if(\"m4v\"===l){void 0===c._array&&(c._array=new Float32Array(16*j.length));l=0;for(n=j.length;l<n;l++)j[l].flattenToArrayOffset(c._array,16*l);k.uniformMatrix4fv(e,!1,c._array)}else if(\"t\"===\r\nl){if(m=j,j=u(),k.uniform1i(e,j),m)if(m.image instanceof Array&&6===m.image.length){if(c=m,e=j,6===c.image.length)if(c.needsUpdate){c.image.__webglTextureCube||(c.image.__webglTextureCube=k.createTexture());k.activeTexture(k.TEXTURE0+e);k.bindTexture(k.TEXTURE_CUBE_MAP,c.image.__webglTextureCube);k.pixelStorei(k.UNPACK_FLIP_Y_WEBGL,c.flipY);e=c instanceof THREE.CompressedTexture;j=[];for(l=0;6>l;l++)Q.autoScaleCubemaps&&!e?(n=j,m=l,s=c.image[l],v=Tc,s.width<=v&&s.height<=v||(y=Math.max(s.width,s.height),\r\nt=Math.floor(s.width*v/y),v=Math.floor(s.height*v/y),y=document.createElement(\"canvas\"),y.width=t,y.height=v,y.getContext(\"2d\").drawImage(s,0,0,s.width,s.height,0,0,t,v),s=y),n[m]=s):j[l]=c.image[l];l=j[0];n=0===(l.width&l.width-1)&&0===(l.height&l.height-1);m=E(c.format);s=E(c.type);G(k.TEXTURE_CUBE_MAP,c,n);for(l=0;6>l;l++)if(e){v=j[l].mipmaps;y=0;for(B=v.length;y<B;y++)t=v[y],k.compressedTexImage2D(k.TEXTURE_CUBE_MAP_POSITIVE_X+l,y,m,t.width,t.height,0,t.data)}else k.texImage2D(k.TEXTURE_CUBE_MAP_POSITIVE_X+\r\nl,0,m,m,s,j[l]);c.generateMipmaps&&n&&k.generateMipmap(k.TEXTURE_CUBE_MAP);c.needsUpdate=!1;if(c.onUpdate)c.onUpdate()}else k.activeTexture(k.TEXTURE0+e),k.bindTexture(k.TEXTURE_CUBE_MAP,c.image.__webglTextureCube)}else m instanceof THREE.WebGLRenderTargetCube?(c=m,k.activeTexture(k.TEXTURE0+j),k.bindTexture(k.TEXTURE_CUBE_MAP,c.__webglTexture)):Q.setTexture(m,j)}else if(\"tv\"===l){void 0===c._array&&(c._array=[]);l=0;for(n=c.value.length;l<n;l++)c._array[l]=u();k.uniform1iv(e,c._array);l=0;for(n=\r\nc.value.length;l<n;l++)m=c.value[l],j=c._array[l],m&&Q.setTexture(m,j)}if((d instanceof THREE.ShaderMaterial||d instanceof THREE.MeshPhongMaterial||d.envMap)&&null!==h.cameraPosition)b=a.matrixWorld.getPosition(),k.uniform3f(h.cameraPosition,b.x,b.y,b.z);(d instanceof THREE.MeshPhongMaterial||d instanceof THREE.MeshLambertMaterial||d instanceof THREE.ShaderMaterial||d.skinning)&&null!==h.viewMatrix&&k.uniformMatrix4fv(h.viewMatrix,!1,a._viewMatrixArray)}k.uniformMatrix4fv(h.modelViewMatrix,!1,f._modelViewMatrix.elements);\r\nh.normalMatrix&&k.uniformMatrix3fv(h.normalMatrix,!1,f._normalMatrix.elements);null!==h.modelMatrix&&k.uniformMatrix4fv(h.modelMatrix,!1,f.matrixWorld.elements);return g}function u(){var a=ca;a>=rc&&console.warn(\"Trying to use \"+a+\" texture units while this GPU supports only \"+rc);ca+=1;return a}function s(a,b){a._modelViewMatrix.multiply(b.matrixWorldInverse,a.matrixWorld);a._normalMatrix.getInverse(a._modelViewMatrix);a._normalMatrix.transpose()}function z(a,b,c,d){a[b]=c.r*c.r*d;a[b+1]=c.g*c.g*\r\nd;a[b+2]=c.b*c.b*d}function A(a,b,c,d){a[b]=c.r*d;a[b+1]=c.g*d;a[b+2]=c.b*d}function v(a,b,c){eb!==a&&(a?k.enable(k.POLYGON_OFFSET_FILL):k.disable(k.POLYGON_OFFSET_FILL),eb=a);if(a&&(pb!==b||Pb!==c))k.polygonOffset(b,c),pb=b,Pb=c}function y(a){for(var a=a.split(\"\\n\"),b=0,c=a.length;b<c;b++)a[b]=b+1+\": \"+a[b];return a.join(\"\\n\")}function C(a,b){var c;\"fragment\"===a?c=k.createShader(k.FRAGMENT_SHADER):\"vertex\"===a&&(c=k.createShader(k.VERTEX_SHADER));k.shaderSource(c,b);k.compileShader(c);return!k.getShaderParameter(c,\r\nk.COMPILE_STATUS)?(console.error(k.getShaderInfoLog(c)),console.error(y(b)),null):c}function G(a,b,c){c?(k.texParameteri(a,k.TEXTURE_WRAP_S,E(b.wrapS)),k.texParameteri(a,k.TEXTURE_WRAP_T,E(b.wrapT)),k.texParameteri(a,k.TEXTURE_MAG_FILTER,E(b.magFilter)),k.texParameteri(a,k.TEXTURE_MIN_FILTER,E(b.minFilter))):(k.texParameteri(a,k.TEXTURE_WRAP_S,k.CLAMP_TO_EDGE),k.texParameteri(a,k.TEXTURE_WRAP_T,k.CLAMP_TO_EDGE),k.texParameteri(a,k.TEXTURE_MAG_FILTER,J(b.magFilter)),k.texParameteri(a,k.TEXTURE_MIN_FILTER,\r\nJ(b.minFilter)));if(Qb&&b.type!==THREE.FloatType&&(1<b.anisotropy||b.__oldAnisotropy))k.texParameterf(a,Qb.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(b.anisotropy,Ec)),b.__oldAnisotropy=b.anisotropy}function H(a,b){k.bindRenderbuffer(k.RENDERBUFFER,a);b.depthBuffer&&!b.stencilBuffer?(k.renderbufferStorage(k.RENDERBUFFER,k.DEPTH_COMPONENT16,b.width,b.height),k.framebufferRenderbuffer(k.FRAMEBUFFER,k.DEPTH_ATTACHMENT,k.RENDERBUFFER,a)):b.depthBuffer&&b.stencilBuffer?(k.renderbufferStorage(k.RENDERBUFFER,k.DEPTH_STENCIL,\r\nb.width,b.height),k.framebufferRenderbuffer(k.FRAMEBUFFER,k.DEPTH_STENCIL_ATTACHMENT,k.RENDERBUFFER,a)):k.renderbufferStorage(k.RENDERBUFFER,k.RGBA4,b.width,b.height)}function J(a){return a===THREE.NearestFilter||a===THREE.NearestMipMapNearestFilter||a===THREE.NearestMipMapLinearFilter?k.NEAREST:k.LINEAR}function E(a){if(a===THREE.RepeatWrapping)return k.REPEAT;if(a===THREE.ClampToEdgeWrapping)return k.CLAMP_TO_EDGE;if(a===THREE.MirroredRepeatWrapping)return k.MIRRORED_REPEAT;if(a===THREE.NearestFilter)return k.NEAREST;\r\nif(a===THREE.NearestMipMapNearestFilter)return k.NEAREST_MIPMAP_NEAREST;if(a===THREE.NearestMipMapLinearFilter)return k.NEAREST_MIPMAP_LINEAR;if(a===THREE.LinearFilter)return k.LINEAR;if(a===THREE.LinearMipMapNearestFilter)return k.LINEAR_MIPMAP_NEAREST;if(a===THREE.LinearMipMapLinearFilter)return k.LINEAR_MIPMAP_LINEAR;if(a===THREE.UnsignedByteType)return k.UNSIGNED_BYTE;if(a===THREE.UnsignedShort4444Type)return k.UNSIGNED_SHORT_4_4_4_4;if(a===THREE.UnsignedShort5551Type)return k.UNSIGNED_SHORT_5_5_5_1;\r\nif(a===THREE.UnsignedShort565Type)return k.UNSIGNED_SHORT_5_6_5;if(a===THREE.ByteType)return k.BYTE;if(a===THREE.ShortType)return k.SHORT;if(a===THREE.UnsignedShortType)return k.UNSIGNED_SHORT;if(a===THREE.IntType)return k.INT;if(a===THREE.UnsignedIntType)return k.UNSIGNED_INT;if(a===THREE.FloatType)return k.FLOAT;if(a===THREE.AlphaFormat)return k.ALPHA;if(a===THREE.RGBFormat)return k.RGB;if(a===THREE.RGBAFormat)return k.RGBA;if(a===THREE.LuminanceFormat)return k.LUMINANCE;if(a===THREE.LuminanceAlphaFormat)return k.LUMINANCE_ALPHA;\r\nif(a===THREE.AddEquation)return k.FUNC_ADD;if(a===THREE.SubtractEquation)return k.FUNC_SUBTRACT;if(a===THREE.ReverseSubtractEquation)return k.FUNC_REVERSE_SUBTRACT;if(a===THREE.ZeroFactor)return k.ZERO;if(a===THREE.OneFactor)return k.ONE;if(a===THREE.SrcColorFactor)return k.SRC_COLOR;if(a===THREE.OneMinusSrcColorFactor)return k.ONE_MINUS_SRC_COLOR;if(a===THREE.SrcAlphaFactor)return k.SRC_ALPHA;if(a===THREE.OneMinusSrcAlphaFactor)return k.ONE_MINUS_SRC_ALPHA;if(a===THREE.DstAlphaFactor)return k.DST_ALPHA;\r\nif(a===THREE.OneMinusDstAlphaFactor)return k.ONE_MINUS_DST_ALPHA;if(a===THREE.DstColorFactor)return k.DST_COLOR;if(a===THREE.OneMinusDstColorFactor)return k.ONE_MINUS_DST_COLOR;if(a===THREE.SrcAlphaSaturateFactor)return k.SRC_ALPHA_SATURATE;if(void 0!==yb){if(a===THREE.RGB_S3TC_DXT1_Format)return yb.COMPRESSED_RGB_S3TC_DXT1_EXT;if(a===THREE.RGBA_S3TC_DXT1_Format)return yb.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(a===THREE.RGBA_S3TC_DXT3_Format)return yb.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(a===THREE.RGBA_S3TC_DXT5_Format)return yb.COMPRESSED_RGBA_S3TC_DXT5_EXT}return 0}\r\nconsole.log(\"THREE.WebGLRenderer\",THREE.REVISION);var a=a||{},M=void 0!==a.canvas?a.canvas:document.createElement(\"canvas\"),K=void 0!==a.precision?a.precision:\"highp\",F=void 0!==a.alpha?a.alpha:!0,I=void 0!==a.premultipliedAlpha?a.premultipliedAlpha:!0,L=void 0!==a.antialias?a.antialias:!1,R=void 0!==a.stencil?a.stencil:!0,$=void 0!==a.preserveDrawingBuffer?a.preserveDrawingBuffer:!1,Y=void 0!==a.clearColor?new THREE.Color(a.clearColor):new THREE.Color(0),N=void 0!==a.clearAlpha?a.clearAlpha:0,ea=\r\nvoid 0!==a.maxLights?a.maxLights:4;this.domElement=M;this.context=null;this.autoUpdateScene=this.autoUpdateObjects=this.sortObjects=this.autoClearStencil=this.autoClearDepth=this.autoClearColor=this.autoClear=!0;this.shadowMapEnabled=this.physicallyBasedShading=this.gammaOutput=this.gammaInput=!1;this.shadowMapCullFrontFaces=this.shadowMapSoft=this.shadowMapAutoUpdate=!0;this.shadowMapCascade=this.shadowMapDebug=!1;this.maxMorphTargets=8;this.maxMorphNormals=4;this.autoScaleCubemaps=!0;this.renderPluginsPre=\r\n[];this.renderPluginsPost=[];this.info={memory:{programs:0,geometries:0,textures:0},render:{calls:0,vertices:0,faces:0,points:0}};var Q=this,qa=[],la=0,O=null,fa=null,W=-1,V=null,ia=null,Z=0,ca=0,Ga=-1,Pa=-1,Ia=-1,Ua=-1,na=-1,Va=-1,ib=-1,Ra=-1,eb=null,pb=null,Pb=null,db=null,$a=0,Ja=0,wa=0,wb=0,Da=0,qb=0,fb=new THREE.Frustum,ra=new THREE.Matrix4,gb=new THREE.Matrix4,Za=new THREE.Vector4,Wa=new THREE.Vector3,Ea=!0,xb={ambient:[0,0,0],directional:{length:0,colors:[],positions:[]},point:{length:0,colors:[],\r\npositions:[],distances:[]},spot:{length:0,colors:[],positions:[],distances:[],directions:[],angles:[],exponents:[]},hemi:{length:0,skyColors:[],groundColors:[],positions:[]}},k,Qb,yb;try{if(!(k=M.getContext(\"experimental-webgl\",{alpha:F,premultipliedAlpha:I,antialias:L,stencil:R,preserveDrawingBuffer:$})))throw\"Error creating WebGL context.\";}catch(Sc){console.error(Sc)}a=k.getExtension(\"OES_texture_float\");F=k.getExtension(\"OES_standard_derivatives\");Qb=k.getExtension(\"EXT_texture_filter_anisotropic\")||\r\nk.getExtension(\"MOZ_EXT_texture_filter_anisotropic\")||k.getExtension(\"WEBKIT_EXT_texture_filter_anisotropic\");yb=k.getExtension(\"WEBGL_compressed_texture_s3tc\")||k.getExtension(\"MOZ_WEBGL_compressed_texture_s3tc\")||k.getExtension(\"WEBKIT_WEBGL_compressed_texture_s3tc\");a||console.log(\"THREE.WebGLRenderer: Float textures not supported.\");F||console.log(\"THREE.WebGLRenderer: Standard derivatives not supported.\");Qb||console.log(\"THREE.WebGLRenderer: Anisotropic texture filtering not supported.\");yb||\r\nconsole.log(\"THREE.WebGLRenderer: S3TC compressed textures not supported.\");k.clearColor(0,0,0,1);k.clearDepth(1);k.clearStencil(0);k.enable(k.DEPTH_TEST);k.depthFunc(k.LEQUAL);k.frontFace(k.CCW);k.cullFace(k.BACK);k.enable(k.CULL_FACE);k.enable(k.BLEND);k.blendEquation(k.FUNC_ADD);k.blendFunc(k.SRC_ALPHA,k.ONE_MINUS_SRC_ALPHA);k.clearColor(Y.r,Y.g,Y.b,N);this.context=k;var rc=k.getParameter(k.MAX_TEXTURE_IMAGE_UNITS),F=k.getParameter(k.MAX_VERTEX_TEXTURE_IMAGE_UNITS);k.getParameter(k.MAX_TEXTURE_SIZE);\r\nvar Tc=k.getParameter(k.MAX_CUBE_MAP_TEXTURE_SIZE),Ec=Qb?k.getParameter(Qb.MAX_TEXTURE_MAX_ANISOTROPY_EXT):0,hc=0<F,ic=hc&&a;yb&&k.getParameter(k.COMPRESSED_TEXTURE_FORMATS);this.getContext=function(){return k};this.supportsVertexTextures=function(){return hc};this.getMaxAnisotropy=function(){return Ec};this.setSize=function(a,b){M.width=a;M.height=b;this.setViewport(0,0,M.width,M.height)};this.setViewport=function(a,b,c,d){$a=void 0!==a?a:0;Ja=void 0!==b?b:0;wa=void 0!==c?c:M.width;wb=void 0!==d?\r\nd:M.height;k.viewport($a,Ja,wa,wb)};this.setScissor=function(a,b,c,d){k.scissor(a,b,c,d)};this.enableScissorTest=function(a){a?k.enable(k.SCISSOR_TEST):k.disable(k.SCISSOR_TEST)};this.setClearColorHex=function(a,b){Y.setHex(a);N=b;k.clearColor(Y.r,Y.g,Y.b,N)};this.setClearColor=function(a,b){Y.copy(a);N=b;k.clearColor(Y.r,Y.g,Y.b,N)};this.getClearColor=function(){return Y};this.getClearAlpha=function(){return N};this.clear=function(a,b,c){var d=0;if(void 0===a||a)d|=k.COLOR_BUFFER_BIT;if(void 0===\r\nb||b)d|=k.DEPTH_BUFFER_BIT;if(void 0===c||c)d|=k.STENCIL_BUFFER_BIT;k.clear(d)};this.clearTarget=function(a,b,c,d){this.setRenderTarget(a);this.clear(b,c,d)};this.addPostPlugin=function(a){a.init(this);this.renderPluginsPost.push(a)};this.addPrePlugin=function(a){a.init(this);this.renderPluginsPre.push(a)};this.deallocateObject=function(a){if(a.__webglInit)if(a.__webglInit=!1,delete a._modelViewMatrix,delete a._normalMatrix,delete a._normalMatrixArray,delete a._modelViewMatrixArray,delete a._modelMatrixArray,\r\na instanceof THREE.Mesh)for(var b in a.geometry.geometryGroups){var c=a.geometry.geometryGroups[b];k.deleteBuffer(c.__webglVertexBuffer);k.deleteBuffer(c.__webglNormalBuffer);k.deleteBuffer(c.__webglTangentBuffer);k.deleteBuffer(c.__webglColorBuffer);k.deleteBuffer(c.__webglUVBuffer);k.deleteBuffer(c.__webglUV2Buffer);k.deleteBuffer(c.__webglSkinIndicesBuffer);k.deleteBuffer(c.__webglSkinWeightsBuffer);k.deleteBuffer(c.__webglFaceBuffer);k.deleteBuffer(c.__webglLineBuffer);var d=void 0,e=void 0;if(c.numMorphTargets){d=\r\n0;for(e=c.numMorphTargets;d<e;d++)k.deleteBuffer(c.__webglMorphTargetsBuffers[d])}if(c.numMorphNormals){d=0;for(e=c.numMorphNormals;d<e;d++)k.deleteBuffer(c.__webglMorphNormalsBuffers[d])}if(c.__webglCustomAttributesList)for(d in d=void 0,c.__webglCustomAttributesList)k.deleteBuffer(c.__webglCustomAttributesList[d].buffer);Q.info.memory.geometries--}else a instanceof THREE.Ribbon?(a=a.geometry,k.deleteBuffer(a.__webglVertexBuffer),k.deleteBuffer(a.__webglColorBuffer),Q.info.memory.geometries--):a instanceof\r\nTHREE.Line?(a=a.geometry,k.deleteBuffer(a.__webglVertexBuffer),k.deleteBuffer(a.__webglColorBuffer),Q.info.memory.geometries--):a instanceof THREE.ParticleSystem&&(a=a.geometry,k.deleteBuffer(a.__webglVertexBuffer),k.deleteBuffer(a.__webglColorBuffer),Q.info.memory.geometries--)};this.deallocateTexture=function(a){a.__webglInit&&(a.__webglInit=!1,k.deleteTexture(a.__webglTexture),Q.info.memory.textures--)};this.deallocateRenderTarget=function(a){if(a&&a.__webglTexture)if(k.deleteTexture(a.__webglTexture),\r\na instanceof THREE.WebGLRenderTargetCube)for(var b=0;6>b;b++)k.deleteFramebuffer(a.__webglFramebuffer[b]),k.deleteRenderbuffer(a.__webglRenderbuffer[b]);else k.deleteFramebuffer(a.__webglFramebuffer),k.deleteRenderbuffer(a.__webglRenderbuffer)};this.deallocateMaterial=function(a){var b=a.program;if(b){a.program=void 0;var c,d,e=!1,a=0;for(c=qa.length;a<c;a++)if(d=qa[a],d.program===b){d.usedTimes--;0===d.usedTimes&&(e=!0);break}if(e){e=[];a=0;for(c=qa.length;a<c;a++)d=qa[a],d.program!==b&&e.push(d);\r\nqa=e;k.deleteProgram(b);Q.info.memory.programs--}}};this.updateShadowMap=function(a,b){O=null;W=V=Ra=ib=Ia=-1;Ea=!0;Pa=Ga=-1;this.shadowMapPlugin.update(a,b)};this.renderBufferImmediate=function(a,b,c){a.hasPositions&&!a.__webglVertexBuffer&&(a.__webglVertexBuffer=k.createBuffer());a.hasNormals&&!a.__webglNormalBuffer&&(a.__webglNormalBuffer=k.createBuffer());a.hasUvs&&!a.__webglUvBuffer&&(a.__webglUvBuffer=k.createBuffer());a.hasColors&&!a.__webglColorBuffer&&(a.__webglColorBuffer=k.createBuffer());\r\na.hasPositions&&(k.bindBuffer(k.ARRAY_BUFFER,a.__webglVertexBuffer),k.bufferData(k.ARRAY_BUFFER,a.positionArray,k.DYNAMIC_DRAW),k.enableVertexAttribArray(b.attributes.position),k.vertexAttribPointer(b.attributes.position,3,k.FLOAT,!1,0,0));if(a.hasNormals){k.bindBuffer(k.ARRAY_BUFFER,a.__webglNormalBuffer);if(c.shading===THREE.FlatShading){var d,e,f,g,h,i,j,l,n,m,o,p=3*a.count;for(o=0;o<p;o+=9)m=a.normalArray,d=m[o],e=m[o+1],f=m[o+2],g=m[o+3],i=m[o+4],l=m[o+5],h=m[o+6],j=m[o+7],n=m[o+8],d=(d+g+h)/\r\n3,e=(e+i+j)/3,f=(f+l+n)/3,m[o]=d,m[o+1]=e,m[o+2]=f,m[o+3]=d,m[o+4]=e,m[o+5]=f,m[o+6]=d,m[o+7]=e,m[o+8]=f}k.bufferData(k.ARRAY_BUFFER,a.normalArray,k.DYNAMIC_DRAW);k.enableVertexAttribArray(b.attributes.normal);k.vertexAttribPointer(b.attributes.normal,3,k.FLOAT,!1,0,0)}a.hasUvs&&c.map&&(k.bindBuffer(k.ARRAY_BUFFER,a.__webglUvBuffer),k.bufferData(k.ARRAY_BUFFER,a.uvArray,k.DYNAMIC_DRAW),k.enableVertexAttribArray(b.attributes.uv),k.vertexAttribPointer(b.attributes.uv,2,k.FLOAT,!1,0,0));a.hasColors&&\r\nc.vertexColors!==THREE.NoColors&&(k.bindBuffer(k.ARRAY_BUFFER,a.__webglColorBuffer),k.bufferData(k.ARRAY_BUFFER,a.colorArray,k.DYNAMIC_DRAW),k.enableVertexAttribArray(b.attributes.color),k.vertexAttribPointer(b.attributes.color,3,k.FLOAT,!1,0,0));k.drawArrays(k.TRIANGLES,0,a.count);a.count=0};this.renderBufferDirect=function(a,b,c,d,e,f){if(!1!==d.visible)if(c=B(a,b,c,d,f),a=c.attributes,b=!1,d=16777215*e.id+2*c.id+(d.wireframe?1:0),d!==V&&(V=d,b=!0),f instanceof THREE.Mesh){f=e.offsets;1<f.length&&\r\n(b=!0);d=0;for(c=f.length;d<c;++d){var g=f[d].index;if(b){var h=e.attributes.position,i=h.itemSize;k.bindBuffer(k.ARRAY_BUFFER,h.buffer);k.vertexAttribPointer(a.position,i,k.FLOAT,!1,0,4*g*i);h=e.attributes.normal;0<=a.normal&&h&&(i=h.itemSize,k.bindBuffer(k.ARRAY_BUFFER,h.buffer),k.vertexAttribPointer(a.normal,i,k.FLOAT,!1,0,4*g*i));h=e.attributes.uv;0<=a.uv&&h&&(h.buffer?(i=h.itemSize,k.bindBuffer(k.ARRAY_BUFFER,h.buffer),k.vertexAttribPointer(a.uv,i,k.FLOAT,!1,0,4*g*i),k.enableVertexAttribArray(a.uv)):\r\nk.disableVertexAttribArray(a.uv));i=e.attributes.color;if(0<=a.color&&i){var j=i.itemSize;k.bindBuffer(k.ARRAY_BUFFER,i.buffer);k.vertexAttribPointer(a.color,j,k.FLOAT,!1,0,4*g*j)}h=e.attributes.tangent;0<=a.tangent&&h&&(i=h.itemSize,k.bindBuffer(k.ARRAY_BUFFER,h.buffer),k.vertexAttribPointer(a.tangent,i,k.FLOAT,!1,0,4*g*i));k.bindBuffer(k.ELEMENT_ARRAY_BUFFER,e.attributes.index.buffer)}k.drawElements(k.TRIANGLES,f[d].count,k.UNSIGNED_SHORT,2*f[d].start);Q.info.render.calls++;Q.info.render.vertices+=\r\nf[d].count;Q.info.render.faces+=f[d].count/3}}else f instanceof THREE.ParticleSystem&&b&&(h=e.attributes.position,i=h.itemSize,k.bindBuffer(k.ARRAY_BUFFER,h.buffer),k.vertexAttribPointer(a.position,i,k.FLOAT,!1,0,0),i=e.attributes.color,0<=a.color&&i&&(j=i.itemSize,k.bindBuffer(k.ARRAY_BUFFER,i.buffer),k.vertexAttribPointer(a.color,j,k.FLOAT,!1,0,0)),k.drawArrays(k.POINTS,0,h.numItems/3),Q.info.render.calls++,Q.info.render.points+=h.numItems/3)};this.renderBuffer=function(a,b,c,d,e,f){if(!1!==d.visible){var g,\r\nh,c=B(a,b,c,d,f),b=c.attributes,a=!1,c=16777215*e.id+2*c.id+(d.wireframe?1:0);c!==V&&(V=c,a=!0);if(!d.morphTargets&&0<=b.position)a&&(k.bindBuffer(k.ARRAY_BUFFER,e.__webglVertexBuffer),k.vertexAttribPointer(b.position,3,k.FLOAT,!1,0,0));else if(f.morphTargetBase){c=d.program.attributes;-1!==f.morphTargetBase?(k.bindBuffer(k.ARRAY_BUFFER,e.__webglMorphTargetsBuffers[f.morphTargetBase]),k.vertexAttribPointer(c.position,3,k.FLOAT,!1,0,0)):0<=c.position&&(k.bindBuffer(k.ARRAY_BUFFER,e.__webglVertexBuffer),\r\nk.vertexAttribPointer(c.position,3,k.FLOAT,!1,0,0));if(f.morphTargetForcedOrder.length){var i=0;h=f.morphTargetForcedOrder;for(g=f.morphTargetInfluences;i<d.numSupportedMorphTargets&&i<h.length;)k.bindBuffer(k.ARRAY_BUFFER,e.__webglMorphTargetsBuffers[h[i]]),k.vertexAttribPointer(c[\"morphTarget\"+i],3,k.FLOAT,!1,0,0),d.morphNormals&&(k.bindBuffer(k.ARRAY_BUFFER,e.__webglMorphNormalsBuffers[h[i]]),k.vertexAttribPointer(c[\"morphNormal\"+i],3,k.FLOAT,!1,0,0)),f.__webglMorphTargetInfluences[i]=g[h[i]],\r\ni++}else{h=[];g=f.morphTargetInfluences;var l,m=g.length;for(l=0;l<m;l++)i=g[l],0<i&&h.push([l,i]);h.length>d.numSupportedMorphTargets?(h.sort(j),h.length=d.numSupportedMorphTargets):h.length>d.numSupportedMorphNormals?h.sort(j):0===h.length&&h.push([0,0]);for(i=0;i<d.numSupportedMorphTargets;)h[i]?(l=h[i][0],k.bindBuffer(k.ARRAY_BUFFER,e.__webglMorphTargetsBuffers[l]),k.vertexAttribPointer(c[\"morphTarget\"+i],3,k.FLOAT,!1,0,0),d.morphNormals&&(k.bindBuffer(k.ARRAY_BUFFER,e.__webglMorphNormalsBuffers[l]),\r\nk.vertexAttribPointer(c[\"morphNormal\"+i],3,k.FLOAT,!1,0,0)),f.__webglMorphTargetInfluences[i]=g[l]):(k.vertexAttribPointer(c[\"morphTarget\"+i],3,k.FLOAT,!1,0,0),d.morphNormals&&k.vertexAttribPointer(c[\"morphNormal\"+i],3,k.FLOAT,!1,0,0),f.__webglMorphTargetInfluences[i]=0),i++}null!==d.program.uniforms.morphTargetInfluences&&k.uniform1fv(d.program.uniforms.morphTargetInfluences,f.__webglMorphTargetInfluences)}if(a){if(e.__webglCustomAttributesList){g=0;for(h=e.__webglCustomAttributesList.length;g<h;g++)c=\r\ne.__webglCustomAttributesList[g],0<=b[c.buffer.belongsToAttribute]&&(k.bindBuffer(k.ARRAY_BUFFER,c.buffer),k.vertexAttribPointer(b[c.buffer.belongsToAttribute],c.size,k.FLOAT,!1,0,0))}0<=b.color&&(k.bindBuffer(k.ARRAY_BUFFER,e.__webglColorBuffer),k.vertexAttribPointer(b.color,3,k.FLOAT,!1,0,0));0<=b.normal&&(k.bindBuffer(k.ARRAY_BUFFER,e.__webglNormalBuffer),k.vertexAttribPointer(b.normal,3,k.FLOAT,!1,0,0));0<=b.tangent&&(k.bindBuffer(k.ARRAY_BUFFER,e.__webglTangentBuffer),k.vertexAttribPointer(b.tangent,\r\n4,k.FLOAT,!1,0,0));0<=b.uv&&(e.__webglUVBuffer?(k.bindBuffer(k.ARRAY_BUFFER,e.__webglUVBuffer),k.vertexAttribPointer(b.uv,2,k.FLOAT,!1,0,0),k.enableVertexAttribArray(b.uv)):k.disableVertexAttribArray(b.uv));0<=b.uv2&&(e.__webglUV2Buffer?(k.bindBuffer(k.ARRAY_BUFFER,e.__webglUV2Buffer),k.vertexAttribPointer(b.uv2,2,k.FLOAT,!1,0,0),k.enableVertexAttribArray(b.uv2)):k.disableVertexAttribArray(b.uv2));d.skinning&&(0<=b.skinIndex&&0<=b.skinWeight)&&(k.bindBuffer(k.ARRAY_BUFFER,e.__webglSkinIndicesBuffer),\r\nk.vertexAttribPointer(b.skinIndex,4,k.FLOAT,!1,0,0),k.bindBuffer(k.ARRAY_BUFFER,e.__webglSkinWeightsBuffer),k.vertexAttribPointer(b.skinWeight,4,k.FLOAT,!1,0,0))}f instanceof THREE.Mesh?(d.wireframe?(d=d.wireframeLinewidth,d!==db&&(k.lineWidth(d),db=d),a&&k.bindBuffer(k.ELEMENT_ARRAY_BUFFER,e.__webglLineBuffer),k.drawElements(k.LINES,e.__webglLineCount,k.UNSIGNED_SHORT,0)):(a&&k.bindBuffer(k.ELEMENT_ARRAY_BUFFER,e.__webglFaceBuffer),k.drawElements(k.TRIANGLES,e.__webglFaceCount,k.UNSIGNED_SHORT,0)),\r\nQ.info.render.calls++,Q.info.render.vertices+=e.__webglFaceCount,Q.info.render.faces+=e.__webglFaceCount/3):f instanceof THREE.Line?(f=f.type===THREE.LineStrip?k.LINE_STRIP:k.LINES,d=d.linewidth,d!==db&&(k.lineWidth(d),db=d),k.drawArrays(f,0,e.__webglLineCount),Q.info.render.calls++):f instanceof THREE.ParticleSystem?(k.drawArrays(k.POINTS,0,e.__webglParticleCount),Q.info.render.calls++,Q.info.render.points+=e.__webglParticleCount):f instanceof THREE.Ribbon&&(k.drawArrays(k.TRIANGLE_STRIP,0,e.__webglVertexCount),\r\nQ.info.render.calls++)}};this.render=function(a,b,c,d){if(!1===b instanceof THREE.Camera)console.error(\"THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.\");else{var e,f,g,h,j=a.__lights,o=a.fog;W=-1;Ea=!0;this.autoUpdateScene&&a.updateMatrixWorld();void 0===b.parent&&b.updateMatrixWorld();b._viewMatrixArray||(b._viewMatrixArray=new Float32Array(16));b._projectionMatrixArray||(b._projectionMatrixArray=new Float32Array(16));b.matrixWorldInverse.getInverse(b.matrixWorld);b.matrixWorldInverse.flattenToArray(b._viewMatrixArray);\r\nb.projectionMatrix.flattenToArray(b._projectionMatrixArray);ra.multiply(b.projectionMatrix,b.matrixWorldInverse);fb.setFromMatrix(ra);this.autoUpdateObjects&&this.initWebGLObjects(a);l(this.renderPluginsPre,a,b);Q.info.render.calls=0;Q.info.render.vertices=0;Q.info.render.faces=0;Q.info.render.points=0;this.setRenderTarget(c);(this.autoClear||d)&&this.clear(this.autoClearColor,this.autoClearDepth,this.autoClearStencil);h=a.__webglObjects;d=0;for(e=h.length;d<e;d++)if(f=h[d],g=f.object,f.render=!1,\r\ng.visible&&(!(g instanceof THREE.Mesh||g instanceof THREE.ParticleSystem)||!g.frustumCulled||fb.contains(g))){s(g,b);var p=f,q=p.object,r=p.buffer,t=void 0,t=t=void 0,t=q.material;t instanceof THREE.MeshFaceMaterial?(t=r.materialIndex,0<=t&&(t=q.geometry.materials[t],t.transparent?(p.transparent=t,p.opaque=null):(p.opaque=t,p.transparent=null))):t&&(t.transparent?(p.transparent=t,p.opaque=null):(p.opaque=t,p.transparent=null));f.render=!0;!0===this.sortObjects&&(null!==g.renderDepth?f.z=g.renderDepth:\r\n(Za.copy(g.matrixWorld.getPosition()),ra.multiplyVector3(Za),f.z=Za.z))}this.sortObjects&&h.sort(i);h=a.__webglObjectsImmediate;d=0;for(e=h.length;d<e;d++)f=h[d],g=f.object,g.visible&&(s(g,b),g=f.object.material,g.transparent?(f.transparent=g,f.opaque=null):(f.opaque=g,f.transparent=null));a.overrideMaterial?(d=a.overrideMaterial,this.setBlending(d.blending,d.blendEquation,d.blendSrc,d.blendDst),this.setDepthTest(d.depthTest),this.setDepthWrite(d.depthWrite),v(d.polygonOffset,d.polygonOffsetFactor,\r\nd.polygonOffsetUnits),m(a.__webglObjects,!1,\"\",b,j,o,!0,d),n(a.__webglObjectsImmediate,\"\",b,j,o,!1,d)):(this.setBlending(THREE.NormalBlending),m(a.__webglObjects,!0,\"opaque\",b,j,o,!1),n(a.__webglObjectsImmediate,\"opaque\",b,j,o,!1),m(a.__webglObjects,!1,\"transparent\",b,j,o,!0),n(a.__webglObjectsImmediate,\"transparent\",b,j,o,!0));l(this.renderPluginsPost,a,b);c&&(c.generateMipmaps&&c.minFilter!==THREE.NearestFilter&&c.minFilter!==THREE.LinearFilter)&&(c instanceof THREE.WebGLRenderTargetCube?(k.bindTexture(k.TEXTURE_CUBE_MAP,\r\nc.__webglTexture),k.generateMipmap(k.TEXTURE_CUBE_MAP),k.bindTexture(k.TEXTURE_CUBE_MAP,null)):(k.bindTexture(k.TEXTURE_2D,c.__webglTexture),k.generateMipmap(k.TEXTURE_2D),k.bindTexture(k.TEXTURE_2D,null)));this.setDepthTest(!0);this.setDepthWrite(!0)}};this.renderImmediateObject=function(a,b,c,d,e){var f=B(a,b,c,d,e);V=-1;Q.setMaterialFaces(d);e.immediateRenderCallback?e.immediateRenderCallback(f,k,fb):e.render(function(a){Q.renderBufferImmediate(a,f,d)})};this.initWebGLObjects=function(a){a.__webglObjects||\r\n(a.__webglObjects=[],a.__webglObjectsImmediate=[],a.__webglSprites=[],a.__webglFlares=[]);for(;a.__objectsAdded.length;){var i=a.__objectsAdded[0],j=a,l=void 0,m=void 0,n=void 0;if(!i.__webglInit)if(i.__webglInit=!0,i._modelViewMatrix=new THREE.Matrix4,i._normalMatrix=new THREE.Matrix3,i instanceof THREE.Mesh)if(m=i.geometry,m instanceof THREE.Geometry){if(void 0===m.geometryGroups){var s=m,u=void 0,v=void 0,y=void 0,z=void 0,A=void 0,B=void 0,C=void 0,E={},G=s.morphTargets.length,H=s.morphNormals.length;\r\ns.geometryGroups={};u=0;for(v=s.faces.length;u<v;u++)y=s.faces[u],z=y.materialIndex,B=void 0!==z?z:-1,void 0===E[B]&&(E[B]={hash:B,counter:0}),C=E[B].hash+\"_\"+E[B].counter,void 0===s.geometryGroups[C]&&(s.geometryGroups[C]={faces3:[],faces4:[],materialIndex:z,vertices:0,numMorphTargets:G,numMorphNormals:H}),A=y instanceof THREE.Face3?3:4,65535<s.geometryGroups[C].vertices+A&&(E[B].counter+=1,C=E[B].hash+\"_\"+E[B].counter,void 0===s.geometryGroups[C]&&(s.geometryGroups[C]={faces3:[],faces4:[],materialIndex:z,\r\nvertices:0,numMorphTargets:G,numMorphNormals:H})),y instanceof THREE.Face3?s.geometryGroups[C].faces3.push(u):s.geometryGroups[C].faces4.push(u),s.geometryGroups[C].vertices+=A;s.geometryGroupsList=[];var J=void 0;for(J in s.geometryGroups)s.geometryGroups[J].id=Z++,s.geometryGroupsList.push(s.geometryGroups[J])}for(l in m.geometryGroups)if(n=m.geometryGroups[l],!n.__webglVertexBuffer){var I=n;I.__webglVertexBuffer=k.createBuffer();I.__webglNormalBuffer=k.createBuffer();I.__webglTangentBuffer=k.createBuffer();\r\nI.__webglColorBuffer=k.createBuffer();I.__webglUVBuffer=k.createBuffer();I.__webglUV2Buffer=k.createBuffer();I.__webglSkinIndicesBuffer=k.createBuffer();I.__webglSkinWeightsBuffer=k.createBuffer();I.__webglFaceBuffer=k.createBuffer();I.__webglLineBuffer=k.createBuffer();var O=void 0,K=void 0;if(I.numMorphTargets){I.__webglMorphTargetsBuffers=[];O=0;for(K=I.numMorphTargets;O<K;O++)I.__webglMorphTargetsBuffers.push(k.createBuffer())}if(I.numMorphNormals){I.__webglMorphNormalsBuffers=[];O=0;for(K=I.numMorphNormals;O<\r\nK;O++)I.__webglMorphNormalsBuffers.push(k.createBuffer())}Q.info.memory.geometries++;var F=n,M=i,L=M.geometry,N=F.faces3,W=F.faces4,V=3*N.length+4*W.length,fa=1*N.length+2*W.length,ca=3*N.length+4*W.length,R=c(M,F),Y=e(R),ea=d(R),ia=R.vertexColors?R.vertexColors:!1;F.__vertexArray=new Float32Array(3*V);ea&&(F.__normalArray=new Float32Array(3*V));L.hasTangents&&(F.__tangentArray=new Float32Array(4*V));ia&&(F.__colorArray=new Float32Array(3*V));if(Y){if(0<L.faceUvs.length||0<L.faceVertexUvs.length)F.__uvArray=\r\nnew Float32Array(2*V);if(1<L.faceUvs.length||1<L.faceVertexUvs.length)F.__uv2Array=new Float32Array(2*V)}M.geometry.skinWeights.length&&M.geometry.skinIndices.length&&(F.__skinIndexArray=new Float32Array(4*V),F.__skinWeightArray=new Float32Array(4*V));F.__faceArray=new Uint16Array(3*fa);F.__lineArray=new Uint16Array(2*ca);var $=void 0,qa=void 0;if(F.numMorphTargets){F.__morphTargetsArrays=[];$=0;for(qa=F.numMorphTargets;$<qa;$++)F.__morphTargetsArrays.push(new Float32Array(3*V))}if(F.numMorphNormals){F.__morphNormalsArrays=\r\n[];$=0;for(qa=F.numMorphNormals;$<qa;$++)F.__morphNormalsArrays.push(new Float32Array(3*V))}F.__webglFaceCount=3*fa;F.__webglLineCount=2*ca;if(R.attributes){void 0===F.__webglCustomAttributesList&&(F.__webglCustomAttributesList=[]);var Ga=void 0;for(Ga in R.attributes){var na=R.attributes[Ga],la={},Pa;for(Pa in na)la[Pa]=na[Pa];if(!la.__webglInitialized||la.createUniqueBuffers){la.__webglInitialized=!0;var ra=1;\"v2\"===la.type?ra=2:\"v3\"===la.type?ra=3:\"v4\"===la.type?ra=4:\"c\"===la.type&&(ra=3);la.size=\r\nra;la.array=new Float32Array(V*ra);la.buffer=k.createBuffer();la.buffer.belongsToAttribute=Ga;na.needsUpdate=!0;la.__original=na}F.__webglCustomAttributesList.push(la)}}F.__inittedArrays=!0;m.verticesNeedUpdate=!0;m.morphTargetsNeedUpdate=!0;m.elementsNeedUpdate=!0;m.uvsNeedUpdate=!0;m.normalsNeedUpdate=!0;m.tangentsNeedUpdate=!0;m.colorsNeedUpdate=!0}}else m instanceof THREE.BufferGeometry&&f(m);else if(i instanceof THREE.Ribbon){if(m=i.geometry,!m.__webglVertexBuffer){var Ia=m;Ia.__webglVertexBuffer=\r\nk.createBuffer();Ia.__webglColorBuffer=k.createBuffer();Q.info.memory.geometries++;var wa=m,Da=wa.vertices.length;wa.__vertexArray=new Float32Array(3*Da);wa.__colorArray=new Float32Array(3*Da);wa.__webglVertexCount=Da;m.verticesNeedUpdate=!0;m.colorsNeedUpdate=!0}}else if(i instanceof THREE.Line){if(m=i.geometry,!m.__webglVertexBuffer){var Ja=m;Ja.__webglVertexBuffer=k.createBuffer();Ja.__webglColorBuffer=k.createBuffer();Q.info.memory.geometries++;var Ea=m,Ua=i,Va=Ea.vertices.length;Ea.__vertexArray=\r\nnew Float32Array(3*Va);Ea.__colorArray=new Float32Array(3*Va);Ea.__webglLineCount=Va;b(Ea,Ua);m.verticesNeedUpdate=!0;m.colorsNeedUpdate=!0}}else if(i instanceof THREE.ParticleSystem&&(m=i.geometry,!m.__webglVertexBuffer))if(m instanceof THREE.Geometry){var Wa=m;Wa.__webglVertexBuffer=k.createBuffer();Wa.__webglColorBuffer=k.createBuffer();Q.info.memory.geometries++;var Ra=m,ib=i,$a=Ra.vertices.length;Ra.__vertexArray=new Float32Array(3*$a);Ra.__colorArray=new Float32Array(3*$a);Ra.__sortArray=[];\r\nRa.__webglParticleCount=$a;b(Ra,ib);m.verticesNeedUpdate=!0;m.colorsNeedUpdate=!0}else m instanceof THREE.BufferGeometry&&f(m);if(!i.__webglActive){if(i instanceof THREE.Mesh)if(m=i.geometry,m instanceof THREE.BufferGeometry)p(j.__webglObjects,m,i);else for(l in m.geometryGroups)n=m.geometryGroups[l],p(j.__webglObjects,n,i);else i instanceof THREE.Ribbon||i instanceof THREE.Line||i instanceof THREE.ParticleSystem?(m=i.geometry,p(j.__webglObjects,m,i)):i instanceof THREE.ImmediateRenderObject||i.immediateRenderCallback?\r\nj.__webglObjectsImmediate.push({object:i,opaque:null,transparent:null}):i instanceof THREE.Sprite?j.__webglSprites.push(i):i instanceof THREE.LensFlare&&j.__webglFlares.push(i);i.__webglActive=!0}a.__objectsAdded.splice(0,1)}for(;a.__objectsRemoved.length;){var lb=a.__objectsRemoved[0],Za=a;lb instanceof THREE.Mesh||lb instanceof THREE.ParticleSystem||lb instanceof THREE.Ribbon||lb instanceof THREE.Line?r(Za.__webglObjects,lb):lb instanceof THREE.Sprite?t(Za.__webglSprites,lb):lb instanceof THREE.LensFlare?\r\nt(Za.__webglFlares,lb):(lb instanceof THREE.ImmediateRenderObject||lb.immediateRenderCallback)&&r(Za.__webglObjectsImmediate,lb);lb.__webglActive=!1;a.__objectsRemoved.splice(0,1)}for(var fb=0,qb=a.__webglObjects.length;fb<qb;fb++){var ub=a.__webglObjects[fb].object,ga=ub.geometry,gb=void 0,eb=void 0,ab=void 0;if(ub instanceof THREE.Mesh)if(ga instanceof THREE.BufferGeometry)(ga.verticesNeedUpdate||ga.elementsNeedUpdate||ga.uvsNeedUpdate||ga.normalsNeedUpdate||ga.colorsNeedUpdate||ga.tangentsNeedUpdate)&&\r\nh(ga,k.DYNAMIC_DRAW,!ga.dynamic),ga.verticesNeedUpdate=!1,ga.elementsNeedUpdate=!1,ga.uvsNeedUpdate=!1,ga.normalsNeedUpdate=!1,ga.colorsNeedUpdate=!1,ga.tangentsNeedUpdate=!1;else{for(var pb=0,wb=ga.geometryGroupsList.length;pb<wb;pb++)if(gb=ga.geometryGroupsList[pb],ab=c(ub,gb),eb=ab.attributes&&o(ab),ga.verticesNeedUpdate||ga.morphTargetsNeedUpdate||ga.elementsNeedUpdate||ga.uvsNeedUpdate||ga.normalsNeedUpdate||ga.colorsNeedUpdate||ga.tangentsNeedUpdate||eb){var ma=gb,xb=ub,mb=k.DYNAMIC_DRAW,yb=\r\n!ga.dynamic,db=ab;if(ma.__inittedArrays){var Qb=d(db),Pb=db.vertexColors?db.vertexColors:!1,hc=e(db),Gc=Qb===THREE.SmoothShading,D=void 0,X=void 0,Xb=void 0,P=void 0,lc=void 0,Yb=void 0,vb=void 0,Hc=void 0,Rb=void 0,mc=void 0,nc=void 0,S=void 0,T=void 0,U=void 0,ka=void 0,zb=void 0,Ab=void 0,Bb=void 0,sc=void 0,Cb=void 0,Db=void 0,Eb=void 0,tc=void 0,Fb=void 0,Gb=void 0,Hb=void 0,uc=void 0,Ib=void 0,Jb=void 0,Kb=void 0,vc=void 0,Lb=void 0,Mb=void 0,Nb=void 0,wc=void 0,sa=void 0,ic=void 0,Zb=void 0,\r\noc=void 0,pc=void 0,Ma=void 0,rc=void 0,Ka=void 0,La=void 0,$b=void 0,Sb=void 0,Ca=0,Ha=0,Tb=0,Ub=0,nb=0,Sa=0,ua=0,Ya=0,Fa=0,da=0,ha=0,x=0,ta=void 0,Na=ma.__vertexArray,xc=ma.__uvArray,yc=ma.__uv2Array,ob=ma.__normalArray,xa=ma.__tangentArray,Oa=ma.__colorArray,ya=ma.__skinIndexArray,za=ma.__skinWeightArray,Vc=ma.__morphTargetsArrays,Wc=ma.__morphNormalsArrays,Xc=ma.__webglCustomAttributesList,w=void 0,Ob=ma.__faceArray,hb=ma.__lineArray,bb=xb.geometry,Ec=bb.elementsNeedUpdate,bd=bb.uvsNeedUpdate,\r\nSc=bb.normalsNeedUpdate,Tc=bb.tangentsNeedUpdate,id=bb.colorsNeedUpdate,jd=bb.morphTargetsNeedUpdate,ec=bb.vertices,oa=ma.faces3,pa=ma.faces4,Ta=bb.faces,Yc=bb.faceVertexUvs[0],Zc=bb.faceVertexUvs[1],fc=bb.skinIndices,ac=bb.skinWeights,bc=bb.morphTargets,Ic=bb.morphNormals;if(bb.verticesNeedUpdate){D=0;for(X=oa.length;D<X;D++)P=Ta[oa[D]],S=ec[P.a],T=ec[P.b],U=ec[P.c],Na[Ha]=S.x,Na[Ha+1]=S.y,Na[Ha+2]=S.z,Na[Ha+3]=T.x,Na[Ha+4]=T.y,Na[Ha+5]=T.z,Na[Ha+6]=U.x,Na[Ha+7]=U.y,Na[Ha+8]=U.z,Ha+=9;D=0;for(X=\r\npa.length;D<X;D++)P=Ta[pa[D]],S=ec[P.a],T=ec[P.b],U=ec[P.c],ka=ec[P.d],Na[Ha]=S.x,Na[Ha+1]=S.y,Na[Ha+2]=S.z,Na[Ha+3]=T.x,Na[Ha+4]=T.y,Na[Ha+5]=T.z,Na[Ha+6]=U.x,Na[Ha+7]=U.y,Na[Ha+8]=U.z,Na[Ha+9]=ka.x,Na[Ha+10]=ka.y,Na[Ha+11]=ka.z,Ha+=12;k.bindBuffer(k.ARRAY_BUFFER,ma.__webglVertexBuffer);k.bufferData(k.ARRAY_BUFFER,Na,mb)}if(jd){Ma=0;for(rc=bc.length;Ma<rc;Ma++){D=ha=0;for(X=oa.length;D<X;D++)$b=oa[D],P=Ta[$b],S=bc[Ma].vertices[P.a],T=bc[Ma].vertices[P.b],U=bc[Ma].vertices[P.c],Ka=Vc[Ma],Ka[ha]=S.x,\r\nKa[ha+1]=S.y,Ka[ha+2]=S.z,Ka[ha+3]=T.x,Ka[ha+4]=T.y,Ka[ha+5]=T.z,Ka[ha+6]=U.x,Ka[ha+7]=U.y,Ka[ha+8]=U.z,db.morphNormals&&(Gc?(Sb=Ic[Ma].vertexNormals[$b],Cb=Sb.a,Db=Sb.b,Eb=Sb.c):Eb=Db=Cb=Ic[Ma].faceNormals[$b],La=Wc[Ma],La[ha]=Cb.x,La[ha+1]=Cb.y,La[ha+2]=Cb.z,La[ha+3]=Db.x,La[ha+4]=Db.y,La[ha+5]=Db.z,La[ha+6]=Eb.x,La[ha+7]=Eb.y,La[ha+8]=Eb.z),ha+=9;D=0;for(X=pa.length;D<X;D++)$b=pa[D],P=Ta[$b],S=bc[Ma].vertices[P.a],T=bc[Ma].vertices[P.b],U=bc[Ma].vertices[P.c],ka=bc[Ma].vertices[P.d],Ka=Vc[Ma],\r\nKa[ha]=S.x,Ka[ha+1]=S.y,Ka[ha+2]=S.z,Ka[ha+3]=T.x,Ka[ha+4]=T.y,Ka[ha+5]=T.z,Ka[ha+6]=U.x,Ka[ha+7]=U.y,Ka[ha+8]=U.z,Ka[ha+9]=ka.x,Ka[ha+10]=ka.y,Ka[ha+11]=ka.z,db.morphNormals&&(Gc?(Sb=Ic[Ma].vertexNormals[$b],Cb=Sb.a,Db=Sb.b,Eb=Sb.c,tc=Sb.d):tc=Eb=Db=Cb=Ic[Ma].faceNormals[$b],La=Wc[Ma],La[ha]=Cb.x,La[ha+1]=Cb.y,La[ha+2]=Cb.z,La[ha+3]=Db.x,La[ha+4]=Db.y,La[ha+5]=Db.z,La[ha+6]=Eb.x,La[ha+7]=Eb.y,La[ha+8]=Eb.z,La[ha+9]=tc.x,La[ha+10]=tc.y,La[ha+11]=tc.z),ha+=12;k.bindBuffer(k.ARRAY_BUFFER,ma.__webglMorphTargetsBuffers[Ma]);\r\nk.bufferData(k.ARRAY_BUFFER,Vc[Ma],mb);db.morphNormals&&(k.bindBuffer(k.ARRAY_BUFFER,ma.__webglMorphNormalsBuffers[Ma]),k.bufferData(k.ARRAY_BUFFER,Wc[Ma],mb))}}if(ac.length){D=0;for(X=oa.length;D<X;D++)P=Ta[oa[D]],Ib=ac[P.a],Jb=ac[P.b],Kb=ac[P.c],za[da]=Ib.x,za[da+1]=Ib.y,za[da+2]=Ib.z,za[da+3]=Ib.w,za[da+4]=Jb.x,za[da+5]=Jb.y,za[da+6]=Jb.z,za[da+7]=Jb.w,za[da+8]=Kb.x,za[da+9]=Kb.y,za[da+10]=Kb.z,za[da+11]=Kb.w,Lb=fc[P.a],Mb=fc[P.b],Nb=fc[P.c],ya[da]=Lb.x,ya[da+1]=Lb.y,ya[da+2]=Lb.z,ya[da+3]=Lb.w,\r\nya[da+4]=Mb.x,ya[da+5]=Mb.y,ya[da+6]=Mb.z,ya[da+7]=Mb.w,ya[da+8]=Nb.x,ya[da+9]=Nb.y,ya[da+10]=Nb.z,ya[da+11]=Nb.w,da+=12;D=0;for(X=pa.length;D<X;D++)P=Ta[pa[D]],Ib=ac[P.a],Jb=ac[P.b],Kb=ac[P.c],vc=ac[P.d],za[da]=Ib.x,za[da+1]=Ib.y,za[da+2]=Ib.z,za[da+3]=Ib.w,za[da+4]=Jb.x,za[da+5]=Jb.y,za[da+6]=Jb.z,za[da+7]=Jb.w,za[da+8]=Kb.x,za[da+9]=Kb.y,za[da+10]=Kb.z,za[da+11]=Kb.w,za[da+12]=vc.x,za[da+13]=vc.y,za[da+14]=vc.z,za[da+15]=vc.w,Lb=fc[P.a],Mb=fc[P.b],Nb=fc[P.c],wc=fc[P.d],ya[da]=Lb.x,ya[da+1]=Lb.y,\r\nya[da+2]=Lb.z,ya[da+3]=Lb.w,ya[da+4]=Mb.x,ya[da+5]=Mb.y,ya[da+6]=Mb.z,ya[da+7]=Mb.w,ya[da+8]=Nb.x,ya[da+9]=Nb.y,ya[da+10]=Nb.z,ya[da+11]=Nb.w,ya[da+12]=wc.x,ya[da+13]=wc.y,ya[da+14]=wc.z,ya[da+15]=wc.w,da+=16;0<da&&(k.bindBuffer(k.ARRAY_BUFFER,ma.__webglSkinIndicesBuffer),k.bufferData(k.ARRAY_BUFFER,ya,mb),k.bindBuffer(k.ARRAY_BUFFER,ma.__webglSkinWeightsBuffer),k.bufferData(k.ARRAY_BUFFER,za,mb))}if(id&&Pb){D=0;for(X=oa.length;D<X;D++)P=Ta[oa[D]],vb=P.vertexColors,Hc=P.color,3===vb.length&&Pb===\r\nTHREE.VertexColors?(Fb=vb[0],Gb=vb[1],Hb=vb[2]):Hb=Gb=Fb=Hc,Oa[Fa]=Fb.r,Oa[Fa+1]=Fb.g,Oa[Fa+2]=Fb.b,Oa[Fa+3]=Gb.r,Oa[Fa+4]=Gb.g,Oa[Fa+5]=Gb.b,Oa[Fa+6]=Hb.r,Oa[Fa+7]=Hb.g,Oa[Fa+8]=Hb.b,Fa+=9;D=0;for(X=pa.length;D<X;D++)P=Ta[pa[D]],vb=P.vertexColors,Hc=P.color,4===vb.length&&Pb===THREE.VertexColors?(Fb=vb[0],Gb=vb[1],Hb=vb[2],uc=vb[3]):uc=Hb=Gb=Fb=Hc,Oa[Fa]=Fb.r,Oa[Fa+1]=Fb.g,Oa[Fa+2]=Fb.b,Oa[Fa+3]=Gb.r,Oa[Fa+4]=Gb.g,Oa[Fa+5]=Gb.b,Oa[Fa+6]=Hb.r,Oa[Fa+7]=Hb.g,Oa[Fa+8]=Hb.b,Oa[Fa+9]=uc.r,Oa[Fa+10]=uc.g,\r\nOa[Fa+11]=uc.b,Fa+=12;0<Fa&&(k.bindBuffer(k.ARRAY_BUFFER,ma.__webglColorBuffer),k.bufferData(k.ARRAY_BUFFER,Oa,mb))}if(Tc&&bb.hasTangents){D=0;for(X=oa.length;D<X;D++)P=Ta[oa[D]],Rb=P.vertexTangents,zb=Rb[0],Ab=Rb[1],Bb=Rb[2],xa[ua]=zb.x,xa[ua+1]=zb.y,xa[ua+2]=zb.z,xa[ua+3]=zb.w,xa[ua+4]=Ab.x,xa[ua+5]=Ab.y,xa[ua+6]=Ab.z,xa[ua+7]=Ab.w,xa[ua+8]=Bb.x,xa[ua+9]=Bb.y,xa[ua+10]=Bb.z,xa[ua+11]=Bb.w,ua+=12;D=0;for(X=pa.length;D<X;D++)P=Ta[pa[D]],Rb=P.vertexTangents,zb=Rb[0],Ab=Rb[1],Bb=Rb[2],sc=Rb[3],xa[ua]=\r\nzb.x,xa[ua+1]=zb.y,xa[ua+2]=zb.z,xa[ua+3]=zb.w,xa[ua+4]=Ab.x,xa[ua+5]=Ab.y,xa[ua+6]=Ab.z,xa[ua+7]=Ab.w,xa[ua+8]=Bb.x,xa[ua+9]=Bb.y,xa[ua+10]=Bb.z,xa[ua+11]=Bb.w,xa[ua+12]=sc.x,xa[ua+13]=sc.y,xa[ua+14]=sc.z,xa[ua+15]=sc.w,ua+=16;k.bindBuffer(k.ARRAY_BUFFER,ma.__webglTangentBuffer);k.bufferData(k.ARRAY_BUFFER,xa,mb)}if(Sc&&Qb){D=0;for(X=oa.length;D<X;D++)if(P=Ta[oa[D]],lc=P.vertexNormals,Yb=P.normal,3===lc.length&&Gc)for(sa=0;3>sa;sa++)Zb=lc[sa],ob[Sa]=Zb.x,ob[Sa+1]=Zb.y,ob[Sa+2]=Zb.z,Sa+=3;else for(sa=\r\n0;3>sa;sa++)ob[Sa]=Yb.x,ob[Sa+1]=Yb.y,ob[Sa+2]=Yb.z,Sa+=3;D=0;for(X=pa.length;D<X;D++)if(P=Ta[pa[D]],lc=P.vertexNormals,Yb=P.normal,4===lc.length&&Gc)for(sa=0;4>sa;sa++)Zb=lc[sa],ob[Sa]=Zb.x,ob[Sa+1]=Zb.y,ob[Sa+2]=Zb.z,Sa+=3;else for(sa=0;4>sa;sa++)ob[Sa]=Yb.x,ob[Sa+1]=Yb.y,ob[Sa+2]=Yb.z,Sa+=3;k.bindBuffer(k.ARRAY_BUFFER,ma.__webglNormalBuffer);k.bufferData(k.ARRAY_BUFFER,ob,mb)}if(bd&&Yc&&hc){D=0;for(X=oa.length;D<X;D++)if(Xb=oa[D],mc=Yc[Xb],void 0!==mc)for(sa=0;3>sa;sa++)oc=mc[sa],xc[Tb]=oc.u,xc[Tb+\r\n1]=oc.v,Tb+=2;D=0;for(X=pa.length;D<X;D++)if(Xb=pa[D],mc=Yc[Xb],void 0!==mc)for(sa=0;4>sa;sa++)oc=mc[sa],xc[Tb]=oc.u,xc[Tb+1]=oc.v,Tb+=2;0<Tb&&(k.bindBuffer(k.ARRAY_BUFFER,ma.__webglUVBuffer),k.bufferData(k.ARRAY_BUFFER,xc,mb))}if(bd&&Zc&&hc){D=0;for(X=oa.length;D<X;D++)if(Xb=oa[D],nc=Zc[Xb],void 0!==nc)for(sa=0;3>sa;sa++)pc=nc[sa],yc[Ub]=pc.u,yc[Ub+1]=pc.v,Ub+=2;D=0;for(X=pa.length;D<X;D++)if(Xb=pa[D],nc=Zc[Xb],void 0!==nc)for(sa=0;4>sa;sa++)pc=nc[sa],yc[Ub]=pc.u,yc[Ub+1]=pc.v,Ub+=2;0<Ub&&(k.bindBuffer(k.ARRAY_BUFFER,\r\nma.__webglUV2Buffer),k.bufferData(k.ARRAY_BUFFER,yc,mb))}if(Ec){D=0;for(X=oa.length;D<X;D++)Ob[nb]=Ca,Ob[nb+1]=Ca+1,Ob[nb+2]=Ca+2,nb+=3,hb[Ya]=Ca,hb[Ya+1]=Ca+1,hb[Ya+2]=Ca,hb[Ya+3]=Ca+2,hb[Ya+4]=Ca+1,hb[Ya+5]=Ca+2,Ya+=6,Ca+=3;D=0;for(X=pa.length;D<X;D++)Ob[nb]=Ca,Ob[nb+1]=Ca+1,Ob[nb+2]=Ca+3,Ob[nb+3]=Ca+1,Ob[nb+4]=Ca+2,Ob[nb+5]=Ca+3,nb+=6,hb[Ya]=Ca,hb[Ya+1]=Ca+1,hb[Ya+2]=Ca,hb[Ya+3]=Ca+3,hb[Ya+4]=Ca+1,hb[Ya+5]=Ca+2,hb[Ya+6]=Ca+2,hb[Ya+7]=Ca+3,Ya+=8,Ca+=4;k.bindBuffer(k.ELEMENT_ARRAY_BUFFER,ma.__webglFaceBuffer);\r\nk.bufferData(k.ELEMENT_ARRAY_BUFFER,Ob,mb);k.bindBuffer(k.ELEMENT_ARRAY_BUFFER,ma.__webglLineBuffer);k.bufferData(k.ELEMENT_ARRAY_BUFFER,hb,mb)}if(Xc){sa=0;for(ic=Xc.length;sa<ic;sa++)if(w=Xc[sa],w.__original.needsUpdate){x=0;if(1===w.size)if(void 0===w.boundTo||\"vertices\"===w.boundTo){D=0;for(X=oa.length;D<X;D++)P=Ta[oa[D]],w.array[x]=w.value[P.a],w.array[x+1]=w.value[P.b],w.array[x+2]=w.value[P.c],x+=3;D=0;for(X=pa.length;D<X;D++)P=Ta[pa[D]],w.array[x]=w.value[P.a],w.array[x+1]=w.value[P.b],w.array[x+\r\n2]=w.value[P.c],w.array[x+3]=w.value[P.d],x+=4}else{if(\"faces\"===w.boundTo){D=0;for(X=oa.length;D<X;D++)ta=w.value[oa[D]],w.array[x]=ta,w.array[x+1]=ta,w.array[x+2]=ta,x+=3;D=0;for(X=pa.length;D<X;D++)ta=w.value[pa[D]],w.array[x]=ta,w.array[x+1]=ta,w.array[x+2]=ta,w.array[x+3]=ta,x+=4}}else if(2===w.size)if(void 0===w.boundTo||\"vertices\"===w.boundTo){D=0;for(X=oa.length;D<X;D++)P=Ta[oa[D]],S=w.value[P.a],T=w.value[P.b],U=w.value[P.c],w.array[x]=S.x,w.array[x+1]=S.y,w.array[x+2]=T.x,w.array[x+3]=T.y,\r\nw.array[x+4]=U.x,w.array[x+5]=U.y,x+=6;D=0;for(X=pa.length;D<X;D++)P=Ta[pa[D]],S=w.value[P.a],T=w.value[P.b],U=w.value[P.c],ka=w.value[P.d],w.array[x]=S.x,w.array[x+1]=S.y,w.array[x+2]=T.x,w.array[x+3]=T.y,w.array[x+4]=U.x,w.array[x+5]=U.y,w.array[x+6]=ka.x,w.array[x+7]=ka.y,x+=8}else{if(\"faces\"===w.boundTo){D=0;for(X=oa.length;D<X;D++)U=T=S=ta=w.value[oa[D]],w.array[x]=S.x,w.array[x+1]=S.y,w.array[x+2]=T.x,w.array[x+3]=T.y,w.array[x+4]=U.x,w.array[x+5]=U.y,x+=6;D=0;for(X=pa.length;D<X;D++)ka=U=T=\r\nS=ta=w.value[pa[D]],w.array[x]=S.x,w.array[x+1]=S.y,w.array[x+2]=T.x,w.array[x+3]=T.y,w.array[x+4]=U.x,w.array[x+5]=U.y,w.array[x+6]=ka.x,w.array[x+7]=ka.y,x+=8}}else if(3===w.size){var ba;ba=\"c\"===w.type?[\"r\",\"g\",\"b\"]:[\"x\",\"y\",\"z\"];if(void 0===w.boundTo||\"vertices\"===w.boundTo){D=0;for(X=oa.length;D<X;D++)P=Ta[oa[D]],S=w.value[P.a],T=w.value[P.b],U=w.value[P.c],w.array[x]=S[ba[0]],w.array[x+1]=S[ba[1]],w.array[x+2]=S[ba[2]],w.array[x+3]=T[ba[0]],w.array[x+4]=T[ba[1]],w.array[x+5]=T[ba[2]],w.array[x+\r\n6]=U[ba[0]],w.array[x+7]=U[ba[1]],w.array[x+8]=U[ba[2]],x+=9;D=0;for(X=pa.length;D<X;D++)P=Ta[pa[D]],S=w.value[P.a],T=w.value[P.b],U=w.value[P.c],ka=w.value[P.d],w.array[x]=S[ba[0]],w.array[x+1]=S[ba[1]],w.array[x+2]=S[ba[2]],w.array[x+3]=T[ba[0]],w.array[x+4]=T[ba[1]],w.array[x+5]=T[ba[2]],w.array[x+6]=U[ba[0]],w.array[x+7]=U[ba[1]],w.array[x+8]=U[ba[2]],w.array[x+9]=ka[ba[0]],w.array[x+10]=ka[ba[1]],w.array[x+11]=ka[ba[2]],x+=12}else if(\"faces\"===w.boundTo){D=0;for(X=oa.length;D<X;D++)U=T=S=ta=\r\nw.value[oa[D]],w.array[x]=S[ba[0]],w.array[x+1]=S[ba[1]],w.array[x+2]=S[ba[2]],w.array[x+3]=T[ba[0]],w.array[x+4]=T[ba[1]],w.array[x+5]=T[ba[2]],w.array[x+6]=U[ba[0]],w.array[x+7]=U[ba[1]],w.array[x+8]=U[ba[2]],x+=9;D=0;for(X=pa.length;D<X;D++)ka=U=T=S=ta=w.value[pa[D]],w.array[x]=S[ba[0]],w.array[x+1]=S[ba[1]],w.array[x+2]=S[ba[2]],w.array[x+3]=T[ba[0]],w.array[x+4]=T[ba[1]],w.array[x+5]=T[ba[2]],w.array[x+6]=U[ba[0]],w.array[x+7]=U[ba[1]],w.array[x+8]=U[ba[2]],w.array[x+9]=ka[ba[0]],w.array[x+10]=\r\nka[ba[1]],w.array[x+11]=ka[ba[2]],x+=12}else if(\"faceVertices\"===w.boundTo){D=0;for(X=oa.length;D<X;D++)ta=w.value[oa[D]],S=ta[0],T=ta[1],U=ta[2],w.array[x]=S[ba[0]],w.array[x+1]=S[ba[1]],w.array[x+2]=S[ba[2]],w.array[x+3]=T[ba[0]],w.array[x+4]=T[ba[1]],w.array[x+5]=T[ba[2]],w.array[x+6]=U[ba[0]],w.array[x+7]=U[ba[1]],w.array[x+8]=U[ba[2]],x+=9;D=0;for(X=pa.length;D<X;D++)ta=w.value[pa[D]],S=ta[0],T=ta[1],U=ta[2],ka=ta[3],w.array[x]=S[ba[0]],w.array[x+1]=S[ba[1]],w.array[x+2]=S[ba[2]],w.array[x+3]=\r\nT[ba[0]],w.array[x+4]=T[ba[1]],w.array[x+5]=T[ba[2]],w.array[x+6]=U[ba[0]],w.array[x+7]=U[ba[1]],w.array[x+8]=U[ba[2]],w.array[x+9]=ka[ba[0]],w.array[x+10]=ka[ba[1]],w.array[x+11]=ka[ba[2]],x+=12}}else if(4===w.size)if(void 0===w.boundTo||\"vertices\"===w.boundTo){D=0;for(X=oa.length;D<X;D++)P=Ta[oa[D]],S=w.value[P.a],T=w.value[P.b],U=w.value[P.c],w.array[x]=S.x,w.array[x+1]=S.y,w.array[x+2]=S.z,w.array[x+3]=S.w,w.array[x+4]=T.x,w.array[x+5]=T.y,w.array[x+6]=T.z,w.array[x+7]=T.w,w.array[x+8]=U.x,w.array[x+\r\n9]=U.y,w.array[x+10]=U.z,w.array[x+11]=U.w,x+=12;D=0;for(X=pa.length;D<X;D++)P=Ta[pa[D]],S=w.value[P.a],T=w.value[P.b],U=w.value[P.c],ka=w.value[P.d],w.array[x]=S.x,w.array[x+1]=S.y,w.array[x+2]=S.z,w.array[x+3]=S.w,w.array[x+4]=T.x,w.array[x+5]=T.y,w.array[x+6]=T.z,w.array[x+7]=T.w,w.array[x+8]=U.x,w.array[x+9]=U.y,w.array[x+10]=U.z,w.array[x+11]=U.w,w.array[x+12]=ka.x,w.array[x+13]=ka.y,w.array[x+14]=ka.z,w.array[x+15]=ka.w,x+=16}else if(\"faces\"===w.boundTo){D=0;for(X=oa.length;D<X;D++)U=T=S=ta=\r\nw.value[oa[D]],w.array[x]=S.x,w.array[x+1]=S.y,w.array[x+2]=S.z,w.array[x+3]=S.w,w.array[x+4]=T.x,w.array[x+5]=T.y,w.array[x+6]=T.z,w.array[x+7]=T.w,w.array[x+8]=U.x,w.array[x+9]=U.y,w.array[x+10]=U.z,w.array[x+11]=U.w,x+=12;D=0;for(X=pa.length;D<X;D++)ka=U=T=S=ta=w.value[pa[D]],w.array[x]=S.x,w.array[x+1]=S.y,w.array[x+2]=S.z,w.array[x+3]=S.w,w.array[x+4]=T.x,w.array[x+5]=T.y,w.array[x+6]=T.z,w.array[x+7]=T.w,w.array[x+8]=U.x,w.array[x+9]=U.y,w.array[x+10]=U.z,w.array[x+11]=U.w,w.array[x+12]=ka.x,\r\nw.array[x+13]=ka.y,w.array[x+14]=ka.z,w.array[x+15]=ka.w,x+=16}else if(\"faceVertices\"===w.boundTo){D=0;for(X=oa.length;D<X;D++)ta=w.value[oa[D]],S=ta[0],T=ta[1],U=ta[2],w.array[x]=S.x,w.array[x+1]=S.y,w.array[x+2]=S.z,w.array[x+3]=S.w,w.array[x+4]=T.x,w.array[x+5]=T.y,w.array[x+6]=T.z,w.array[x+7]=T.w,w.array[x+8]=U.x,w.array[x+9]=U.y,w.array[x+10]=U.z,w.array[x+11]=U.w,x+=12;D=0;for(X=pa.length;D<X;D++)ta=w.value[pa[D]],S=ta[0],T=ta[1],U=ta[2],ka=ta[3],w.array[x]=S.x,w.array[x+1]=S.y,w.array[x+2]=\r\nS.z,w.array[x+3]=S.w,w.array[x+4]=T.x,w.array[x+5]=T.y,w.array[x+6]=T.z,w.array[x+7]=T.w,w.array[x+8]=U.x,w.array[x+9]=U.y,w.array[x+10]=U.z,w.array[x+11]=U.w,w.array[x+12]=ka.x,w.array[x+13]=ka.y,w.array[x+14]=ka.z,w.array[x+15]=ka.w,x+=16}k.bindBuffer(k.ARRAY_BUFFER,w.buffer);k.bufferData(k.ARRAY_BUFFER,w.array,mb)}}yb&&(delete ma.__inittedArrays,delete ma.__colorArray,delete ma.__normalArray,delete ma.__tangentArray,delete ma.__uvArray,delete ma.__uv2Array,delete ma.__faceArray,delete ma.__vertexArray,\r\ndelete ma.__lineArray,delete ma.__skinIndexArray,delete ma.__skinWeightArray)}}ga.verticesNeedUpdate=!1;ga.morphTargetsNeedUpdate=!1;ga.elementsNeedUpdate=!1;ga.uvsNeedUpdate=!1;ga.normalsNeedUpdate=!1;ga.colorsNeedUpdate=!1;ga.tangentsNeedUpdate=!1;ab.attributes&&q(ab)}else if(ub instanceof THREE.Ribbon){if(ga.verticesNeedUpdate||ga.colorsNeedUpdate){var cc=ga,cd=k.DYNAMIC_DRAW,zc=void 0,Ac=void 0,Jc=void 0,dc=void 0,Kc=void 0,dd=cc.vertices,ed=cc.colors,kd=dd.length,ld=ed.length,Lc=cc.__vertexArray,\r\nMc=cc.__colorArray,md=cc.colorsNeedUpdate;if(cc.verticesNeedUpdate){for(zc=0;zc<kd;zc++)Jc=dd[zc],dc=3*zc,Lc[dc]=Jc.x,Lc[dc+1]=Jc.y,Lc[dc+2]=Jc.z;k.bindBuffer(k.ARRAY_BUFFER,cc.__webglVertexBuffer);k.bufferData(k.ARRAY_BUFFER,Lc,cd)}if(md){for(Ac=0;Ac<ld;Ac++)Kc=ed[Ac],dc=3*Ac,Mc[dc]=Kc.r,Mc[dc+1]=Kc.g,Mc[dc+2]=Kc.b;k.bindBuffer(k.ARRAY_BUFFER,cc.__webglColorBuffer);k.bufferData(k.ARRAY_BUFFER,Mc,cd)}}ga.verticesNeedUpdate=!1;ga.colorsNeedUpdate=!1}else if(ub instanceof THREE.Line){ab=c(ub,gb);eb=\r\nab.attributes&&o(ab);if(ga.verticesNeedUpdate||ga.colorsNeedUpdate||eb){var Vb=ga,$c=k.DYNAMIC_DRAW,Bc=void 0,Cc=void 0,Nc=void 0,Aa=void 0,Oc=void 0,fd=Vb.vertices,gd=Vb.colors,nd=fd.length,od=gd.length,Pc=Vb.__vertexArray,Qc=Vb.__colorArray,pd=Vb.colorsNeedUpdate,ad=Vb.__webglCustomAttributesList,Rc=void 0,hd=void 0,Qa=void 0,qc=void 0,cb=void 0,va=void 0;if(Vb.verticesNeedUpdate){for(Bc=0;Bc<nd;Bc++)Nc=fd[Bc],Aa=3*Bc,Pc[Aa]=Nc.x,Pc[Aa+1]=Nc.y,Pc[Aa+2]=Nc.z;k.bindBuffer(k.ARRAY_BUFFER,Vb.__webglVertexBuffer);\r\nk.bufferData(k.ARRAY_BUFFER,Pc,$c)}if(pd){for(Cc=0;Cc<od;Cc++)Oc=gd[Cc],Aa=3*Cc,Qc[Aa]=Oc.r,Qc[Aa+1]=Oc.g,Qc[Aa+2]=Oc.b;k.bindBuffer(k.ARRAY_BUFFER,Vb.__webglColorBuffer);k.bufferData(k.ARRAY_BUFFER,Qc,$c)}if(ad){Rc=0;for(hd=ad.length;Rc<hd;Rc++)if(va=ad[Rc],va.needsUpdate&&(void 0===va.boundTo||\"vertices\"===va.boundTo)){Aa=0;qc=va.value.length;if(1===va.size)for(Qa=0;Qa<qc;Qa++)va.array[Qa]=va.value[Qa];else if(2===va.size)for(Qa=0;Qa<qc;Qa++)cb=va.value[Qa],va.array[Aa]=cb.x,va.array[Aa+1]=cb.y,\r\nAa+=2;else if(3===va.size)if(\"c\"===va.type)for(Qa=0;Qa<qc;Qa++)cb=va.value[Qa],va.array[Aa]=cb.r,va.array[Aa+1]=cb.g,va.array[Aa+2]=cb.b,Aa+=3;else for(Qa=0;Qa<qc;Qa++)cb=va.value[Qa],va.array[Aa]=cb.x,va.array[Aa+1]=cb.y,va.array[Aa+2]=cb.z,Aa+=3;else if(4===va.size)for(Qa=0;Qa<qc;Qa++)cb=va.value[Qa],va.array[Aa]=cb.x,va.array[Aa+1]=cb.y,va.array[Aa+2]=cb.z,va.array[Aa+3]=cb.w,Aa+=4;k.bindBuffer(k.ARRAY_BUFFER,va.buffer);k.bufferData(k.ARRAY_BUFFER,va.array,$c)}}}ga.verticesNeedUpdate=!1;ga.colorsNeedUpdate=\r\n!1;ab.attributes&&q(ab)}else ub instanceof THREE.ParticleSystem&&(ga instanceof THREE.BufferGeometry?((ga.verticesNeedUpdate||ga.colorsNeedUpdate)&&h(ga,k.DYNAMIC_DRAW,!ga.dynamic),ga.verticesNeedUpdate=!1,ga.colorsNeedUpdate=!1):(ab=c(ub,gb),eb=ab.attributes&&o(ab),(ga.verticesNeedUpdate||ga.colorsNeedUpdate||ub.sortParticles||eb)&&g(ga,k.DYNAMIC_DRAW,ub),ga.verticesNeedUpdate=!1,ga.colorsNeedUpdate=!1,ab.attributes&&q(ab)))}};this.initMaterial=function(a,b,c,d){var e,f,g,h,i,j,l,m,n;a instanceof\r\nTHREE.MeshDepthMaterial?n=\"depth\":a instanceof THREE.MeshNormalMaterial?n=\"normal\":a instanceof THREE.MeshBasicMaterial?n=\"basic\":a instanceof THREE.MeshLambertMaterial?n=\"lambert\":a instanceof THREE.MeshPhongMaterial?n=\"phong\":a instanceof THREE.LineBasicMaterial?n=\"basic\":a instanceof THREE.ParticleBasicMaterial&&(n=\"particle_basic\");if(n){var o=THREE.ShaderLib[n];a.uniforms=THREE.UniformsUtils.clone(o.uniforms);a.vertexShader=o.vertexShader;a.fragmentShader=o.fragmentShader}var p,q,s;e=p=q=s=o=\r\n0;for(f=b.length;e<f;e++)g=b[e],g.onlyShadow||(g instanceof THREE.DirectionalLight&&p++,g instanceof THREE.PointLight&&q++,g instanceof THREE.SpotLight&&s++,g instanceof THREE.HemisphereLight&&o++);q+s+p+o<=ea?e=p:(e=Math.ceil(ea*p/(q+p)),s=q=ea-e,o=e);f=q;g=s;h=o;o=p=0;for(s=b.length;o<s;o++)q=b[o],q.castShadow&&(q instanceof THREE.SpotLight&&p++,q instanceof THREE.DirectionalLight&&!q.shadowCascade&&p++);m=p;ic&&d&&d.useVertexTexture?l=1024:(b=k.getParameter(k.MAX_VERTEX_UNIFORM_VECTORS),b=Math.floor((b-\r\n20)/4),void 0!==d&&d instanceof THREE.SkinnedMesh&&(b=Math.min(d.bones.length,b),b<d.bones.length&&console.warn(\"WebGLRenderer: too many bones - \"+d.bones.length+\", this GPU supports just \"+b+\" (try OpenGL instead of ANGLE)\")),l=b);var r;a:{q=a.fragmentShader;s=a.vertexShader;o=a.uniforms;b=a.attributes;p=a.defines;var c={map:!!a.map,envMap:!!a.envMap,lightMap:!!a.lightMap,bumpMap:!!a.bumpMap,normalMap:!!a.normalMap,specularMap:!!a.specularMap,vertexColors:a.vertexColors,fog:c,useFog:a.fog,sizeAttenuation:a.sizeAttenuation,\r\nskinning:a.skinning,maxBones:l,useVertexTexture:ic&&d&&d.useVertexTexture,boneTextureWidth:d&&d.boneTextureWidth,boneTextureHeight:d&&d.boneTextureHeight,morphTargets:a.morphTargets,morphNormals:a.morphNormals,maxMorphTargets:this.maxMorphTargets,maxMorphNormals:this.maxMorphNormals,maxDirLights:e,maxPointLights:f,maxSpotLights:g,maxHemiLights:h,maxShadows:m,shadowMapEnabled:this.shadowMapEnabled&&d.receiveShadow,shadowMapSoft:this.shadowMapSoft,shadowMapDebug:this.shadowMapDebug,shadowMapCascade:this.shadowMapCascade,\r\nalphaTest:a.alphaTest,metal:a.metal,perPixel:a.perPixel,wrapAround:a.wrapAround,doubleSided:a.side===THREE.DoubleSide,flipSided:a.side===THREE.BackSide},t,u,v,d=[];n?d.push(n):(d.push(q),d.push(s));for(u in p)d.push(u),d.push(p[u]);for(t in c)d.push(t),d.push(c[t]);n=d.join();t=0;for(u=qa.length;t<u;t++)if(d=qa[t],d.code===n){d.usedTimes++;r=d.program;break a}t=[];for(v in p)u=p[v],!1!==u&&(u=\"#define \"+v+\" \"+u,t.push(u));u=t.join(\"\\n\");v=k.createProgram();t=[\"precision \"+K+\" float;\",u,hc?\"#define VERTEX_TEXTURES\":\r\n\"\",Q.gammaInput?\"#define GAMMA_INPUT\":\"\",Q.gammaOutput?\"#define GAMMA_OUTPUT\":\"\",Q.physicallyBasedShading?\"#define PHYSICALLY_BASED_SHADING\":\"\",\"#define MAX_DIR_LIGHTS \"+c.maxDirLights,\"#define MAX_POINT_LIGHTS \"+c.maxPointLights,\"#define MAX_SPOT_LIGHTS \"+c.maxSpotLights,\"#define MAX_HEMI_LIGHTS \"+c.maxHemiLights,\"#define MAX_SHADOWS \"+c.maxShadows,\"#define MAX_BONES \"+c.maxBones,c.map?\"#define USE_MAP\":\"\",c.envMap?\"#define USE_ENVMAP\":\"\",c.lightMap?\"#define USE_LIGHTMAP\":\"\",c.bumpMap?\"#define USE_BUMPMAP\":\r\n\"\",c.normalMap?\"#define USE_NORMALMAP\":\"\",c.specularMap?\"#define USE_SPECULARMAP\":\"\",c.vertexColors?\"#define USE_COLOR\":\"\",c.skinning?\"#define USE_SKINNING\":\"\",c.useVertexTexture?\"#define BONE_TEXTURE\":\"\",c.boneTextureWidth?\"#define N_BONE_PIXEL_X \"+c.boneTextureWidth.toFixed(1):\"\",c.boneTextureHeight?\"#define N_BONE_PIXEL_Y \"+c.boneTextureHeight.toFixed(1):\"\",c.morphTargets?\"#define USE_MORPHTARGETS\":\"\",c.morphNormals?\"#define USE_MORPHNORMALS\":\"\",c.perPixel?\"#define PHONG_PER_PIXEL\":\"\",c.wrapAround?\r\n\"#define WRAP_AROUND\":\"\",c.doubleSided?\"#define DOUBLE_SIDED\":\"\",c.flipSided?\"#define FLIP_SIDED\":\"\",c.shadowMapEnabled?\"#define USE_SHADOWMAP\":\"\",c.shadowMapSoft?\"#define SHADOWMAP_SOFT\":\"\",c.shadowMapDebug?\"#define SHADOWMAP_DEBUG\":\"\",c.shadowMapCascade?\"#define SHADOWMAP_CASCADE\":\"\",c.sizeAttenuation?\"#define USE_SIZEATTENUATION\":\"\",\"uniform mat4 modelMatrix;\\nuniform mat4 modelViewMatrix;\\nuniform mat4 projectionMatrix;\\nuniform mat4 viewMatrix;\\nuniform mat3 normalMatrix;\\nuniform vec3 cameraPosition;\\nattribute vec3 position;\\nattribute vec3 normal;\\nattribute vec2 uv;\\nattribute vec2 uv2;\\n#ifdef USE_COLOR\\nattribute vec3 color;\\n#endif\\n#ifdef USE_MORPHTARGETS\\nattribute vec3 morphTarget0;\\nattribute vec3 morphTarget1;\\nattribute vec3 morphTarget2;\\nattribute vec3 morphTarget3;\\n#ifdef USE_MORPHNORMALS\\nattribute vec3 morphNormal0;\\nattribute vec3 morphNormal1;\\nattribute vec3 morphNormal2;\\nattribute vec3 morphNormal3;\\n#else\\nattribute vec3 morphTarget4;\\nattribute vec3 morphTarget5;\\nattribute vec3 morphTarget6;\\nattribute vec3 morphTarget7;\\n#endif\\n#endif\\n#ifdef USE_SKINNING\\nattribute vec4 skinIndex;\\nattribute vec4 skinWeight;\\n#endif\\n\"].join(\"\\n\");\r\nu=[\"precision \"+K+\" float;\",c.bumpMap||c.normalMap?\"#extension GL_OES_standard_derivatives : enable\":\"\",u,\"#define MAX_DIR_LIGHTS \"+c.maxDirLights,\"#define MAX_POINT_LIGHTS \"+c.maxPointLights,\"#define MAX_SPOT_LIGHTS \"+c.maxSpotLights,\"#define MAX_HEMI_LIGHTS \"+c.maxHemiLights,\"#define MAX_SHADOWS \"+c.maxShadows,c.alphaTest?\"#define ALPHATEST \"+c.alphaTest:\"\",Q.gammaInput?\"#define GAMMA_INPUT\":\"\",Q.gammaOutput?\"#define GAMMA_OUTPUT\":\"\",Q.physicallyBasedShading?\"#define PHYSICALLY_BASED_SHADING\":\"\",\r\nc.useFog&&c.fog?\"#define USE_FOG\":\"\",c.useFog&&c.fog instanceof THREE.FogExp2?\"#define FOG_EXP2\":\"\",c.map?\"#define USE_MAP\":\"\",c.envMap?\"#define USE_ENVMAP\":\"\",c.lightMap?\"#define USE_LIGHTMAP\":\"\",c.bumpMap?\"#define USE_BUMPMAP\":\"\",c.normalMap?\"#define USE_NORMALMAP\":\"\",c.specularMap?\"#define USE_SPECULARMAP\":\"\",c.vertexColors?\"#define USE_COLOR\":\"\",c.metal?\"#define METAL\":\"\",c.perPixel?\"#define PHONG_PER_PIXEL\":\"\",c.wrapAround?\"#define WRAP_AROUND\":\"\",c.doubleSided?\"#define DOUBLE_SIDED\":\"\",c.flipSided?\r\n\"#define FLIP_SIDED\":\"\",c.shadowMapEnabled?\"#define USE_SHADOWMAP\":\"\",c.shadowMapSoft?\"#define SHADOWMAP_SOFT\":\"\",c.shadowMapDebug?\"#define SHADOWMAP_DEBUG\":\"\",c.shadowMapCascade?\"#define SHADOWMAP_CASCADE\":\"\",\"uniform mat4 viewMatrix;\\nuniform vec3 cameraPosition;\\n\"].join(\"\\n\");u=C(\"fragment\",u+q);t=C(\"vertex\",t+s);k.attachShader(v,t);k.attachShader(v,u);k.linkProgram(v);k.getProgramParameter(v,k.LINK_STATUS)||console.error(\"Could not initialise shader\\nVALIDATE_STATUS: \"+k.getProgramParameter(v,\r\nk.VALIDATE_STATUS)+\", gl error [\"+k.getError()+\"]\");k.deleteShader(u);k.deleteShader(t);v.uniforms={};v.attributes={};var y;t=\"viewMatrix modelViewMatrix projectionMatrix normalMatrix modelMatrix cameraPosition morphTargetInfluences\".split(\" \");c.useVertexTexture?t.push(\"boneTexture\"):t.push(\"boneGlobalMatrices\");for(y in o)t.push(y);y=t;t=0;for(u=y.length;t<u;t++)d=y[t],v.uniforms[d]=k.getUniformLocation(v,d);t=\"position normal uv uv2 tangent color skinIndex skinWeight\".split(\" \");for(y=0;y<c.maxMorphTargets;y++)t.push(\"morphTarget\"+\r\ny);for(y=0;y<c.maxMorphNormals;y++)t.push(\"morphNormal\"+y);for(r in b)t.push(r);r=t;y=0;for(t=r.length;y<t;y++)u=r[y],v.attributes[u]=k.getAttribLocation(v,u);v.id=la++;qa.push({program:v,code:n,usedTimes:1});Q.info.memory.programs=qa.length;r=v}a.program=r;r=a.program.attributes;0<=r.position&&k.enableVertexAttribArray(r.position);0<=r.color&&k.enableVertexAttribArray(r.color);0<=r.normal&&k.enableVertexAttribArray(r.normal);0<=r.tangent&&k.enableVertexAttribArray(r.tangent);a.skinning&&(0<=r.skinIndex&&\r\n0<=r.skinWeight)&&(k.enableVertexAttribArray(r.skinIndex),k.enableVertexAttribArray(r.skinWeight));if(a.attributes)for(j in a.attributes)void 0!==r[j]&&0<=r[j]&&k.enableVertexAttribArray(r[j]);if(a.morphTargets){a.numSupportedMorphTargets=0;v=\"morphTarget\";for(j=0;j<this.maxMorphTargets;j++)y=v+j,0<=r[y]&&(k.enableVertexAttribArray(r[y]),a.numSupportedMorphTargets++)}if(a.morphNormals){a.numSupportedMorphNormals=0;v=\"morphNormal\";for(j=0;j<this.maxMorphNormals;j++)y=v+j,0<=r[y]&&(k.enableVertexAttribArray(r[y]),\r\na.numSupportedMorphNormals++)}a.uniformsList=[];for(i in a.uniforms)a.uniformsList.push([a.uniforms[i],i])};this.setFaceCulling=function(a,b){a?(!b||\"ccw\"===b?k.frontFace(k.CCW):k.frontFace(k.CW),\"back\"===a?k.cullFace(k.BACK):\"front\"===a?k.cullFace(k.FRONT):k.cullFace(k.FRONT_AND_BACK),k.enable(k.CULL_FACE)):k.disable(k.CULL_FACE)};this.setMaterialFaces=function(a){var b=a.side===THREE.DoubleSide,a=a.side===THREE.BackSide;Ga!==b&&(b?k.disable(k.CULL_FACE):k.enable(k.CULL_FACE),Ga=b);Pa!==a&&(a?k.frontFace(k.CW):\r\nk.frontFace(k.CCW),Pa=a)};this.setDepthTest=function(a){ib!==a&&(a?k.enable(k.DEPTH_TEST):k.disable(k.DEPTH_TEST),ib=a)};this.setDepthWrite=function(a){Ra!==a&&(k.depthMask(a),Ra=a)};this.setBlending=function(a,b,c,d){a!==Ia&&(a===THREE.NoBlending?k.disable(k.BLEND):a===THREE.AdditiveBlending?(k.enable(k.BLEND),k.blendEquation(k.FUNC_ADD),k.blendFunc(k.SRC_ALPHA,k.ONE)):a===THREE.SubtractiveBlending?(k.enable(k.BLEND),k.blendEquation(k.FUNC_ADD),k.blendFunc(k.ZERO,k.ONE_MINUS_SRC_COLOR)):a===THREE.MultiplyBlending?\r\n(k.enable(k.BLEND),k.blendEquation(k.FUNC_ADD),k.blendFunc(k.ZERO,k.SRC_COLOR)):a===THREE.CustomBlending?k.enable(k.BLEND):(k.enable(k.BLEND),k.blendEquationSeparate(k.FUNC_ADD,k.FUNC_ADD),k.blendFuncSeparate(k.SRC_ALPHA,k.ONE_MINUS_SRC_ALPHA,k.ONE,k.ONE_MINUS_SRC_ALPHA)),Ia=a);if(a===THREE.CustomBlending){if(b!==Ua&&(k.blendEquation(E(b)),Ua=b),c!==na||d!==Va)k.blendFunc(E(c),E(d)),na=c,Va=d}else Va=na=Ua=null};this.setTexture=function(a,b){if(a.needsUpdate){a.__webglInit||(a.__webglInit=!0,a.__webglTexture=\r\nk.createTexture(),Q.info.memory.textures++);k.activeTexture(k.TEXTURE0+b);k.bindTexture(k.TEXTURE_2D,a.__webglTexture);k.pixelStorei(k.UNPACK_FLIP_Y_WEBGL,a.flipY);k.pixelStorei(k.UNPACK_PREMULTIPLY_ALPHA_WEBGL,a.premultiplyAlpha);var c=a.image,d=0===(c.width&c.width-1)&&0===(c.height&c.height-1),e=E(a.format),f=E(a.type);G(k.TEXTURE_2D,a,d);if(a instanceof THREE.CompressedTexture)for(var f=a.mipmaps,g=0,h=f.length;g<h;g++)c=f[g],k.compressedTexImage2D(k.TEXTURE_2D,g,e,c.width,c.height,0,c.data);\r\nelse a instanceof THREE.DataTexture?k.texImage2D(k.TEXTURE_2D,0,e,c.width,c.height,0,e,f,c.data):k.texImage2D(k.TEXTURE_2D,0,e,e,f,a.image);a.generateMipmaps&&d&&k.generateMipmap(k.TEXTURE_2D);a.needsUpdate=!1;if(a.onUpdate)a.onUpdate()}else k.activeTexture(k.TEXTURE0+b),k.bindTexture(k.TEXTURE_2D,a.__webglTexture)};this.setRenderTarget=function(a){var b=a instanceof THREE.WebGLRenderTargetCube;if(a&&!a.__webglFramebuffer){void 0===a.depthBuffer&&(a.depthBuffer=!0);void 0===a.stencilBuffer&&(a.stencilBuffer=\r\n!0);a.__webglTexture=k.createTexture();var c=0===(a.width&a.width-1)&&0===(a.height&a.height-1),d=E(a.format),e=E(a.type);if(b){a.__webglFramebuffer=[];a.__webglRenderbuffer=[];k.bindTexture(k.TEXTURE_CUBE_MAP,a.__webglTexture);G(k.TEXTURE_CUBE_MAP,a,c);for(var f=0;6>f;f++){a.__webglFramebuffer[f]=k.createFramebuffer();a.__webglRenderbuffer[f]=k.createRenderbuffer();k.texImage2D(k.TEXTURE_CUBE_MAP_POSITIVE_X+f,0,d,a.width,a.height,0,d,e,null);var g=a,h=k.TEXTURE_CUBE_MAP_POSITIVE_X+f;k.bindFramebuffer(k.FRAMEBUFFER,\r\na.__webglFramebuffer[f]);k.framebufferTexture2D(k.FRAMEBUFFER,k.COLOR_ATTACHMENT0,h,g.__webglTexture,0);H(a.__webglRenderbuffer[f],a)}c&&k.generateMipmap(k.TEXTURE_CUBE_MAP)}else a.__webglFramebuffer=k.createFramebuffer(),a.__webglRenderbuffer=k.createRenderbuffer(),k.bindTexture(k.TEXTURE_2D,a.__webglTexture),G(k.TEXTURE_2D,a,c),k.texImage2D(k.TEXTURE_2D,0,d,a.width,a.height,0,d,e,null),d=k.TEXTURE_2D,k.bindFramebuffer(k.FRAMEBUFFER,a.__webglFramebuffer),k.framebufferTexture2D(k.FRAMEBUFFER,k.COLOR_ATTACHMENT0,\r\nd,a.__webglTexture,0),H(a.__webglRenderbuffer,a),c&&k.generateMipmap(k.TEXTURE_2D);b?k.bindTexture(k.TEXTURE_CUBE_MAP,null):k.bindTexture(k.TEXTURE_2D,null);k.bindRenderbuffer(k.RENDERBUFFER,null);k.bindFramebuffer(k.FRAMEBUFFER,null)}a?(b=b?a.__webglFramebuffer[a.activeCubeFace]:a.__webglFramebuffer,c=a.width,a=a.height,e=d=0):(b=null,c=wa,a=wb,d=$a,e=Ja);b!==fa&&(k.bindFramebuffer(k.FRAMEBUFFER,b),k.viewport(d,e,c,a),fa=b);Da=c;qb=a};this.shadowMapPlugin=new THREE.ShadowMapPlugin;this.addPrePlugin(this.shadowMapPlugin);\r\nthis.addPostPlugin(new THREE.SpritePlugin);this.addPostPlugin(new THREE.LensFlarePlugin)};\r\nTHREE.WebGLRenderTarget=function(a,b,c){this.width=a;this.height=b;c=c||{};this.wrapS=void 0!==c.wrapS?c.wrapS:THREE.ClampToEdgeWrapping;this.wrapT=void 0!==c.wrapT?c.wrapT:THREE.ClampToEdgeWrapping;this.magFilter=void 0!==c.magFilter?c.magFilter:THREE.LinearFilter;this.minFilter=void 0!==c.minFilter?c.minFilter:THREE.LinearMipMapLinearFilter;this.anisotropy=void 0!==c.anisotropy?c.anisotropy:1;this.offset=new THREE.Vector2(0,0);this.repeat=new THREE.Vector2(1,1);this.format=void 0!==c.format?c.format:\r\nTHREE.RGBAFormat;this.type=void 0!==c.type?c.type:THREE.UnsignedByteType;this.depthBuffer=void 0!==c.depthBuffer?c.depthBuffer:!0;this.stencilBuffer=void 0!==c.stencilBuffer?c.stencilBuffer:!0;this.generateMipmaps=!0};\r\nTHREE.WebGLRenderTarget.prototype.clone=function(){var a=new THREE.WebGLRenderTarget(this.width,this.height);a.wrapS=this.wrapS;a.wrapT=this.wrapT;a.magFilter=this.magFilter;a.anisotropy=this.anisotropy;a.minFilter=this.minFilter;a.offset.copy(this.offset);a.repeat.copy(this.repeat);a.format=this.format;a.type=this.type;a.depthBuffer=this.depthBuffer;a.stencilBuffer=this.stencilBuffer;a.generateMipmaps=this.generateMipmaps;return a};\r\nTHREE.WebGLRenderTargetCube=function(a,b,c){THREE.WebGLRenderTarget.call(this,a,b,c);this.activeCubeFace=0};THREE.WebGLRenderTargetCube.prototype=Object.create(THREE.WebGLRenderTarget.prototype);THREE.RenderableVertex=function(){this.positionWorld=new THREE.Vector3;this.positionScreen=new THREE.Vector4;this.visible=!0};THREE.RenderableVertex.prototype.copy=function(a){this.positionWorld.copy(a.positionWorld);this.positionScreen.copy(a.positionScreen)};\r\nTHREE.RenderableFace3=function(){this.v1=new THREE.RenderableVertex;this.v2=new THREE.RenderableVertex;this.v3=new THREE.RenderableVertex;this.centroidWorld=new THREE.Vector3;this.centroidScreen=new THREE.Vector3;this.normalWorld=new THREE.Vector3;this.vertexNormalsWorld=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3];this.vertexNormalsLength=0;this.material=this.color=null;this.uvs=[[]];this.z=null};\r\nTHREE.RenderableFace4=function(){this.v1=new THREE.RenderableVertex;this.v2=new THREE.RenderableVertex;this.v3=new THREE.RenderableVertex;this.v4=new THREE.RenderableVertex;this.centroidWorld=new THREE.Vector3;this.centroidScreen=new THREE.Vector3;this.normalWorld=new THREE.Vector3;this.vertexNormalsWorld=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3];this.vertexNormalsLength=0;this.material=this.color=null;this.uvs=[[]];this.z=null};\r\nTHREE.RenderableObject=function(){this.z=this.object=null};THREE.RenderableParticle=function(){this.rotation=this.z=this.y=this.x=this.object=null;this.scale=new THREE.Vector2;this.material=null};THREE.RenderableLine=function(){this.z=null;this.v1=new THREE.RenderableVertex;this.v2=new THREE.RenderableVertex;this.material=null};\r\nTHREE.ColorUtils={adjustHSV:function(a,b,c,d){var e=THREE.ColorUtils.__hsv;THREE.ColorUtils.rgbToHsv(a,e);e.h=THREE.Math.clamp(e.h+b,0,1);e.s=THREE.Math.clamp(e.s+c,0,1);e.v=THREE.Math.clamp(e.v+d,0,1);a.setHSV(e.h,e.s,e.v)},rgbToHsv:function(a,b){var c=a.r,d=a.g,e=a.b,f=Math.max(Math.max(c,d),e),g=Math.min(Math.min(c,d),e);if(g===f)g=c=0;else{var h=f-g,g=h/f,c=(c===f?(d-e)/h:d===f?2+(e-c)/h:4+(c-d)/h)/6;0>c&&(c+=1);1<c&&(c-=1)}void 0===b&&(b={h:0,s:0,v:0});b.h=c;b.s=g;b.v=f;return b}};\r\nTHREE.ColorUtils.__hsv={h:0,s:0,v:0};\r\nTHREE.GeometryUtils={merge:function(a,b){for(var c,d,e=a.vertices.length,f=b instanceof THREE.Mesh?b.geometry:b,g=a.vertices,h=f.vertices,i=a.faces,j=f.faces,l=a.faceVertexUvs[0],m=f.faceVertexUvs[0],n={},p=0;p<a.materials.length;p++)n[a.materials[p].id]=p;b instanceof THREE.Mesh&&(b.matrixAutoUpdate&&b.updateMatrix(),c=b.matrix,d=new THREE.Matrix4,d.extractRotation(c,b.scale));for(var p=0,o=h.length;p<o;p++){var q=h[p].clone();c&&c.multiplyVector3(q);g.push(q)}p=0;for(o=j.length;p<o;p++){var g=j[p],\r\nr,t,B=g.vertexNormals,u=g.vertexColors;g instanceof THREE.Face3?r=new THREE.Face3(g.a+e,g.b+e,g.c+e):g instanceof THREE.Face4&&(r=new THREE.Face4(g.a+e,g.b+e,g.c+e,g.d+e));r.normal.copy(g.normal);d&&d.multiplyVector3(r.normal);h=0;for(q=B.length;h<q;h++)t=B[h].clone(),d&&d.multiplyVector3(t),r.vertexNormals.push(t);r.color.copy(g.color);h=0;for(q=u.length;h<q;h++)t=u[h],r.vertexColors.push(t.clone());void 0!==g.materialIndex&&(h=f.materials[g.materialIndex],q=h.id,u=n[q],void 0===u&&(u=a.materials.length,\r\nn[q]=u,a.materials.push(h)),r.materialIndex=u);r.centroid.copy(g.centroid);c&&c.multiplyVector3(r.centroid);i.push(r)}p=0;for(o=m.length;p<o;p++){c=m[p];d=[];h=0;for(q=c.length;h<q;h++)d.push(new THREE.UV(c[h].u,c[h].v));l.push(d)}},clone:function(a){var b=new THREE.Geometry,c,d=a.vertices,e=a.faces,f=a.faceVertexUvs[0];a.materials&&(b.materials=a.materials.slice());a=0;for(c=d.length;a<c;a++)b.vertices.push(d[a].clone());a=0;for(c=e.length;a<c;a++)b.faces.push(e[a].clone());a=0;for(c=f.length;a<\r\nc;a++){for(var d=f[a],e=[],g=0,h=d.length;g<h;g++)e.push(new THREE.UV(d[g].u,d[g].v));b.faceVertexUvs[0].push(e)}return b},randomPointInTriangle:function(a,b,c){var d,e,f,g=new THREE.Vector3,h=THREE.GeometryUtils.__v1;d=THREE.GeometryUtils.random();e=THREE.GeometryUtils.random();1<d+e&&(d=1-d,e=1-e);f=1-d-e;g.copy(a);g.multiplyScalar(d);h.copy(b);h.multiplyScalar(e);g.addSelf(h);h.copy(c);h.multiplyScalar(f);g.addSelf(h);return g},randomPointInFace:function(a,b,c){var d,e,f;if(a instanceof THREE.Face3)return d=\r\nb.vertices[a.a],e=b.vertices[a.b],f=b.vertices[a.c],THREE.GeometryUtils.randomPointInTriangle(d,e,f);if(a instanceof THREE.Face4){d=b.vertices[a.a];e=b.vertices[a.b];f=b.vertices[a.c];var b=b.vertices[a.d],g;c?a._area1&&a._area2?(c=a._area1,g=a._area2):(c=THREE.GeometryUtils.triangleArea(d,e,b),g=THREE.GeometryUtils.triangleArea(e,f,b),a._area1=c,a._area2=g):(c=THREE.GeometryUtils.triangleArea(d,e,b),g=THREE.GeometryUtils.triangleArea(e,f,b));return THREE.GeometryUtils.random()*(c+g)<c?THREE.GeometryUtils.randomPointInTriangle(d,\r\ne,b):THREE.GeometryUtils.randomPointInTriangle(e,f,b)}},randomPointsInGeometry:function(a,b){function c(a){function b(c,d){if(d<c)return c;var e=c+Math.floor((d-c)/2);return j[e]>a?b(c,e-1):j[e]<a?b(e+1,d):e}return b(0,j.length-1)}var d,e,f=a.faces,g=a.vertices,h=f.length,i=0,j=[],l,m,n,p;for(e=0;e<h;e++)d=f[e],d instanceof THREE.Face3?(l=g[d.a],m=g[d.b],n=g[d.c],d._area=THREE.GeometryUtils.triangleArea(l,m,n)):d instanceof THREE.Face4&&(l=g[d.a],m=g[d.b],n=g[d.c],p=g[d.d],d._area1=THREE.GeometryUtils.triangleArea(l,\r\nm,p),d._area2=THREE.GeometryUtils.triangleArea(m,n,p),d._area=d._area1+d._area2),i+=d._area,j[e]=i;d=[];for(e=0;e<b;e++)g=THREE.GeometryUtils.random()*i,g=c(g),d[e]=THREE.GeometryUtils.randomPointInFace(f[g],a,!0);return d},triangleArea:function(a,b,c){var d,e=THREE.GeometryUtils.__v1;e.sub(a,b);d=e.length();e.sub(a,c);a=e.length();e.sub(b,c);c=e.length();b=0.5*(d+a+c);return Math.sqrt(b*(b-d)*(b-a)*(b-c))},center:function(a){a.computeBoundingBox();var b=a.boundingBox,c=new THREE.Vector3;c.add(b.min,\r\nb.max);c.multiplyScalar(-0.5);a.applyMatrix((new THREE.Matrix4).makeTranslation(c.x,c.y,c.z));a.computeBoundingBox();return c},normalizeUVs:function(a){for(var a=a.faceVertexUvs[0],b=0,c=a.length;b<c;b++)for(var d=a[b],e=0,f=d.length;e<f;e++)if(1!==d[e].u&&(d[e].u-=Math.floor(d[e].u)),1!==d[e].v)d[e].v-=Math.floor(d[e].v)},triangulateQuads:function(a){var b,c,d,e,f=[],g=[],h=[];b=0;for(c=a.faceUvs.length;b<c;b++)g[b]=[];b=0;for(c=a.faceVertexUvs.length;b<c;b++)h[b]=[];b=0;for(c=a.faces.length;b<c;b++)if(d=\r\na.faces[b],d instanceof THREE.Face4){e=d.a;var i=d.b,j=d.c,l=d.d,m=new THREE.Face3,n=new THREE.Face3;m.color.copy(d.color);n.color.copy(d.color);m.materialIndex=d.materialIndex;n.materialIndex=d.materialIndex;m.a=e;m.b=i;m.c=l;n.a=i;n.b=j;n.c=l;4===d.vertexColors.length&&(m.vertexColors[0]=d.vertexColors[0].clone(),m.vertexColors[1]=d.vertexColors[1].clone(),m.vertexColors[2]=d.vertexColors[3].clone(),n.vertexColors[0]=d.vertexColors[1].clone(),n.vertexColors[1]=d.vertexColors[2].clone(),n.vertexColors[2]=\r\nd.vertexColors[3].clone());f.push(m,n);d=0;for(e=a.faceVertexUvs.length;d<e;d++)a.faceVertexUvs[d].length&&(m=a.faceVertexUvs[d][b],i=m[1],j=m[2],l=m[3],m=[m[0].clone(),i.clone(),l.clone()],i=[i.clone(),j.clone(),l.clone()],h[d].push(m,i));d=0;for(e=a.faceUvs.length;d<e;d++)a.faceUvs[d].length&&(i=a.faceUvs[d][b],g[d].push(i,i))}else{f.push(d);d=0;for(e=a.faceUvs.length;d<e;d++)g[d].push(a.faceUvs[d][b]);d=0;for(e=a.faceVertexUvs.length;d<e;d++)h[d].push(a.faceVertexUvs[d][b])}a.faces=f;a.faceUvs=\r\ng;a.faceVertexUvs=h;a.computeCentroids();a.computeFaceNormals();a.computeVertexNormals();a.hasTangents&&a.computeTangents()},explode:function(a){for(var b=[],c=0,d=a.faces.length;c<d;c++){var e=b.length,f=a.faces[c];if(f instanceof THREE.Face4){var g=f.a,h=f.b,i=f.c,g=a.vertices[g],h=a.vertices[h],i=a.vertices[i],j=a.vertices[f.d];b.push(g.clone());b.push(h.clone());b.push(i.clone());b.push(j.clone());f.a=e;f.b=e+1;f.c=e+2;f.d=e+3}else g=f.a,h=f.b,i=f.c,g=a.vertices[g],h=a.vertices[h],i=a.vertices[i],\r\nb.push(g.clone()),b.push(h.clone()),b.push(i.clone()),f.a=e,f.b=e+1,f.c=e+2}a.vertices=b;delete a.__tmpVertices},tessellate:function(a,b){var c,d,e,f,g,h,i,j,l,m,n,p,o,q,r,t,B,u,s,z=[],A=[];c=0;for(d=a.faceVertexUvs.length;c<d;c++)A[c]=[];c=0;for(d=a.faces.length;c<d;c++)if(e=a.faces[c],e instanceof THREE.Face3)if(f=e.a,g=e.b,h=e.c,j=a.vertices[f],l=a.vertices[g],m=a.vertices[h],p=j.distanceTo(l),o=l.distanceTo(m),n=j.distanceTo(m),p>b||o>b||n>b){i=a.vertices.length;u=e.clone();s=e.clone();p>=o&&\r\np>=n?(j=j.clone(),j.lerpSelf(l,0.5),u.a=f,u.b=i,u.c=h,s.a=i,s.b=g,s.c=h,3===e.vertexNormals.length&&(f=e.vertexNormals[0].clone(),f.lerpSelf(e.vertexNormals[1],0.5),u.vertexNormals[1].copy(f),s.vertexNormals[0].copy(f)),3===e.vertexColors.length&&(f=e.vertexColors[0].clone(),f.lerpSelf(e.vertexColors[1],0.5),u.vertexColors[1].copy(f),s.vertexColors[0].copy(f)),e=0):o>=p&&o>=n?(j=l.clone(),j.lerpSelf(m,0.5),u.a=f,u.b=g,u.c=i,s.a=i,s.b=h,s.c=f,3===e.vertexNormals.length&&(f=e.vertexNormals[1].clone(),\r\nf.lerpSelf(e.vertexNormals[2],0.5),u.vertexNormals[2].copy(f),s.vertexNormals[0].copy(f),s.vertexNormals[1].copy(e.vertexNormals[2]),s.vertexNormals[2].copy(e.vertexNormals[0])),3===e.vertexColors.length&&(f=e.vertexColors[1].clone(),f.lerpSelf(e.vertexColors[2],0.5),u.vertexColors[2].copy(f),s.vertexColors[0].copy(f),s.vertexColors[1].copy(e.vertexColors[2]),s.vertexColors[2].copy(e.vertexColors[0])),e=1):(j=j.clone(),j.lerpSelf(m,0.5),u.a=f,u.b=g,u.c=i,s.a=i,s.b=g,s.c=h,3===e.vertexNormals.length&&\r\n(f=e.vertexNormals[0].clone(),f.lerpSelf(e.vertexNormals[2],0.5),u.vertexNormals[2].copy(f),s.vertexNormals[0].copy(f)),3===e.vertexColors.length&&(f=e.vertexColors[0].clone(),f.lerpSelf(e.vertexColors[2],0.5),u.vertexColors[2].copy(f),s.vertexColors[0].copy(f)),e=2);z.push(u,s);a.vertices.push(j);f=0;for(g=a.faceVertexUvs.length;f<g;f++)a.faceVertexUvs[f].length&&(j=a.faceVertexUvs[f][c],s=j[0],h=j[1],u=j[2],0===e?(l=s.clone(),l.lerpSelf(h,0.5),j=[s.clone(),l.clone(),u.clone()],h=[l.clone(),h.clone(),\r\nu.clone()]):1===e?(l=h.clone(),l.lerpSelf(u,0.5),j=[s.clone(),h.clone(),l.clone()],h=[l.clone(),u.clone(),s.clone()]):(l=s.clone(),l.lerpSelf(u,0.5),j=[s.clone(),h.clone(),l.clone()],h=[l.clone(),h.clone(),u.clone()]),A[f].push(j,h))}else{z.push(e);f=0;for(g=a.faceVertexUvs.length;f<g;f++)A[f].push(a.faceVertexUvs[f][c])}else if(f=e.a,g=e.b,h=e.c,i=e.d,j=a.vertices[f],l=a.vertices[g],m=a.vertices[h],n=a.vertices[i],p=j.distanceTo(l),o=l.distanceTo(m),q=m.distanceTo(n),r=j.distanceTo(n),p>b||o>b||\r\nq>b||r>b){t=a.vertices.length;B=a.vertices.length+1;u=e.clone();s=e.clone();p>=o&&p>=q&&p>=r||q>=o&&q>=p&&q>=r?(p=j.clone(),p.lerpSelf(l,0.5),l=m.clone(),l.lerpSelf(n,0.5),u.a=f,u.b=t,u.c=B,u.d=i,s.a=t,s.b=g,s.c=h,s.d=B,4===e.vertexNormals.length&&(f=e.vertexNormals[0].clone(),f.lerpSelf(e.vertexNormals[1],0.5),g=e.vertexNormals[2].clone(),g.lerpSelf(e.vertexNormals[3],0.5),u.vertexNormals[1].copy(f),u.vertexNormals[2].copy(g),s.vertexNormals[0].copy(f),s.vertexNormals[3].copy(g)),4===e.vertexColors.length&&\r\n(f=e.vertexColors[0].clone(),f.lerpSelf(e.vertexColors[1],0.5),g=e.vertexColors[2].clone(),g.lerpSelf(e.vertexColors[3],0.5),u.vertexColors[1].copy(f),u.vertexColors[2].copy(g),s.vertexColors[0].copy(f),s.vertexColors[3].copy(g)),e=0):(p=l.clone(),p.lerpSelf(m,0.5),l=n.clone(),l.lerpSelf(j,0.5),u.a=f,u.b=g,u.c=t,u.d=B,s.a=B,s.b=t,s.c=h,s.d=i,4===e.vertexNormals.length&&(f=e.vertexNormals[1].clone(),f.lerpSelf(e.vertexNormals[2],0.5),g=e.vertexNormals[3].clone(),g.lerpSelf(e.vertexNormals[0],0.5),\r\nu.vertexNormals[2].copy(f),u.vertexNormals[3].copy(g),s.vertexNormals[0].copy(g),s.vertexNormals[1].copy(f)),4===e.vertexColors.length&&(f=e.vertexColors[1].clone(),f.lerpSelf(e.vertexColors[2],0.5),g=e.vertexColors[3].clone(),g.lerpSelf(e.vertexColors[0],0.5),u.vertexColors[2].copy(f),u.vertexColors[3].copy(g),s.vertexColors[0].copy(g),s.vertexColors[1].copy(f)),e=1);z.push(u,s);a.vertices.push(p,l);f=0;for(g=a.faceVertexUvs.length;f<g;f++)a.faceVertexUvs[f].length&&(j=a.faceVertexUvs[f][c],s=j[0],\r\nh=j[1],u=j[2],j=j[3],0===e?(l=s.clone(),l.lerpSelf(h,0.5),m=u.clone(),m.lerpSelf(j,0.5),s=[s.clone(),l.clone(),m.clone(),j.clone()],h=[l.clone(),h.clone(),u.clone(),m.clone()]):(l=h.clone(),l.lerpSelf(u,0.5),m=j.clone(),m.lerpSelf(s,0.5),s=[s.clone(),h.clone(),l.clone(),m.clone()],h=[m.clone(),l.clone(),u.clone(),j.clone()]),A[f].push(s,h))}else{z.push(e);f=0;for(g=a.faceVertexUvs.length;f<g;f++)A[f].push(a.faceVertexUvs[f][c])}a.faces=z;a.faceVertexUvs=A}};THREE.GeometryUtils.random=THREE.Math.random16;\r\nTHREE.GeometryUtils.__v1=new THREE.Vector3;\r\nTHREE.ImageUtils={crossOrigin:\"anonymous\",loadTexture:function(a,b,c,d){var e=new Image,f=new THREE.Texture(e,b),b=new THREE.ImageLoader;b.addEventListener(\"load\",function(a){f.image=a.content;f.needsUpdate=!0;c&&c(f)});b.addEventListener(\"error\",function(a){d&&d(a.message)});b.crossOrigin=this.crossOrigin;b.load(a,e);return f},loadCompressedTexture:function(a,b,c,d){var e=new THREE.CompressedTexture;e.mapping=b;var f=new XMLHttpRequest;f.onload=function(){var a=THREE.ImageUtils.parseDDS(f.response,\r\n!0);e.format=a.format;e.mipmaps=a.mipmaps;e.image.width=a.width;e.image.height=a.height;e.generateMipmaps=!1;e.needsUpdate=!0;c&&c(e)};f.onerror=d;f.open(\"GET\",a,!0);f.responseType=\"arraybuffer\";f.send(null);return e},loadTextureCube:function(a,b,c,d){var e=[];e.loadCount=0;var f=new THREE.Texture;f.image=e;void 0!==b&&(f.mapping=b);f.flipY=!1;for(var b=0,g=a.length;b<g;++b){var h=new Image;e[b]=h;h.onload=function(){e.loadCount=e.loadCount+1;if(e.loadCount===6){f.needsUpdate=true;c&&c()}};h.onerror=\r\nd;h.crossOrigin=this.crossOrigin;h.src=a[b]}return f},loadCompressedTextureCube:function(a,b,c,d){var e=[];e.loadCount=0;var f=new THREE.CompressedTexture;f.image=e;void 0!==b&&(f.mapping=b);f.flipY=!1;f.generateMipmaps=!1;for(var b=function(a,b){return function(){var d=THREE.ImageUtils.parseDDS(a.response,true);b.format=d.format;b.mipmaps=d.mipmaps;b.width=d.width;b.height=d.height;e.loadCount=e.loadCount+1;if(e.loadCount===6){f.format=d.format;f.needsUpdate=true;c&&c()}}},g=0,h=a.length;g<h;++g){var i=\r\n{};e[g]=i;var j=new XMLHttpRequest;j.onload=b(j,i);j.onerror=d;j.open(\"GET\",a[g],!0);j.responseType=\"arraybuffer\";j.send(null)}return f},parseDDS:function(a,b){function c(a){return a.charCodeAt(0)+(a.charCodeAt(1)<<8)+(a.charCodeAt(2)<<16)+(a.charCodeAt(3)<<24)}var d={mipmaps:[],width:0,height:0,format:null,mipmapCount:1},e=c(\"DXT1\"),f=c(\"DXT3\"),g=c(\"DXT5\"),h=new Int32Array(a,0,31);if(542327876!==h[0])return console.error(\"ImageUtils.parseDDS(): Invalid magic number in DDS header\"),d;if(!h[20]&4)return console.error(\"ImageUtils.parseDDS(): Unsupported format, must contain a FourCC code\"),\r\nd;var i=h[21];switch(i){case e:e=8;d.format=THREE.RGB_S3TC_DXT1_Format;break;case f:e=16;d.format=THREE.RGBA_S3TC_DXT3_Format;break;case g:e=16;d.format=THREE.RGBA_S3TC_DXT5_Format;break;default:return console.error(\"ImageUtils.parseDDS(): Unsupported FourCC code: \",String.fromCharCode(i&255,i>>8&255,i>>16&255,i>>24&255)),d}d.mipmapCount=1;h[2]&131072&&!1!==b&&(d.mipmapCount=Math.max(1,h[7]));d.width=h[4];d.height=h[3];h=h[1]+4;f=d.width;g=d.height;for(i=0;i<d.mipmapCount;i++){var j=Math.max(4,f)/\r\n4*Math.max(4,g)/4*e,l={data:new Uint8Array(a,h,j),width:f,height:g};d.mipmaps.push(l);h+=j;f=Math.max(0.5*f,1);g=Math.max(0.5*g,1)}return d},getNormalMap:function(a,b){var c=function(a){var b=Math.sqrt(a[0]*a[0]+a[1]*a[1]+a[2]*a[2]);return[a[0]/b,a[1]/b,a[2]/b]},b=b|1,d=a.width,e=a.height,f=document.createElement(\"canvas\");f.width=d;f.height=e;var g=f.getContext(\"2d\");g.drawImage(a,0,0);for(var h=g.getImageData(0,0,d,e).data,i=g.createImageData(d,e),j=i.data,l=0;l<d;l++)for(var m=0;m<e;m++){var n=\r\n0>m-1?0:m-1,p=m+1>e-1?e-1:m+1,o=0>l-1?0:l-1,q=l+1>d-1?d-1:l+1,r=[],t=[0,0,h[4*(m*d+l)]/255*b];r.push([-1,0,h[4*(m*d+o)]/255*b]);r.push([-1,-1,h[4*(n*d+o)]/255*b]);r.push([0,-1,h[4*(n*d+l)]/255*b]);r.push([1,-1,h[4*(n*d+q)]/255*b]);r.push([1,0,h[4*(m*d+q)]/255*b]);r.push([1,1,h[4*(p*d+q)]/255*b]);r.push([0,1,h[4*(p*d+l)]/255*b]);r.push([-1,1,h[4*(p*d+o)]/255*b]);n=[];o=r.length;for(p=0;p<o;p++){var q=r[p],B=r[(p+1)%o],q=[q[0]-t[0],q[1]-t[1],q[2]-t[2]],B=[B[0]-t[0],B[1]-t[1],B[2]-t[2]];n.push(c([q[1]*\r\nB[2]-q[2]*B[1],q[2]*B[0]-q[0]*B[2],q[0]*B[1]-q[1]*B[0]]))}r=[0,0,0];for(p=0;p<n.length;p++)r[0]+=n[p][0],r[1]+=n[p][1],r[2]+=n[p][2];r[0]/=n.length;r[1]/=n.length;r[2]/=n.length;t=4*(m*d+l);j[t]=255*((r[0]+1)/2)|0;j[t+1]=255*((r[1]+1)/2)|0;j[t+2]=255*r[2]|0;j[t+3]=255}g.putImageData(i,0,0);return f},generateDataTexture:function(a,b,c){for(var d=a*b,e=new Uint8Array(3*d),f=Math.floor(255*c.r),g=Math.floor(255*c.g),c=Math.floor(255*c.b),h=0;h<d;h++)e[3*h]=f,e[3*h+1]=g,e[3*h+2]=c;a=new THREE.DataTexture(e,\r\na,b,THREE.RGBFormat);a.needsUpdate=!0;return a}};THREE.SceneUtils={createMultiMaterialObject:function(a,b){for(var c=new THREE.Object3D,d=0,e=b.length;d<e;d++)c.add(new THREE.Mesh(a,b[d]));return c},detach:function(a,b,c){a.applyMatrix(b.matrixWorld);b.remove(a);c.add(a)},attach:function(a,b,c){var d=new THREE.Matrix4;d.getInverse(c.matrixWorld);a.applyMatrix(d);b.remove(a);c.add(a)}};\r\nTHREE.WebGLRenderer&&(THREE.ShaderUtils={lib:{fresnel:{uniforms:{mRefractionRatio:{type:\"f\",value:1.02},mFresnelBias:{type:\"f\",value:0.1},mFresnelPower:{type:\"f\",value:2},mFresnelScale:{type:\"f\",value:1},tCube:{type:\"t\",value:null}},fragmentShader:\"uniform samplerCube tCube;\\nvarying vec3 vReflect;\\nvarying vec3 vRefract[3];\\nvarying float vReflectionFactor;\\nvoid main() {\\nvec4 reflectedColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );\\nvec4 refractedColor = vec4( 1.0, 1.0, 1.0, 1.0 );\\nrefractedColor.r = textureCube( tCube, vec3( -vRefract[0].x, vRefract[0].yz ) ).r;\\nrefractedColor.g = textureCube( tCube, vec3( -vRefract[1].x, vRefract[1].yz ) ).g;\\nrefractedColor.b = textureCube( tCube, vec3( -vRefract[2].x, vRefract[2].yz ) ).b;\\nrefractedColor.a = 1.0;\\ngl_FragColor = mix( refractedColor, reflectedColor, clamp( vReflectionFactor, 0.0, 1.0 ) );\\n}\",\r\nvertexShader:\"uniform float mRefractionRatio;\\nuniform float mFresnelBias;\\nuniform float mFresnelScale;\\nuniform float mFresnelPower;\\nvarying vec3 vReflect;\\nvarying vec3 vRefract[3];\\nvarying float vReflectionFactor;\\nvoid main() {\\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\\nvec4 mPosition = modelMatrix * vec4( position, 1.0 );\\nvec3 nWorld = normalize( mat3( modelMatrix[0].xyz, modelMatrix[1].xyz, modelMatrix[2].xyz ) * normal );\\nvec3 I = mPosition.xyz - cameraPosition;\\nvReflect = reflect( I, nWorld );\\nvRefract[0] = refract( normalize( I ), nWorld, mRefractionRatio );\\nvRefract[1] = refract( normalize( I ), nWorld, mRefractionRatio * 0.99 );\\nvRefract[2] = refract( normalize( I ), nWorld, mRefractionRatio * 0.98 );\\nvReflectionFactor = mFresnelBias + mFresnelScale * pow( 1.0 + dot( normalize( I ), nWorld ), mFresnelPower );\\ngl_Position = projectionMatrix * mvPosition;\\n}\"},\r\nnormal:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{enableAO:{type:\"i\",value:0},enableDiffuse:{type:\"i\",value:0},enableSpecular:{type:\"i\",value:0},enableReflection:{type:\"i\",value:0},enableDisplacement:{type:\"i\",value:0},tDisplacement:{type:\"t\",value:null},tDiffuse:{type:\"t\",value:null},tCube:{type:\"t\",value:null},tNormal:{type:\"t\",value:null},tSpecular:{type:\"t\",value:null},tAO:{type:\"t\",value:null},uNormalScale:{type:\"v2\",value:new THREE.Vector2(1,\r\n1)},uDisplacementBias:{type:\"f\",value:0},uDisplacementScale:{type:\"f\",value:1},uDiffuseColor:{type:\"c\",value:new THREE.Color(16777215)},uSpecularColor:{type:\"c\",value:new THREE.Color(1118481)},uAmbientColor:{type:\"c\",value:new THREE.Color(16777215)},uShininess:{type:\"f\",value:30},uOpacity:{type:\"f\",value:1},useRefract:{type:\"i\",value:0},uRefractionRatio:{type:\"f\",value:0.98},uReflectivity:{type:\"f\",value:0.5},uOffset:{type:\"v2\",value:new THREE.Vector2(0,0)},uRepeat:{type:\"v2\",value:new THREE.Vector2(1,\r\n1)},wrapRGB:{type:\"v3\",value:new THREE.Vector3(1,1,1)}}]),fragmentShader:[\"uniform vec3 uAmbientColor;\\nuniform vec3 uDiffuseColor;\\nuniform vec3 uSpecularColor;\\nuniform float uShininess;\\nuniform float uOpacity;\\nuniform bool enableDiffuse;\\nuniform bool enableSpecular;\\nuniform bool enableAO;\\nuniform bool enableReflection;\\nuniform sampler2D tDiffuse;\\nuniform sampler2D tNormal;\\nuniform sampler2D tSpecular;\\nuniform sampler2D tAO;\\nuniform samplerCube tCube;\\nuniform vec2 uNormalScale;\\nuniform bool useRefract;\\nuniform float uRefractionRatio;\\nuniform float uReflectivity;\\nvarying vec3 vTangent;\\nvarying vec3 vBinormal;\\nvarying vec3 vNormal;\\nvarying vec2 vUv;\\nuniform vec3 ambientLightColor;\\n#if MAX_DIR_LIGHTS > 0\\nuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\\n#endif\\n#if MAX_HEMI_LIGHTS > 0\\nuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\\nuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\\nuniform vec3 hemisphereLightPosition[ MAX_HEMI_LIGHTS ];\\n#endif\\n#if MAX_POINT_LIGHTS > 0\\nuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\\n#endif\\n#if MAX_SPOT_LIGHTS > 0\\nuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\\nuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\\nuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\\nuniform float spotLightAngle[ MAX_SPOT_LIGHTS ];\\nuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\\nuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\\n#endif\\n#ifdef WRAP_AROUND\\nuniform vec3 wrapRGB;\\n#endif\\nvarying vec3 vWorldPosition;\\nvarying vec3 vViewPosition;\",\r\nTHREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,\"void main() {\\ngl_FragColor = vec4( vec3( 1.0 ), uOpacity );\\nvec3 specularTex = vec3( 1.0 );\\nvec3 normalTex = texture2D( tNormal, vUv ).xyz * 2.0 - 1.0;\\nnormalTex.xy *= uNormalScale;\\nnormalTex = normalize( normalTex );\\nif( enableDiffuse ) {\\n#ifdef GAMMA_INPUT\\nvec4 texelColor = texture2D( tDiffuse, vUv );\\ntexelColor.xyz *= texelColor.xyz;\\ngl_FragColor = gl_FragColor * texelColor;\\n#else\\ngl_FragColor = gl_FragColor * texture2D( tDiffuse, vUv );\\n#endif\\n}\\nif( enableAO ) {\\n#ifdef GAMMA_INPUT\\nvec4 aoColor = texture2D( tAO, vUv );\\naoColor.xyz *= aoColor.xyz;\\ngl_FragColor.xyz = gl_FragColor.xyz * aoColor.xyz;\\n#else\\ngl_FragColor.xyz = gl_FragColor.xyz * texture2D( tAO, vUv ).xyz;\\n#endif\\n}\\nif( enableSpecular )\\nspecularTex = texture2D( tSpecular, vUv ).xyz;\\nmat3 tsb = mat3( normalize( vTangent ), normalize( vBinormal ), normalize( vNormal ) );\\nvec3 finalNormal = tsb * normalTex;\\n#ifdef FLIP_SIDED\\nfinalNormal = -finalNormal;\\n#endif\\nvec3 normal = normalize( finalNormal );\\nvec3 viewPosition = normalize( vViewPosition );\\n#if MAX_POINT_LIGHTS > 0\\nvec3 pointDiffuse = vec3( 0.0 );\\nvec3 pointSpecular = vec3( 0.0 );\\nfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\\nvec3 pointVector = lPosition.xyz + vViewPosition.xyz;\\nfloat pointDistance = 1.0;\\nif ( pointLightDistance[ i ] > 0.0 )\\npointDistance = 1.0 - min( ( length( pointVector ) / pointLightDistance[ i ] ), 1.0 );\\npointVector = normalize( pointVector );\\n#ifdef WRAP_AROUND\\nfloat pointDiffuseWeightFull = max( dot( normal, pointVector ), 0.0 );\\nfloat pointDiffuseWeightHalf = max( 0.5 * dot( normal, pointVector ) + 0.5, 0.0 );\\nvec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );\\n#else\\nfloat pointDiffuseWeight = max( dot( normal, pointVector ), 0.0 );\\n#endif\\npointDiffuse += pointDistance * pointLightColor[ i ] * uDiffuseColor * pointDiffuseWeight;\\nvec3 pointHalfVector = normalize( pointVector + viewPosition );\\nfloat pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\\nfloat pointSpecularWeight = specularTex.r * max( pow( pointDotNormalHalf, uShininess ), 0.0 );\\n#ifdef PHYSICALLY_BASED_SHADING\\nfloat specularNormalization = ( uShininess + 2.0001 ) / 8.0;\\nvec3 schlick = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( pointVector, pointHalfVector ), 5.0 );\\npointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * pointDistance * specularNormalization;\\n#else\\npointSpecular += pointDistance * pointLightColor[ i ] * uSpecularColor * pointSpecularWeight * pointDiffuseWeight;\\n#endif\\n}\\n#endif\\n#if MAX_SPOT_LIGHTS > 0\\nvec3 spotDiffuse = vec3( 0.0 );\\nvec3 spotSpecular = vec3( 0.0 );\\nfor ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\\nvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\\nvec3 spotVector = lPosition.xyz + vViewPosition.xyz;\\nfloat spotDistance = 1.0;\\nif ( spotLightDistance[ i ] > 0.0 )\\nspotDistance = 1.0 - min( ( length( spotVector ) / spotLightDistance[ i ] ), 1.0 );\\nspotVector = normalize( spotVector );\\nfloat spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );\\nif ( spotEffect > spotLightAngle[ i ] ) {\\nspotEffect = pow( spotEffect, spotLightExponent[ i ] );\\n#ifdef WRAP_AROUND\\nfloat spotDiffuseWeightFull = max( dot( normal, spotVector ), 0.0 );\\nfloat spotDiffuseWeightHalf = max( 0.5 * dot( normal, spotVector ) + 0.5, 0.0 );\\nvec3 spotDiffuseWeight = mix( vec3 ( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );\\n#else\\nfloat spotDiffuseWeight = max( dot( normal, spotVector ), 0.0 );\\n#endif\\nspotDiffuse += spotDistance * spotLightColor[ i ] * uDiffuseColor * spotDiffuseWeight * spotEffect;\\nvec3 spotHalfVector = normalize( spotVector + viewPosition );\\nfloat spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );\\nfloat spotSpecularWeight = specularTex.r * max( pow( spotDotNormalHalf, uShininess ), 0.0 );\\n#ifdef PHYSICALLY_BASED_SHADING\\nfloat specularNormalization = ( uShininess + 2.0001 ) / 8.0;\\nvec3 schlick = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( spotVector, spotHalfVector ), 5.0 );\\nspotSpecular += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * spotDistance * specularNormalization * spotEffect;\\n#else\\nspotSpecular += spotDistance * spotLightColor[ i ] * uSpecularColor * spotSpecularWeight * spotDiffuseWeight * spotEffect;\\n#endif\\n}\\n}\\n#endif\\n#if MAX_DIR_LIGHTS > 0\\nvec3 dirDiffuse = vec3( 0.0 );\\nvec3 dirSpecular = vec3( 0.0 );\\nfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\\nvec3 dirVector = normalize( lDirection.xyz );\\n#ifdef WRAP_AROUND\\nfloat directionalLightWeightingFull = max( dot( normal, dirVector ), 0.0 );\\nfloat directionalLightWeightingHalf = max( 0.5 * dot( normal, dirVector ) + 0.5, 0.0 );\\nvec3 dirDiffuseWeight = mix( vec3( directionalLightWeightingFull ), vec3( directionalLightWeightingHalf ), wrapRGB );\\n#else\\nfloat dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );\\n#endif\\ndirDiffuse += directionalLightColor[ i ] * uDiffuseColor * dirDiffuseWeight;\\nvec3 dirHalfVector = normalize( dirVector + viewPosition );\\nfloat dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\\nfloat dirSpecularWeight = specularTex.r * max( pow( dirDotNormalHalf, uShininess ), 0.0 );\\n#ifdef PHYSICALLY_BASED_SHADING\\nfloat specularNormalization = ( uShininess + 2.0001 ) / 8.0;\\nvec3 schlick = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( dirVector, dirHalfVector ), 5.0 );\\ndirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;\\n#else\\ndirSpecular += directionalLightColor[ i ] * uSpecularColor * dirSpecularWeight * dirDiffuseWeight;\\n#endif\\n}\\n#endif\\n#if MAX_HEMI_LIGHTS > 0\\nvec3 hemiDiffuse  = vec3( 0.0 );\\nvec3 hemiSpecular = vec3( 0.0 );\\nfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\\nvec4 lPosition = viewMatrix * vec4( hemisphereLightPosition[ i ], 1.0 );\\nvec3 lVector = normalize( lPosition.xyz + vViewPosition.xyz );\\nfloat dotProduct = dot( normal, lVector );\\nfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\\nvec3 hemiColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\\nhemiDiffuse += uDiffuseColor * hemiColor;\\nvec3 hemiHalfVectorSky = normalize( lVector + viewPosition );\\nfloat hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;\\nfloat hemiSpecularWeightSky = specularTex.r * max( pow( hemiDotNormalHalfSky, uShininess ), 0.0 );\\nvec3 lVectorGround = normalize( -lPosition.xyz + vViewPosition.xyz );\\nvec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );\\nfloat hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;\\nfloat hemiSpecularWeightGround = specularTex.r * max( pow( hemiDotNormalHalfGround, uShininess ), 0.0 );\\n#ifdef PHYSICALLY_BASED_SHADING\\nfloat dotProductGround = dot( normal, lVectorGround );\\nfloat specularNormalization = ( uShininess + 2.0001 ) / 8.0;\\nvec3 schlickSky = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( lVector, hemiHalfVectorSky ), 5.0 );\\nvec3 schlickGround = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( lVectorGround, hemiHalfVectorGround ), 5.0 );\\nhemiSpecular += hemiColor * specularNormalization * ( schlickSky * hemiSpecularWeightSky * max( dotProduct, 0.0 ) + schlickGround * hemiSpecularWeightGround * max( dotProductGround, 0.0 ) );\\n#else\\nhemiSpecular += uSpecularColor * hemiColor * ( hemiSpecularWeightSky + hemiSpecularWeightGround ) * hemiDiffuseWeight;\\n#endif\\n}\\n#endif\\nvec3 totalDiffuse = vec3( 0.0 );\\nvec3 totalSpecular = vec3( 0.0 );\\n#if MAX_DIR_LIGHTS > 0\\ntotalDiffuse += dirDiffuse;\\ntotalSpecular += dirSpecular;\\n#endif\\n#if MAX_HEMI_LIGHTS > 0\\ntotalDiffuse += hemiDiffuse;\\ntotalSpecular += hemiSpecular;\\n#endif\\n#if MAX_POINT_LIGHTS > 0\\ntotalDiffuse += pointDiffuse;\\ntotalSpecular += pointSpecular;\\n#endif\\n#if MAX_SPOT_LIGHTS > 0\\ntotalDiffuse += spotDiffuse;\\ntotalSpecular += spotSpecular;\\n#endif\\n#ifdef METAL\\ngl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * uAmbientColor + totalSpecular );\\n#else\\ngl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * uAmbientColor ) + totalSpecular;\\n#endif\\nif ( enableReflection ) {\\nvec3 vReflect;\\nvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\\nif ( useRefract ) {\\nvReflect = refract( cameraToVertex, normal, uRefractionRatio );\\n} else {\\nvReflect = reflect( cameraToVertex, normal );\\n}\\nvec4 cubeColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );\\n#ifdef GAMMA_INPUT\\ncubeColor.xyz *= cubeColor.xyz;\\n#endif\\ngl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, specularTex.r * uReflectivity );\\n}\",\r\nTHREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,\"}\"].join(\"\\n\"),vertexShader:[\"attribute vec4 tangent;\\nuniform vec2 uOffset;\\nuniform vec2 uRepeat;\\nuniform bool enableDisplacement;\\n#ifdef VERTEX_TEXTURES\\nuniform sampler2D tDisplacement;\\nuniform float uDisplacementScale;\\nuniform float uDisplacementBias;\\n#endif\\nvarying vec3 vTangent;\\nvarying vec3 vBinormal;\\nvarying vec3 vNormal;\\nvarying vec2 vUv;\\nvarying vec3 vWorldPosition;\\nvarying vec3 vViewPosition;\",\r\nTHREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,\"void main() {\",THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,\"#ifdef USE_SKINNING\\nvNormal = normalMatrix * skinnedNormal.xyz;\\nvec4 skinnedTangent = skinMatrix * vec4( tangent.xyz, 0.0 );\\nvTangent = normalMatrix * skinnedTangent.xyz;\\n#else\\nvNormal = normalMatrix * normal;\\nvTangent = normalMatrix * tangent.xyz;\\n#endif\\nvBinormal = cross( vNormal, vTangent ) * tangent.w;\\nvUv = uv * uRepeat + uOffset;\\nvec3 displacedPosition;\\n#ifdef VERTEX_TEXTURES\\nif ( enableDisplacement ) {\\nvec3 dv = texture2D( tDisplacement, uv ).xyz;\\nfloat df = uDisplacementScale * dv.x + uDisplacementBias;\\ndisplacedPosition = position + normalize( normal ) * df;\\n} else {\\n#ifdef USE_SKINNING\\nvec4 skinVertex = vec4( position, 1.0 );\\nvec4 skinned  = boneMatX * skinVertex * skinWeight.x;\\nskinned \\t  += boneMatY * skinVertex * skinWeight.y;\\ndisplacedPosition  = skinned.xyz;\\n#else\\ndisplacedPosition = position;\\n#endif\\n}\\n#else\\n#ifdef USE_SKINNING\\nvec4 skinVertex = vec4( position, 1.0 );\\nvec4 skinned  = boneMatX * skinVertex * skinWeight.x;\\nskinned \\t  += boneMatY * skinVertex * skinWeight.y;\\ndisplacedPosition  = skinned.xyz;\\n#else\\ndisplacedPosition = position;\\n#endif\\n#endif\\nvec4 mvPosition = modelViewMatrix * vec4( displacedPosition, 1.0 );\\nvec4 mPosition = modelMatrix * vec4( displacedPosition, 1.0 );\\ngl_Position = projectionMatrix * mvPosition;\\nvWorldPosition = mPosition.xyz;\\nvViewPosition = -mvPosition.xyz;\\n#ifdef USE_SHADOWMAP\\nfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\\nvShadowCoord[ i ] = shadowMatrix[ i ] * mPosition;\\n}\\n#endif\\n}\"].join(\"\\n\")},\r\ncube:{uniforms:{tCube:{type:\"t\",value:null},tFlip:{type:\"f\",value:-1}},vertexShader:\"varying vec3 vViewPosition;\\nvoid main() {\\nvec4 mPosition = modelMatrix * vec4( position, 1.0 );\\nvViewPosition = cameraPosition - mPosition.xyz;\\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}\",fragmentShader:\"uniform samplerCube tCube;\\nuniform float tFlip;\\nvarying vec3 vViewPosition;\\nvoid main() {\\nvec3 wPos = cameraPosition - vViewPosition;\\ngl_FragColor = textureCube( tCube, vec3( tFlip * wPos.x, wPos.yz ) );\\n}\"}}});\r\nTHREE.FontUtils={faces:{},face:\"helvetiker\",weight:\"normal\",style:\"normal\",size:150,divisions:10,getFace:function(){return this.faces[this.face][this.weight][this.style]},loadFace:function(a){var b=a.familyName.toLowerCase();this.faces[b]=this.faces[b]||{};this.faces[b][a.cssFontWeight]=this.faces[b][a.cssFontWeight]||{};this.faces[b][a.cssFontWeight][a.cssFontStyle]=a;return this.faces[b][a.cssFontWeight][a.cssFontStyle]=a},drawText:function(a){for(var b=this.getFace(),c=this.size/b.resolution,d=\r\n0,e=String(a).split(\"\"),f=e.length,g=[],a=0;a<f;a++){var h=new THREE.Path,h=this.extractGlyphPoints(e[a],b,c,d,h),d=d+h.offset;g.push(h.path)}return{paths:g,offset:d/2}},extractGlyphPoints:function(a,b,c,d,e){var f=[],g,h,i,j,l,m,n,p,o,q,r,t=b.glyphs[a]||b.glyphs[\"?\"];if(t){if(t.o){b=t._cachedOutline||(t._cachedOutline=t.o.split(\" \"));j=b.length;for(a=0;a<j;){i=b[a++];switch(i){case \"m\":i=b[a++]*c+d;l=b[a++]*c;e.moveTo(i,l);break;case \"l\":i=b[a++]*c+d;l=b[a++]*c;e.lineTo(i,l);break;case \"q\":i=b[a++]*\r\nc+d;l=b[a++]*c;p=b[a++]*c+d;o=b[a++]*c;e.quadraticCurveTo(p,o,i,l);if(g=f[f.length-1]){m=g.x;n=g.y;g=1;for(h=this.divisions;g<=h;g++){var B=g/h;THREE.Shape.Utils.b2(B,m,p,i);THREE.Shape.Utils.b2(B,n,o,l)}}break;case \"b\":i=b[a++]*c+d;l=b[a++]*c;p=b[a++]*c+d;o=b[a++]*-c;q=b[a++]*c+d;r=b[a++]*-c;e.bezierCurveTo(i,l,p,o,q,r);if(g=f[f.length-1]){m=g.x;n=g.y;g=1;for(h=this.divisions;g<=h;g++){B=g/h;THREE.Shape.Utils.b3(B,m,p,q,i);THREE.Shape.Utils.b3(B,n,o,r,l)}}}}}return{offset:t.ha*c,path:e}}}};\r\nTHREE.FontUtils.generateShapes=function(a,b){var b=b||{},c=b.curveSegments!==void 0?b.curveSegments:4,d=b.font!==void 0?b.font:\"helvetiker\",e=b.weight!==void 0?b.weight:\"normal\",f=b.style!==void 0?b.style:\"normal\";THREE.FontUtils.size=b.size!==void 0?b.size:100;THREE.FontUtils.divisions=c;THREE.FontUtils.face=d;THREE.FontUtils.weight=e;THREE.FontUtils.style=f;c=THREE.FontUtils.drawText(a).paths;d=[];e=0;for(f=c.length;e<f;e++)Array.prototype.push.apply(d,c[e].toShapes());return d};\r\n(function(a){var b=function(a){for(var b=a.length,e=0,f=b-1,g=0;g<b;f=g++)e=e+(a[f].x*a[g].y-a[g].x*a[f].y);return e*0.5};a.Triangulate=function(a,d){var e=a.length;if(e<3)return null;var f=[],g=[],h=[],i,j,l;if(b(a)>0)for(j=0;j<e;j++)g[j]=j;else for(j=0;j<e;j++)g[j]=e-1-j;var m=2*e;for(j=e-1;e>2;){if(m--<=0){console.log(\"Warning, unable to triangulate polygon!\");break}i=j;e<=i&&(i=0);j=i+1;e<=j&&(j=0);l=j+1;e<=l&&(l=0);var n;a:{n=a;var p=i,o=j,q=l,r=e,t=g,B=void 0,u=void 0,s=void 0,z=void 0,A=void 0,\r\nv=void 0,y=void 0,C=void 0,G=void 0,u=n[t[p]].x,s=n[t[p]].y,z=n[t[o]].x,A=n[t[o]].y,v=n[t[q]].x,y=n[t[q]].y;if(1E-10>(z-u)*(y-s)-(A-s)*(v-u))n=false;else{for(B=0;B<r;B++)if(!(B==p||B==o||B==q)){var C=n[t[B]].x,G=n[t[B]].y,H=void 0,J=void 0,E=void 0,M=void 0,K=void 0,F=void 0,I=void 0,L=void 0,R=void 0,$=void 0,Y=void 0,N=void 0,H=E=K=void 0,H=v-z,J=y-A,E=u-v,M=s-y,K=z-u,F=A-s,I=C-u,L=G-s,R=C-z,$=G-A,Y=C-v,N=G-y,H=H*$-J*R,K=K*L-F*I,E=E*N-M*Y;if(H>=0&&E>=0&&K>=0){n=false;break a}}n=true}}if(n){f.push([a[g[i]],\r\na[g[j]],a[g[l]]]);h.push([g[i],g[j],g[l]]);i=j;for(l=j+1;l<e;i++,l++)g[i]=g[l];e--;m=2*e}}return d?h:f};a.Triangulate.area=b;return a})(THREE.FontUtils);self._typeface_js={faces:THREE.FontUtils.faces,loadFace:THREE.FontUtils.loadFace};THREE.Curve=function(){};THREE.Curve.prototype.getPoint=function(){console.log(\"Warning, getPoint() not implemented!\");return null};THREE.Curve.prototype.getPointAt=function(a){a=this.getUtoTmapping(a);return this.getPoint(a)};\r\nTHREE.Curve.prototype.getPoints=function(a){a||(a=5);var b,c=[];for(b=0;b<=a;b++)c.push(this.getPoint(b/a));return c};THREE.Curve.prototype.getSpacedPoints=function(a){a||(a=5);var b,c=[];for(b=0;b<=a;b++)c.push(this.getPointAt(b/a));return c};THREE.Curve.prototype.getLength=function(){var a=this.getLengths();return a[a.length-1]};\r\nTHREE.Curve.prototype.getLengths=function(a){a||(a=this.__arcLengthDivisions?this.__arcLengthDivisions:200);if(this.cacheArcLengths&&this.cacheArcLengths.length==a+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=false;var b=[],c,d=this.getPoint(0),e,f=0;b.push(0);for(e=1;e<=a;e++){c=this.getPoint(e/a);f=f+c.distanceTo(d);b.push(f);d=c}return this.cacheArcLengths=b};THREE.Curve.prototype.updateArcLengths=function(){this.needsUpdate=true;this.getLengths()};\r\nTHREE.Curve.prototype.getUtoTmapping=function(a,b){var c=this.getLengths(),d=0,e=c.length,f;f=b?b:a*c[e-1];for(var g=0,h=e-1,i;g<=h;){d=Math.floor(g+(h-g)/2);i=c[d]-f;if(i<0)g=d+1;else if(i>0)h=d-1;else{h=d;break}}d=h;if(c[d]==f)return d/(e-1);g=c[d];return c=(d+(f-g)/(c[d+1]-g))/(e-1)};THREE.Curve.prototype.getNormalVector=function(a){a=this.getTangent(a);return new THREE.Vector2(-a.y,a.x)};\r\nTHREE.Curve.prototype.getTangent=function(a){var b=a-1E-4,a=a+1E-4;b<0&&(b=0);a>1&&(a=1);b=this.getPoint(b);return this.getPoint(a).clone().subSelf(b).normalize()};THREE.Curve.prototype.getTangentAt=function(a){a=this.getUtoTmapping(a);return this.getTangent(a)};THREE.LineCurve=function(a,b){this.v1=a;this.v2=b};THREE.LineCurve.prototype=Object.create(THREE.Curve.prototype);THREE.LineCurve.prototype.getPoint=function(a){var b=this.v2.clone().subSelf(this.v1);b.multiplyScalar(a).addSelf(this.v1);return b};\r\nTHREE.LineCurve.prototype.getPointAt=function(a){return this.getPoint(a)};THREE.LineCurve.prototype.getTangent=function(){return this.v2.clone().subSelf(this.v1).normalize()};THREE.QuadraticBezierCurve=function(a,b,c){this.v0=a;this.v1=b;this.v2=c};THREE.QuadraticBezierCurve.prototype=Object.create(THREE.Curve.prototype);\r\nTHREE.QuadraticBezierCurve.prototype.getPoint=function(a){var b;b=THREE.Shape.Utils.b2(a,this.v0.x,this.v1.x,this.v2.x);a=THREE.Shape.Utils.b2(a,this.v0.y,this.v1.y,this.v2.y);return new THREE.Vector2(b,a)};THREE.QuadraticBezierCurve.prototype.getTangent=function(a){var b;b=THREE.Curve.Utils.tangentQuadraticBezier(a,this.v0.x,this.v1.x,this.v2.x);a=THREE.Curve.Utils.tangentQuadraticBezier(a,this.v0.y,this.v1.y,this.v2.y);b=new THREE.Vector2(b,a);b.normalize();return b};\r\nTHREE.CubicBezierCurve=function(a,b,c,d){this.v0=a;this.v1=b;this.v2=c;this.v3=d};THREE.CubicBezierCurve.prototype=Object.create(THREE.Curve.prototype);THREE.CubicBezierCurve.prototype.getPoint=function(a){var b;b=THREE.Shape.Utils.b3(a,this.v0.x,this.v1.x,this.v2.x,this.v3.x);a=THREE.Shape.Utils.b3(a,this.v0.y,this.v1.y,this.v2.y,this.v3.y);return new THREE.Vector2(b,a)};\r\nTHREE.CubicBezierCurve.prototype.getTangent=function(a){var b;b=THREE.Curve.Utils.tangentCubicBezier(a,this.v0.x,this.v1.x,this.v2.x,this.v3.x);a=THREE.Curve.Utils.tangentCubicBezier(a,this.v0.y,this.v1.y,this.v2.y,this.v3.y);b=new THREE.Vector2(b,a);b.normalize();return b};THREE.SplineCurve=function(a){this.points=a==void 0?[]:a};THREE.SplineCurve.prototype=Object.create(THREE.Curve.prototype);\r\nTHREE.SplineCurve.prototype.getPoint=function(a){var b=new THREE.Vector2,c=[],d=this.points,e;e=(d.length-1)*a;a=Math.floor(e);e=e-a;c[0]=a==0?a:a-1;c[1]=a;c[2]=a>d.length-2?d.length-1:a+1;c[3]=a>d.length-3?d.length-1:a+2;b.x=THREE.Curve.Utils.interpolate(d[c[0]].x,d[c[1]].x,d[c[2]].x,d[c[3]].x,e);b.y=THREE.Curve.Utils.interpolate(d[c[0]].y,d[c[1]].y,d[c[2]].y,d[c[3]].y,e);return b};\r\nTHREE.EllipseCurve=function(a,b,c,d,e,f,g){this.aX=a;this.aY=b;this.xRadius=c;this.yRadius=d;this.aStartAngle=e;this.aEndAngle=f;this.aClockwise=g};THREE.EllipseCurve.prototype=Object.create(THREE.Curve.prototype);THREE.EllipseCurve.prototype.getPoint=function(a){var b=this.aEndAngle-this.aStartAngle;this.aClockwise||(a=1-a);b=this.aStartAngle+a*b;a=this.aX+this.xRadius*Math.cos(b);b=this.aY+this.yRadius*Math.sin(b);return new THREE.Vector2(a,b)};\r\nTHREE.ArcCurve=function(a,b,c,d,e,f){THREE.EllipseCurve.call(this,a,b,c,c,d,e,f)};THREE.ArcCurve.prototype=Object.create(THREE.EllipseCurve.prototype);\r\nTHREE.Curve.Utils={tangentQuadraticBezier:function(a,b,c,d){return 2*(1-a)*(c-b)+2*a*(d-c)},tangentCubicBezier:function(a,b,c,d,e){return-3*b*(1-a)*(1-a)+3*c*(1-a)*(1-a)-6*a*c*(1-a)+6*a*d*(1-a)-3*a*a*d+3*a*a*e},tangentSpline:function(a){return 6*a*a-6*a+(3*a*a-4*a+1)+(-6*a*a+6*a)+(3*a*a-2*a)},interpolate:function(a,b,c,d,e){var a=(c-a)*0.5,d=(d-b)*0.5,f=e*e;return(2*b-2*c+a+d)*e*f+(-3*b+3*c-2*a-d)*f+a*e+b}};\r\nTHREE.Curve.create=function(a,b){a.prototype=Object.create(THREE.Curve.prototype);a.prototype.getPoint=b;return a};THREE.LineCurve3=THREE.Curve.create(function(a,b){this.v1=a;this.v2=b},function(a){var b=new THREE.Vector3;b.sub(this.v2,this.v1);b.multiplyScalar(a);b.addSelf(this.v1);return b});\r\nTHREE.QuadraticBezierCurve3=THREE.Curve.create(function(a,b,c){this.v0=a;this.v1=b;this.v2=c},function(a){var b,c;b=THREE.Shape.Utils.b2(a,this.v0.x,this.v1.x,this.v2.x);c=THREE.Shape.Utils.b2(a,this.v0.y,this.v1.y,this.v2.y);a=THREE.Shape.Utils.b2(a,this.v0.z,this.v1.z,this.v2.z);return new THREE.Vector3(b,c,a)});\r\nTHREE.CubicBezierCurve3=THREE.Curve.create(function(a,b,c,d){this.v0=a;this.v1=b;this.v2=c;this.v3=d},function(a){var b,c;b=THREE.Shape.Utils.b3(a,this.v0.x,this.v1.x,this.v2.x,this.v3.x);c=THREE.Shape.Utils.b3(a,this.v0.y,this.v1.y,this.v2.y,this.v3.y);a=THREE.Shape.Utils.b3(a,this.v0.z,this.v1.z,this.v2.z,this.v3.z);return new THREE.Vector3(b,c,a)});\r\nTHREE.SplineCurve3=THREE.Curve.create(function(a){this.points=a==void 0?[]:a},function(a){var b=new THREE.Vector3,c=[],d=this.points,e,a=(d.length-1)*a;e=Math.floor(a);a=a-e;c[0]=e==0?e:e-1;c[1]=e;c[2]=e>d.length-2?d.length-1:e+1;c[3]=e>d.length-3?d.length-1:e+2;e=d[c[0]];var f=d[c[1]],g=d[c[2]],c=d[c[3]];b.x=THREE.Curve.Utils.interpolate(e.x,f.x,g.x,c.x,a);b.y=THREE.Curve.Utils.interpolate(e.y,f.y,g.y,c.y,a);b.z=THREE.Curve.Utils.interpolate(e.z,f.z,g.z,c.z,a);return b});\r\nTHREE.ClosedSplineCurve3=THREE.Curve.create(function(a){this.points=a==void 0?[]:a},function(a){var b=new THREE.Vector3,c=[],d=this.points,e;e=(d.length-0)*a;a=Math.floor(e);e=e-a;a=a+(a>0?0:(Math.floor(Math.abs(a)/d.length)+1)*d.length);c[0]=(a-1)%d.length;c[1]=a%d.length;c[2]=(a+1)%d.length;c[3]=(a+2)%d.length;b.x=THREE.Curve.Utils.interpolate(d[c[0]].x,d[c[1]].x,d[c[2]].x,d[c[3]].x,e);b.y=THREE.Curve.Utils.interpolate(d[c[0]].y,d[c[1]].y,d[c[2]].y,d[c[3]].y,e);b.z=THREE.Curve.Utils.interpolate(d[c[0]].z,\r\nd[c[1]].z,d[c[2]].z,d[c[3]].z,e);return b});THREE.CurvePath=function(){this.curves=[];this.bends=[];this.autoClose=false};THREE.CurvePath.prototype=Object.create(THREE.Curve.prototype);THREE.CurvePath.prototype.add=function(a){this.curves.push(a)};THREE.CurvePath.prototype.checkConnection=function(){};THREE.CurvePath.prototype.closePath=function(){var a=this.curves[0].getPoint(0),b=this.curves[this.curves.length-1].getPoint(1);a.equals(b)||this.curves.push(new THREE.LineCurve(b,a))};\r\nTHREE.CurvePath.prototype.getPoint=function(a){for(var b=a*this.getLength(),c=this.getCurveLengths(),a=0;a<c.length;){if(c[a]>=b){b=c[a]-b;a=this.curves[a];b=1-b/a.getLength();return a.getPointAt(b)}a++}return null};THREE.CurvePath.prototype.getLength=function(){var a=this.getCurveLengths();return a[a.length-1]};\r\nTHREE.CurvePath.prototype.getCurveLengths=function(){if(this.cacheLengths&&this.cacheLengths.length==this.curves.length)return this.cacheLengths;var a=[],b=0,c,d=this.curves.length;for(c=0;c<d;c++){b=b+this.curves[c].getLength();a.push(b)}return this.cacheLengths=a};\r\nTHREE.CurvePath.prototype.getBoundingBox=function(){var a=this.getPoints(),b,c,d,e,f,g;b=c=Number.NEGATIVE_INFINITY;e=f=Number.POSITIVE_INFINITY;var h,i,j,l,m=a[0]instanceof THREE.Vector3;l=m?new THREE.Vector3:new THREE.Vector2;i=0;for(j=a.length;i<j;i++){h=a[i];if(h.x>b)b=h.x;else if(h.x<e)e=h.x;if(h.y>c)c=h.y;else if(h.y<f)f=h.y;if(m)if(h.z>d)d=h.z;else if(h.z<g)g=h.z;l.addSelf(h)}a={minX:e,minY:f,maxX:b,maxY:c,centroid:l.divideScalar(j)};if(m){a.maxZ=d;a.minZ=g}return a};\r\nTHREE.CurvePath.prototype.createPointsGeometry=function(a){a=this.getPoints(a,true);return this.createGeometry(a)};THREE.CurvePath.prototype.createSpacedPointsGeometry=function(a){a=this.getSpacedPoints(a,true);return this.createGeometry(a)};THREE.CurvePath.prototype.createGeometry=function(a){for(var b=new THREE.Geometry,c=0;c<a.length;c++)b.vertices.push(new THREE.Vector3(a[c].x,a[c].y,a[c].z||0));return b};THREE.CurvePath.prototype.addWrapPath=function(a){this.bends.push(a)};\r\nTHREE.CurvePath.prototype.getTransformedPoints=function(a,b){var c=this.getPoints(a),d,e;if(!b)b=this.bends;d=0;for(e=b.length;d<e;d++)c=this.getWrapPoints(c,b[d]);return c};THREE.CurvePath.prototype.getTransformedSpacedPoints=function(a,b){var c=this.getSpacedPoints(a),d,e;if(!b)b=this.bends;d=0;for(e=b.length;d<e;d++)c=this.getWrapPoints(c,b[d]);return c};\r\nTHREE.CurvePath.prototype.getWrapPoints=function(a,b){var c=this.getBoundingBox(),d,e,f,g,h,i;d=0;for(e=a.length;d<e;d++){f=a[d];g=f.x;h=f.y;i=g/c.maxX;i=b.getUtoTmapping(i,g);g=b.getPoint(i);h=b.getNormalVector(i).multiplyScalar(h);f.x=g.x+h.x;f.y=g.y+h.y}return a};THREE.Gyroscope=function(){THREE.Object3D.call(this)};THREE.Gyroscope.prototype=Object.create(THREE.Object3D.prototype);\r\nTHREE.Gyroscope.prototype.updateMatrixWorld=function(a){this.matrixAutoUpdate&&this.updateMatrix();if(this.matrixWorldNeedsUpdate||a){if(this.parent){this.matrixWorld.multiply(this.parent.matrixWorld,this.matrix);this.matrixWorld.decompose(this.translationWorld,this.rotationWorld,this.scaleWorld);this.matrix.decompose(this.translationObject,this.rotationObject,this.scaleObject);this.matrixWorld.compose(this.translationWorld,this.rotationObject,this.scaleWorld)}else this.matrixWorld.copy(this.matrix);\r\nthis.matrixWorldNeedsUpdate=false;a=true}for(var b=0,c=this.children.length;b<c;b++)this.children[b].updateMatrixWorld(a)};THREE.Gyroscope.prototype.translationWorld=new THREE.Vector3;THREE.Gyroscope.prototype.translationObject=new THREE.Vector3;THREE.Gyroscope.prototype.rotationWorld=new THREE.Quaternion;THREE.Gyroscope.prototype.rotationObject=new THREE.Quaternion;THREE.Gyroscope.prototype.scaleWorld=new THREE.Vector3;THREE.Gyroscope.prototype.scaleObject=new THREE.Vector3;\r\nTHREE.Path=function(a){THREE.CurvePath.call(this);this.actions=[];a&&this.fromPoints(a)};THREE.Path.prototype=Object.create(THREE.CurvePath.prototype);THREE.PathActions={MOVE_TO:\"moveTo\",LINE_TO:\"lineTo\",QUADRATIC_CURVE_TO:\"quadraticCurveTo\",BEZIER_CURVE_TO:\"bezierCurveTo\",CSPLINE_THRU:\"splineThru\",ARC:\"arc\",ELLIPSE:\"ellipse\"};THREE.Path.prototype.fromPoints=function(a){this.moveTo(a[0].x,a[0].y);for(var b=1,c=a.length;b<c;b++)this.lineTo(a[b].x,a[b].y)};\r\nTHREE.Path.prototype.moveTo=function(a,b){var c=Array.prototype.slice.call(arguments);this.actions.push({action:THREE.PathActions.MOVE_TO,args:c})};THREE.Path.prototype.lineTo=function(a,b){var c=Array.prototype.slice.call(arguments),d=this.actions[this.actions.length-1].args,d=new THREE.LineCurve(new THREE.Vector2(d[d.length-2],d[d.length-1]),new THREE.Vector2(a,b));this.curves.push(d);this.actions.push({action:THREE.PathActions.LINE_TO,args:c})};\r\nTHREE.Path.prototype.quadraticCurveTo=function(a,b,c,d){var e=Array.prototype.slice.call(arguments),f=this.actions[this.actions.length-1].args,f=new THREE.QuadraticBezierCurve(new THREE.Vector2(f[f.length-2],f[f.length-1]),new THREE.Vector2(a,b),new THREE.Vector2(c,d));this.curves.push(f);this.actions.push({action:THREE.PathActions.QUADRATIC_CURVE_TO,args:e})};\r\nTHREE.Path.prototype.bezierCurveTo=function(a,b,c,d,e,f){var g=Array.prototype.slice.call(arguments),h=this.actions[this.actions.length-1].args,h=new THREE.CubicBezierCurve(new THREE.Vector2(h[h.length-2],h[h.length-1]),new THREE.Vector2(a,b),new THREE.Vector2(c,d),new THREE.Vector2(e,f));this.curves.push(h);this.actions.push({action:THREE.PathActions.BEZIER_CURVE_TO,args:g})};\r\nTHREE.Path.prototype.splineThru=function(a){var b=Array.prototype.slice.call(arguments),c=this.actions[this.actions.length-1].args,c=[new THREE.Vector2(c[c.length-2],c[c.length-1])];Array.prototype.push.apply(c,a);c=new THREE.SplineCurve(c);this.curves.push(c);this.actions.push({action:THREE.PathActions.CSPLINE_THRU,args:b})};THREE.Path.prototype.arc=function(a,b,c,d,e,f){var g=this.actions[this.actions.length-1].args;this.absarc(a+g[g.length-2],b+g[g.length-1],c,d,e,f)};\r\nTHREE.Path.prototype.absarc=function(a,b,c,d,e,f){this.absellipse(a,b,c,c,d,e,f)};THREE.Path.prototype.ellipse=function(a,b,c,d,e,f,g){var h=this.actions[this.actions.length-1].args;this.absellipse(a+h[h.length-2],b+h[h.length-1],c,d,e,f,g)};THREE.Path.prototype.absellipse=function(a,b,c,d,e,f,g){var h=Array.prototype.slice.call(arguments),i=new THREE.EllipseCurve(a,b,c,d,e,f,g);this.curves.push(i);i=i.getPoint(g?1:0);h.push(i.x);h.push(i.y);this.actions.push({action:THREE.PathActions.ELLIPSE,args:h})};\r\nTHREE.Path.prototype.getSpacedPoints=function(a){a||(a=40);for(var b=[],c=0;c<a;c++)b.push(this.getPoint(c/a));return b};\r\nTHREE.Path.prototype.getPoints=function(a,b){if(this.useSpacedPoints){console.log(\"tata\");return this.getSpacedPoints(a,b)}var a=a||12,c=[],d,e,f,g,h,i,j,l,m,n,p,o,q;d=0;for(e=this.actions.length;d<e;d++){f=this.actions[d];g=f.action;f=f.args;switch(g){case THREE.PathActions.MOVE_TO:c.push(new THREE.Vector2(f[0],f[1]));break;case THREE.PathActions.LINE_TO:c.push(new THREE.Vector2(f[0],f[1]));break;case THREE.PathActions.QUADRATIC_CURVE_TO:h=f[2];i=f[3];m=f[0];n=f[1];if(c.length>0){g=c[c.length-1];\r\np=g.x;o=g.y}else{g=this.actions[d-1].args;p=g[g.length-2];o=g[g.length-1]}for(f=1;f<=a;f++){q=f/a;g=THREE.Shape.Utils.b2(q,p,m,h);q=THREE.Shape.Utils.b2(q,o,n,i);c.push(new THREE.Vector2(g,q))}break;case THREE.PathActions.BEZIER_CURVE_TO:h=f[4];i=f[5];m=f[0];n=f[1];j=f[2];l=f[3];if(c.length>0){g=c[c.length-1];p=g.x;o=g.y}else{g=this.actions[d-1].args;p=g[g.length-2];o=g[g.length-1]}for(f=1;f<=a;f++){q=f/a;g=THREE.Shape.Utils.b3(q,p,m,j,h);q=THREE.Shape.Utils.b3(q,o,n,l,i);c.push(new THREE.Vector2(g,\r\nq))}break;case THREE.PathActions.CSPLINE_THRU:g=this.actions[d-1].args;q=[new THREE.Vector2(g[g.length-2],g[g.length-1])];g=a*f[0].length;q=q.concat(f[0]);q=new THREE.SplineCurve(q);for(f=1;f<=g;f++)c.push(q.getPointAt(f/g));break;case THREE.PathActions.ARC:h=f[0];i=f[1];n=f[2];j=f[3];g=f[4];m=!!f[5];p=g-j;o=a*2;for(f=1;f<=o;f++){q=f/o;m||(q=1-q);q=j+q*p;g=h+n*Math.cos(q);q=i+n*Math.sin(q);c.push(new THREE.Vector2(g,q))}break;case THREE.PathActions.ELLIPSE:h=f[0];i=f[1];n=f[2];l=f[3];j=f[4];g=f[5];\r\nm=!!f[6];p=g-j;o=a*2;for(f=1;f<=o;f++){q=f/o;m||(q=1-q);q=j+q*p;g=h+n*Math.cos(q);q=i+l*Math.sin(q);c.push(new THREE.Vector2(g,q))}}}d=c[c.length-1];Math.abs(d.x-c[0].x)<1E-10&&Math.abs(d.y-c[0].y)<1E-10&&c.splice(c.length-1,1);b&&c.push(c[0]);return c};\r\nTHREE.Path.prototype.toShapes=function(){var a,b,c,d,e=[],f=new THREE.Path;a=0;for(b=this.actions.length;a<b;a++){c=this.actions[a];d=c.args;c=c.action;if(c==THREE.PathActions.MOVE_TO&&f.actions.length!=0){e.push(f);f=new THREE.Path}f[c].apply(f,d)}f.actions.length!=0&&e.push(f);if(e.length==0)return[];var g;d=[];a=!THREE.Shape.Utils.isClockWise(e[0].getPoints());if(e.length==1){f=e[0];g=new THREE.Shape;g.actions=f.actions;g.curves=f.curves;d.push(g);return d}if(a){g=new THREE.Shape;a=0;for(b=e.length;a<\r\nb;a++){f=e[a];if(THREE.Shape.Utils.isClockWise(f.getPoints())){g.actions=f.actions;g.curves=f.curves;d.push(g);g=new THREE.Shape}else g.holes.push(f)}}else{a=0;for(b=e.length;a<b;a++){f=e[a];if(THREE.Shape.Utils.isClockWise(f.getPoints())){g&&d.push(g);g=new THREE.Shape;g.actions=f.actions;g.curves=f.curves}else g.holes.push(f)}d.push(g)}return d};THREE.Shape=function(){THREE.Path.apply(this,arguments);this.holes=[]};THREE.Shape.prototype=Object.create(THREE.Path.prototype);\r\nTHREE.Shape.prototype.extrude=function(a){return new THREE.ExtrudeGeometry(this,a)};THREE.Shape.prototype.makeGeometry=function(a){return new THREE.ShapeGeometry(this,a)};THREE.Shape.prototype.getPointsHoles=function(a){var b,c=this.holes.length,d=[];for(b=0;b<c;b++)d[b]=this.holes[b].getTransformedPoints(a,this.bends);return d};THREE.Shape.prototype.getSpacedPointsHoles=function(a){var b,c=this.holes.length,d=[];for(b=0;b<c;b++)d[b]=this.holes[b].getTransformedSpacedPoints(a,this.bends);return d};\r\nTHREE.Shape.prototype.extractAllPoints=function(a){return{shape:this.getTransformedPoints(a),holes:this.getPointsHoles(a)}};THREE.Shape.prototype.extractPoints=function(a){return this.useSpacedPoints?this.extractAllSpacedPoints(a):this.extractAllPoints(a)};THREE.Shape.prototype.extractAllSpacedPoints=function(a){return{shape:this.getTransformedSpacedPoints(a),holes:this.getSpacedPointsHoles(a)}};\r\nTHREE.Shape.Utils={removeHoles:function(a,b){var c=a.concat(),d=c.concat(),e,f,g,h,i,j,l,m,n,p,o=[];for(i=0;i<b.length;i++){j=b[i];Array.prototype.push.apply(d,j);f=Number.POSITIVE_INFINITY;for(e=0;e<j.length;e++){n=j[e];p=[];for(m=0;m<c.length;m++){l=c[m];l=n.distanceToSquared(l);p.push(l);if(l<f){f=l;g=e;h=m}}}e=h-1>=0?h-1:c.length-1;f=g-1>=0?g-1:j.length-1;var q=[j[g],c[h],c[e]];m=THREE.FontUtils.Triangulate.area(q);var r=[j[g],j[f],c[h]];n=THREE.FontUtils.Triangulate.area(r);p=h;l=g;h=h+1;g=g+\r\n-1;h<0&&(h=h+c.length);h=h%c.length;g<0&&(g=g+j.length);g=g%j.length;e=h-1>=0?h-1:c.length-1;f=g-1>=0?g-1:j.length-1;q=[j[g],c[h],c[e]];q=THREE.FontUtils.Triangulate.area(q);r=[j[g],j[f],c[h]];r=THREE.FontUtils.Triangulate.area(r);if(m+n>q+r){h=p;g=l;h<0&&(h=h+c.length);h=h%c.length;g<0&&(g=g+j.length);g=g%j.length;e=h-1>=0?h-1:c.length-1;f=g-1>=0?g-1:j.length-1}m=c.slice(0,h);n=c.slice(h);p=j.slice(g);l=j.slice(0,g);f=[j[g],j[f],c[h]];o.push([j[g],c[h],c[e]]);o.push(f);c=m.concat(p).concat(l).concat(n)}return{shape:c,\r\nisolatedPts:o,allpoints:d}},triangulateShape:function(a,b){var c=THREE.Shape.Utils.removeHoles(a,b),d=c.allpoints,e=c.isolatedPts,c=THREE.FontUtils.Triangulate(c.shape,false),f,g,h,i,j={};f=0;for(g=d.length;f<g;f++){i=d[f].x+\":\"+d[f].y;j[i]!==void 0&&console.log(\"Duplicate point\",i);j[i]=f}f=0;for(g=c.length;f<g;f++){h=c[f];for(d=0;d<3;d++){i=h[d].x+\":\"+h[d].y;i=j[i];i!==void 0&&(h[d]=i)}}f=0;for(g=e.length;f<g;f++){h=e[f];for(d=0;d<3;d++){i=h[d].x+\":\"+h[d].y;i=j[i];i!==void 0&&(h[d]=i)}}return c.concat(e)},\r\nisClockWise:function(a){return THREE.FontUtils.Triangulate.area(a)<0},b2p0:function(a,b){var c=1-a;return c*c*b},b2p1:function(a,b){return 2*(1-a)*a*b},b2p2:function(a,b){return a*a*b},b2:function(a,b,c,d){return this.b2p0(a,b)+this.b2p1(a,c)+this.b2p2(a,d)},b3p0:function(a,b){var c=1-a;return c*c*c*b},b3p1:function(a,b){var c=1-a;return 3*c*c*a*b},b3p2:function(a,b){return 3*(1-a)*a*a*b},b3p3:function(a,b){return a*a*a*b},b3:function(a,b,c,d,e){return this.b3p0(a,b)+this.b3p1(a,c)+this.b3p2(a,d)+\r\nthis.b3p3(a,e)}};\r\nTHREE.AnimationHandler=function(){var a=[],b={},c={update:function(b){for(var c=0;c<a.length;c++)a[c].update(b)},addToUpdate:function(b){a.indexOf(b)===-1&&a.push(b)},removeFromUpdate:function(b){b=a.indexOf(b);b!==-1&&a.splice(b,1)},add:function(a){b[a.name]!==void 0&&console.log(\"THREE.AnimationHandler.add: Warning! \"+a.name+\" already exists in library. Overwriting.\");b[a.name]=a;if(a.initialized!==true){for(var c=0;c<a.hierarchy.length;c++){for(var d=0;d<a.hierarchy[c].keys.length;d++){if(a.hierarchy[c].keys[d].time<0)a.hierarchy[c].keys[d].time=\r\n0;if(a.hierarchy[c].keys[d].rot!==void 0&&!(a.hierarchy[c].keys[d].rot instanceof THREE.Quaternion)){var h=a.hierarchy[c].keys[d].rot;a.hierarchy[c].keys[d].rot=new THREE.Quaternion(h[0],h[1],h[2],h[3])}}if(a.hierarchy[c].keys.length&&a.hierarchy[c].keys[0].morphTargets!==void 0){h={};for(d=0;d<a.hierarchy[c].keys.length;d++)for(var i=0;i<a.hierarchy[c].keys[d].morphTargets.length;i++){var j=a.hierarchy[c].keys[d].morphTargets[i];h[j]=-1}a.hierarchy[c].usedMorphTargets=h;for(d=0;d<a.hierarchy[c].keys.length;d++){var l=\r\n{};for(j in h){for(i=0;i<a.hierarchy[c].keys[d].morphTargets.length;i++)if(a.hierarchy[c].keys[d].morphTargets[i]===j){l[j]=a.hierarchy[c].keys[d].morphTargetsInfluences[i];break}i===a.hierarchy[c].keys[d].morphTargets.length&&(l[j]=0)}a.hierarchy[c].keys[d].morphTargetsInfluences=l}}for(d=1;d<a.hierarchy[c].keys.length;d++)if(a.hierarchy[c].keys[d].time===a.hierarchy[c].keys[d-1].time){a.hierarchy[c].keys.splice(d,1);d--}for(d=0;d<a.hierarchy[c].keys.length;d++)a.hierarchy[c].keys[d].index=d}d=parseInt(a.length*\r\na.fps,10);a.JIT={};a.JIT.hierarchy=[];for(c=0;c<a.hierarchy.length;c++)a.JIT.hierarchy.push(Array(d));a.initialized=true}},get:function(a){if(typeof a===\"string\"){if(b[a])return b[a];console.log(\"THREE.AnimationHandler.get: Couldn't find animation \"+a);return null}},parse:function(a){var b=[];if(a instanceof THREE.SkinnedMesh)for(var c=0;c<a.bones.length;c++)b.push(a.bones[c]);else d(a,b);return b}},d=function(a,b){b.push(a);for(var c=0;c<a.children.length;c++)d(a.children[c],b)};c.LINEAR=0;c.CATMULLROM=\r\n1;c.CATMULLROM_FORWARD=2;return c}();THREE.Animation=function(a,b,c){this.root=a;this.data=THREE.AnimationHandler.get(b);this.hierarchy=THREE.AnimationHandler.parse(a);this.currentTime=0;this.timeScale=1;this.isPlaying=false;this.loop=this.isPaused=true;this.interpolationType=c!==void 0?c:THREE.AnimationHandler.LINEAR;this.points=[];this.target=new THREE.Vector3};\r\nTHREE.Animation.prototype.play=function(a,b){if(this.isPlaying===false){this.isPlaying=true;this.loop=a!==void 0?a:true;this.currentTime=b!==void 0?b:0;var c,d=this.hierarchy.length,e;for(c=0;c<d;c++){e=this.hierarchy[c];if(this.interpolationType!==THREE.AnimationHandler.CATMULLROM_FORWARD)e.useQuaternion=true;e.matrixAutoUpdate=true;if(e.animationCache===void 0){e.animationCache={};e.animationCache.prevKey={pos:0,rot:0,scl:0};e.animationCache.nextKey={pos:0,rot:0,scl:0};e.animationCache.originalMatrix=\r\ne instanceof THREE.Bone?e.skinMatrix:e.matrix}var f=e.animationCache.prevKey;e=e.animationCache.nextKey;f.pos=this.data.hierarchy[c].keys[0];f.rot=this.data.hierarchy[c].keys[0];f.scl=this.data.hierarchy[c].keys[0];e.pos=this.getNextKeyWith(\"pos\",c,1);e.rot=this.getNextKeyWith(\"rot\",c,1);e.scl=this.getNextKeyWith(\"scl\",c,1)}this.update(0)}this.isPaused=false;THREE.AnimationHandler.addToUpdate(this)};\r\nTHREE.Animation.prototype.pause=function(){this.isPaused===true?THREE.AnimationHandler.addToUpdate(this):THREE.AnimationHandler.removeFromUpdate(this);this.isPaused=!this.isPaused};THREE.Animation.prototype.stop=function(){this.isPaused=this.isPlaying=false;THREE.AnimationHandler.removeFromUpdate(this)};\r\nTHREE.Animation.prototype.update=function(a){if(this.isPlaying!==false){var b=[\"pos\",\"rot\",\"scl\"],c,d,e,f,g,h,i,j,l;l=this.currentTime=this.currentTime+a*this.timeScale;j=this.currentTime=this.currentTime%this.data.length;parseInt(Math.min(j*this.data.fps,this.data.length*this.data.fps),10);for(var m=0,n=this.hierarchy.length;m<n;m++){a=this.hierarchy[m];i=a.animationCache;for(var p=0;p<3;p++){c=b[p];g=i.prevKey[c];h=i.nextKey[c];if(h.time<=l){if(j<l)if(this.loop){g=this.data.hierarchy[m].keys[0];\r\nfor(h=this.getNextKeyWith(c,m,1);h.time<j;){g=h;h=this.getNextKeyWith(c,m,h.index+1)}}else{this.stop();return}else{do{g=h;h=this.getNextKeyWith(c,m,h.index+1)}while(h.time<j)}i.prevKey[c]=g;i.nextKey[c]=h}a.matrixAutoUpdate=true;a.matrixWorldNeedsUpdate=true;d=(j-g.time)/(h.time-g.time);e=g[c];f=h[c];if(d<0||d>1){console.log(\"THREE.Animation.update: Warning! Scale out of bounds:\"+d+\" on bone \"+m);d=d<0?0:1}if(c===\"pos\"){c=a.position;if(this.interpolationType===THREE.AnimationHandler.LINEAR){c.x=e[0]+\r\n(f[0]-e[0])*d;c.y=e[1]+(f[1]-e[1])*d;c.z=e[2]+(f[2]-e[2])*d}else if(this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD){this.points[0]=this.getPrevKeyWith(\"pos\",m,g.index-1).pos;this.points[1]=e;this.points[2]=f;this.points[3]=this.getNextKeyWith(\"pos\",m,h.index+1).pos;d=d*0.33+0.33;e=this.interpolateCatmullRom(this.points,d);c.x=e[0];c.y=e[1];c.z=e[2];if(this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD){d=\r\nthis.interpolateCatmullRom(this.points,d*1.01);this.target.set(d[0],d[1],d[2]);this.target.subSelf(c);this.target.y=0;this.target.normalize();d=Math.atan2(this.target.x,this.target.z);a.rotation.set(0,d,0)}}}else if(c===\"rot\")THREE.Quaternion.slerp(e,f,a.quaternion,d);else if(c===\"scl\"){c=a.scale;c.x=e[0]+(f[0]-e[0])*d;c.y=e[1]+(f[1]-e[1])*d;c.z=e[2]+(f[2]-e[2])*d}}}}};\r\nTHREE.Animation.prototype.interpolateCatmullRom=function(a,b){var c=[],d=[],e,f,g,h,i,j;e=(a.length-1)*b;f=Math.floor(e);e=e-f;c[0]=f===0?f:f-1;c[1]=f;c[2]=f>a.length-2?f:f+1;c[3]=f>a.length-3?f:f+2;f=a[c[0]];h=a[c[1]];i=a[c[2]];j=a[c[3]];c=e*e;g=e*c;d[0]=this.interpolate(f[0],h[0],i[0],j[0],e,c,g);d[1]=this.interpolate(f[1],h[1],i[1],j[1],e,c,g);d[2]=this.interpolate(f[2],h[2],i[2],j[2],e,c,g);return d};\r\nTHREE.Animation.prototype.interpolate=function(a,b,c,d,e,f,g){a=(c-a)*0.5;d=(d-b)*0.5;return(2*(b-c)+a+d)*g+(-3*(b-c)-2*a-d)*f+a*e+b};THREE.Animation.prototype.getNextKeyWith=function(a,b,c){for(var d=this.data.hierarchy[b].keys,c=this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD?c<d.length-1?c:d.length-1:c%d.length;c<d.length;c++)if(d[c][a]!==void 0)return d[c];return this.data.hierarchy[b].keys[0]};\r\nTHREE.Animation.prototype.getPrevKeyWith=function(a,b,c){for(var d=this.data.hierarchy[b].keys,c=this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD?c>0?c:0:c>=0?c:c+d.length;c>=0;c--)if(d[c][a]!==void 0)return d[c];return this.data.hierarchy[b].keys[d.length-1]};\r\nTHREE.KeyFrameAnimation=function(a,b,c){this.root=a;this.data=THREE.AnimationHandler.get(b);this.hierarchy=THREE.AnimationHandler.parse(a);this.currentTime=0;this.timeScale=0.001;this.isPlaying=false;this.loop=this.isPaused=true;this.JITCompile=c!==void 0?c:true;a=0;for(b=this.hierarchy.length;a<b;a++){var c=this.data.hierarchy[a].sids,d=this.hierarchy[a];if(this.data.hierarchy[a].keys.length&&c){for(var e=0;e<c.length;e++){var f=c[e],g=this.getNextKeyWith(f,a,0);g&&g.apply(f)}d.matrixAutoUpdate=\r\nfalse;this.data.hierarchy[a].node.updateMatrix();d.matrixWorldNeedsUpdate=true}}};\r\nTHREE.KeyFrameAnimation.prototype.play=function(a,b){if(!this.isPlaying){this.isPlaying=true;this.loop=a!==void 0?a:true;this.currentTime=b!==void 0?b:0;this.startTimeMs=b;this.startTime=1E7;this.endTime=-this.startTime;var c,d=this.hierarchy.length,e,f;for(c=0;c<d;c++){e=this.hierarchy[c];f=this.data.hierarchy[c];e.useQuaternion=true;if(f.animationCache===void 0){f.animationCache={};f.animationCache.prevKey=null;f.animationCache.nextKey=null;f.animationCache.originalMatrix=e instanceof THREE.Bone?\r\ne.skinMatrix:e.matrix}e=this.data.hierarchy[c].keys;if(e.length){f.animationCache.prevKey=e[0];f.animationCache.nextKey=e[1];this.startTime=Math.min(e[0].time,this.startTime);this.endTime=Math.max(e[e.length-1].time,this.endTime)}}this.update(0)}this.isPaused=false;THREE.AnimationHandler.addToUpdate(this)};THREE.KeyFrameAnimation.prototype.pause=function(){this.isPaused?THREE.AnimationHandler.addToUpdate(this):THREE.AnimationHandler.removeFromUpdate(this);this.isPaused=!this.isPaused};\r\nTHREE.KeyFrameAnimation.prototype.stop=function(){this.isPaused=this.isPlaying=false;THREE.AnimationHandler.removeFromUpdate(this);for(var a=0;a<this.data.hierarchy.length;a++){var b=this.hierarchy[a],c=this.data.hierarchy[a];if(c.animationCache!==void 0){var d=c.animationCache.originalMatrix;if(b instanceof THREE.Bone){d.copy(b.skinMatrix);b.skinMatrix=d}else{d.copy(b.matrix);b.matrix=d}delete c.animationCache}}};\r\nTHREE.KeyFrameAnimation.prototype.update=function(a){if(this.isPlaying){var b,c,d,e,f=this.data.JIT.hierarchy,g,h,i;h=this.currentTime=this.currentTime+a*this.timeScale;g=this.currentTime=this.currentTime%this.data.length;if(g<this.startTimeMs)g=this.currentTime=this.startTimeMs+g;e=parseInt(Math.min(g*this.data.fps,this.data.length*this.data.fps),10);if((i=g<h)&&!this.loop){for(var a=0,j=this.hierarchy.length;a<j;a++){var l=this.data.hierarchy[a].keys,f=this.data.hierarchy[a].sids;d=l.length-1;e=\r\nthis.hierarchy[a];if(l.length){for(l=0;l<f.length;l++){g=f[l];(h=this.getPrevKeyWith(g,a,d))&&h.apply(g)}this.data.hierarchy[a].node.updateMatrix();e.matrixWorldNeedsUpdate=true}}this.stop()}else if(!(g<this.startTime)){a=0;for(j=this.hierarchy.length;a<j;a++){d=this.hierarchy[a];b=this.data.hierarchy[a];var l=b.keys,m=b.animationCache;if(this.JITCompile&&f[a][e]!==void 0)if(d instanceof THREE.Bone){d.skinMatrix=f[a][e];d.matrixWorldNeedsUpdate=false}else{d.matrix=f[a][e];d.matrixWorldNeedsUpdate=\r\ntrue}else if(l.length){if(this.JITCompile&&m)d instanceof THREE.Bone?d.skinMatrix=m.originalMatrix:d.matrix=m.originalMatrix;b=m.prevKey;c=m.nextKey;if(b&&c){if(c.time<=h){if(i&&this.loop){b=l[0];for(c=l[1];c.time<g;){b=c;c=l[b.index+1]}}else if(!i)for(var n=l.length-1;c.time<g&&c.index!==n;){b=c;c=l[b.index+1]}m.prevKey=b;m.nextKey=c}c.time>=g?b.interpolate(c,g):b.interpolate(c,c.time)}this.data.hierarchy[a].node.updateMatrix();d.matrixWorldNeedsUpdate=true}}if(this.JITCompile&&f[0][e]===void 0){this.hierarchy[0].updateMatrixWorld(true);\r\nfor(a=0;a<this.hierarchy.length;a++)f[a][e]=this.hierarchy[a]instanceof THREE.Bone?this.hierarchy[a].skinMatrix.clone():this.hierarchy[a].matrix.clone()}}}};THREE.KeyFrameAnimation.prototype.getNextKeyWith=function(a,b,c){b=this.data.hierarchy[b].keys;for(c=c%b.length;c<b.length;c++)if(b[c].hasTarget(a))return b[c];return b[0]};\r\nTHREE.KeyFrameAnimation.prototype.getPrevKeyWith=function(a,b,c){b=this.data.hierarchy[b].keys;for(c=c>=0?c:c+b.length;c>=0;c--)if(b[c].hasTarget(a))return b[c];return b[b.length-1]};\r\nTHREE.CubeCamera=function(a,b,c){THREE.Object3D.call(this);var d=new THREE.PerspectiveCamera(90,1,a,b);d.up.set(0,-1,0);d.lookAt(new THREE.Vector3(1,0,0));this.add(d);var e=new THREE.PerspectiveCamera(90,1,a,b);e.up.set(0,-1,0);e.lookAt(new THREE.Vector3(-1,0,0));this.add(e);var f=new THREE.PerspectiveCamera(90,1,a,b);f.up.set(0,0,1);f.lookAt(new THREE.Vector3(0,1,0));this.add(f);var g=new THREE.PerspectiveCamera(90,1,a,b);g.up.set(0,0,-1);g.lookAt(new THREE.Vector3(0,-1,0));this.add(g);var h=new THREE.PerspectiveCamera(90,\r\n1,a,b);h.up.set(0,-1,0);h.lookAt(new THREE.Vector3(0,0,1));this.add(h);var i=new THREE.PerspectiveCamera(90,1,a,b);i.up.set(0,-1,0);i.lookAt(new THREE.Vector3(0,0,-1));this.add(i);this.renderTarget=new THREE.WebGLRenderTargetCube(c,c,{format:THREE.RGBFormat,magFilter:THREE.LinearFilter,minFilter:THREE.LinearFilter});this.updateCubeMap=function(a,b){var c=this.renderTarget,n=c.generateMipmaps;c.generateMipmaps=false;c.activeCubeFace=0;a.render(b,d,c);c.activeCubeFace=1;a.render(b,e,c);c.activeCubeFace=\r\n2;a.render(b,f,c);c.activeCubeFace=3;a.render(b,g,c);c.activeCubeFace=4;a.render(b,h,c);c.generateMipmaps=n;c.activeCubeFace=5;a.render(b,i,c)}};THREE.CubeCamera.prototype=Object.create(THREE.Object3D.prototype);THREE.CombinedCamera=function(a,b,c,d,e,f,g){THREE.Camera.call(this);this.fov=c;this.left=-a/2;this.right=a/2;this.top=b/2;this.bottom=-b/2;this.cameraO=new THREE.OrthographicCamera(a/-2,a/2,b/2,b/-2,f,g);this.cameraP=new THREE.PerspectiveCamera(c,a/b,d,e);this.zoom=1;this.toPerspective()};\r\nTHREE.CombinedCamera.prototype=Object.create(THREE.Camera.prototype);THREE.CombinedCamera.prototype.toPerspective=function(){this.near=this.cameraP.near;this.far=this.cameraP.far;this.cameraP.fov=this.fov/this.zoom;this.cameraP.updateProjectionMatrix();this.projectionMatrix=this.cameraP.projectionMatrix;this.inPerspectiveMode=true;this.inOrthographicMode=false};\r\nTHREE.CombinedCamera.prototype.toOrthographic=function(){var a=this.cameraP.aspect,b=(this.cameraP.near+this.cameraP.far)/2,b=Math.tan(this.fov/2)*b,a=2*b*a/2,b=b/this.zoom,a=a/this.zoom;this.cameraO.left=-a;this.cameraO.right=a;this.cameraO.top=b;this.cameraO.bottom=-b;this.cameraO.updateProjectionMatrix();this.near=this.cameraO.near;this.far=this.cameraO.far;this.projectionMatrix=this.cameraO.projectionMatrix;this.inPerspectiveMode=false;this.inOrthographicMode=true};\r\nTHREE.CombinedCamera.prototype.setSize=function(a,b){this.cameraP.aspect=a/b;this.left=-a/2;this.right=a/2;this.top=b/2;this.bottom=-b/2};THREE.CombinedCamera.prototype.setFov=function(a){this.fov=a;this.inPerspectiveMode?this.toPerspective():this.toOrthographic()};THREE.CombinedCamera.prototype.updateProjectionMatrix=function(){if(this.inPerspectiveMode)this.toPerspective();else{this.toPerspective();this.toOrthographic()}};\r\nTHREE.CombinedCamera.prototype.setLens=function(a,b){b===void 0&&(b=24);var c=2*Math.atan(b/(a*2))*(180/Math.PI);this.setFov(c);return c};THREE.CombinedCamera.prototype.setZoom=function(a){this.zoom=a;this.inPerspectiveMode?this.toPerspective():this.toOrthographic()};THREE.CombinedCamera.prototype.toFrontView=function(){this.rotation.x=0;this.rotation.y=0;this.rotation.z=0;this.rotationAutoUpdate=false};\r\nTHREE.CombinedCamera.prototype.toBackView=function(){this.rotation.x=0;this.rotation.y=Math.PI;this.rotation.z=0;this.rotationAutoUpdate=false};THREE.CombinedCamera.prototype.toLeftView=function(){this.rotation.x=0;this.rotation.y=-Math.PI/2;this.rotation.z=0;this.rotationAutoUpdate=false};THREE.CombinedCamera.prototype.toRightView=function(){this.rotation.x=0;this.rotation.y=Math.PI/2;this.rotation.z=0;this.rotationAutoUpdate=false};\r\nTHREE.CombinedCamera.prototype.toTopView=function(){this.rotation.x=-Math.PI/2;this.rotation.y=0;this.rotation.z=0;this.rotationAutoUpdate=false};THREE.CombinedCamera.prototype.toBottomView=function(){this.rotation.x=Math.PI/2;this.rotation.y=0;this.rotation.z=0;this.rotationAutoUpdate=false};\r\nTHREE.CircleGeometry=function(a,b,c,d){THREE.Geometry.call(this);var a=a||50,c=c!==void 0?c:0,d=d!==void 0?d:Math.PI*2,b=b!==void 0?Math.max(3,b):8,e,f=[];e=new THREE.Vector3;var g=new THREE.UV(0.5,0.5);this.vertices.push(e);f.push(g);for(e=0;e<=b;e++){var h=new THREE.Vector3;h.x=a*Math.cos(c+e/b*d);h.y=a*Math.sin(c+e/b*d);this.vertices.push(h);f.push(new THREE.UV((h.x/a+1)/2,-(h.y/a+1)/2+1))}c=new THREE.Vector3(0,0,-1);for(e=1;e<=b;e++){this.faces.push(new THREE.Face3(e,e+1,0,[c,c,c]));this.faceVertexUvs[0].push([f[e],\r\nf[e+1],g])}this.computeCentroids();this.computeFaceNormals();this.boundingSphere={radius:a}};THREE.CircleGeometry.prototype=Object.create(THREE.Geometry.prototype);\r\nTHREE.CubeGeometry=function(a,b,c,d,e,f,g,h){function i(a,b,c,g,h,i,l,m){var n,o=d||1,p=e||1,q=h/2,r=i/2,t=j.vertices.length;if(a===\"x\"&&b===\"y\"||a===\"y\"&&b===\"x\")n=\"z\";else if(a===\"x\"&&b===\"z\"||a===\"z\"&&b===\"x\"){n=\"y\";p=f||1}else if(a===\"z\"&&b===\"y\"||a===\"y\"&&b===\"z\"){n=\"x\";o=f||1}var u=o+1,B=p+1,$=h/o,Y=i/p,N=new THREE.Vector3;N[n]=l>0?1:-1;for(h=0;h<B;h++)for(i=0;i<u;i++){var ea=new THREE.Vector3;ea[a]=(i*$-q)*c;ea[b]=(h*Y-r)*g;ea[n]=l;j.vertices.push(ea)}for(h=0;h<p;h++)for(i=0;i<o;i++){a=new THREE.Face4(i+\r\nu*h+t,i+u*(h+1)+t,i+1+u*(h+1)+t,i+1+u*h+t);a.normal.copy(N);a.vertexNormals.push(N.clone(),N.clone(),N.clone(),N.clone());a.materialIndex=m;j.faces.push(a);j.faceVertexUvs[0].push([new THREE.UV(i/o,1-h/p),new THREE.UV(i/o,1-(h+1)/p),new THREE.UV((i+1)/o,1-(h+1)/p),new THREE.UV((i+1)/o,1-h/p)])}}THREE.Geometry.call(this);var j=this,l=a/2,m=b/2,n=c/2,p,o,q,r,t,B;if(g!==void 0){if(g instanceof Array)this.materials=g;else{this.materials=[];for(p=0;p<6;p++)this.materials.push(g)}p=0;r=1;o=2;t=3;q=4;B=\r\n5}else this.materials=[];this.sides={px:true,nx:true,py:true,ny:true,pz:true,nz:true};if(h!=void 0)for(var u in h)this.sides[u]!==void 0&&(this.sides[u]=h[u]);this.sides.px&&i(\"z\",\"y\",-1,-1,c,b,l,p);this.sides.nx&&i(\"z\",\"y\",1,-1,c,b,-l,r);this.sides.py&&i(\"x\",\"z\",1,1,a,c,m,o);this.sides.ny&&i(\"x\",\"z\",1,-1,a,c,-m,t);this.sides.pz&&i(\"x\",\"y\",1,-1,a,b,n,q);this.sides.nz&&i(\"x\",\"y\",-1,-1,a,b,-n,B);this.computeCentroids();this.mergeVertices()};THREE.CubeGeometry.prototype=Object.create(THREE.Geometry.prototype);\r\nTHREE.CylinderGeometry=function(a,b,c,d,e,f){THREE.Geometry.call(this);var a=a!==void 0?a:20,b=b!==void 0?b:20,c=c!==void 0?c:100,g=c/2,d=d||8,e=e||1,h,i,j=[],l=[];for(i=0;i<=e;i++){var m=[],n=[],p=i/e,o=p*(b-a)+a;for(h=0;h<=d;h++){var q=h/d,r=new THREE.Vector3;r.x=o*Math.sin(q*Math.PI*2);r.y=-p*c+g;r.z=o*Math.cos(q*Math.PI*2);this.vertices.push(r);m.push(this.vertices.length-1);n.push(new THREE.UV(q,1-p))}j.push(m);l.push(n)}c=(b-a)/c;for(h=0;h<d;h++){if(a!==0){m=this.vertices[j[0][h]].clone();n=\r\nthis.vertices[j[0][h+1]].clone()}else{m=this.vertices[j[1][h]].clone();n=this.vertices[j[1][h+1]].clone()}m.setY(Math.sqrt(m.x*m.x+m.z*m.z)*c).normalize();n.setY(Math.sqrt(n.x*n.x+n.z*n.z)*c).normalize();for(i=0;i<e;i++){var p=j[i][h],o=j[i+1][h],q=j[i+1][h+1],r=j[i][h+1],t=m.clone(),B=m.clone(),u=n.clone(),s=n.clone(),z=l[i][h].clone(),A=l[i+1][h].clone(),v=l[i+1][h+1].clone(),y=l[i][h+1].clone();this.faces.push(new THREE.Face4(p,o,q,r,[t,B,u,s]));this.faceVertexUvs[0].push([z,A,v,y])}}if(!f&&a>\r\n0){this.vertices.push(new THREE.Vector3(0,g,0));for(h=0;h<d;h++){p=j[0][h];o=j[0][h+1];q=this.vertices.length-1;t=new THREE.Vector3(0,1,0);B=new THREE.Vector3(0,1,0);u=new THREE.Vector3(0,1,0);z=l[0][h].clone();A=l[0][h+1].clone();v=new THREE.UV(A.u,0);this.faces.push(new THREE.Face3(p,o,q,[t,B,u]));this.faceVertexUvs[0].push([z,A,v])}}if(!f&&b>0){this.vertices.push(new THREE.Vector3(0,-g,0));for(h=0;h<d;h++){p=j[i][h+1];o=j[i][h];q=this.vertices.length-1;t=new THREE.Vector3(0,-1,0);B=new THREE.Vector3(0,\r\n-1,0);u=new THREE.Vector3(0,-1,0);z=l[i][h+1].clone();A=l[i][h].clone();v=new THREE.UV(A.u,1);this.faces.push(new THREE.Face3(p,o,q,[t,B,u]));this.faceVertexUvs[0].push([z,A,v])}}this.computeCentroids();this.computeFaceNormals()};THREE.CylinderGeometry.prototype=Object.create(THREE.Geometry.prototype);\r\nTHREE.ExtrudeGeometry=function(a,b){if(typeof a!==\"undefined\"){THREE.Geometry.call(this);a=a instanceof Array?a:[a];this.shapebb=a[a.length-1].getBoundingBox();this.addShapeList(a,b);this.computeCentroids();this.computeFaceNormals()}};THREE.ExtrudeGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.ExtrudeGeometry.prototype.addShapeList=function(a,b){for(var c=a.length,d=0;d<c;d++)this.addShape(a[d],b)};\r\nTHREE.ExtrudeGeometry.prototype.addShape=function(a,b){function c(a,b,c){b||console.log(\"die\");return b.clone().multiplyScalar(c).addSelf(a)}function d(a,b,c){var d=THREE.ExtrudeGeometry.__v1,e=THREE.ExtrudeGeometry.__v2,f=THREE.ExtrudeGeometry.__v3,g=THREE.ExtrudeGeometry.__v4,h=THREE.ExtrudeGeometry.__v5,i=THREE.ExtrudeGeometry.__v6;d.set(a.x-b.x,a.y-b.y);e.set(a.x-c.x,a.y-c.y);d=d.normalize();e=e.normalize();f.set(-d.y,d.x);g.set(e.y,-e.x);h.copy(a).addSelf(f);i.copy(a).addSelf(g);if(h.equals(i))return g.clone();\r\nh.copy(b).addSelf(f);i.copy(c).addSelf(g);f=d.dot(g);g=i.subSelf(h).dot(g);if(f===0){console.log(\"Either infinite or no solutions!\");g===0?console.log(\"Its finite solutions.\"):console.log(\"Too bad, no solutions.\")}g=g/f;if(g<0){b=Math.atan2(b.y-a.y,b.x-a.x);a=Math.atan2(c.y-a.y,c.x-a.x);b>a&&(a=a+Math.PI*2);c=(b+a)/2;a=-Math.cos(c);c=-Math.sin(c);return new THREE.Vector2(a,c)}return d.multiplyScalar(g).addSelf(h).subSelf(a).clone()}function e(c,d){var e,f;for(N=c.length;--N>=0;){e=N;f=N-1;f<0&&(f=\r\nc.length-1);for(var g=0,h=n+l*2,g=0;g<h;g++){var i=R*g,j=R*(g+1),m=d+e+i,i=d+f+i,o=d+f+j,j=d+e+j,p=c,q=g,r=h,s=e,u=f,m=m+H,i=i+H,o=o+H,j=j+H;G.faces.push(new THREE.Face4(m,i,o,j,null,null,t));m=B.generateSideWallUV(G,a,p,b,m,i,o,j,q,r,s,u);G.faceVertexUvs[0].push(m)}}}function f(a,b,c){G.vertices.push(new THREE.Vector3(a,b,c))}function g(c,d,e,f){c=c+H;d=d+H;e=e+H;G.faces.push(new THREE.Face3(c,d,e,null,null,r));c=f?B.generateBottomUV(G,a,b,c,d,e):B.generateTopUV(G,a,b,c,d,e);G.faceVertexUvs[0].push(c)}\r\nvar h=b.amount!==void 0?b.amount:100,i=b.bevelThickness!==void 0?b.bevelThickness:6,j=b.bevelSize!==void 0?b.bevelSize:i-2,l=b.bevelSegments!==void 0?b.bevelSegments:3,m=b.bevelEnabled!==void 0?b.bevelEnabled:true,n=b.steps!==void 0?b.steps:1,p=b.extrudePath,o,q=false,r=b.material,t=b.extrudeMaterial,B=b.UVGenerator!==void 0?b.UVGenerator:THREE.ExtrudeGeometry.WorldUVGenerator,u,s,z,A;if(p){o=p.getSpacedPoints(n);q=true;m=false;u=b.frames!==void 0?b.frames:new THREE.TubeGeometry.FrenetFrames(p,n,\r\nfalse);s=new THREE.Vector3;z=new THREE.Vector3;A=new THREE.Vector3}if(!m)j=i=l=0;var v,y,C,G=this,H=this.vertices.length,p=a.extractPoints(),J=p.shape,p=p.holes,E=!THREE.Shape.Utils.isClockWise(J);if(E){J=J.reverse();y=0;for(C=p.length;y<C;y++){v=p[y];THREE.Shape.Utils.isClockWise(v)&&(p[y]=v.reverse())}E=false}var M=THREE.Shape.Utils.triangulateShape(J,p),E=J;y=0;for(C=p.length;y<C;y++){v=p[y];J=J.concat(v)}var K,F,I,L,R=J.length,$=M.length,Y=[],N=0,ea=E.length;K=ea-1;for(F=N+1;N<ea;N++,K++,F++){K===\r\nea&&(K=0);F===ea&&(F=0);Y[N]=d(E[N],E[K],E[F])}var Q=[],qa,la=Y.concat();y=0;for(C=p.length;y<C;y++){v=p[y];qa=[];N=0;ea=v.length;K=ea-1;for(F=N+1;N<ea;N++,K++,F++){K===ea&&(K=0);F===ea&&(F=0);qa[N]=d(v[N],v[K],v[F])}Q.push(qa);la=la.concat(qa)}for(K=0;K<l;K++){v=K/l;I=i*(1-v);F=j*Math.sin(v*Math.PI/2);N=0;for(ea=E.length;N<ea;N++){L=c(E[N],Y[N],F);f(L.x,L.y,-I)}y=0;for(C=p.length;y<C;y++){v=p[y];qa=Q[y];N=0;for(ea=v.length;N<ea;N++){L=c(v[N],qa[N],F);f(L.x,L.y,-I)}}}F=j;for(N=0;N<R;N++){L=m?c(J[N],\r\nla[N],F):J[N];if(q){z.copy(u.normals[0]).multiplyScalar(L.x);s.copy(u.binormals[0]).multiplyScalar(L.y);A.copy(o[0]).addSelf(z).addSelf(s);f(A.x,A.y,A.z)}else f(L.x,L.y,0)}for(v=1;v<=n;v++)for(N=0;N<R;N++){L=m?c(J[N],la[N],F):J[N];if(q){z.copy(u.normals[v]).multiplyScalar(L.x);s.copy(u.binormals[v]).multiplyScalar(L.y);A.copy(o[v]).addSelf(z).addSelf(s);f(A.x,A.y,A.z)}else f(L.x,L.y,h/n*v)}for(K=l-1;K>=0;K--){v=K/l;I=i*(1-v);F=j*Math.sin(v*Math.PI/2);N=0;for(ea=E.length;N<ea;N++){L=c(E[N],Y[N],F);\r\nf(L.x,L.y,h+I)}y=0;for(C=p.length;y<C;y++){v=p[y];qa=Q[y];N=0;for(ea=v.length;N<ea;N++){L=c(v[N],qa[N],F);q?f(L.x,L.y+o[n-1].y,o[n-1].x+I):f(L.x,L.y,h+I)}}}if(m){i=R*0;for(N=0;N<$;N++){h=M[N];g(h[2]+i,h[1]+i,h[0]+i,true)}i=R*(n+l*2);for(N=0;N<$;N++){h=M[N];g(h[0]+i,h[1]+i,h[2]+i,false)}}else{for(N=0;N<$;N++){h=M[N];g(h[2],h[1],h[0],true)}for(N=0;N<$;N++){h=M[N];g(h[0]+R*n,h[1]+R*n,h[2]+R*n,false)}}h=0;e(E,h);h=h+E.length;y=0;for(C=p.length;y<C;y++){v=p[y];e(v,h);h=h+v.length}};\r\nTHREE.ExtrudeGeometry.WorldUVGenerator={generateTopUV:function(a,b,c,d,e,f){b=a.vertices[e].x;e=a.vertices[e].y;c=a.vertices[f].x;f=a.vertices[f].y;return[new THREE.UV(a.vertices[d].x,a.vertices[d].y),new THREE.UV(b,e),new THREE.UV(c,f)]},generateBottomUV:function(a,b,c,d,e,f){return this.generateTopUV(a,b,c,d,e,f)},generateSideWallUV:function(a,b,c,d,e,f,g,h){var b=a.vertices[e].x,c=a.vertices[e].y,e=a.vertices[e].z,d=a.vertices[f].x,i=a.vertices[f].y,f=a.vertices[f].z,j=a.vertices[g].x,l=a.vertices[g].y,\r\ng=a.vertices[g].z,m=a.vertices[h].x,n=a.vertices[h].y,a=a.vertices[h].z;return Math.abs(c-i)<0.01?[new THREE.UV(b,1-e),new THREE.UV(d,1-f),new THREE.UV(j,1-g),new THREE.UV(m,1-a)]:[new THREE.UV(c,1-e),new THREE.UV(i,1-f),new THREE.UV(l,1-g),new THREE.UV(n,1-a)]}};THREE.ExtrudeGeometry.__v1=new THREE.Vector2;THREE.ExtrudeGeometry.__v2=new THREE.Vector2;THREE.ExtrudeGeometry.__v3=new THREE.Vector2;THREE.ExtrudeGeometry.__v4=new THREE.Vector2;THREE.ExtrudeGeometry.__v5=new THREE.Vector2;\r\nTHREE.ExtrudeGeometry.__v6=new THREE.Vector2;THREE.ShapeGeometry=function(a,b){THREE.Geometry.call(this);a instanceof Array===false&&(a=[a]);this.shapebb=a[a.length-1].getBoundingBox();this.addShapeList(a,b);this.computeCentroids();this.computeFaceNormals()};THREE.ShapeGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.ShapeGeometry.prototype.addShapeList=function(a,b){for(var c=0,d=a.length;c<d;c++)this.addShape(a[c],b);return this};\r\nTHREE.ShapeGeometry.prototype.addShape=function(a,b){b===void 0&&(b={});var c=b.material,d=b.UVGenerator===void 0?THREE.ExtrudeGeometry.WorldUVGenerator:b.UVGenerator,e,f,g,h=this.vertices.length;e=a.extractPoints();var i=e.shape,j=e.holes;if(!THREE.Shape.Utils.isClockWise(i)){i=i.reverse();e=0;for(f=j.length;e<f;e++){g=j[e];THREE.Shape.Utils.isClockWise(g)&&(j[e]=g.reverse())}}var l=THREE.Shape.Utils.triangulateShape(i,j);e=0;for(f=j.length;e<f;e++){g=j[e];i=i.concat(g)}j=i.length;f=l.length;for(e=\r\n0;e<j;e++){g=i[e];this.vertices.push(new THREE.Vector3(g.x,g.y,0))}for(e=0;e<f;e++){j=l[e];i=j[0]+h;g=j[1]+h;j=j[2]+h;this.faces.push(new THREE.Face3(i,g,j,null,null,c));this.faceVertexUvs[0].push(d.generateBottomUV(this,a,b,i,g,j))}};\r\nTHREE.LatheGeometry=function(a,b,c){THREE.Geometry.call(this);for(var b=b||12,c=c||2*Math.PI,d=[],e=(new THREE.Matrix4).makeRotationZ(c/b),f=0;f<a.length;f++){d[f]=a[f].clone();this.vertices.push(d[f])}for(var g=b+1,c=0;c<g;c++)for(f=0;f<d.length;f++){d[f]=e.multiplyVector3(d[f].clone());this.vertices.push(d[f])}for(c=0;c<b;c++){d=0;for(e=a.length;d<e-1;d++){this.faces.push(new THREE.Face4(c*e+d,(c+1)%g*e+d,(c+1)%g*e+(d+1)%e,c*e+(d+1)%e));this.faceVertexUvs[0].push([new THREE.UV(1-c/b,d/e),new THREE.UV(1-\r\n(c+1)/b,d/e),new THREE.UV(1-(c+1)/b,(d+1)/e),new THREE.UV(1-c/b,(d+1)/e)])}}this.computeCentroids();this.computeFaceNormals();this.computeVertexNormals()};THREE.LatheGeometry.prototype=Object.create(THREE.Geometry.prototype);\r\nTHREE.PlaneGeometry=function(a,b,c,d){THREE.Geometry.call(this);for(var e=a/2,f=b/2,c=c||1,d=d||1,g=c+1,h=d+1,i=a/c,j=b/d,l=new THREE.Vector3(0,0,1),a=0;a<h;a++)for(b=0;b<g;b++)this.vertices.push(new THREE.Vector3(b*i-e,-(a*j-f),0));for(a=0;a<d;a++)for(b=0;b<c;b++){e=new THREE.Face4(b+g*a,b+g*(a+1),b+1+g*(a+1),b+1+g*a);e.normal.copy(l);e.vertexNormals.push(l.clone(),l.clone(),l.clone(),l.clone());this.faces.push(e);this.faceVertexUvs[0].push([new THREE.UV(b/c,1-a/d),new THREE.UV(b/c,1-(a+1)/d),new THREE.UV((b+\r\n1)/c,1-(a+1)/d),new THREE.UV((b+1)/c,1-a/d)])}this.computeCentroids()};THREE.PlaneGeometry.prototype=Object.create(THREE.Geometry.prototype);\r\nTHREE.SphereGeometry=function(a,b,c,d,e,f,g){THREE.Geometry.call(this);var a=a||50,d=d!==void 0?d:0,e=e!==void 0?e:Math.PI*2,f=f!==void 0?f:0,g=g!==void 0?g:Math.PI,b=Math.max(3,Math.floor(b)||8),c=Math.max(2,Math.floor(c)||6),h,i,j=[],l=[];for(i=0;i<=c;i++){var m=[],n=[];for(h=0;h<=b;h++){var p=h/b,o=i/c,q=new THREE.Vector3;q.x=-a*Math.cos(d+p*e)*Math.sin(f+o*g);q.y=a*Math.cos(f+o*g);q.z=a*Math.sin(d+p*e)*Math.sin(f+o*g);this.vertices.push(q);m.push(this.vertices.length-1);n.push(new THREE.UV(p,\r\n1-o))}j.push(m);l.push(n)}for(i=0;i<c;i++)for(h=0;h<b;h++){var d=j[i][h+1],e=j[i][h],f=j[i+1][h],g=j[i+1][h+1],m=this.vertices[d].clone().normalize(),n=this.vertices[e].clone().normalize(),p=this.vertices[f].clone().normalize(),o=this.vertices[g].clone().normalize(),q=l[i][h+1].clone(),r=l[i][h].clone(),t=l[i+1][h].clone(),B=l[i+1][h+1].clone();if(Math.abs(this.vertices[d].y)==a){this.faces.push(new THREE.Face3(d,f,g,[m,p,o]));this.faceVertexUvs[0].push([q,t,B])}else if(Math.abs(this.vertices[f].y)==\r\na){this.faces.push(new THREE.Face3(d,e,f,[m,n,p]));this.faceVertexUvs[0].push([q,r,t])}else{this.faces.push(new THREE.Face4(d,e,f,g,[m,n,p,o]));this.faceVertexUvs[0].push([q,r,t,B])}}this.computeCentroids();this.computeFaceNormals();this.boundingSphere={radius:a}};THREE.SphereGeometry.prototype=Object.create(THREE.Geometry.prototype);\r\nTHREE.TextGeometry=function(a,b){var c=THREE.FontUtils.generateShapes(a,b);b.amount=b.height!==void 0?b.height:50;if(b.bevelThickness===void 0)b.bevelThickness=10;if(b.bevelSize===void 0)b.bevelSize=8;if(b.bevelEnabled===void 0)b.bevelEnabled=false;THREE.ExtrudeGeometry.call(this,c,b)};THREE.TextGeometry.prototype=Object.create(THREE.ExtrudeGeometry.prototype);\r\nTHREE.TorusGeometry=function(a,b,c,d,e){THREE.Geometry.call(this);this.radius=a||100;this.tube=b||40;this.radialSegments=c||8;this.tubularSegments=d||6;this.arc=e||Math.PI*2;e=new THREE.Vector3;a=[];b=[];for(c=0;c<=this.radialSegments;c++)for(d=0;d<=this.tubularSegments;d++){var f=d/this.tubularSegments*this.arc,g=c/this.radialSegments*Math.PI*2;e.x=this.radius*Math.cos(f);e.y=this.radius*Math.sin(f);var h=new THREE.Vector3;h.x=(this.radius+this.tube*Math.cos(g))*Math.cos(f);h.y=(this.radius+this.tube*\r\nMath.cos(g))*Math.sin(f);h.z=this.tube*Math.sin(g);this.vertices.push(h);a.push(new THREE.UV(d/this.tubularSegments,c/this.radialSegments));b.push(h.clone().subSelf(e).normalize())}for(c=1;c<=this.radialSegments;c++)for(d=1;d<=this.tubularSegments;d++){var e=(this.tubularSegments+1)*c+d-1,f=(this.tubularSegments+1)*(c-1)+d-1,g=(this.tubularSegments+1)*(c-1)+d,h=(this.tubularSegments+1)*c+d,i=new THREE.Face4(e,f,g,h,[b[e],b[f],b[g],b[h]]);i.normal.addSelf(b[e]);i.normal.addSelf(b[f]);i.normal.addSelf(b[g]);\r\ni.normal.addSelf(b[h]);i.normal.normalize();this.faces.push(i);this.faceVertexUvs[0].push([a[e].clone(),a[f].clone(),a[g].clone(),a[h].clone()])}this.computeCentroids()};THREE.TorusGeometry.prototype=Object.create(THREE.Geometry.prototype);\r\nTHREE.TorusKnotGeometry=function(a,b,c,d,e,f,g){function h(a,b,c,d,e,f){var g=Math.cos(a);Math.cos(b);b=Math.sin(a);a=c/d*a;c=Math.cos(a);g=e*(2+c)*0.5*g;b=e*(2+c)*b*0.5;e=f*e*Math.sin(a)*0.5;return new THREE.Vector3(g,b,e)}THREE.Geometry.call(this);this.radius=a||200;this.tube=b||40;this.radialSegments=c||64;this.tubularSegments=d||8;this.p=e||2;this.q=f||3;this.heightScale=g||1;this.grid=Array(this.radialSegments);c=new THREE.Vector3;d=new THREE.Vector3;e=new THREE.Vector3;for(a=0;a<this.radialSegments;++a){this.grid[a]=\r\nArray(this.tubularSegments);for(b=0;b<this.tubularSegments;++b){var i=a/this.radialSegments*2*this.p*Math.PI,g=b/this.tubularSegments*2*Math.PI,f=h(i,g,this.q,this.p,this.radius,this.heightScale),i=h(i+0.01,g,this.q,this.p,this.radius,this.heightScale);c.sub(i,f);d.add(i,f);e.cross(c,d);d.cross(e,c);e.normalize();d.normalize();i=-this.tube*Math.cos(g);g=this.tube*Math.sin(g);f.x=f.x+(i*d.x+g*e.x);f.y=f.y+(i*d.y+g*e.y);f.z=f.z+(i*d.z+g*e.z);this.grid[a][b]=this.vertices.push(new THREE.Vector3(f.x,\r\nf.y,f.z))-1}}for(a=0;a<this.radialSegments;++a)for(b=0;b<this.tubularSegments;++b){var e=(a+1)%this.radialSegments,f=(b+1)%this.tubularSegments,c=this.grid[a][b],d=this.grid[e][b],e=this.grid[e][f],f=this.grid[a][f],g=new THREE.UV(a/this.radialSegments,b/this.tubularSegments),i=new THREE.UV((a+1)/this.radialSegments,b/this.tubularSegments),j=new THREE.UV((a+1)/this.radialSegments,(b+1)/this.tubularSegments),l=new THREE.UV(a/this.radialSegments,(b+1)/this.tubularSegments);this.faces.push(new THREE.Face4(c,\r\nd,e,f));this.faceVertexUvs[0].push([g,i,j,l])}this.computeCentroids();this.computeFaceNormals();this.computeVertexNormals()};THREE.TorusKnotGeometry.prototype=Object.create(THREE.Geometry.prototype);\r\nTHREE.TubeGeometry=function(a,b,c,d,e,f){THREE.Geometry.call(this);this.path=a;this.segments=b||64;this.radius=c||1;this.radiusSegments=d||8;this.closed=e||false;if(f)this.debug=new THREE.Object3D;this.grid=[];var g,h,f=this.segments+1,i,j,l,m=new THREE.Vector3,n,p,o,b=new THREE.TubeGeometry.FrenetFrames(a,b,e);n=b.tangents;p=b.normals;o=b.binormals;this.tangents=n;this.normals=p;this.binormals=o;for(b=0;b<f;b++){this.grid[b]=[];d=b/(f-1);l=a.getPointAt(d);d=n[b];g=p[b];h=o[b];if(this.debug){this.debug.add(new THREE.ArrowHelper(d,\r\nl,c,255));this.debug.add(new THREE.ArrowHelper(g,l,c,16711680));this.debug.add(new THREE.ArrowHelper(h,l,c,65280))}for(d=0;d<this.radiusSegments;d++){i=d/this.radiusSegments*2*Math.PI;j=-this.radius*Math.cos(i);i=this.radius*Math.sin(i);m.copy(l);m.x=m.x+(j*g.x+i*h.x);m.y=m.y+(j*g.y+i*h.y);m.z=m.z+(j*g.z+i*h.z);this.grid[b][d]=this.vertices.push(new THREE.Vector3(m.x,m.y,m.z))-1}}for(b=0;b<this.segments;b++)for(d=0;d<this.radiusSegments;d++){f=e?(b+1)%this.segments:b+1;m=(d+1)%this.radiusSegments;\r\na=this.grid[b][d];c=this.grid[f][d];f=this.grid[f][m];m=this.grid[b][m];n=new THREE.UV(b/this.segments,d/this.radiusSegments);p=new THREE.UV((b+1)/this.segments,d/this.radiusSegments);o=new THREE.UV((b+1)/this.segments,(d+1)/this.radiusSegments);g=new THREE.UV(b/this.segments,(d+1)/this.radiusSegments);this.faces.push(new THREE.Face4(a,c,f,m));this.faceVertexUvs[0].push([n,p,o,g])}this.computeCentroids();this.computeFaceNormals();this.computeVertexNormals()};THREE.TubeGeometry.prototype=Object.create(THREE.Geometry.prototype);\r\nTHREE.TubeGeometry.FrenetFrames=function(a,b,c){new THREE.Vector3;var d=new THREE.Vector3;new THREE.Vector3;var e=[],f=[],g=[],h=new THREE.Vector3,i=new THREE.Matrix4,b=b+1,j,l,m;this.tangents=e;this.normals=f;this.binormals=g;for(j=0;j<b;j++){l=j/(b-1);e[j]=a.getTangentAt(l);e[j].normalize()}f[0]=new THREE.Vector3;g[0]=new THREE.Vector3;a=Number.MAX_VALUE;j=Math.abs(e[0].x);l=Math.abs(e[0].y);m=Math.abs(e[0].z);if(j<=a){a=j;d.set(1,0,0)}if(l<=a){a=l;d.set(0,1,0)}m<=a&&d.set(0,0,1);h.cross(e[0],d).normalize();\r\nf[0].cross(e[0],h);g[0].cross(e[0],f[0]);for(j=1;j<b;j++){f[j]=f[j-1].clone();g[j]=g[j-1].clone();h.cross(e[j-1],e[j]);if(h.length()>1E-4){h.normalize();d=Math.acos(e[j-1].dot(e[j]));i.makeRotationAxis(h,d).multiplyVector3(f[j])}g[j].cross(e[j],f[j])}if(c){d=Math.acos(f[0].dot(f[b-1]));d=d/(b-1);e[0].dot(h.cross(f[0],f[b-1]))>0&&(d=-d);for(j=1;j<b;j++){i.makeRotationAxis(e[j],d*j).multiplyVector3(f[j]);g[j].cross(e[j],f[j])}}};\r\nTHREE.PolyhedronGeometry=function(a,b,c,d){function e(a){var b=a.normalize().clone();b.index=i.vertices.push(b)-1;var c=Math.atan2(a.z,-a.x)/2/Math.PI+0.5,a=Math.atan2(-a.y,Math.sqrt(a.x*a.x+a.z*a.z))/Math.PI+0.5;b.uv=new THREE.UV(c,1-a);return b}function f(a,b,c,d){if(d<1){d=new THREE.Face3(a.index,b.index,c.index,[a.clone(),b.clone(),c.clone()]);d.centroid.addSelf(a).addSelf(b).addSelf(c).divideScalar(3);d.normal=d.centroid.clone().normalize();i.faces.push(d);d=Math.atan2(d.centroid.z,-d.centroid.x);\r\ni.faceVertexUvs[0].push([h(a.uv,a,d),h(b.uv,b,d),h(c.uv,c,d)])}else{d=d-1;f(a,g(a,b),g(a,c),d);f(g(a,b),b,g(b,c),d);f(g(a,c),g(b,c),c,d);f(g(a,b),g(b,c),g(a,c),d)}}function g(a,b){m[a.index]||(m[a.index]=[]);m[b.index]||(m[b.index]=[]);var c=m[a.index][b.index];c===void 0&&(m[a.index][b.index]=m[b.index][a.index]=c=e((new THREE.Vector3).add(a,b).divideScalar(2)));return c}function h(a,b,c){c<0&&a.u===1&&(a=new THREE.UV(a.u-1,a.v));b.x===0&&b.z===0&&(a=new THREE.UV(c/2/Math.PI+0.5,a.v));return a}THREE.Geometry.call(this);\r\nfor(var c=c||1,d=d||0,i=this,j=0,l=a.length;j<l;j++)e(new THREE.Vector3(a[j][0],a[j][1],a[j][2]));for(var m=[],a=this.vertices,j=0,l=b.length;j<l;j++)f(a[b[j][0]],a[b[j][1]],a[b[j][2]],d);this.mergeVertices();j=0;for(l=this.vertices.length;j<l;j++)this.vertices[j].multiplyScalar(c);this.computeCentroids();this.boundingSphere={radius:c}};THREE.PolyhedronGeometry.prototype=Object.create(THREE.Geometry.prototype);\r\nTHREE.IcosahedronGeometry=function(a,b){var c=(1+Math.sqrt(5))/2;THREE.PolyhedronGeometry.call(this,[[-1,c,0],[1,c,0],[-1,-c,0],[1,-c,0],[0,-1,c],[0,1,c],[0,-1,-c],[0,1,-c],[c,0,-1],[c,0,1],[-c,0,-1],[-c,0,1]],[[0,11,5],[0,5,1],[0,1,7],[0,7,10],[0,10,11],[1,5,9],[5,11,4],[11,10,2],[10,7,6],[7,1,8],[3,9,4],[3,4,2],[3,2,6],[3,6,8],[3,8,9],[4,9,5],[2,4,11],[6,2,10],[8,6,7],[9,8,1]],a,b)};THREE.IcosahedronGeometry.prototype=Object.create(THREE.Geometry.prototype);\r\nTHREE.OctahedronGeometry=function(a,b){THREE.PolyhedronGeometry.call(this,[[1,0,0],[-1,0,0],[0,1,0],[0,-1,0],[0,0,1],[0,0,-1]],[[0,2,4],[0,4,3],[0,3,5],[0,5,2],[1,2,5],[1,5,3],[1,3,4],[1,4,2]],a,b)};THREE.OctahedronGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.TetrahedronGeometry=function(a,b){THREE.PolyhedronGeometry.call(this,[[1,1,1],[-1,-1,1],[-1,1,-1],[1,-1,-1]],[[2,1,0],[0,3,2],[1,3,0],[2,3,1]],a,b)};THREE.TetrahedronGeometry.prototype=Object.create(THREE.Geometry.prototype);\r\nTHREE.ParametricGeometry=function(a,b,c,d){THREE.Geometry.call(this);var e=this.vertices,f=this.faces,g=this.faceVertexUvs[0],d=d===void 0?false:d,h,i,j,l,m=b+1;for(h=0;h<=c;h++){l=h/c;for(i=0;i<=b;i++){j=i/b;j=a(j,l);e.push(j)}}var n,p,o,q;for(h=0;h<c;h++)for(i=0;i<b;i++){a=h*m+i;e=h*m+i+1;l=(h+1)*m+i;j=(h+1)*m+i+1;n=new THREE.UV(i/b,h/c);p=new THREE.UV((i+1)/b,h/c);o=new THREE.UV(i/b,(h+1)/c);q=new THREE.UV((i+1)/b,(h+1)/c);if(d){f.push(new THREE.Face3(a,e,l));f.push(new THREE.Face3(e,j,l));g.push([n,\r\np,o]);g.push([p,q,o])}else{f.push(new THREE.Face4(a,e,j,l));g.push([n,p,q,o])}}this.computeCentroids();this.computeFaceNormals();this.computeVertexNormals()};THREE.ParametricGeometry.prototype=Object.create(THREE.Geometry.prototype);\r\nTHREE.ConvexGeometry=function(a){function b(a){var b=a.length();return new THREE.UV(a.x/b,a.y/b)}THREE.Geometry.call(this);for(var c=[[0,1,2],[0,2,1]],d=3;d<a.length;d++){var e=d,f=a[e].clone(),g=f.length();f.x=f.x+g*(Math.random()-0.5)*2E-6;f.y=f.y+g*(Math.random()-0.5)*2E-6;f.z=f.z+g*(Math.random()-0.5)*2E-6;for(var g=[],h=0;h<c.length;){var i=c[h],j=f,l=a[i[0]],m;m=l;var n=a[i[1]],p=a[i[2]],o=new THREE.Vector3,q=new THREE.Vector3;o.sub(p,n);q.sub(m,n);o.crossSelf(q);o.isZero()||o.normalize();m=\r\no;l=m.dot(l);if(m.dot(j)>=l){for(j=0;j<3;j++){l=[i[j],i[(j+1)%3]];m=true;for(n=0;n<g.length;n++)if(g[n][0]===l[1]&&g[n][1]===l[0]){g[n]=g[g.length-1];g.pop();m=false;break}m&&g.push(l)}c[h]=c[c.length-1];c.pop()}else h++}for(n=0;n<g.length;n++)c.push([g[n][0],g[n][1],e])}e=0;f=Array(a.length);for(d=0;d<c.length;d++){g=c[d];for(h=0;h<3;h++){if(f[g[h]]===void 0){f[g[h]]=e++;this.vertices.push(a[g[h]])}g[h]=f[g[h]]}}for(d=0;d<c.length;d++)this.faces.push(new THREE.Face3(c[d][0],c[d][1],c[d][2]));for(d=\r\n0;d<this.faces.length;d++){g=this.faces[d];this.faceVertexUvs[0].push([b(this.vertices[g.a]),b(this.vertices[g.b]),b(this.vertices[g.c])])}this.computeCentroids();this.computeFaceNormals();this.computeVertexNormals()};THREE.ConvexGeometry.prototype=Object.create(THREE.Geometry.prototype);\r\nTHREE.AxisHelper=function(a){var b=new THREE.Geometry;b.vertices.push(new THREE.Vector3,new THREE.Vector3(a||1,0,0),new THREE.Vector3,new THREE.Vector3(0,a||1,0),new THREE.Vector3,new THREE.Vector3(0,0,a||1));b.colors.push(new THREE.Color(16711680),new THREE.Color(16755200),new THREE.Color(65280),new THREE.Color(11206400),new THREE.Color(255),new THREE.Color(43775));a=new THREE.LineBasicMaterial({vertexColors:THREE.VertexColors});THREE.Line.call(this,b,a,THREE.LinePieces)};\r\nTHREE.AxisHelper.prototype=Object.create(THREE.Line.prototype);\r\nTHREE.ArrowHelper=function(a,b,c,d){THREE.Object3D.call(this);d===void 0&&(d=16776960);c===void 0&&(c=20);var e=new THREE.Geometry;e.vertices.push(new THREE.Vector3(0,0,0));e.vertices.push(new THREE.Vector3(0,1,0));this.line=new THREE.Line(e,new THREE.LineBasicMaterial({color:d}));this.add(this.line);e=new THREE.CylinderGeometry(0,0.05,0.25,5,1);this.cone=new THREE.Mesh(e,new THREE.MeshBasicMaterial({color:d}));this.cone.position.set(0,1,0);this.add(this.cone);if(b instanceof THREE.Vector3)this.position=\r\nb;this.setDirection(a);this.setLength(c)};THREE.ArrowHelper.prototype=Object.create(THREE.Object3D.prototype);THREE.ArrowHelper.prototype.setDirection=function(a){var b=(new THREE.Vector3(0,1,0)).crossSelf(a),a=Math.acos((new THREE.Vector3(0,1,0)).dot(a.clone().normalize()));this.matrix=(new THREE.Matrix4).makeRotationAxis(b.normalize(),a);this.rotation.setEulerFromRotationMatrix(this.matrix,this.eulerOrder)};THREE.ArrowHelper.prototype.setLength=function(a){this.scale.set(a,a,a)};\r\nTHREE.ArrowHelper.prototype.setColor=function(a){this.line.material.color.setHex(a);this.cone.material.color.setHex(a)};\r\nTHREE.CameraHelper=function(a){function b(a,b,d){c(a,d);c(b,d)}function c(a,b){d.geometry.vertices.push(new THREE.Vector3);d.geometry.colors.push(new THREE.Color(b));d.pointMap[a]===void 0&&(d.pointMap[a]=[]);d.pointMap[a].push(d.geometry.vertices.length-1)}THREE.Line.call(this);var d=this;this.geometry=new THREE.Geometry;this.material=new THREE.LineBasicMaterial({color:16777215,vertexColors:THREE.FaceColors});this.type=THREE.LinePieces;this.matrixWorld=a.matrixWorld;this.matrixAutoUpdate=false;this.pointMap=\r\n{};b(\"n1\",\"n2\",16755200);b(\"n2\",\"n4\",16755200);b(\"n4\",\"n3\",16755200);b(\"n3\",\"n1\",16755200);b(\"f1\",\"f2\",16755200);b(\"f2\",\"f4\",16755200);b(\"f4\",\"f3\",16755200);b(\"f3\",\"f1\",16755200);b(\"n1\",\"f1\",16755200);b(\"n2\",\"f2\",16755200);b(\"n3\",\"f3\",16755200);b(\"n4\",\"f4\",16755200);b(\"p\",\"n1\",16711680);b(\"p\",\"n2\",16711680);b(\"p\",\"n3\",16711680);b(\"p\",\"n4\",16711680);b(\"u1\",\"u2\",43775);b(\"u2\",\"u3\",43775);b(\"u3\",\"u1\",43775);b(\"c\",\"t\",16777215);b(\"p\",\"c\",3355443);b(\"cn1\",\"cn2\",3355443);b(\"cn3\",\"cn4\",3355443);b(\"cf1\",\r\n\"cf2\",3355443);b(\"cf3\",\"cf4\",3355443);this.camera=a;this.update(a)};THREE.CameraHelper.prototype=Object.create(THREE.Line.prototype);\r\nTHREE.CameraHelper.prototype.update=function(){function a(a,d,e,f){THREE.CameraHelper.__v.set(d,e,f);THREE.CameraHelper.__projector.unprojectVector(THREE.CameraHelper.__v,THREE.CameraHelper.__c);a=b.pointMap[a];if(a!==void 0){d=0;for(e=a.length;d<e;d++)b.geometry.vertices[a[d]].copy(THREE.CameraHelper.__v)}}var b=this;THREE.CameraHelper.__c.projectionMatrix.copy(this.camera.projectionMatrix);a(\"c\",0,0,-1);a(\"t\",0,0,1);a(\"n1\",-1,-1,-1);a(\"n2\",1,-1,-1);a(\"n3\",-1,1,-1);a(\"n4\",1,1,-1);a(\"f1\",-1,-1,1);\r\na(\"f2\",1,-1,1);a(\"f3\",-1,1,1);a(\"f4\",1,1,1);a(\"u1\",0.7,1.1,-1);a(\"u2\",-0.7,1.1,-1);a(\"u3\",0,2,-1);a(\"cf1\",-1,0,1);a(\"cf2\",1,0,1);a(\"cf3\",0,-1,1);a(\"cf4\",0,1,1);a(\"cn1\",-1,0,-1);a(\"cn2\",1,0,-1);a(\"cn3\",0,-1,-1);a(\"cn4\",0,1,-1);this.geometry.verticesNeedUpdate=true};THREE.CameraHelper.__projector=new THREE.Projector;THREE.CameraHelper.__v=new THREE.Vector3;THREE.CameraHelper.__c=new THREE.Camera;\r\nTHREE.SubdivisionModifier=function(a){this.subdivisions=a===void 0?1:a;this.useOldVertexColors=false;this.supportUVs=true;this.debug=false};THREE.SubdivisionModifier.prototype.modify=function(a){for(var b=this.subdivisions;b-- >0;)this.smooth(a)};THREE.GeometryUtils.orderedKey=function(a,b){return Math.min(a,b)+\"_\"+Math.max(a,b)};\r\nTHREE.GeometryUtils.computeEdgeFaces=function(a){function b(a,b){g[a]===void 0&&(g[a]=[]);g[a].push(b)}var c,d,e,f,g={},h=THREE.GeometryUtils.orderedKey;c=0;for(d=a.faces.length;c<d;c++){e=a.faces[c];if(e instanceof THREE.Face3){f=h(e.a,e.b);b(f,c);f=h(e.b,e.c);b(f,c);f=h(e.c,e.a);b(f,c)}else if(e instanceof THREE.Face4){f=h(e.a,e.b);b(f,c);f=h(e.b,e.c);b(f,c);f=h(e.c,e.d);b(f,c);f=h(e.d,e.a);b(f,c)}}return g};\r\nTHREE.SubdivisionModifier.prototype.smooth=function(a){function b(){l.debug&&(console&&console.assert)&&console.assert.apply(console,arguments)}function c(){l.debug&&console.log.apply(console,arguments)}function d(){console&&console.log.apply(console,arguments)}function e(a,b,d,e,g,h,m){var n=new THREE.Face4(a,b,d,e,null,g.color,g.materialIndex);if(l.useOldVertexColors){n.vertexColors=[];for(var o,p,q,r=0;r<4;r++){q=h[r];o=new THREE.Color;o.setRGB(0,0,0);for(var s=0;s<q.length;s++){p=g.vertexColors[q[s]-\r\n1];o.r=o.r+p.r;o.g=o.g+p.g;o.b=o.b+p.b}o.r=o.r/q.length;o.g=o.g/q.length;o.b=o.b/q.length;n.vertexColors[r]=o}}i.push(n);if(l.supportUVs){g=[f(a,\"\"),f(b,m),f(d,m),f(e,m)];g[0]?g[1]?g[2]?g[3]?j.push(g):c(\"d :( \",e+\":\"+m):c(\"c :( \",d+\":\"+m):c(\"b :( \",b+\":\"+m):c(\"a :( \",a+\":\"+m)}}function f(a,b){var e=a+\":\"+b,f=u[e];if(!f){a>=q&&a<q+o.length?c(\"face pt\"):c(\"edge pt\");d(\"warning, UV not found for\",e);return null}return f}function g(a,b,c){var e=a+\":\"+b;e in u?d(\"dup vertexNo\",a,\"oldFaceNo\",b,\"value\",\r\nc,\"key\",e,u[e]):u[e]=c}var h=[],i=[],j=[],l=this,m=THREE.GeometryUtils.orderedKey,n=THREE.GeometryUtils.computeEdgeFaces,p=a.vertices,o=a.faces,q=p.length,h=p.concat(),r=[],t={},B={},u={},s,z,A,v,y,C=a.faceVertexUvs[0],G;c(\"originalFaces, uvs, originalVerticesLength\",o.length,C.length,q);if(l.supportUVs){s=0;for(z=C.length;s<z;s++){A=0;for(v=C[s].length;A<v;A++){G=o[s][\"abcd\".charAt(A)];g(G,s,C[s][A])}}}if(C.length==0)l.supportUVs=false;s=0;for(var H in u)s++;if(!s){l.supportUVs=false;c(\"no uvs\")}s=\r\n0;for(z=o.length;s<z;s++){y=o[s];r.push(y.centroid);h.push(y.centroid);if(l.supportUVs){v=new THREE.UV;if(y instanceof THREE.Face3){v.u=f(y.a,s).u+f(y.b,s).u+f(y.c,s).u;v.v=f(y.a,s).v+f(y.b,s).v+f(y.c,s).v;v.u=v.u/3;v.v=v.v/3}else if(y instanceof THREE.Face4){v.u=f(y.a,s).u+f(y.b,s).u+f(y.c,s).u+f(y.d,s).u;v.v=f(y.a,s).v+f(y.b,s).v+f(y.c,s).v+f(y.d,s).v;v.u=v.u/4;v.v=v.v/4}g(q+s,\"\",v)}}var n=n(a),J;z=0;var E,M;H={};C={};for(s in n){G=n[s];E=s.split(\"_\");M=E[0];E=E[1];A=M;y=[M,E];H[A]===void 0&&(H[A]=\r\n[]);H[A].push(y);A=E;y=[M,E];H[A]===void 0&&(H[A]=[]);H[A].push(y);A=0;for(v=G.length;A<v;A++){y=G[A];J=M;var K=y,F=s;C[J]===void 0&&(C[J]={});C[J][K]=F;J=E;K=s;C[J]===void 0&&(C[J]={});C[J][y]=K}G.length<2&&(B[s]=true)}for(s in n){G=n[s];y=G[0];J=G[1];E=s.split(\"_\");M=E[0];E=E[1];v=new THREE.Vector3;b(G.length>0,\"an edge without faces?!\");if(G.length==1){v.addSelf(p[M]);v.addSelf(p[E]);v.multiplyScalar(0.5)}else{v.addSelf(r[y]);v.addSelf(r[J]);v.addSelf(p[M]);v.addSelf(p[E]);v.multiplyScalar(0.25)}t[s]=\r\nq+o.length+z;h.push(v);z++;if(l.supportUVs){v=new THREE.UV;v.u=f(M,y).u+f(E,y).u;v.v=f(M,y).v+f(E,y).v;v.u=v.u/2;v.v=v.v/2;g(t[s],y,v);if(G.length>=2){b(G.length==2,\"did we plan for more than 2 edges?\");v=new THREE.UV;v.u=f(M,J).u+f(E,J).u;v.v=f(M,J).v+f(E,J).v;v.u=v.u/2;v.v=v.v/2;g(t[s],J,v)}}}c(\"-- Step 2 done\");var I,L;v=[\"123\",\"12\",\"2\",\"23\"];J=[\"123\",\"23\",\"3\",\"31\"];var K=[\"123\",\"31\",\"1\",\"12\"],F=[\"1234\",\"12\",\"2\",\"23\"],R=[\"1234\",\"23\",\"3\",\"34\"],$=[\"1234\",\"34\",\"4\",\"41\"],Y=[\"1234\",\"41\",\"1\",\"12\"];s=\r\n0;for(z=r.length;s<z;s++){y=o[s];G=q+s;if(y instanceof THREE.Face3){M=m(y.a,y.b);E=m(y.b,y.c);I=m(y.c,y.a);e(G,t[M],y.b,t[E],y,v,s);e(G,t[E],y.c,t[I],y,J,s);e(G,t[I],y.a,t[M],y,K,s)}else if(y instanceof THREE.Face4){M=m(y.a,y.b);E=m(y.b,y.c);I=m(y.c,y.d);L=m(y.d,y.a);e(G,t[M],y.b,t[E],y,F,s);e(G,t[E],y.c,t[I],y,R,s);e(G,t[I],y.d,t[L],y,$,s);e(G,t[L],y.a,t[M],y,Y,s)}else c(\"face should be a face!\",y)}t=new THREE.Vector3;y=new THREE.Vector3;s=0;for(z=p.length;s<z;s++)if(H[s]!==void 0){t.set(0,0,0);\r\ny.set(0,0,0);E=new THREE.Vector3(0,0,0);G=0;for(A in C[s]){t.addSelf(r[A]);G++}J=0;M=H[s].length;v=G!=M;for(A=0;A<M;A++)B[m(H[s][A][0],H[s][A][1])]&&J++;t.divideScalar(G);J=0;if(v){for(A=0;A<M;A++){G=H[s][A];if(K=n[m(G[0],G[1])].length==1){G=p[G[0]].clone().addSelf(p[G[1]]).divideScalar(2);y.addSelf(G);J++}}y.divideScalar(4);b(J==2,\"should have only 2 boundary edges\")}else{for(A=0;A<M;A++){G=H[s][A];G=p[G[0]].clone().addSelf(p[G[1]]).divideScalar(2);y.addSelf(G)}y.divideScalar(M)}E.addSelf(p[s]);\r\nif(v){E.divideScalar(2);E.addSelf(y)}else{E.multiplyScalar(M-3);E.addSelf(t);E.addSelf(y.multiplyScalar(2));E.divideScalar(M)}h[s]=E}a.vertices=h;a.faces=i;a.faceVertexUvs[0]=j;delete a.__tmpVertices;a.computeCentroids();a.computeFaceNormals();a.computeVertexNormals()};THREE.ImmediateRenderObject=function(){THREE.Object3D.call(this);this.render=function(){}};THREE.ImmediateRenderObject.prototype=Object.create(THREE.Object3D.prototype);\r\nTHREE.LensFlare=function(a,b,c,d,e){THREE.Object3D.call(this);this.lensFlares=[];this.positionScreen=new THREE.Vector3;this.customUpdateCallback=void 0;a!==void 0&&this.add(a,b,c,d,e)};THREE.LensFlare.prototype=Object.create(THREE.Object3D.prototype);\r\nTHREE.LensFlare.prototype.add=function(a,b,c,d,e,f){b===void 0&&(b=-1);c===void 0&&(c=0);f===void 0&&(f=1);e===void 0&&(e=new THREE.Color(16777215));if(d===void 0)d=THREE.NormalBlending;c=Math.min(c,Math.max(0,c));this.lensFlares.push({texture:a,size:b,distance:c,x:0,y:0,z:0,scale:1,rotation:1,opacity:f,color:e,blending:d})};\r\nTHREE.LensFlare.prototype.updateLensFlares=function(){var a,b=this.lensFlares.length,c,d=-this.positionScreen.x*2,e=-this.positionScreen.y*2;for(a=0;a<b;a++){c=this.lensFlares[a];c.x=this.positionScreen.x+d*c.distance;c.y=this.positionScreen.y+e*c.distance;c.wantedRotation=c.x*Math.PI*0.25;c.rotation=c.rotation+(c.wantedRotation-c.rotation)*0.25}};\r\nTHREE.MorphBlendMesh=function(a,b){THREE.Mesh.call(this,a,b);this.animationsMap={};this.animationsList=[];var c=this.geometry.morphTargets.length;this.createAnimation(\"__default\",0,c-1,c/1);this.setAnimationWeight(\"__default\",1)};THREE.MorphBlendMesh.prototype=Object.create(THREE.Mesh.prototype);\r\nTHREE.MorphBlendMesh.prototype.createAnimation=function(a,b,c,d){b={startFrame:b,endFrame:c,length:c-b+1,fps:d,duration:(c-b)/d,lastFrame:0,currentFrame:0,active:false,time:0,direction:1,weight:1,directionBackwards:false,mirroredLoop:false};this.animationsMap[a]=b;this.animationsList.push(b)};\r\nTHREE.MorphBlendMesh.prototype.autoCreateAnimations=function(a){for(var b=/([a-z]+)(\\d+)/,c,d={},e=this.geometry,f=0,g=e.morphTargets.length;f<g;f++){var h=e.morphTargets[f].name.match(b);if(h&&h.length>1){var i=h[1];d[i]||(d[i]={start:Infinity,end:-Infinity});h=d[i];if(f<h.start)h.start=f;if(f>h.end)h.end=f;c||(c=i)}}for(i in d){h=d[i];this.createAnimation(i,h.start,h.end,a)}this.firstAnimation=c};\r\nTHREE.MorphBlendMesh.prototype.setAnimationDirectionForward=function(a){if(a=this.animationsMap[a]){a.direction=1;a.directionBackwards=false}};THREE.MorphBlendMesh.prototype.setAnimationDirectionBackward=function(a){if(a=this.animationsMap[a]){a.direction=-1;a.directionBackwards=true}};THREE.MorphBlendMesh.prototype.setAnimationFPS=function(a,b){var c=this.animationsMap[a];if(c){c.fps=b;c.duration=(c.end-c.start)/c.fps}};\r\nTHREE.MorphBlendMesh.prototype.setAnimationDuration=function(a,b){var c=this.animationsMap[a];if(c){c.duration=b;c.fps=(c.end-c.start)/c.duration}};THREE.MorphBlendMesh.prototype.setAnimationWeight=function(a,b){var c=this.animationsMap[a];if(c)c.weight=b};THREE.MorphBlendMesh.prototype.setAnimationTime=function(a,b){var c=this.animationsMap[a];if(c)c.time=b};THREE.MorphBlendMesh.prototype.getAnimationTime=function(a){var b=0;if(a=this.animationsMap[a])b=a.time;return b};\r\nTHREE.MorphBlendMesh.prototype.getAnimationDuration=function(a){var b=-1;if(a=this.animationsMap[a])b=a.duration;return b};THREE.MorphBlendMesh.prototype.playAnimation=function(a){var b=this.animationsMap[a];if(b){b.time=0;b.active=true}else console.warn(\"animation[\"+a+\"] undefined\")};THREE.MorphBlendMesh.prototype.stopAnimation=function(a){if(a=this.animationsMap[a])a.active=false};\r\nTHREE.MorphBlendMesh.prototype.update=function(a){for(var b=0,c=this.animationsList.length;b<c;b++){var d=this.animationsList[b];if(d.active){var e=d.duration/d.length;d.time=d.time+d.direction*a;if(d.mirroredLoop){if(d.time>d.duration||d.time<0){d.direction=d.direction*-1;if(d.time>d.duration){d.time=d.duration;d.directionBackwards=true}if(d.time<0){d.time=0;d.directionBackwards=false}}}else{d.time=d.time%d.duration;if(d.time<0)d.time=d.time+d.duration}var f=d.startFrame+THREE.Math.clamp(Math.floor(d.time/\r\ne),0,d.length-1),g=d.weight;if(f!==d.currentFrame){this.morphTargetInfluences[d.lastFrame]=0;this.morphTargetInfluences[d.currentFrame]=1*g;this.morphTargetInfluences[f]=0;d.lastFrame=d.currentFrame;d.currentFrame=f}e=d.time%e/e;d.directionBackwards&&(e=1-e);this.morphTargetInfluences[d.currentFrame]=e*g;this.morphTargetInfluences[d.lastFrame]=(1-e)*g}}};\r\nTHREE.LensFlarePlugin=function(){function a(a){var c=b.createProgram(),d=b.createShader(b.FRAGMENT_SHADER),e=b.createShader(b.VERTEX_SHADER);b.shaderSource(d,a.fragmentShader);b.shaderSource(e,a.vertexShader);b.compileShader(d);b.compileShader(e);b.attachShader(c,d);b.attachShader(c,e);b.linkProgram(c);return c}var b,c,d,e,f,g,h,i,j,l,m,n,p;this.init=function(o){b=o.context;c=o;d=new Float32Array(16);e=new Uint16Array(6);o=0;d[o++]=-1;d[o++]=-1;d[o++]=0;d[o++]=0;d[o++]=1;d[o++]=-1;d[o++]=1;d[o++]=\r\n0;d[o++]=1;d[o++]=1;d[o++]=1;d[o++]=1;d[o++]=-1;d[o++]=1;d[o++]=0;d[o++]=1;o=0;e[o++]=0;e[o++]=1;e[o++]=2;e[o++]=0;e[o++]=2;e[o++]=3;f=b.createBuffer();g=b.createBuffer();b.bindBuffer(b.ARRAY_BUFFER,f);b.bufferData(b.ARRAY_BUFFER,d,b.STATIC_DRAW);b.bindBuffer(b.ELEMENT_ARRAY_BUFFER,g);b.bufferData(b.ELEMENT_ARRAY_BUFFER,e,b.STATIC_DRAW);h=b.createTexture();i=b.createTexture();b.bindTexture(b.TEXTURE_2D,h);b.texImage2D(b.TEXTURE_2D,0,b.RGB,16,16,0,b.RGB,b.UNSIGNED_BYTE,null);b.texParameteri(b.TEXTURE_2D,\r\nb.TEXTURE_WRAP_S,b.CLAMP_TO_EDGE);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_WRAP_T,b.CLAMP_TO_EDGE);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_MAG_FILTER,b.NEAREST);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_MIN_FILTER,b.NEAREST);b.bindTexture(b.TEXTURE_2D,i);b.texImage2D(b.TEXTURE_2D,0,b.RGBA,16,16,0,b.RGBA,b.UNSIGNED_BYTE,null);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_WRAP_S,b.CLAMP_TO_EDGE);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_WRAP_T,b.CLAMP_TO_EDGE);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_MAG_FILTER,b.NEAREST);\r\nb.texParameteri(b.TEXTURE_2D,b.TEXTURE_MIN_FILTER,b.NEAREST);if(b.getParameter(b.MAX_VERTEX_TEXTURE_IMAGE_UNITS)<=0){j=false;l=a(THREE.ShaderFlares.lensFlare)}else{j=true;l=a(THREE.ShaderFlares.lensFlareVertexTexture)}m={};n={};m.vertex=b.getAttribLocation(l,\"position\");m.uv=b.getAttribLocation(l,\"uv\");n.renderType=b.getUniformLocation(l,\"renderType\");n.map=b.getUniformLocation(l,\"map\");n.occlusionMap=b.getUniformLocation(l,\"occlusionMap\");n.opacity=b.getUniformLocation(l,\"opacity\");n.color=b.getUniformLocation(l,\r\n\"color\");n.scale=b.getUniformLocation(l,\"scale\");n.rotation=b.getUniformLocation(l,\"rotation\");n.screenPosition=b.getUniformLocation(l,\"screenPosition\");p=false};this.render=function(a,d,e,t){var a=a.__webglFlares,B=a.length;if(B){var u=new THREE.Vector3,s=t/e,z=e*0.5,A=t*0.5,v=16/t,y=new THREE.Vector2(v*s,v),C=new THREE.Vector3(1,1,0),G=new THREE.Vector2(1,1),H=n,v=m;b.useProgram(l);if(!p){b.enableVertexAttribArray(m.vertex);b.enableVertexAttribArray(m.uv);p=true}b.uniform1i(H.occlusionMap,0);b.uniform1i(H.map,\r\n1);b.bindBuffer(b.ARRAY_BUFFER,f);b.vertexAttribPointer(v.vertex,2,b.FLOAT,false,16,0);b.vertexAttribPointer(v.uv,2,b.FLOAT,false,16,8);b.bindBuffer(b.ELEMENT_ARRAY_BUFFER,g);b.disable(b.CULL_FACE);b.depthMask(false);var J,E,M,K,F;for(J=0;J<B;J++){v=16/t;y.set(v*s,v);K=a[J];u.set(K.matrixWorld.elements[12],K.matrixWorld.elements[13],K.matrixWorld.elements[14]);d.matrixWorldInverse.multiplyVector3(u);d.projectionMatrix.multiplyVector3(u);C.copy(u);G.x=C.x*z+z;G.y=C.y*A+A;if(j||G.x>0&&G.x<e&&G.y>0&&\r\nG.y<t){b.activeTexture(b.TEXTURE1);b.bindTexture(b.TEXTURE_2D,h);b.copyTexImage2D(b.TEXTURE_2D,0,b.RGB,G.x-8,G.y-8,16,16,0);b.uniform1i(H.renderType,0);b.uniform2f(H.scale,y.x,y.y);b.uniform3f(H.screenPosition,C.x,C.y,C.z);b.disable(b.BLEND);b.enable(b.DEPTH_TEST);b.drawElements(b.TRIANGLES,6,b.UNSIGNED_SHORT,0);b.activeTexture(b.TEXTURE0);b.bindTexture(b.TEXTURE_2D,i);b.copyTexImage2D(b.TEXTURE_2D,0,b.RGBA,G.x-8,G.y-8,16,16,0);b.uniform1i(H.renderType,1);b.disable(b.DEPTH_TEST);b.activeTexture(b.TEXTURE1);\r\nb.bindTexture(b.TEXTURE_2D,h);b.drawElements(b.TRIANGLES,6,b.UNSIGNED_SHORT,0);K.positionScreen.copy(C);K.customUpdateCallback?K.customUpdateCallback(K):K.updateLensFlares();b.uniform1i(H.renderType,2);b.enable(b.BLEND);E=0;for(M=K.lensFlares.length;E<M;E++){F=K.lensFlares[E];if(F.opacity>0.001&&F.scale>0.001){C.x=F.x;C.y=F.y;C.z=F.z;v=F.size*F.scale/t;y.x=v*s;y.y=v;b.uniform3f(H.screenPosition,C.x,C.y,C.z);b.uniform2f(H.scale,y.x,y.y);b.uniform1f(H.rotation,F.rotation);b.uniform1f(H.opacity,F.opacity);\r\nb.uniform3f(H.color,F.color.r,F.color.g,F.color.b);c.setBlending(F.blending,F.blendEquation,F.blendSrc,F.blendDst);c.setTexture(F.texture,1);b.drawElements(b.TRIANGLES,6,b.UNSIGNED_SHORT,0)}}}}b.enable(b.CULL_FACE);b.enable(b.DEPTH_TEST);b.depthMask(true)}}};\r\nTHREE.ShadowMapPlugin=function(){var a,b,c,d,e,f,g=new THREE.Frustum,h=new THREE.Matrix4,i=new THREE.Vector3,j=new THREE.Vector3;this.init=function(g){a=g.context;b=g;var g=THREE.ShaderLib.depthRGBA,h=THREE.UniformsUtils.clone(g.uniforms);c=new THREE.ShaderMaterial({fragmentShader:g.fragmentShader,vertexShader:g.vertexShader,uniforms:h});d=new THREE.ShaderMaterial({fragmentShader:g.fragmentShader,vertexShader:g.vertexShader,uniforms:h,morphTargets:true});e=new THREE.ShaderMaterial({fragmentShader:g.fragmentShader,\r\nvertexShader:g.vertexShader,uniforms:h,skinning:true});f=new THREE.ShaderMaterial({fragmentShader:g.fragmentShader,vertexShader:g.vertexShader,uniforms:h,morphTargets:true,skinning:true});c._shadowPass=true;d._shadowPass=true;e._shadowPass=true;f._shadowPass=true};this.render=function(a,c){b.shadowMapEnabled&&b.shadowMapAutoUpdate&&this.update(a,c)};this.update=function(l,m){var n,p,o,q,r,t,B,u,s,z=[];q=0;a.clearColor(1,1,1,1);a.disable(a.BLEND);a.enable(a.CULL_FACE);a.frontFace(a.CCW);b.shadowMapCullFrontFaces?\r\na.cullFace(a.FRONT):a.cullFace(a.BACK);b.setDepthTest(true);n=0;for(p=l.__lights.length;n<p;n++){o=l.__lights[n];if(o.castShadow)if(o instanceof THREE.DirectionalLight&&o.shadowCascade)for(r=0;r<o.shadowCascadeCount;r++){var A;if(o.shadowCascadeArray[r])A=o.shadowCascadeArray[r];else{s=o;B=r;A=new THREE.DirectionalLight;A.isVirtual=true;A.onlyShadow=true;A.castShadow=true;A.shadowCameraNear=s.shadowCameraNear;A.shadowCameraFar=s.shadowCameraFar;A.shadowCameraLeft=s.shadowCameraLeft;A.shadowCameraRight=\r\ns.shadowCameraRight;A.shadowCameraBottom=s.shadowCameraBottom;A.shadowCameraTop=s.shadowCameraTop;A.shadowCameraVisible=s.shadowCameraVisible;A.shadowDarkness=s.shadowDarkness;A.shadowBias=s.shadowCascadeBias[B];A.shadowMapWidth=s.shadowCascadeWidth[B];A.shadowMapHeight=s.shadowCascadeHeight[B];A.pointsWorld=[];A.pointsFrustum=[];u=A.pointsWorld;t=A.pointsFrustum;for(var v=0;v<8;v++){u[v]=new THREE.Vector3;t[v]=new THREE.Vector3}u=s.shadowCascadeNearZ[B];s=s.shadowCascadeFarZ[B];t[0].set(-1,-1,u);\r\nt[1].set(1,-1,u);t[2].set(-1,1,u);t[3].set(1,1,u);t[4].set(-1,-1,s);t[5].set(1,-1,s);t[6].set(-1,1,s);t[7].set(1,1,s);A.originalCamera=m;t=new THREE.Gyroscope;t.position=o.shadowCascadeOffset;t.add(A);t.add(A.target);m.add(t);o.shadowCascadeArray[r]=A;console.log(\"Created virtualLight\",A)}B=o;u=r;s=B.shadowCascadeArray[u];s.position.copy(B.position);s.target.position.copy(B.target.position);s.lookAt(s.target);s.shadowCameraVisible=B.shadowCameraVisible;s.shadowDarkness=B.shadowDarkness;s.shadowBias=\r\nB.shadowCascadeBias[u];t=B.shadowCascadeNearZ[u];B=B.shadowCascadeFarZ[u];s=s.pointsFrustum;s[0].z=t;s[1].z=t;s[2].z=t;s[3].z=t;s[4].z=B;s[5].z=B;s[6].z=B;s[7].z=B;z[q]=A;q++}else{z[q]=o;q++}}n=0;for(p=z.length;n<p;n++){o=z[n];if(!o.shadowMap){o.shadowMap=new THREE.WebGLRenderTarget(o.shadowMapWidth,o.shadowMapHeight,{minFilter:THREE.LinearFilter,magFilter:THREE.LinearFilter,format:THREE.RGBAFormat});o.shadowMapSize=new THREE.Vector2(o.shadowMapWidth,o.shadowMapHeight);o.shadowMatrix=new THREE.Matrix4}if(!o.shadowCamera){if(o instanceof\r\nTHREE.SpotLight)o.shadowCamera=new THREE.PerspectiveCamera(o.shadowCameraFov,o.shadowMapWidth/o.shadowMapHeight,o.shadowCameraNear,o.shadowCameraFar);else if(o instanceof THREE.DirectionalLight)o.shadowCamera=new THREE.OrthographicCamera(o.shadowCameraLeft,o.shadowCameraRight,o.shadowCameraTop,o.shadowCameraBottom,o.shadowCameraNear,o.shadowCameraFar);else{console.error(\"Unsupported light type for shadow\");continue}l.add(o.shadowCamera);b.autoUpdateScene&&l.updateMatrixWorld()}if(o.shadowCameraVisible&&\r\n!o.cameraHelper){o.cameraHelper=new THREE.CameraHelper(o.shadowCamera);o.shadowCamera.add(o.cameraHelper)}if(o.isVirtual&&A.originalCamera==m){r=m;q=o.shadowCamera;t=o.pointsFrustum;s=o.pointsWorld;i.set(Infinity,Infinity,Infinity);j.set(-Infinity,-Infinity,-Infinity);for(B=0;B<8;B++){u=s[B];u.copy(t[B]);THREE.ShadowMapPlugin.__projector.unprojectVector(u,r);q.matrixWorldInverse.multiplyVector3(u);if(u.x<i.x)i.x=u.x;if(u.x>j.x)j.x=u.x;if(u.y<i.y)i.y=u.y;if(u.y>j.y)j.y=u.y;if(u.z<i.z)i.z=u.z;if(u.z>\r\nj.z)j.z=u.z}q.left=i.x;q.right=j.x;q.top=j.y;q.bottom=i.y;q.updateProjectionMatrix()}q=o.shadowMap;t=o.shadowMatrix;r=o.shadowCamera;r.position.copy(o.matrixWorld.getPosition());r.lookAt(o.target.matrixWorld.getPosition());r.updateMatrixWorld();r.matrixWorldInverse.getInverse(r.matrixWorld);if(o.cameraHelper)o.cameraHelper.visible=o.shadowCameraVisible;o.shadowCameraVisible&&o.cameraHelper.update();t.set(0.5,0,0,0.5,0,0.5,0,0.5,0,0,0.5,0.5,0,0,0,1);t.multiplySelf(r.projectionMatrix);t.multiplySelf(r.matrixWorldInverse);\r\nif(!r._viewMatrixArray)r._viewMatrixArray=new Float32Array(16);if(!r._projectionMatrixArray)r._projectionMatrixArray=new Float32Array(16);r.matrixWorldInverse.flattenToArray(r._viewMatrixArray);r.projectionMatrix.flattenToArray(r._projectionMatrixArray);h.multiply(r.projectionMatrix,r.matrixWorldInverse);g.setFromMatrix(h);b.setRenderTarget(q);b.clear();s=l.__webglObjects;o=0;for(q=s.length;o<q;o++){B=s[o];t=B.object;B.render=false;if(t.visible&&t.castShadow&&(!(t instanceof THREE.Mesh)||!t.frustumCulled||\r\ng.contains(t))){t._modelViewMatrix.multiply(r.matrixWorldInverse,t.matrixWorld);B.render=true}}o=0;for(q=s.length;o<q;o++){B=s[o];if(B.render){t=B.object;B=B.buffer;v=t.material instanceof THREE.MeshFaceMaterial?t.geometry.materials[0]:t.material;u=t.geometry.morphTargets.length>0&&v.morphTargets;v=t instanceof THREE.SkinnedMesh&&v.skinning;u=t.customDepthMaterial?t.customDepthMaterial:v?u?f:e:u?d:c;B instanceof THREE.BufferGeometry?b.renderBufferDirect(r,l.__lights,null,u,B,t):b.renderBuffer(r,l.__lights,\r\nnull,u,B,t)}}s=l.__webglObjectsImmediate;o=0;for(q=s.length;o<q;o++){B=s[o];t=B.object;if(t.visible&&t.castShadow){t._modelViewMatrix.multiply(r.matrixWorldInverse,t.matrixWorld);b.renderImmediateObject(r,l.__lights,null,c,t)}}}n=b.getClearColor();p=b.getClearAlpha();a.clearColor(n.r,n.g,n.b,p);a.enable(a.BLEND);b.shadowMapCullFrontFaces&&a.cullFace(a.BACK)}};THREE.ShadowMapPlugin.__projector=new THREE.Projector;\r\nTHREE.SpritePlugin=function(){function a(a,b){return b.z-a.z}var b,c,d,e,f,g,h,i,j,l;this.init=function(a){b=a.context;c=a;d=new Float32Array(16);e=new Uint16Array(6);a=0;d[a++]=-1;d[a++]=-1;d[a++]=0;d[a++]=0;d[a++]=1;d[a++]=-1;d[a++]=1;d[a++]=0;d[a++]=1;d[a++]=1;d[a++]=1;d[a++]=1;d[a++]=-1;d[a++]=1;d[a++]=0;d[a++]=1;a=0;e[a++]=0;e[a++]=1;e[a++]=2;e[a++]=0;e[a++]=2;e[a++]=3;f=b.createBuffer();g=b.createBuffer();b.bindBuffer(b.ARRAY_BUFFER,f);b.bufferData(b.ARRAY_BUFFER,d,b.STATIC_DRAW);b.bindBuffer(b.ELEMENT_ARRAY_BUFFER,\r\ng);b.bufferData(b.ELEMENT_ARRAY_BUFFER,e,b.STATIC_DRAW);var a=THREE.ShaderSprite.sprite,n=b.createProgram(),p=b.createShader(b.FRAGMENT_SHADER),o=b.createShader(b.VERTEX_SHADER);b.shaderSource(p,a.fragmentShader);b.shaderSource(o,a.vertexShader);b.compileShader(p);b.compileShader(o);b.attachShader(n,p);b.attachShader(n,o);b.linkProgram(n);h=n;i={};j={};i.position=b.getAttribLocation(h,\"position\");i.uv=b.getAttribLocation(h,\"uv\");j.uvOffset=b.getUniformLocation(h,\"uvOffset\");j.uvScale=b.getUniformLocation(h,\r\n\"uvScale\");j.rotation=b.getUniformLocation(h,\"rotation\");j.scale=b.getUniformLocation(h,\"scale\");j.alignment=b.getUniformLocation(h,\"alignment\");j.color=b.getUniformLocation(h,\"color\");j.map=b.getUniformLocation(h,\"map\");j.opacity=b.getUniformLocation(h,\"opacity\");j.useScreenCoordinates=b.getUniformLocation(h,\"useScreenCoordinates\");j.affectedByDistance=b.getUniformLocation(h,\"affectedByDistance\");j.screenPosition=b.getUniformLocation(h,\"screenPosition\");j.modelViewMatrix=b.getUniformLocation(h,\"modelViewMatrix\");\r\nj.projectionMatrix=b.getUniformLocation(h,\"projectionMatrix\");l=false};this.render=function(d,e,p,o){var d=d.__webglSprites,q=d.length;if(q){var r=i,t=j,B=o/p,p=p*0.5,u=o*0.5,s=true;b.useProgram(h);if(!l){b.enableVertexAttribArray(r.position);b.enableVertexAttribArray(r.uv);l=true}b.disable(b.CULL_FACE);b.enable(b.BLEND);b.depthMask(true);b.bindBuffer(b.ARRAY_BUFFER,f);b.vertexAttribPointer(r.position,2,b.FLOAT,false,16,0);b.vertexAttribPointer(r.uv,2,b.FLOAT,false,16,8);b.bindBuffer(b.ELEMENT_ARRAY_BUFFER,\r\ng);b.uniformMatrix4fv(t.projectionMatrix,false,e._projectionMatrixArray);b.activeTexture(b.TEXTURE0);b.uniform1i(t.map,0);for(var z,A=[],r=0;r<q;r++){z=d[r];if(z.visible&&z.opacity!==0)if(z.useScreenCoordinates)z.z=-z.position.z;else{z._modelViewMatrix.multiply(e.matrixWorldInverse,z.matrixWorld);z.z=-z._modelViewMatrix.elements[14]}}d.sort(a);for(r=0;r<q;r++){z=d[r];if(z.visible&&z.opacity!==0&&z.map&&z.map.image&&z.map.image.width){if(z.useScreenCoordinates){b.uniform1i(t.useScreenCoordinates,1);\r\nb.uniform3f(t.screenPosition,(z.position.x-p)/p,(u-z.position.y)/u,Math.max(0,Math.min(1,z.position.z)))}else{b.uniform1i(t.useScreenCoordinates,0);b.uniform1i(t.affectedByDistance,z.affectedByDistance?1:0);b.uniformMatrix4fv(t.modelViewMatrix,false,z._modelViewMatrix.elements)}e=z.map.image.width/(z.scaleByViewport?o:1);A[0]=e*B*z.scale.x;A[1]=e*z.scale.y;b.uniform2f(t.uvScale,z.uvScale.x,z.uvScale.y);b.uniform2f(t.uvOffset,z.uvOffset.x,z.uvOffset.y);b.uniform2f(t.alignment,z.alignment.x,z.alignment.y);\r\nb.uniform1f(t.opacity,z.opacity);b.uniform3f(t.color,z.color.r,z.color.g,z.color.b);b.uniform1f(t.rotation,z.rotation);b.uniform2fv(t.scale,A);if(z.mergeWith3D&&!s){b.enable(b.DEPTH_TEST);s=true}else if(!z.mergeWith3D&&s){b.disable(b.DEPTH_TEST);s=false}c.setBlending(z.blending,z.blendEquation,z.blendSrc,z.blendDst);c.setTexture(z.map,0);b.drawElements(b.TRIANGLES,6,b.UNSIGNED_SHORT,0)}}b.enable(b.CULL_FACE);b.enable(b.DEPTH_TEST);b.depthMask(true)}}};\r\nTHREE.DepthPassPlugin=function(){this.enabled=false;this.renderTarget=null;var a,b,c,d,e=new THREE.Frustum,f=new THREE.Matrix4;this.init=function(e){a=e.context;b=e;var e=THREE.ShaderLib.depthRGBA,f=THREE.UniformsUtils.clone(e.uniforms);c=new THREE.ShaderMaterial({fragmentShader:e.fragmentShader,vertexShader:e.vertexShader,uniforms:f});d=new THREE.ShaderMaterial({fragmentShader:e.fragmentShader,vertexShader:e.vertexShader,uniforms:f,morphTargets:true});c._shadowPass=true;d._shadowPass=true};this.render=\r\nfunction(a,b){this.enabled&&this.update(a,b)};this.update=function(g,h){var i,j,l,m,n,p;a.clearColor(1,1,1,1);a.disable(a.BLEND);b.setDepthTest(true);b.autoUpdateScene&&g.updateMatrixWorld();if(!h._viewMatrixArray)h._viewMatrixArray=new Float32Array(16);if(!h._projectionMatrixArray)h._projectionMatrixArray=new Float32Array(16);h.matrixWorldInverse.getInverse(h.matrixWorld);h.matrixWorldInverse.flattenToArray(h._viewMatrixArray);h.projectionMatrix.flattenToArray(h._projectionMatrixArray);f.multiply(h.projectionMatrix,\r\nh.matrixWorldInverse);e.setFromMatrix(f);b.setRenderTarget(this.renderTarget);b.clear();p=g.__webglObjects;i=0;for(j=p.length;i<j;i++){l=p[i];n=l.object;l.render=false;if(n.visible&&(!(n instanceof THREE.Mesh)||!n.frustumCulled||e.contains(n))){n._modelViewMatrix.multiply(h.matrixWorldInverse,n.matrixWorld);l.render=true}}i=0;for(j=p.length;i<j;i++){l=p[i];if(l.render){n=l.object;l=l.buffer;n.material&&b.setMaterialFaces(n.material);m=n.customDepthMaterial?n.customDepthMaterial:n.geometry.morphTargets.length?\r\nd:c;l instanceof THREE.BufferGeometry?b.renderBufferDirect(h,g.__lights,null,m,l,n):b.renderBuffer(h,g.__lights,null,m,l,n)}}p=g.__webglObjectsImmediate;i=0;for(j=p.length;i<j;i++){l=p[i];n=l.object;if(n.visible&&n.castShadow){n._modelViewMatrix.multiply(h.matrixWorldInverse,n.matrixWorld);b.renderImmediateObject(h,g.__lights,null,c,n)}}i=b.getClearColor();j=b.getClearAlpha();a.clearColor(i.r,i.g,i.b,j);a.enable(a.BLEND)}};\r\nTHREE.ShaderFlares={lensFlareVertexTexture:{vertexShader:\"uniform vec3 screenPosition;\\nuniform vec2 scale;\\nuniform float rotation;\\nuniform int renderType;\\nuniform sampler2D occlusionMap;\\nattribute vec2 position;\\nattribute vec2 uv;\\nvarying vec2 vUV;\\nvarying float vVisibility;\\nvoid main() {\\nvUV = uv;\\nvec2 pos = position;\\nif( renderType == 2 ) {\\nvec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) ) +\\ntexture2D( occlusionMap, vec2( 0.5, 0.1 ) ) +\\ntexture2D( occlusionMap, vec2( 0.9, 0.1 ) ) +\\ntexture2D( occlusionMap, vec2( 0.9, 0.5 ) ) +\\ntexture2D( occlusionMap, vec2( 0.9, 0.9 ) ) +\\ntexture2D( occlusionMap, vec2( 0.5, 0.9 ) ) +\\ntexture2D( occlusionMap, vec2( 0.1, 0.9 ) ) +\\ntexture2D( occlusionMap, vec2( 0.1, 0.5 ) ) +\\ntexture2D( occlusionMap, vec2( 0.5, 0.5 ) );\\nvVisibility = (       visibility.r / 9.0 ) *\\n( 1.0 - visibility.g / 9.0 ) *\\n(       visibility.b / 9.0 ) *\\n( 1.0 - visibility.a / 9.0 );\\npos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\\npos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\\n}\\ngl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\\n}\",fragmentShader:\"precision mediump float;\\nuniform sampler2D map;\\nuniform float opacity;\\nuniform int renderType;\\nuniform vec3 color;\\nvarying vec2 vUV;\\nvarying float vVisibility;\\nvoid main() {\\nif( renderType == 0 ) {\\ngl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );\\n} else if( renderType == 1 ) {\\ngl_FragColor = texture2D( map, vUV );\\n} else {\\nvec4 texture = texture2D( map, vUV );\\ntexture.a *= opacity * vVisibility;\\ngl_FragColor = texture;\\ngl_FragColor.rgb *= color;\\n}\\n}\"},\r\nlensFlare:{vertexShader:\"uniform vec3 screenPosition;\\nuniform vec2 scale;\\nuniform float rotation;\\nuniform int renderType;\\nattribute vec2 position;\\nattribute vec2 uv;\\nvarying vec2 vUV;\\nvoid main() {\\nvUV = uv;\\nvec2 pos = position;\\nif( renderType == 2 ) {\\npos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\\npos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\\n}\\ngl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\\n}\",fragmentShader:\"precision mediump float;\\nuniform sampler2D map;\\nuniform sampler2D occlusionMap;\\nuniform float opacity;\\nuniform int renderType;\\nuniform vec3 color;\\nvarying vec2 vUV;\\nvoid main() {\\nif( renderType == 0 ) {\\ngl_FragColor = vec4( texture2D( map, vUV ).rgb, 0.0 );\\n} else if( renderType == 1 ) {\\ngl_FragColor = texture2D( map, vUV );\\n} else {\\nfloat visibility = texture2D( occlusionMap, vec2( 0.5, 0.1 ) ).a +\\ntexture2D( occlusionMap, vec2( 0.9, 0.5 ) ).a +\\ntexture2D( occlusionMap, vec2( 0.5, 0.9 ) ).a +\\ntexture2D( occlusionMap, vec2( 0.1, 0.5 ) ).a;\\nvisibility = ( 1.0 - visibility / 4.0 );\\nvec4 texture = texture2D( map, vUV );\\ntexture.a *= opacity * visibility;\\ngl_FragColor = texture;\\ngl_FragColor.rgb *= color;\\n}\\n}\"}};\r\nTHREE.ShaderSprite={sprite:{vertexShader:\"uniform int useScreenCoordinates;\\nuniform int affectedByDistance;\\nuniform vec3 screenPosition;\\nuniform mat4 modelViewMatrix;\\nuniform mat4 projectionMatrix;\\nuniform float rotation;\\nuniform vec2 scale;\\nuniform vec2 alignment;\\nuniform vec2 uvOffset;\\nuniform vec2 uvScale;\\nattribute vec2 position;\\nattribute vec2 uv;\\nvarying vec2 vUV;\\nvoid main() {\\nvUV = uvOffset + uv * uvScale;\\nvec2 alignedPosition = position + alignment;\\nvec2 rotatedPosition;\\nrotatedPosition.x = ( cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y ) * scale.x;\\nrotatedPosition.y = ( sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y ) * scale.y;\\nvec4 finalPosition;\\nif( useScreenCoordinates != 0 ) {\\nfinalPosition = vec4( screenPosition.xy + rotatedPosition, screenPosition.z, 1.0 );\\n} else {\\nfinalPosition = projectionMatrix * modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\\nfinalPosition.xy += rotatedPosition * ( affectedByDistance == 1 ? 1.0 : finalPosition.z );\\n}\\ngl_Position = finalPosition;\\n}\",\r\nfragmentShader:\"precision mediump float;\\nuniform vec3 color;\\nuniform sampler2D map;\\nuniform float opacity;\\nvarying vec2 vUV;\\nvoid main() {\\nvec4 texture = texture2D( map, vUV );\\ngl_FragColor = vec4( color * texture.xyz, texture.a * opacity );\\n}\"}};\r\n","var IgeThree = IgeEventingClass.extend({\r\n\tclassId: 'IgeThree',\r\n\tcomponentId: 'three',\r\n\r\n\tinit: function(entity, options) {\r\n\t\tthis._entity = entity;\r\n\t\tthis._options = options;\r\n\r\n\t\tthis._loader = new THREE.JSONLoader();\r\n\t\tthis._geometryLoader = new THREE.GeometryLoader();\r\n\r\n\t\t// Override a number of prototypes to inject Three-based\r\n\t\t// processing code into them instead of their standard 2d\r\n\t\t// or isometric processing\r\n\t\tIgeEngine.prototype._frontBufferSetup = this.IgeEngine_frontBufferSetup;\r\n\r\n\t\t// Alter entity methods\r\n\t\tIgeEntity.prototype._transformContext = this.IgeEntity_transformContext;\r\n\t\tIgeEntity.prototype._renderEntity = this.IgeEntity_renderEntity;\r\n\t\tIgeEntity.prototype.material = this.IgeEntity_material;\r\n\t\tIgeEntity.prototype.model = this.IgeEntity_model;\r\n\t\tIgeEntity.prototype.mesh = this.IgeEntity_mesh;\r\n\t\tIgeEntity.prototype._$mount = IgeEntity.prototype.mount;\r\n\t\tIgeEntity.prototype.mount = this.IgeEntity_mount;\r\n\t\tIgeEntity.prototype._$unMount = IgeEntity.prototype.unMount;\r\n\t\tIgeEntity.prototype.unMount = this.IgeEntity_unMount;\r\n\r\n\t\t// Alter scene methods\r\n\t\tIgeScene2d.prototype._$init = IgeScene2d.prototype.init;\r\n\t\tIgeScene2d.prototype.init = this.IgeScene2d_init;\r\n\r\n\t\t// Alter camera methods\r\n\t\tIgeCamera.prototype._$init = IgeCamera.prototype.init;\r\n\t\tIgeCamera.prototype.init = this.IgeCamera_init;\r\n\t\tIgeCamera.prototype.tick = this.IgeCamera_tick;\r\n\r\n\t\t// Alter viewport methods\r\n\t\tIgeViewport.prototype.tick = this.IgeViewport_tick;\r\n\t},\r\n\r\n\tIgeCamera_init: function(entity) {\r\n\t\tthis._$init(entity);\r\n\t\tthis._threeObj = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.01, 10000);\r\n\t},\r\n\r\n\tIgeCamera_tick: function(ctx) {\r\n\t\t// Check if we are tracking the translate value of a target\r\n\r\n\t\tif (this._trackTranslateTarget) {\r\n\t\t\tvar targetEntity = this._trackTranslateTarget,\r\n\t\t\t\t//targetMatrix = targetEntity._worldMatrix.matrix,\r\n\t\t\t\ttargetX = targetEntity._translate.x,//targetMatrix[2],\r\n\t\t\t\ttargetY =  targetEntity._translate.y,//targetMatrix[5],\r\n\t\t\t\tsourceX, sourceY, distX, distY;\r\n\r\n\t\t\tif (!this._trackTranslateSmoothing) {\r\n\t\t\t\t// Copy the target's world matrix translate data\r\n\t\t\t\tthis.lookAt(this._trackTranslateTarget);\r\n\t\t\t} else {\r\n\t\t\t\t// Ease between the current and target values\r\n\t\t\t\tsourceX = this._translate.x;\r\n\t\t\t\tsourceY = this._translate.y;\r\n\r\n\t\t\t\tdistX = targetX - sourceX;\r\n\t\t\t\tdistY = targetY - sourceY;\r\n\r\n\t\t\t\tthis._translate.x += distX / this._trackTranslateSmoothing;\r\n\t\t\t\tthis._translate.y += distY / this._trackTranslateSmoothing;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Check if we are tracking the rotation values of a target\r\n\t\tif (this._trackRotateTarget) {\r\n\t\t\tvar targetParentRZ = this._trackRotateTarget._parent !== undefined ? this._trackRotateTarget._parent._rotate.z : 0,\r\n\t\t\t\ttargetZ = -(targetParentRZ + this._trackRotateTarget._rotate.z),\r\n\t\t\t\tsourceZ, distZ;\r\n\r\n\t\t\tif (!this._trackRotateSmoothing) {\r\n\t\t\t\t// Copy the target's rotate data\r\n\t\t\t\tthis._rotate.z = targetZ;\r\n\t\t\t} else {\r\n\t\t\t\t// Interpolate between the current and target values\r\n\t\t\t\tsourceZ = this._rotate.z;\r\n\t\t\t\tdistZ = targetZ - sourceZ;\r\n\r\n\t\t\t\tthis._rotate.z += distZ / this._trackRotateSmoothing;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._threeObj.position.x = this._translate.x;\r\n\t\tthis._threeObj.position.y = -this._translate.y;\r\n\t\tthis._threeObj.position.z = this._translate.z;\r\n\r\n\t\tthis._threeObj.rotation.x = this._rotate.x;\r\n\t\tthis._threeObj.rotation.y = this._rotate.y;\r\n\t\tthis._threeObj.rotation.z = this._rotate.z;\r\n\r\n\t\t// Updated local transform matrix and then transform the context\r\n\t\t//this.updateTransform();\r\n\t\t//this._localMatrix.transformRenderingContext(ctx);\r\n\t},\r\n\r\n\tIgeViewport_tick: function(ctx, scene) {\r\n\t\t// Check if we have a scene attached to this viewport\r\n\t\tif (this._scene) {\r\n\t\t\t// Store the viewport camera in the main ige so that\r\n\t\t\t// down the scenegraph we can choose to negate the camera\r\n\t\t\t// transform effects\r\n\t\t\tige._currentCamera = this.camera;\r\n\t\t\tige._currentViewport = this;\r\n\r\n\t\t\tthis._scene._parent = this;\r\n\r\n\t\t\t// Process child ticks\r\n\t\t\tIgeEntity.prototype.tick.apply(this, [ctx]);\r\n\r\n\t\t\t// Process the camera's tick method\r\n\t\t\tthis.camera.tick(ctx);\r\n\r\n\t\t\t// Process scene's child ticks\r\n\t\t\tthis._scene.tick(ctx, scene);\r\n\r\n\t\t\t// Draw the scene\r\n\t\t\tige._threeRenderer.clear();\r\n\t\t\tige._threeRenderer.render(this._scene._threeObj, this.camera._threeObj);\r\n\t\t}\r\n\t},\r\n\r\n\tIgeScene2d_init: function(options) {\r\n\t\tthis._$init(options);\r\n\t\tthis._threeObj = new THREE.Scene();\r\n\r\n\t\tvar ambient = new THREE.AmbientLight(0x242424);\r\n\t\tthis._threeObj.add(ambient);\r\n\r\n\t\tvar light = new THREE.SpotLight(0xd6e2ff, 1, 0, Math.PI, 1);\r\n\t\tlight.position.set(600, 400, 1000);\r\n\t\tlight.target.position.set(0, 0, 0);\r\n\r\n\t\tlight.castShadow = true;\r\n\t\tlight.shadowCameraNear = 200;\r\n\t\tlight.shadowCameraFar = 1800;\r\n\t\tlight.shadowCameraFov = 45;\r\n\t\t//light.shadowCameraVisible = true;\r\n\r\n\t\tlight.shadowBias = 0.0005;\r\n\t\tlight.shadowDarkness = 0.55;\r\n\r\n\t\tlight.shadowMapWidth = 2048;\r\n\t\tlight.shadowMapHeight = 2048;\r\n\t\tlight.shadowMapSoft = true;\r\n\t\tthis._threeObj.add(light);\r\n\r\n\t\t/*var specLight = new THREE.PointLight( 0x058ee4, 0.2, 0, Math.PI, 1 );\r\n\t\t ////flameLight.position.set( 600, 400, 1000 );\r\n\t\t //specLight.target.position.set( 0, 0, 0 );\r\n\t\t this._threeObj.add(specLight);*/\r\n\t},\r\n\r\n\tIgeEngine_frontBufferSetup: function(autoSize, dontScale) {\r\n\t\t// Run the IGE in \"headless\" mode and allow Three.js to handle\r\n\t\t// all rendering instead\r\n\t\tvar i, il,\r\n\t\t\tself = this;\r\n\r\n\t\t//this._threeObj = new THREE.Scene();\r\n\t\t//this._threeObj = new THREE.PerspectiveCamera(75, window.innerWidth/window.innerHeight, 0.01, 10000);\r\n\t\t//this._threeObj.position.x = 0;\r\n\t\t//this._threeObj.position.y = 0;\r\n\t\t//this._threeObj.position.z = 200;\r\n\t\t/*this._threeObj.rotation.x = 45 * Math.PI / 180;\r\n\t\t this._threeObj.rotation.y = 35 * Math.PI / 180;\r\n\t\t this._threeObj.rotation.z = 30 * Math.PI / 180;*/\r\n\r\n\t\t/*this._threeObj = new THREE.OrthographicCamera( window.innerWidth / - 2, window.innerWidth / 2, window.innerHeight / 2, window.innerHeight / - 2, -2000, 10000 );\r\n\t\t this._threeObj.position.x = 0;\r\n\t\t this._threeObj.position.y = 0;\r\n\t\t this._threeObj.position.z = 0;*/\r\n\t\t/*this._threeObj.rotation.x = 45 * Math.PI / 180;\r\n\t\t this._threeObj.rotation.y = 35 * Math.PI / 180;\r\n\t\t this._threeObj.rotation.z = 30 * Math.PI / 180;*/\r\n\r\n\t\t/*var geometry = new THREE.CubeGeometry(1, 1, 1),\r\n\t\t material = new THREE.MeshBasicMaterial( { color: 0xff0000, wireframe: false }),\r\n\t\t //texture = THREE.ImageUtils.loadTexture('../assets/textures/particles/star1.png'),\r\n\t\t //material = new THREE.MeshBasicMaterial({map: texture, wireframe: false}),\r\n\t\t mesh1 = new THREE.Mesh(geometry, material);\r\n\r\n\t\t geometry.dynamic = true;*/\r\n\r\n\t\t/*for (i = 0, il = geometry.vertices.length; i < il; i++) {\r\n\t\t geometry.vertices[i].y += -100;\r\n\t\t }*/\r\n\r\n\t\t//material.envMap = textureCube;\r\n\t\t//material.combine = THREE.MixOperation;\r\n\t\t//material.reflectivity = 0.55;\r\n\t\t//material.opacity = 1;\r\n\r\n\t\t//mesh1.position.z = 0;\r\n\t\t//this._threeObj.add(mesh1);\r\n\r\n\t\t/*var geometry = new THREE.PlaneGeometry(500, 500),\r\n\t\t //material = new THREE.MeshBasicMaterial( { color: 0x0000ff, wireframe: false }),\r\n\t\t texture = THREE.ImageUtils.loadTexture('../assets/textures/backgrounds/greyGradient.png'),\r\n\t\t material = new THREE.MeshBasicMaterial({map: texture, wireframe: false}),\r\n\t\t mesh2 = new THREE.Mesh( geometry, material );\r\n\r\n\t\t mesh2.position.z = 0;\r\n\t\t //this._threeObj.add( mesh2 );*/\r\n\t\tthis._threeRenderer = new THREE.WebGLRenderer({antialias: false});\r\n\t\tthis._threeRenderer.setSize(window.innerWidth, window.innerHeight);\r\n\t\tthis._threeRenderer.autoClear = false;\r\n\t\t//this._threeRenderer.shadowMapEnabled = true;\r\n\t\t//this._threeRenderer.shadowMapSoft = true;\r\n\r\n\t\t// Add canvas element to DOM\r\n\t\tthis.three._canvas = this._threeRenderer.domElement;\r\n\t\tdocument.body.appendChild(this.three._canvas);\r\n\t\tige._bounds2d = new IgePoint2d(this.three._canvas.width, this.three._canvas.height);\r\n\r\n\t\t/*controls = new THREE.TrackballControls(this._threeObj, this._threeRenderer.domElement);\r\n\t\t controls.rotateSpeed = 0.20;*/\r\n\r\n\t\t/*self._camX = 45;\r\n\t\t self._camY = 35;\r\n\t\t self._camZ = 30;*/\r\n\r\n\t\t/*var renderModel = new THREE.RenderPass( this._threeObj, this._threeObj );\r\n\t\t var effectBloom = new THREE.BloomPass( .9 );\r\n\t\t var effectVignette = new THREE.ShaderPass(THREE.ShaderExtras[\"colorCorrection\"]);\r\n\t\t var effectFilm = new THREE.FilmPass( .3, .3,1024,false );\r\n\t\t var effectFXAA = new THREE.ShaderPass( THREE.ShaderExtras[ \"sepia\" ] );\r\n\r\n\t\t effectFilm.renderToScreen = true;\r\n\t\t this._threeComposer = new THREE.EffectComposer( this._threeRenderer );\r\n\t\t this._threeComposer.addPass( renderModel );\r\n\t\t //composer.addPass( effectFocus );\r\n\t\t //composer.addPass( effectFXAA );\r\n\t\t this._threeComposer.addPass( effectBloom );\r\n\t\t this._threeComposer.addPass( effectVignette );\r\n\t\t this._threeComposer.addPass( effectFilm );*/\r\n\r\n\t\t/*this._postTick.push(function () {\r\n\t\t //ige._threeRenderer.clear();\r\n\t\t //ige._threeRenderer.render( ige._threeObj, ige._threeObj );\r\n\r\n\t\t //ige._threeRenderer.setViewport(10, 10, 400, 200);\r\n\t\t //ige._threeRenderer.render( ige._threeObj, ige._threeObj );\r\n\t\t //ige._threeRenderer.setViewport(400, 10, 400, 200);\r\n\t\t //ige._threeComposer.render(0.1);\r\n\t\t });*/\r\n\t},\r\n\r\n\tIgeEntity_transformContext: function(ctx) {\r\n\r\n\t},\r\n\r\n\tIgeEntity_renderEntity: function(ctx, dontTransform) {\r\n\t\tvar m = this._threeObj;\r\n\t\tif (m) {\r\n\t\t\t// Update the translate, rotate and scale of the mesh\r\n\t\t\tif (m.position) {\r\n\t\t\t\tm.position.x = this._translate.x;\r\n\t\t\t\tm.position.y = -this._translate.y;\r\n\t\t\t\tm.position.z = this._translate.z;\r\n\t\t\t}\r\n\r\n\t\t\tif (m.rotation) {\r\n\t\t\t\tm.rotation.x = this._rotate.x;\r\n\t\t\t\tm.rotation.y = this._rotate.y;\r\n\t\t\t\tm.rotation.z = -this._rotate.z;\r\n\t\t\t}\r\n\r\n\t\t\tif (m.scale) {\r\n\t\t\t\tm.scale.x = this._scale.x;\r\n\t\t\t\tm.scale.y = this._scale.y;\r\n\t\t\t\tm.scale.z = this._scale.z;\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\tIgeEntity_material: function(material) {\r\n\t\tif (material !== undefined) {\r\n\t\t\tthis._material = material;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\treturn this._material;\r\n\t},\r\n\r\n\tIgeEntity_model: function(model) {\r\n\t\tif (model !== undefined) {\r\n\t\t\tige.three._geometryLoader.path = './models';\r\n\t\t\tthis._threeObj = new THREE.Mesh(\r\n\t\t\t\tige.three._geometryLoader.parse(model),\r\n\t\t\t\tthis._material || new THREE.MeshFaceMaterial()\r\n\t\t\t);\r\n\r\n\t\t\tthis._threeObj.receiveShadow = true;\r\n\t\t\tthis._threeObj.castShadow = true;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\treturn this._threeObj;\r\n\t},\r\n\r\n\tIgeEntity_mesh: function(mesh) {\r\n\t\tif (mesh !== undefined) {\r\n\t\t\tthis._threeObj = new THREE.Mesh(\r\n\t\t\t\tmesh,\r\n\t\t\t\tthis._material || new THREE.MeshBasicMaterial({color: 0x0000ff, wireframe: true})\r\n\t\t\t);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\treturn this._threeObj;\r\n\t},\r\n\r\n\tIgeEntity_mount: function(obj) {\r\n\t\tvar self = this;\r\n\r\n\t\tif (this._threeObj) {\r\n\t\t\tobj._threeObj.add(this._threeObj);\r\n\t\t\tthis._threeObj._igeEntity = this;\r\n\t\t}\r\n\r\n\t\treturn this._$mount(obj);\r\n\t},\r\n\r\n\tIgeEntity_unMount: function() {\r\n\t\tvar self = this;\r\n\r\n\t\tif (this._threeObj) {\r\n\t\t\tdelete this._threeObj._igeEntity;\r\n\t\t\tthis._parent._threeObj.remove(this._threeObj);\r\n\t\t}\r\n\r\n\t\treturn this._$unMount();\r\n\t}\r\n});\r\n","/**\r\n * The base engine class definition.\r\n */\r\nvar IgeEngine = IgeEntity.extend({\r\n\tclassId: 'IgeEngine',\r\n\r\n\tinit: function () {\r\n\t\t// Deal with some debug settings first\r\n\t\tif (igeConfig.debug) {\r\n\t\t\tif (!igeConfig.debug._enabled) {\r\n\t\t\t\t// Debug is not enabled so ensure that\r\n\t\t\t\t// timing debugs are disabled\r\n\t\t\t\tigeConfig.debug._timing = false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._alwaysInView = true;\r\n\r\n\t\tthis._id = 'ige';\r\n\t\tthis.basePath = '';\r\n\r\n\t\t// Determine the environment we are executing in\r\n\t\tthis.isServer = (typeof(module) !== 'undefined' && typeof(module.exports) !== 'undefined');\r\n\t\tthis.isClient = !this.isServer;\r\n\r\n\t\t// Assign ourselves to the global variable\r\n\t\tige = this;\r\n\r\n\t\tIgeEntity.prototype.init.call(this);\r\n\r\n\t\t// Check if we are running client-side\r\n\t\tif (this.isClient) {\r\n\t\t\t// Enable cocoonJS support because we are running client-side\r\n\t\t\tthis.addComponent(IgeCocoonJsComponent);\r\n\t\t}\r\n\r\n\t\t// Create storage\r\n\t\tthis._textureStore = [];\r\n\r\n\t\t// Set the initial id as the current time in milliseconds. This ensures that under successive\r\n\t\t// restarts of the engine, new ids will still always be created compared to earlier runs -\r\n\t\t// which is important when storing persistent data with ids etc\r\n\t\tthis._idCounter = new Date().getTime();\r\n\r\n\t\t// Setup components\r\n\t\tthis.addComponent(IgeInputComponent);\r\n\t\tthis.addComponent(IgeTweenComponent);\r\n\t\tthis.addComponent(IgeTimeComponent);\r\n\t\t\r\n\t\tif (this.isClient) {\r\n\t\t\t// Enable UI element (virtual DOM) support\r\n\t\t\tthis.addComponent(IgeUiManagerComponent);\r\n\t\t}\r\n\r\n\t\t// Set some defaults\r\n\t\tthis._renderModes = [\r\n\t\t\t'2d',\r\n\t\t\t'three'\r\n\t\t];\r\n\t\t\r\n\t\tthis._requireScriptTotal = 0;\r\n\t\tthis._requireScriptLoading = 0;\r\n\t\tthis._loadingPreText = undefined; // The text to put in front of the loading percent on the loading progress screen\r\n\t\tthis._enableUpdates = true;\r\n\t\tthis._enableRenders = true;\r\n\t\tthis._showSgTree = false;\r\n\t\tthis._debugEvents = {}; // Holds debug event booleans for named events\r\n\t\tthis._renderContext = '2d'; // The rendering context, default is 2d\r\n\t\tthis._renderMode = this._renderModes[this._renderContext]; // Integer representation of the render context\r\n\t\tthis._tickTime = 'NA'; // The time the tick took to process\r\n\t\tthis._updateTime = 'NA'; // The time the tick update section took to process\r\n\t\tthis._renderTime = 'NA'; // The time the tick render section took to process\r\n\t\tthis._tickDelta = 0; // The time between the last tick and the current one\r\n\t\tthis._fpsRate = 60; // Sets the frames per second to execute engine tick's at\r\n\t\tthis._state = 0; // Currently stopped\r\n\t\tthis._textureImageStore = {};\r\n\t\tthis._texturesLoading = 0; // Holds a count of currently loading textures\r\n\t\tthis._texturesTotal = 0; // Holds total number of textures loading / loaded\r\n\t\tthis._dependencyQueue = []; // Holds an array of functions that must all return true for the engine to start\r\n\t\tthis._drawCount = 0; // Holds the number of draws since the last frame (calls to drawImage)\r\n\t\tthis._dps = 0; // Number of draws that occurred last tick\r\n\t\tthis._dpf = 0;\r\n\t\tthis._frames = 0; // Number of frames looped through since last second tick\r\n\t\tthis._fps = 0; // Number of frames per second\r\n\t\tthis._clientNetDiff = 0; // The difference between the server and client comms (only non-zero on clients)\r\n\t\tthis._frameAlternator = false; // Is set to the boolean not of itself each frame\r\n\t\tthis._viewportDepth = false;\r\n\t\tthis._mousePos = new IgePoint3d(0, 0, 0);\r\n\t\tthis._currentViewport = null; // Set in IgeViewport.js tick(), holds the current rendering viewport\r\n\t\tthis._currentCamera = null; // Set in IgeViewport.js tick(), holds the current rendering viewport's camera\r\n\t\tthis._currentTime = 0; // The current engine time\r\n\t\tthis._globalSmoothing = false; // Determines the default smoothing setting for new textures\r\n\t\tthis._register = {\r\n\t\t\t'ige': this\r\n\t\t}; // Holds a reference to every item in the scenegraph by it's ID\r\n\t\tthis._categoryRegister = {}; // Holds reference to every item with a category\r\n\t\tthis._groupRegister = {}; // Holds reference to every item with a group\r\n\t\tthis._postTick = []; // An array of methods that are called upon tick completion\r\n\t\tthis._timeSpentInUpdate = {}; // An object holding time-spent-in-update (total time spent in this object's update method)\r\n\t\tthis._timeSpentLastUpdate = {}; // An object holding time-spent-last-update (time spent in this object's update method last tick)\r\n\t\tthis._timeSpentInTick = {}; // An object holding time-spent-in-tick (total time spent in this object's tick method)\r\n\t\tthis._timeSpentLastTick = {}; // An object holding time-spent-last-tick (time spent in this object's tick method last tick)\r\n\t\tthis._timeScale = 1; // The default time scaling factor to speed up or slow down engine time\r\n\t\tthis._globalScale = new IgePoint3d(1, 1, 1);\r\n\t\tthis._graphInstances = []; // Holds an array of instances of graph classes\r\n\t\tthis._spawnQueue = []; // Holds an array of entities that are yet to be born\r\n\r\n\t\t// Set the context to a dummy context to start\r\n\t\t// with in case we are in \"headless\" mode and\r\n\t\t// a replacement context never gets assigned\r\n\t\tthis._ctx = IgeDummyContext;\r\n\t\tthis._headless = true;\r\n\r\n\t\tthis.dependencyTimeout(30000); // Wait 30 seconds to load all dependencies then timeout\r\n\r\n\t\t// Add the textures loaded dependency\r\n\t\tthis._dependencyQueue.push(this.texturesLoaded);\r\n\t\t//this._dependencyQueue.push(this.canvasReady);\r\n\r\n\t\t// Start a timer to record every second of execution\r\n\t\tthis._secondTimer = setInterval(this._secondTick, 1000);\r\n\t},\r\n\r\n\t/**\r\n\t * Returns an object from the engine's object register by\r\n\t * the object's id. If the item passed is not a string id\r\n\t * then the item is returned as is. If no item is passed\r\n\t * the engine itself is returned.\r\n\t * @param {String || Object} item The id of the item to return,\r\n\t * or if an object, returns the object as-is.\r\n\t */\r\n\t$: function (item) {\r\n\t\tif (typeof(item) === 'string') {\r\n\t\t\treturn this._register[item];\r\n\t\t} else if (typeof(item) === 'object') {\r\n\t\t\treturn item;\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * Returns an array of all objects that have been assigned\r\n\t * the passed category name.\r\n\t * @param {String} categoryName The name of the category to return\r\n\t * all objects for.\r\n\t */\r\n\t$$: function (categoryName) {\r\n\t\treturn this._categoryRegister[categoryName] || new IgeArray();\r\n\t},\r\n\r\n\t/**\r\n\t * Returns an array of all objects that have been assigned\r\n\t * the passed group name.\r\n\t * @param {String} groupName The name of the group to return\r\n\t * all objects for.\r\n\t */\r\n\t$$$: function (groupName) {\r\n\t\treturn this._groupRegister[groupName] || new IgeArray();\r\n\t},\r\n\r\n\t/**\r\n\t * Register an object with the engine object register. The\r\n\t * register allows you to access an object by it's id with\r\n\t * a call to ige.$(objectId).\r\n\t * @param {Object} obj The object to register.\r\n\t * @return {*}\r\n\t */\r\n\tregister: function (obj) {\r\n\t\tif (obj !== undefined) {\r\n\t\t\tif (!this._register[obj.id()]) {\r\n\t\t\t\tthis._register[obj.id()] = obj;\r\n\t\t\t\tobj._registered = true;\r\n\r\n\t\t\t\treturn this;\r\n\t\t\t} else {\r\n\t\t\t\tobj._registered = false;\r\n\r\n\t\t\t\tthis.log('Cannot add object id \"' + obj.id() + '\" to scenegraph because there is already another object in the graph with the same ID!', 'error');\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn this._register;\r\n\t},\r\n\r\n\t/**\r\n\t * Un-register an object with the engine object register. The\r\n\t * object will no longer be accessible via ige.$().\r\n\t * @param {Object} obj The object to un-register.\r\n\t * @return {*}\r\n\t */\r\n\tunRegister: function (obj) {\r\n\t\tif (obj !== undefined) {\r\n\t\t\t// Check if the object is registered in the ID lookup\r\n\t\t\tif (this._register[obj.id()]) {\r\n\t\t\t\tdelete this._register[obj.id()];\r\n\t\t\t\tobj._registered = false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * Register an object with the engine category register. The\r\n\t * register allows you to access an object by it's category with\r\n\t * a call to ige.$$(categoryName).\r\n\t * @param {Object} obj The object to register.\r\n\t * @return {*}\r\n\t */\r\n\tcategoryRegister: function (obj) {\r\n\t\tif (obj !== undefined) {\r\n\t\t\tthis._categoryRegister[obj._category] = this._categoryRegister[obj._category] || new IgeArray();\r\n\t\t\tthis._categoryRegister[obj._category].push(obj);\r\n\t\t\tobj._categoryRegistered = true;\r\n\t\t}\r\n\r\n\t\treturn this._register;\r\n\t},\r\n\r\n\t/**\r\n\t * Un-register an object with the engine category register. The\r\n\t * object will no longer be accessible via ige.$$().\r\n\t * @param {Object} obj The object to un-register.\r\n\t * @return {*}\r\n\t */\r\n\tcategoryUnRegister: function (obj) {\r\n\t\tif (obj !== undefined) {\r\n\t\t\tif (this._categoryRegister[obj._category]) {\r\n\t\t\t\tthis._categoryRegister[obj._category].pull(obj);\r\n\t\t\t\tobj._categoryRegistered = false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * Register an object with the engine group register. The\r\n\t * register allows you to access an object by it's groups with\r\n\t * a call to ige.$$$(groupName).\r\n\t * @param {Object} obj The object to register.\r\n\t * @param {String} groupName The name of the group to register\r\n\t * the object in.\r\n\t * @return {*}\r\n\t */\r\n\tgroupRegister: function (obj, groupName) {\r\n\t\tif (obj !== undefined) {\r\n\t\t\tthis._groupRegister[groupName] = this._groupRegister[groupName] || new IgeArray();\r\n\t\t\tthis._groupRegister[groupName].push(obj);\r\n\t\t\tobj._groupRegistered = true;\r\n\t\t}\r\n\r\n\t\treturn this._register;\r\n\t},\r\n\r\n\t/**\r\n\t * Un-register an object with the engine group register. The\r\n\t * object will no longer be accessible via ige.$$$().\r\n\t * @param {Object} obj The object to un-register.\r\n\t * @param {String} groupName The name of the group to un-register\r\n\t * the object from.\r\n\t * @return {*}\r\n\t */\r\n\tgroupUnRegister: function (obj, groupName) {\r\n\t\tif (obj !== undefined) {\r\n\t\t\tif (groupName !== undefined) {\r\n\t\t\t\tif (this._groupRegister[groupName]) {\r\n\t\t\t\t\tthis._groupRegister[groupName].pull(obj);\r\n\r\n\t\t\t\t\tif (!obj.groupCount()) {\r\n\t\t\t\t\t\tobj._groupRegister = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\t// Call the removeAllGroups() method which will loop\r\n\t\t\t\t// all the groups that the object belongs to and\r\n\t\t\t\t// automatically un-register them\r\n\t\t\t\tobj.removeAllGroups();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\tsync: function (method, attrArr) {\r\n\t\tif (typeof(attrArr) === 'string') {\r\n\t\t\tattrArr = [attrArr];\r\n\t\t}\r\n\t\t\r\n\t\tthis._syncArr = this._syncArr || [];\r\n\t\tthis._syncArr.push({method: method, attrArr: attrArr});\r\n\t\t\r\n\t\tif (this._syncArr.length === 1) {\r\n\t\t\t// Start sync waterfall\r\n\t\t\tthis._syncIndex = 0;\r\n\t\t\tthis._processSync();\r\n\t\t}\r\n\t},\r\n\t\r\n\t_processSync: function () {\r\n\t\tvar syncEntry;\r\n\t\t\r\n\t\tif (ige._syncIndex < ige._syncArr.length) {\r\n\t\t\tsyncEntry = ige._syncArr[ige._syncIndex];\r\n\t\t\t\r\n\t\t\t// Add the callback to the last attribute\r\n\t\t\tsyncEntry.attrArr.push(function () {\r\n\t\t\t\tige._syncIndex++;\r\n\t\t\t\tsetTimeout(ige._processSync, 1);\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\t// Call the method\r\n\t\t\tsyncEntry.method.apply(ige, syncEntry.attrArr);\r\n\t\t} else {\r\n\t\t\t// Reached end of sync cycle\r\n\t\t\tdelete ige._syncArr;\r\n\t\t\tdelete ige._syncIndex;\r\n\t\t\t\r\n\t\t\tige.emit('syncComplete');\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Load a js script file into memory via a path or url. \r\n\t * @param {String} url The file's path or url.\r\n\t * @param {Function=} callback Optional callback when script loads.\r\n\t */\r\n\trequireScript: function (url, callback) {\r\n\t\tif (url !== undefined) {\r\n\t\t\tvar self = this;\r\n\t\t\t\r\n\t\t\t// Add to the load counter\r\n\t\t\tself._requireScriptTotal++;\r\n\t\t\tself._requireScriptLoading++;\r\n\t\t\t\r\n\t\t\t// Create the script element\r\n\t\t\tvar elem = document.createElement('script');\r\n\t\t\telem.addEventListener('load', function () {\r\n\t\t\t\tself._requireScriptLoaded(this);\r\n\t\t\t\t\r\n\t\t\t\tif (callback) {\r\n\t\t\t\t\tsetTimeout(function () { callback(); }, 100);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\t// For compatibility with CocoonJS\r\n\t\t\tdocument.body.appendChild(elem);\r\n\t\t\t\r\n\t\t\t// Set the source to load the url\r\n\t\t\telem.src = url;\r\n\t\t\t\r\n\t\t\tthis.log('Loading script from: ' + url);\r\n\t\t\tthis.emit('requireScriptLoading', url);\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Called when a js script has been loaded via the requireScript\r\n\t * method.\r\n\t * @param {Element} elem The script element added to the DOM.\r\n\t * @private\r\n\t */\r\n\t_requireScriptLoaded: function (elem) {\r\n\t\tthis._requireScriptLoading--;\r\n\t\t\r\n\t\tthis.emit('requireScriptLoaded', elem.src);\r\n\t\t\r\n\t\tif (this._requireScriptLoading === 0) {\r\n\t\t\t// All scripts have loaded, fire the engine event\r\n\t\t\tthis.emit('allRequireScriptsLoaded');\r\n\t\t}\r\n\t},\r\n\t\r\n\t/**\r\n\t * Load a css style file into memory via a path or url. \r\n\t * @param {String} url The file's path or url.\r\n\t */\r\n\trequireStylesheet: function (url) {\r\n\t\tif (url !== undefined) {\r\n\t\t\tvar self = this;\r\n\t\t\t\r\n\t\t\t// Load the engine stylesheet\r\n\t\t\tvar css = document.createElement('link');\r\n\t\t\tcss.rel = 'stylesheet';\r\n\t\t\tcss.type = 'text/css';\r\n\t\t\tcss.media = 'all';\r\n\t\t\tcss.href = url;\r\n\t\t\t\r\n\t\t\tdocument.getElementsByTagName('head')[0].appendChild(css);\r\n\t\t\t\r\n\t\t\tthis.log('Load css stylesheet from: ' + url);\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Adds a scenegraph class into memory.\r\n\t * @param {String} className The name of the scenegraph class.\r\n\t * @param {Object=} options Optional object to pass to the scenegraph class graph() method.\r\n\t * @returns {*}\r\n\t */\r\n\taddGraph: function (className, options) {\r\n\t\tif (className !== undefined) {\r\n\t\t\tvar classObj = this.getClass(className),\r\n\t\t\t\tclassInstance;\r\n\t\t\t\r\n\t\t\tif (classObj) {\r\n\t\t\t\tthis.log('Loading SceneGraph data class: ' + className);\r\n\t\t\t\tclassInstance = this.newClassInstance(className);\r\n\t\t\t\t\r\n\t\t\t\t// Make sure the graph class implements the required methods \"addGraph\" and \"removeGraph\"\r\n\t\t\t\tif (typeof(classInstance.addGraph) === 'function' && typeof(classInstance.removeGraph) === 'function') {\r\n\t\t\t\t\t// Call the class's graph() method passing the options in\r\n\t\t\t\t\tclassInstance.addGraph(options);\r\n\t\t\t\t\t\r\n\t\t\t\t\t// Add the graph instance to the holding array\r\n\t\t\t\t\tthis._graphInstances[className] = classInstance;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.log('Could not load graph for class name \"' + className + '\" because the class does not implement both the require methods \"addGraph()\" and \"removeGraph()\".', 'error');\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tthis.log('Cannot load graph for class name \"' + className + '\" because the class could not be found. Have you included it in your server/clientConfig.js file?', 'error');\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\t/**\r\n\t * Removes a scenegraph class into memory.\r\n\t * @param {String} className The name of the scenegraph class.\r\n\t * @param {Object=} options Optional object to pass to the scenegraph class graph() method.\r\n\t * @returns {*}\r\n\t */\r\n\tremoveGraph: function (className, options) {\r\n\t\tif (className !== undefined) {\r\n\t\t\tvar classInstance = this._graphInstances[className];\r\n\t\t\t\r\n\t\t\tif (classInstance) {\r\n\t\t\t\tthis.log('Removing SceneGraph data class: ' + className);\r\n\t\t\t\t\r\n\t\t\t\t// Call the class's graph() method passing the options in\r\n\t\t\t\tclassInstance.removeGraph(options);\r\n\t\t\t\t\r\n\t\t\t\t// Now remove the graph instance from the graph instance array\r\n\t\t\t\tdelete this._graphInstances[className];\r\n\t\t\t} else {\r\n\t\t\t\tthis.log('Cannot remove graph for class name \"' + className + '\" because the class instance could not be found. Did you add it via ige.addGraph() ?', 'error');\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * Allows the update() methods of the entire scenegraph to\r\n\t * be temporarily enabled or disabled. Useful for debugging.\r\n\t * @param {Boolean=} val If false, will disable all update() calls. \r\n\t * @returns {*}\r\n\t */\r\n\tenableUpdates: function (val) {\r\n\t\tif (val !== undefined) {\r\n\t\t\tthis._enableUpdates = val;\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\treturn this._enableUpdates;\r\n\t},\r\n\r\n\t/**\r\n\t * Allows the tick() methods of the entire scenegraph to\r\n\t * be temporarily enabled or disabled. Useful for debugging.\r\n\t * @param {Boolean=} val If false, will disable all tick() calls. \r\n\t * @returns {*}\r\n\t */\r\n\tenableRenders: function (val) {\r\n\t\tif (val !== undefined) {\r\n\t\t\tthis._enableRenders = val;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\treturn this._enableRenders;\r\n\t},\r\n\r\n\t/**\r\n\t * Enables or disables the engine's debug mode. Enabled by default.\r\n\t * @param {Boolean=} val If true, will enable debug mode. \r\n\t * @returns {*}\r\n\t */\r\n\tdebugEnabled: function (val) {\r\n\t\tif (val !== undefined) {\r\n\t\t\tif (igeConfig.debug) {\r\n\t\t\t\tigeConfig.debug._enabled = val;\r\n\t\t\t}\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\treturn igeConfig.debug._enabled;\r\n\t},\r\n\t\r\n\t/**\r\n\t * Enables or disables the engine's debug timing system. The\r\n\t * timing system will time all update and rendering code down\r\n\t * the scenegraph and is useful for tracking long-running code\r\n\t * but comes with a small performance penalty when enabled.\r\n\t * Enabled by default.\r\n\t * @param {Boolean=} val If true, will enable debug timing mode. \r\n\t * @returns {*}\r\n\t */\r\n\tdebugTiming: function (val) {\r\n\t\tif (val !== undefined) {\r\n\t\t\tif (igeConfig.debug) {\r\n\t\t\t\tigeConfig.debug._timing = val;\r\n\t\t\t}\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\treturn igeConfig.debug._timing;\r\n\t},\r\n\r\n\tdebug: function (eventName) {\r\n\t\tif (this._debugEvents[eventName] === true || this._debugEvents[eventName] === ige._frames) {\r\n\t\t\tdebugger;\r\n\t\t}\r\n\t},\r\n\r\n\tdebugEventOn: function (eventName) {\r\n\t\tthis._debugEvents[eventName] = true;\r\n\t},\r\n\r\n\tdebugEventOff: function (eventName) {\r\n\t\tthis._debugEvents[eventName] = false;\r\n\t},\r\n\r\n\ttriggerDebugEventFrame: function (eventName) {\r\n\t\tthis._debugEvents[eventName] = ige._frames;\r\n\t},\r\n\r\n\t/**\r\n\t * Sets the opacity of every object on the scenegraph to\r\n\t * zero *except* the one specified by the given id argument.\r\n\t * @param {String} id The id of the object not to hide.\r\n\t */\r\n\thideAllExcept: function (id) {\r\n\t\tvar i,\r\n\t\t\tarr = this._register;\r\n\r\n\t\tfor (i in arr) {\r\n\t\t\tif (i !== id) {\r\n\t\t\t\tarr[i].opacity(0);\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Calls the show() method for every object on the scenegraph.\r\n\t */\r\n\tshowAll: function () {\r\n\t\tvar i,\r\n\t\t\tarr = this._register;\r\n\r\n\t\tfor (i in arr) {\r\n\t\t\tarr[i].show();\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Sets the frame rate at which new engine steps are fired.\r\n\t * Setting this rate will override the default requestAnimFrame()\r\n\t * method as defined in IgeBase.js and on the client-side, will\r\n\t * stop usage of any available requestAnimationFrame() method\r\n\t * and will use a setTimeout()-based version instead.\r\n\t * @param {Number} fpsRate\r\n\t */\r\n\tsetFps: function (fpsRate) {\r\n\t\tif (fpsRate !== undefined) {\r\n\t\t\t// Override the default requestAnimFrame handler and set\r\n\t\t\t// our own method up so that we can control the frame rate\r\n\t\t\tif (this.isServer) {\r\n\t\t\t\t// Server-side implementation\r\n\t\t\t\trequestAnimFrame = function(callback, element){\r\n\t\t\t\t\tsetTimeout(function () { callback(new Date().getTime()); }, 1000 / fpsRate);\r\n\t\t\t\t};\r\n\t\t\t} else {\r\n\t\t\t\t// Client-side implementation\r\n\t\t\t\twindow.requestAnimFrame = function(callback, element){\r\n\t\t\t\t\tsetTimeout(function () { callback(new Date().getTime()); }, 1000 / fpsRate);\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\tshowStats: function () {\r\n\t\tthis.log('showStats has been removed from the ige in favour of the new editor component, please remove this call from your code.');\r\n\t},\r\n\r\n\t/**\r\n\t * Defines a class in the engine's class repository.\r\n\t * @param {String} id The unique class ID or name.\r\n\t * @param {Object} obj The class definition.\r\n\t */\r\n\tdefineClass: function (id, obj) {\r\n\t\tigeClassStore[id] = obj;\r\n\t},\r\n\r\n\t/**\r\n\t * Retrieves a class by it's ID that was defined with\r\n\t * a call to defineClass().\r\n\t * @param {String} id The ID of the class to retrieve.\r\n\t * @return {Object} The class definition.\r\n\t */\r\n\tgetClass: function (id) {\r\n\t\treturn igeClassStore[id];\r\n\t},\r\n\r\n\t/**\r\n\t * Returns true if the class specified has been defined.\r\n\t * @param {String} id The ID of the class to check for.\r\n\t * @returns {*}\r\n\t */\r\n\tclassDefined: function (id) {\r\n\t\treturn Boolean(igeClassStore[id]);\r\n\t},\r\n\r\n\t/**\r\n\t * Generates a new instance of a class defined with a call\r\n\t * to the defineClass() method. Passes the options\r\n\t * parameter to the new class during it's constructor call.\r\n\t * @param id\r\n\t * @param options\r\n\t * @return {*}\r\n\t */\r\n\tnewClassInstance: function (id, options) {\r\n\t\treturn new igeClassStore[id](options);\r\n\t},\r\n\r\n\t/**\r\n\t * Checks if all engine start dependencies have been satisfied.\r\n\t * @return {Boolean}\r\n\t */\r\n\tdependencyCheck: function () {\r\n\t\tvar arr = this._dependencyQueue,\r\n\t\t\tarrCount = arr.length;\r\n\r\n\t\twhile (arrCount--) {\r\n\t\t\tif (!this._dependencyQueue[arrCount]()) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t},\r\n\r\n\t/**\r\n\t * Gets / sets the flag that determines if viewports should be sorted by depth\r\n\t * like regular entities, before they are processed for rendering each frame.\r\n\t * Depth-sorting viewports increases processing requirements so if you do not\r\n\t * need to stack viewports in a particular order, keep this flag false.\r\n\t * @param {Boolean} val\r\n\t * @return {Boolean}\r\n\t */\r\n\tviewportDepth: function (val) {\r\n\t\tif (val !== undefined) {\r\n\t\t\tthis._viewportDepth = val;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\treturn this._viewportDepth;\r\n\t},\r\n\r\n\t/**\r\n\t * Sets the number of milliseconds before the engine gives up waiting for dependencies\r\n\t * to be satisfied and cancels the startup procedure.\r\n\t * @param val\r\n\t */\r\n\tdependencyTimeout: function (val) {\r\n\t\tthis._dependencyCheckTimeout = val;\r\n\t},\r\n\r\n\t/**\r\n\t * Updates the loading screen DOM elements to show the update progress.\r\n\t */\r\n\tupdateProgress: function () {\r\n\t\t// Check for a loading progress bar DOM element\r\n\t\tif (typeof(document) !== 'undefined' && document.getElementById) {\r\n\t\t\tvar elem = document.getElementById('loadingProgressBar'),\r\n\t\t\t\ttextElem = document.getElementById('loadingText');\r\n\t\t\t\r\n\t\t\tif (elem) {\r\n\t\t\t\t// Calculate the width from progress\r\n\t\t\t\tvar totalWidth = parseInt(elem.parentNode.offsetWidth),\r\n\t\t\t\t\tcurrentWidth = Math.floor((totalWidth / this._texturesTotal) * (this._texturesTotal - this._texturesLoading));\r\n\t\t\t\t\r\n\t\t\t\t// Set the current bar width\r\n\t\t\t\telem.style.width = currentWidth + 'px';\r\n\t\t\t\t\r\n\t\t\t\tif (textElem) {\r\n\t\t\t\t\tif (this._loadingPreText === undefined) {\r\n\t\t\t\t\t\t// Fill the text to use\r\n\t\t\t\t\t\tthis._loadingPreText = textElem.innerHTML;\r\n\t\t\t\t\t}\r\n\t\t\t\t\ttextElem.innerHTML = this._loadingPreText + ' ' + Math.floor((100 / this._texturesTotal) * (this._texturesTotal - this._texturesLoading)) + '%';\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Adds one to the number of textures currently loading.\r\n\t */\r\n\ttextureLoadStart: function (url, textureObj) {\r\n\t\tthis._texturesLoading++;\r\n\t\tthis._texturesTotal++;\r\n\t\t\r\n\t\tthis.updateProgress();\r\n\t\t\r\n\t\tthis.emit('textureLoadStart', textureObj);\r\n\t},\r\n\r\n\t/**\r\n\t * Subtracts one from the number of textures currently loading and if no more need\r\n\t * to load, it will also call the _allTexturesLoaded() method.\r\n\t */\r\n\ttextureLoadEnd: function (url, textureObj) {\r\n\t\tvar self = this;\r\n\t\t\r\n\t\tif (!textureObj._destroyed) {\r\n\t\t\t// Add the texture to the _textureStore array\r\n\t\t\tthis._textureStore.push(textureObj);\r\n\t\t}\r\n\r\n\t\t// Decrement the overall loading number\r\n\t\tthis._texturesLoading--;\r\n\t\t\r\n\t\tthis.updateProgress();\r\n\t\t\r\n\t\tthis.emit('textureLoadEnd', textureObj);\r\n\r\n\t\t// If we've finished...\r\n\t\tif (this._texturesLoading === 0) {\r\n\t\t\t// All textures have finished loading\r\n\t\t\tthis.updateProgress();\r\n\t\t\t\r\n\t\t\tsetTimeout(function () {\r\n\t\t\t\tself._allTexturesLoaded();\r\n\t\t\t}, 100);\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Returns a texture from the texture store by it's url.\r\n\t * @param {String} url\r\n\t * @return {IgeTexture}\r\n\t */\r\n\ttextureFromUrl: function (url) {\r\n\t\tvar arr = this._textureStore,\r\n\t\t\tarrCount = arr.length,\r\n\t\t\titem;\r\n\r\n\t\twhile (arrCount--) {\r\n\t\t\titem = arr[arrCount];\r\n\t\t\tif (item._url === url) {\r\n\t\t\t\treturn item;\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Checks if all textures have finished loading and returns true if so.\r\n\t * @return {Boolean}\r\n\t */\r\n\ttexturesLoaded: function () {\r\n\t\treturn ige._texturesLoading === 0;\r\n\t},\r\n\r\n\t/**\r\n\t * Emits the \"texturesLoaded\" event.\r\n\t * @private\r\n\t */\r\n\t_allTexturesLoaded: function () {\r\n\t\tif (!this._loggedATL) {\r\n\t\t\tthis._loggedATL = true;\r\n\t\t\tthis.log('All textures have loaded');\r\n\t\t}\r\n\r\n\t\t// Fire off an event about this\r\n\t\tthis.emit('texturesLoaded');\r\n\t},\r\n\r\n\t/**\r\n\t * Gets / sets the default smoothing value for all new\r\n\t * IgeTexture class instances. If set to true, all newly\r\n\t * created textures will have smoothing enabled by default.\r\n\t * @param val\r\n\t * @return {*}\r\n\t */\r\n\tglobalSmoothing: function (val) {\r\n\t\tif (val !== undefined) {\r\n\t\t\tthis._globalSmoothing = val;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\treturn this._globalSmoothing;\r\n\t},\r\n\r\n\t/**\r\n\t * Checks to ensure that a canvas has been assigned to the engine or that the\r\n\t * engine is in server mode.\r\n\t * @return {Boolean}\r\n\t */\r\n\tcanvasReady: function () {\r\n\t\treturn (ige._canvas !== undefined || ige.isServer);\r\n\t},\r\n\r\n\t/**\r\n\t * Generates a new unique ID\r\n\t * @return {String}\r\n\t */\r\n\tnewId: function () {\r\n\t\tthis._idCounter++;\r\n\t\treturn String(this._idCounter + (Math.random() * Math.pow(10, 17) + Math.random() * Math.pow(10, 17) + Math.random() * Math.pow(10, 17) + Math.random() * Math.pow(10, 17)));\r\n\t},\r\n\r\n\t/**\r\n\t * Generates a new 16-character hexadecimal unique ID\r\n\t * @return {String}\r\n\t */\r\n\tnewIdHex: function () {\r\n\t\tthis._idCounter++;\r\n\t\treturn (this._idCounter + (Math.random() * Math.pow(10, 17) + Math.random() * Math.pow(10, 17) + Math.random() * Math.pow(10, 17) + Math.random() * Math.pow(10, 17))).toString(16);\r\n\t},\r\n\r\n\t/**\r\n\t * Generates a new 16-character hexadecimal ID based on\r\n\t * the passed string. Will always generate the same ID\r\n\t * for the same string.\r\n\t * @param {String} str A string to generate the ID from.\r\n\t * @return {String}\r\n\t */\r\n\tnewIdFromString: function (str) {\r\n\t\tif (str !== undefined) {\r\n\t\t\tvar id,\r\n\t\t\t\tval = 0,\r\n\t\t\t\tcount = str.length,\r\n\t\t\t\ti;\r\n\r\n\t\t\tfor (i = 0; i < count; i++) {\r\n\t\t\t\tval += str.charCodeAt(i) * Math.pow(10, 17);\r\n\t\t\t}\r\n\r\n\t\t\tid = (val).toString(16);\r\n\r\n\t\t\t// Check if the ID is already in use\r\n\t\t\twhile (ige.$(id)) {\r\n\t\t\t\tval += Math.pow(10, 17);\r\n\t\t\t\tid = (val).toString(16);\r\n\t\t\t}\r\n\r\n\t\t\treturn id;\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Starts the engine.\r\n\t * @param callback\r\n\t */\r\n\tstart: function (callback) {\r\n\t\tif (!ige._state) {\r\n\t\t\t// Check if we are able to start based upon any registered dependencies\r\n\t\t\tif (ige.dependencyCheck()) {\r\n\t\t\t\t// Start the engine\r\n\t\t\t\tige.log('Starting engine...');\r\n\t\t\t\tige._state = 1;\r\n\r\n\t\t\t\t// Check if we have a DOM, that there is an igeLoading element\r\n\t\t\t\t// and if so, remove it from the DOM now\r\n\t\t\t\tif (this.isClient) {\r\n\t\t\t\t\tif (document.getElementsByClassName && document.getElementsByClassName('igeLoading')) {\r\n\t\t\t\t\t\tvar arr = document.getElementsByClassName('igeLoading'),\r\n\t\t\t\t\t\t\tarrCount = arr.length;\r\n\r\n\t\t\t\t\t\twhile (arrCount--) {\r\n\t\t\t\t\t\t\tarr[arrCount].parentNode.removeChild(arr[arrCount]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\trequestAnimFrame(ige.engineStep);\r\n\r\n\t\t\t\tige.log('Engine started');\r\n\r\n\t\t\t\t// Fire the callback method if there was one\r\n\t\t\t\tif (typeof(callback) === 'function') {\r\n\t\t\t\t\tcallback(true);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\t// Get the current timestamp\r\n\t\t\t\tvar curTime = new Date().getTime();\r\n\r\n\t\t\t\t// Record when we first started checking for dependencies\r\n\t\t\t\tif (!ige._dependencyCheckStart) {\r\n\t\t\t\t\tige._dependencyCheckStart = curTime;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Check if we have timed out\r\n\t\t\t\tif (curTime - ige._dependencyCheckStart > this._dependencyCheckTimeout) {\r\n\t\t\t\t\tthis.log('Engine start failed because the dependency check timed out after ' + (this._dependencyCheckTimeout / 1000) + ' seconds', 'error');\r\n\t\t\t\t\tif (typeof(callback) === 'function') {\r\n\t\t\t\t\t\tcallback(false);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// Start a timer to keep checking dependencies\r\n\t\t\t\t\tsetTimeout(function () { ige.start(callback); }, 200);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Stops the engine.\r\n\t * @return {Boolean}\r\n\t */\r\n\tstop: function () {\r\n\t\t// If we are running, stop the engine\r\n\t\tif (this._state) {\r\n\t\t\tthis.log('Stopping engine...');\r\n\t\t\tthis._state = 0;\r\n\r\n\t\t\treturn true;\r\n\t\t} else {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Gets / sets the _autoSize property. If set to true, the engine will listen\r\n\t * for any change in screen size and resize the front-buffer (canvas) element\r\n\t * to match the new screen size.\r\n\t * @param val\r\n\t * @return {Boolean}\r\n\t */\r\n\tautoSize: function (val) {\r\n\t\tif (val !== undefined) {\r\n\t\t\tthis._autoSize = val;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\treturn this._autoSize;\r\n\t},\r\n\r\n\tpixelRatioScaling: function (val) {\r\n\t\tif (val !== undefined) {\r\n\t\t\tthis._pixelRatioScaling = val;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\treturn this._pixelRatioScaling;\r\n\t},\r\n\r\n\t/**\r\n\t * Gets / sets the rendering context that will be used when getting the\r\n\t * context from canvas elements.\r\n\t * @param {String=} contextId The context such as '2d'. Defaults to '2d'.\r\n\t * @return {*}\r\n\t */\r\n\trenderContext: function (contextId) {\r\n\t\tif (contextId !== undefined) {\r\n\t\t\tthis._renderContext = contextId;\r\n\t\t\tthis._renderMode = this._renderModes[contextId];\r\n\r\n\t\t\tthis.log('Rendering mode set to: ' + contextId);\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\treturn this._renderContext;\r\n\t},\r\n\r\n\t/**\r\n\t * Creates a front-buffer or \"drawing surface\" for the renderer.\r\n\t *\r\n\t * @param {Boolean} autoSize Determines if the canvas will auto-resize\r\n\t * when the browser window changes dimensions. If true the canvas will\r\n\t * automatically fill the window when it is resized.\r\n\t *\r\n\t * @param {Boolean=} dontScale If set to true, IGE will ignore device\r\n\t * pixel ratios when setting the width and height of the canvas and will\r\n\t * therefore not take into account \"retina\", high-definition displays or\r\n\t * those whose pixel ratio is different from 1 to 1.\r\n\t */\r\n\tcreateFrontBuffer: function (autoSize, dontScale) {\r\n\t\tvar self = this;\r\n\t\tif (this.isClient) {\r\n\t\t\tif (!this._canvas) {\r\n\t\t\t\tthis._createdFrontBuffer = true;\r\n\t\t\t\tthis._pixelRatioScaling = !dontScale;\r\n\r\n\t\t\t\tthis._frontBufferSetup(autoSize, dontScale);\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\t_frontBufferSetup: function (autoSize, dontScale) {\r\n\t\t// Create a new canvas element to use as the\r\n\t\t// rendering front-buffer\r\n\t\tvar tempCanvas = document.createElement('canvas');\r\n\r\n\t\t// Set the canvas element id\r\n\t\ttempCanvas.id = 'igeFrontBuffer';\r\n\r\n\t\tthis.canvas(tempCanvas, autoSize);\r\n\t\tdocument.body.appendChild(tempCanvas);\r\n\t},\r\n\r\n\t/**\r\n\t * Sets the canvas element that will be used as the front-buffer.\r\n\t * @param elem The canvas element.\r\n\t * @param autoSize If set to true, the engine will automatically size\r\n\t * the canvas to the width and height of the window upon window resize.\r\n\t */\r\n\tcanvas: function (elem, autoSize) {\r\n\t\tif (elem !== undefined) {\r\n\t\t\tif (!this._canvas) {\r\n\t\t\t\t// Setup front-buffer canvas element\r\n\t\t\t\tthis._canvas = elem;\r\n\t\t\t\tthis._ctx = this._canvas.getContext(this._renderContext);\r\n\r\n\t\t\t\t// Handle pixel ratio settings\r\n\t\t\t\tif (this._pixelRatioScaling) {\r\n\t\t\t\t\t// Support high-definition devices and \"retina\" (stupid marketing name)\r\n\t\t\t\t\t// displays by adjusting for device and back store pixels ratios\r\n\t\t\t\t\tthis._devicePixelRatio = window.devicePixelRatio || 1;\r\n\t\t\t\t\tthis._backingStoreRatio = this._ctx.webkitBackingStorePixelRatio ||\r\n\t\t\t\t\t\tthis._ctx.mozBackingStorePixelRatio ||\r\n\t\t\t\t\t\tthis._ctx.msBackingStorePixelRatio ||\r\n\t\t\t\t\t\tthis._ctx.oBackingStorePixelRatio ||\r\n\t\t\t\t\t\tthis._ctx.backingStorePixelRatio || 1;\r\n\r\n\t\t\t\t\tthis._deviceFinalDrawRatio = this._devicePixelRatio / this._backingStoreRatio;\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// No auto-scaling\r\n\t\t\t\t\tthis._devicePixelRatio = 1;\r\n\t\t\t\t\tthis._backingStoreRatio = 1;\r\n\t\t\t\t\tthis._deviceFinalDrawRatio = 1;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (autoSize) {\r\n\t\t\t\t\tthis._autoSize = autoSize;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t// Add some event listeners even if autosize is off\r\n\t\t\t\twindow.addEventListener('resize', this._resizeEvent);\r\n\r\n\t\t\t\t// Fire the resize event for the first time\r\n\t\t\t\t// which sets up initial canvas dimensions\r\n\t\t\t\tthis._resizeEvent();\r\n\t\t\t\tthis._ctx = this._canvas.getContext(this._renderContext);\r\n\t\t\t\tthis._headless = false;\r\n\r\n\t\t\t\t// Ask the input component to setup any listeners it has\r\n\t\t\t\tthis.input.setupListeners(this._canvas);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn this._canvas;\r\n\t},\r\n\r\n\t/**\r\n\t * Clears the entire canvas.\r\n\t */\r\n\tclearCanvas: function () {\r\n\t\tif (this._ctx) {\r\n\t\t\t// Clear the whole canvas\r\n\t\t\tthis._ctx.clearRect(\r\n\t\t\t\t0,\r\n\t\t\t\t0,\r\n\t\t\t\tthis._canvas.width,\r\n\t\t\t\tthis._canvas.height\r\n\t\t\t);\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Removes the engine's canvas from the DOM.\r\n\t */\r\n\tremoveCanvas: function () {\r\n\t\t// Stop listening for input events\r\n\t\tif (this.input) {\r\n\t\t\tthis.input.destroyListeners();\r\n\t\t}\r\n\r\n\t\t// Remove event listener\r\n\t\twindow.removeEventListener('resize', this._resizeEvent);\r\n\r\n\t\tif (this._createdFrontBuffer) {\r\n\t\t\t// Remove the canvas from the DOM\r\n\t\t\tdocument.body.removeChild(this._canvas);\r\n\t\t}\r\n\r\n\t\t// Clear internal references\r\n\t\tdelete this._canvas;\r\n\t\tdelete this._ctx;\r\n\t\tthis._ctx = IgeDummyContext;\r\n\t\tthis._headless = true;\r\n\t},\r\n\r\n\t/**\r\n\t * Opens a new window to the specified url. When running in a\r\n\t * native wrapper, will load the url in place of any existing\r\n\t * page being displayed in the native web view.\r\n\t * @param url\r\n\t */\r\n\topenUrl: function (url) {\r\n\t\tif (url !== undefined) {\r\n\r\n\t\t\tif (ige.cocoonJs && ige.cocoonJs.detected) {\r\n\t\t\t\t// Open URL via CocoonJS webview\r\n\t\t\t\tige.cocoonJs.openUrl(url);\r\n\t\t\t} else {\r\n\t\t\t\t// Open via standard JS open window\r\n\t\t\t\twindow.open(url);\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Loads the specified URL as an HTML overlay on top of the\r\n\t * front buffer in an iFrame. If running in a native wrapper,\r\n\t * will load the url in place of any existing page being\r\n\t * displayed in the native web view.\r\n\t *\r\n\t * When the overlay is in use, no mouse or touch events will\r\n\t * be fired on the front buffer. Once you are finished with the\r\n\t * overlay, call hideOverlay() to re-enable interaction with\r\n\t * the front buffer.\r\n\t * @param {String=} url\r\n\t */\r\n\tshowWebView: function (url) {\r\n\t\tif (ige.cocoonJs && ige.cocoonJs.detected) {\r\n\t\t\t// Open URL via CocoonJS webview\r\n\t\t\tige.cocoonJs.showWebView(url);\r\n\t\t} else {\r\n\t\t\t// Load the iFrame url\r\n\t\t\tvar overlay = document.getElementById('igeOverlay');\r\n\r\n\t\t\tif (!overlay) {\r\n\t\t\t\t// No overlay was found, create one\r\n\t\t\t\toverlay = document.createElement('iframe');\r\n\r\n\t\t\t\t// Setup overlay styles\r\n\t\t\t\toverlay.id = 'igeOverlay';\r\n\t\t\t\toverlay.style.position = 'absolute';\r\n\t\t\t\toverlay.style.border = 'none';\r\n\t\t\t\toverlay.style.left = '0px';\r\n\t\t\t\toverlay.style.top = '0px';\r\n\t\t\t\toverlay.style.width = '100%';\r\n\t\t\t\toverlay.style.height = '100%';\r\n\r\n\t\t\t\t// Append overlay to body\r\n\t\t\t\tdocument.body.appendChild(overlay);\r\n\t\t\t}\r\n\r\n\t\t\t// If we have a url, set it now\r\n\t\t\tif (url !== undefined) {\r\n\t\t\t\toverlay.src = url;\r\n\t\t\t}\r\n\r\n\t\t\t// Show the overlay\r\n\t\t\toverlay.style.display = 'block';\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * Hides the web view overlay.\r\n\t * @return {*}\r\n\t */\r\n\thideWebView: function () {\r\n\t\tif (ige.cocoonJs && ige.cocoonJs.detected) {\r\n\t\t\t// Hide the cocoonJS webview\r\n\t\t\tige.cocoonJs.hideWebView();\r\n\t\t} else {\r\n\t\t\tvar overlay = document.getElementById('igeOverlay');\r\n\t\t\tif (overlay) {\r\n\t\t\t\toverlay.style.display = 'none';\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * Evaluates javascript sent from another frame.\r\n\t * @param js\r\n\t */\r\n\tlayerCall: function (js) {\r\n\t\tif (js !== undefined) {\r\n\t\t\teval(js);\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Returns the mouse position relative to the main front buffer. Mouse\r\n\t * position is set by the ige.input component (IgeInputComponent)\r\n\t * @return {IgePoint3d}\r\n\t */\r\n\tmousePos: function () {\r\n\t\treturn this._mousePos.clone();\r\n\t},\r\n\r\n\t/**\r\n\t * Walks the scenegraph and returns an array of all entities that the mouse\r\n\t * is currently over, ordered by their draw order from drawn last (above other\r\n\t * entities) to first (underneath other entities).\r\n\t */\r\n\tmouseOverList: function (obj, entArr) {\r\n\t\tvar arr,\r\n\t\t\tarrCount,\r\n\t\t\tmp,\r\n\t\t\tmouseTriggerPoly,\r\n\t\t\tfirst = false;\r\n\t\t\r\n\t\tif (!obj) {\r\n\t\t\tobj = ige;\r\n\t\t\tentArr = [];\r\n\t\t\tfirst = true;\r\n\t\t}\r\n\t\t\r\n\t\tif (obj === ige) {\r\n\t\t\t// Loop viewports\r\n\t\t\tarr = obj._children;\r\n\t\r\n\t\t\tif (arr) {\r\n\t\t\t\tarrCount = arr.length;\r\n\t\r\n\t\t\t\t// Loop our children\r\n\t\t\t\twhile (arrCount--) {\r\n\t\t\t\t\tif (arr[arrCount]._scene) {\r\n\t\t\t\t\t\tif (arr[arrCount]._scene._shouldRender) {\r\n\t\t\t\t\t\t\tthis.mouseOverList(arr[arrCount]._scene, entArr);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t// Check if the mouse is over this entity\r\n\t\t\tmp = this.mousePosWorld();\r\n\r\n\t\t\tif (mp && obj.aabb) {\r\n\t\t\t\t// Trigger mode is against the AABB\r\n\t\t\t\tmouseTriggerPoly = obj.aabb(); //this.localAabb();\r\n\t\t\t\t\r\n\t\t\t\t// Check if the current mouse position is inside this aabb\r\n\t\t\t\tif (mouseTriggerPoly.xyInside(mp.x, mp.y)) {\r\n\t\t\t\t\tentArr.push(obj);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t// Check if the entity has children\r\n\t\t\tarr = obj._children;\r\n\r\n\t\t\tif (arr) {\r\n\t\t\t\tarrCount = arr.length;\r\n\r\n\t\t\t\t// Loop our children\r\n\t\t\t\twhile (arrCount--) {\r\n\t\t\t\t\tthis.mouseOverList(arr[arrCount], entArr);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tif (first) {\r\n\t\t\tentArr.reverse();\r\n\t\t}\r\n\t\t\r\n\t\treturn entArr;\r\n\t},\r\n\r\n\t/**\r\n\t * Handles the screen resize event.\r\n\t * @param event\r\n\t * @private\r\n\t */\r\n\t_resizeEvent: function (event) {\r\n\t\tvar canvasBoundingRect;\r\n\t\t\r\n\t\tif (ige._autoSize) {\r\n\t\t\tvar newWidth = window.innerWidth,\r\n\t\t\t\tnewHeight = window.innerHeight,\r\n\t\t\t\tarr = ige._children,\r\n\t\t\t\tarrCount = arr.length;\r\n\r\n\t\t\t// Only update canvas dimensions if it exists\r\n\t\t\tif (ige._canvas) {\r\n\t\t\t\t// Check if we can get the position of the canvas\r\n\t\t\t\tcanvasBoundingRect = ige._canvasPosition();\r\n\t\t\t\t\r\n\t\t\t\t// Adjust the newWidth and newHeight by the canvas offset\r\n\t\t\t\tnewWidth -= parseInt(canvasBoundingRect.left);\r\n\t\t\t\tnewHeight -= parseInt(canvasBoundingRect.top);\r\n\t\t\t\t\r\n\t\t\t\t// Make sure we can divide the new width and height by 2...\r\n\t\t\t\t// otherwise minus 1 so we get an even number so that we\r\n\t\t\t\t// negate the blur effect of sub-pixel rendering\r\n\t\t\t\tif (newWidth % 2) { newWidth--; }\r\n\t\t\t\tif (newHeight % 2) { newHeight--; }\r\n\r\n\t\t\t\tige._canvas.width = newWidth * ige._deviceFinalDrawRatio;\r\n\t\t\t\tige._canvas.height = newHeight * ige._deviceFinalDrawRatio;\r\n\r\n\t\t\t\tif (ige._deviceFinalDrawRatio !== 1) {\r\n\t\t\t\t\tige._canvas.style.width = newWidth + 'px';\r\n\t\t\t\t\tige._canvas.style.height = newHeight + 'px';\r\n\r\n\t\t\t\t\t// Scale the canvas context to account for the change\r\n\t\t\t\t\tige._ctx.scale(ige._deviceFinalDrawRatio, ige._deviceFinalDrawRatio);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tige._bounds2d = new IgePoint3d(newWidth, newHeight, 0);\r\n\r\n\t\t\t// Loop any mounted children and check if\r\n\t\t\t// they should also get resized\r\n\t\t\twhile (arrCount--) {\r\n\t\t\t\tarr[arrCount]._resizeEvent(event);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (ige._canvas) {\r\n\t\t\t\tige._bounds2d = new IgePoint3d(ige._canvas.width, ige._canvas.height, 0);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (ige._showSgTree) {\r\n\t\t\tvar sgTreeElem = document.getElementById('igeSgTree');\r\n\t\t\t\t\t\t\t\r\n\t\t\tcanvasBoundingRect = ige._canvasPosition();\r\n\t\t\t\r\n\t\t\tsgTreeElem.style.top = (parseInt(canvasBoundingRect.top) + 5) + 'px';\r\n\t\t\tsgTreeElem.style.left = (parseInt(canvasBoundingRect.left) + 5) + 'px';\r\n\t\t\tsgTreeElem.style.height = (ige._bounds2d.y - 30) + 'px';\r\n\t\t}\r\n\r\n\t\tige._resized = true;\r\n\t},\r\n\r\n\t/**\r\n\t * Gets the bounding rectangle for the HTML canvas element being\r\n\t * used as the front buffer for the engine. Uses DOM methods.\r\n\t * @returns {ClientRect}\r\n\t * @private\r\n\t */\r\n\t_canvasPosition: function () {\r\n\t\ttry {\r\n\t\t\treturn ige._canvas.getBoundingClientRect();\r\n\t\t} catch (e) {\r\n\t\t\treturn {\r\n\t\t\t\ttop: ige._canvas.offsetTop,\r\n\t\t\t\tleft: ige._canvas.offsetLeft\r\n\t\t\t};\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Toggles full-screen output of the main ige canvas. Only works\r\n\t * if called from within a user-generated HTML event listener.\r\n\t */\r\n\ttoggleFullScreen: function () {\r\n\t\tvar elem = this._canvas;\r\n\t\t\r\n\t\tif (elem.requestFullscreen) {\r\n\t\t\telem.requestFullscreen();\r\n\t\t} else if (elem.mozRequestFullScreen) {\r\n\t\t\telem.mozRequestFullScreen();\r\n\t\t} else if (elem.webkitRequestFullscreen) {\r\n\t\t\telem.webkitRequestFullscreen();\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Adds a new watch expression to the watch list which will be\r\n\t * displayed in the stats overlay during a call to _statsTick().\r\n\t * @param {*} evalStringOrObject The expression to evaluate and\r\n\t * display the result of in the stats overlay, or an object that\r\n\t * contains a \"value\" property.\r\n\t * @returns {Integer} The index of the new watch expression you\r\n\t * just added to the watch array.\r\n\t */\r\n\twatchStart: function (evalStringOrObject) {\r\n\t\tthis._watch = this._watch || [];\r\n\t\tthis._watch.push(evalStringOrObject);\r\n\r\n\t\treturn this._watch.length - 1;\r\n\t},\r\n\r\n\t/**\r\n\t * Removes a watch expression by it's array index.\r\n\t * @param {Number} index The index of the watch expression to\r\n\t * remove from the watch array.\r\n\t */\r\n\twatchStop: function (index) {\r\n\t\tthis._watch = this._watch || [];\r\n\t\tthis._watch.splice(index, 1);\r\n\t},\r\n\r\n\t/**\r\n\t * Sets a trace up on the setter of the passed object's\r\n\t * specified property. When the property is set by any\r\n\t * code the debugger line is activated and code execution\r\n\t * will be paused allowing you to step through code or\r\n\t * examine the call stack to see where the property set\r\n\t * originated.\r\n\t * @param {Object} obj The object whose property you want\r\n\t * to trace.\r\n\t * @param {String} propName The name of the property you\r\n\t * want to put the trace on.\r\n\t * @param {Number} sampleCount The number of times you\r\n\t * want the trace to break with the debugger line before\r\n\t * automatically switching off the trace.\r\n\t * @param {Function=} callbackEvaluator Optional callback\r\n\t * that if returns true, will fire debugger. Method is passed\r\n\t * the setter value as first argument.\r\n\t */\r\n\ttraceSet: function (obj, propName, sampleCount, callbackEvaluator) {\r\n\t\tobj.___igeTraceCurrentVal = obj.___igeTraceCurrentVal || {};\r\n\t\tobj.___igeTraceCurrentVal[propName] = obj[propName];\r\n\t\tobj.___igeTraceMax = sampleCount || 1;\r\n\t\tobj.___igeTraceCount = 0;\r\n\r\n\t\tObject.defineProperty(obj, propName, {\r\n\t\t\tget: function () {\r\n\t\t\t\treturn obj.___igeTraceCurrentVal[propName];\r\n\t\t\t},\r\n\t\t\tset: function (val) {\r\n\t\t\t\tif (callbackEvaluator){ \r\n\t\t\t\t\tif (callbackEvaluator(val)) {\r\n\t\t\t\t\t\tdebugger;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tdebugger;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tobj.___igeTraceCurrentVal[propName] = val;\r\n\t\t\t\tobj.___igeTraceCount++;\r\n\r\n\t\t\t\tif (obj.___igeTraceCount === obj.___igeTraceMax) {\r\n\t\t\t\t\t// Maximum amount of trace samples reached, turn off\r\n\t\t\t\t\t// the trace system\r\n\t\t\t\t\tige.traceSetOff(obj, propName);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t},\r\n\r\n\t/**\r\n\t * Turns off a trace that was created by calling traceSet.\r\n\t * @param {Object} object The object whose property you want\r\n\t * to disable a trace against.\r\n\t * @param {String} propName The name of the property you\r\n\t * want to disable the trace for.\r\n\t */\r\n\ttraceSetOff: function (object, propName) {\r\n\t\tObject.defineProperty(object, propName, {set: function (val) { this.___igeTraceCurrentVal[propName] = val; }});\r\n\t},\r\n\r\n\t/**\r\n\t * Finds the first Ige* based class that the passed object\r\n\t * has been derived from.\r\n\t * @param obj\r\n\t * @return {*}\r\n\t */\r\n\tfindBaseClass: function (obj) {\r\n\t\tif (obj && obj._classId) {\r\n\t\t\tif (obj._classId.substr(0, 3) === 'Ige') {\r\n\t\t\t\treturn obj._classId;\r\n\t\t\t} else {\r\n\t\t\t\tif (obj.__proto__._classId) { \r\n\t\t\t\t\treturn this.findBaseClass(obj.__proto__);\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn '';\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\treturn '';\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Returns an array of all classes the passed object derives from\r\n\t * in order from current to base.\r\n\t * @param obj\r\n\t * @param arr\r\n\t * @return {*}\r\n\t */\r\n\tgetClassDerivedList: function (obj, arr) {\r\n\t\tif (!arr) {\r\n\t\t\tarr = [];\r\n\t\t} else {\r\n\t\t\tif (obj._classId) {\r\n\t\t\t\tarr.push(obj._classId);\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tif (obj.__proto__._classId) {\r\n\t\t\tthis.getClassDerivedList(obj.__proto__, arr);\r\n\t\t}\r\n\t\t\r\n\t\treturn arr;\r\n\t},\r\n\t\r\n\tspawnQueue: function (ent) {\r\n\t\tif (ent !== undefined) {\r\n\t\t\tthis._spawnQueue.push(ent);\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\treturn this._spawnQueue;\r\n\t},\r\n\r\n\t/**\r\n\t * Is called every second and does things like calculate the current FPS.\r\n\t * @private\r\n\t */\r\n\t_secondTick: function () {\r\n\t\tvar self = ige;\r\n\r\n\t\t// Store frames per second\r\n\t\tself._fps = self._frames;\r\n\r\n\t\t// Store draws per second\r\n\t\tself._dps = self._dpf * self._fps;\r\n\r\n\t\t// Zero out counters\r\n\t\tself._frames = 0;\r\n\t\tself._drawCount = 0;\r\n\t},\r\n\t\r\n\t/**\r\n\t * Gets / sets the current time scalar value. The engine's internal\r\n\t * time is multiplied by this value and it's default is 1. You can set it to\r\n\t * 0.5 to slow down time by half or 1.5 to speed up time by half. Negative\r\n\t * values will reverse time but not all engine systems handle this well\r\n\t * at the moment.\r\n\t * @param {Number=} val The time scale value.\r\n\t * @returns {*}\r\n\t */\r\n\ttimeScale: function (val) {\r\n\t\tif (val !== undefined) {\r\n\t\t\tthis._timeScale = val;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\treturn this._timeScale;\r\n\t},\r\n\r\n\t/**\r\n\t * Increments the engine's interal time by the passed number of milliseconds.\r\n\t * @param {Number} val The number of milliseconds to increment time by.\r\n\t * @param {Number=} lastVal The last internal time value, used to calculate\r\n\t * delta internally in the method.\r\n\t * @returns {Number}\r\n\t */\r\n\tincrementTime: function (val, lastVal) {\r\n\t\tif (!this._pause) {\r\n\t\t\tif (!lastVal) { lastVal = val; }\r\n\t\t\tthis._currentTime += ((val - lastVal) * this._timeScale);\r\n\t\t}\r\n\t\treturn this._currentTime;\r\n\t},\r\n\r\n\t/**\r\n\t * Get the current time from the engine.\r\n\t * @return {Number} The current time.\r\n\t */\r\n\tcurrentTime: function () {\r\n\t\treturn this._currentTime;\r\n\t},\r\n\r\n\t/**\r\n\t * Gets / sets the pause flag. If set to true then the engine's\r\n\t * internal time will no longer increment and will instead stay static.\r\n\t * @param val\r\n\t * @returns {*}\r\n\t */\r\n\tpause: function (val) {\r\n\t\tif (val !== undefined) {\r\n\t\t\tthis._pause = val;\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\treturn this._pause;\r\n\t},\r\n\r\n\t/**\r\n\t * Gets / sets the option to determine if the engine should\r\n\t * schedule it's own ticks or if you want to manually advance\r\n\t * the engine by calling tick when you wish to.\r\n\t * @param {Boolean=} val\r\n\t * @return {*}\r\n\t */\r\n\tuseManualTicks: function (val) {\r\n\t\tif (val !== undefined) {\r\n\t\t\tthis._useManualTicks = val;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\treturn this._useManualTicks;\r\n\t},\r\n\r\n\t/**\r\n\t * Schedules a manual tick.\r\n\t */\r\n\tmanualTick: function () {\r\n\t\tif (this._manualFrameAlternator !== this._frameAlternator) {\r\n\t\t\tthis._manualFrameAlternator = this._frameAlternator;\r\n\t\t\trequestAnimFrame(this.engineStep);\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Gets / sets the option to determine if the engine should\r\n\t * render on every tick or wait for a manualRender() call.\r\n\t * @param {Boolean=} val True to enable manual rendering, false\r\n\t * to disable.\r\n\t * @return {*}\r\n\t */\r\n\tuseManualRender: function (val) {\r\n\t\tif (val !== undefined) {\r\n\t\t\tthis._useManualRender = val;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\treturn this._useManualRender;\r\n\t},\r\n\r\n\t/**\r\n\t * Manually render a frame on demand. This is used in conjunction\r\n\t * with the ige.useManualRender(true) call which will cause the\r\n\t * engine to only render new graphics frames from the scenegraph\r\n\t * once this method is called. You must call this method every time\r\n\t * you wish to update the graphical output on screen.\r\n\t * \r\n\t * Calling this method multiple times during a single engine tick\r\n\t * will NOT make it draw more than one frame, therefore it is safe\r\n\t * to call multiple times if required by different sections of game\r\n\t * logic without incurring extra rendering cost.\r\n\t */\r\n\tmanualRender: function () {\r\n\t\tthis._manualRender = true;\r\n\t},\r\n\r\n\t/**\r\n\t * Called each frame to traverse and render the scenegraph.\r\n\t */\r\n\tengineStep: function (timeStamp, ctx) {\r\n\t\t/* TODO:\r\n\t\t\tMake the scenegraph process simplified. Walk the scenegraph once and grab the order in a flat array\r\n\t\t\tthen process updates and ticks. This will also allow a layered rendering system that can render the\r\n\t\t\tfirst x number of entities then stop, allowing a step through of the renderer in realtime.\r\n\t\t */\r\n\t\tvar st,\r\n\t\t\tet,\r\n\t\t\tupdateStart,\r\n\t\t\trenderStart,\r\n\t\t\tself = ige,\r\n\t\t\tptArr = self._postTick,\r\n\t\t\tptCount = ptArr.length,\r\n\t\t\tptIndex,\r\n\t\t\tunbornQueue,\r\n\t\t\tunbornCount,\r\n\t\t\tunbornIndex,\r\n\t\t\tunbornEntity;\r\n\r\n\t\t// Scale the timestamp according to the current\r\n\t\t// engine's time scaling factor\r\n\t\tself.incrementTime(timeStamp, self._timeScaleLastTimestamp);\r\n\r\n\t\tself._timeScaleLastTimestamp = timeStamp;\r\n\t\ttimeStamp = Math.floor(self._currentTime);\r\n\r\n\t\tif (igeConfig.debug._timing) {\r\n\t\t\tst = new Date().getTime();\r\n\t\t}\r\n\r\n\t\tif (self._state) {\r\n\t\t\t// Check if we were passed a context to work with\r\n\t\t\tif (ctx === undefined) {\r\n\t\t\t\tctx = self._ctx;\r\n\t\t\t}\r\n\r\n\t\t\t// Alternate the boolean frame alternator flag\r\n\t\t\tself._frameAlternator = !self._frameAlternator;\r\n\r\n\t\t\t// If the engine is not in manual tick mode...\r\n\t\t\tif (!ige._useManualTicks) {\r\n\t\t\t\t// Schedule a new frame\r\n\t\t\t\trequestAnimFrame(self.engineStep);\r\n\t\t\t} else {\r\n\t\t\t\tself._manualFrameAlternator = !self._frameAlternator;\r\n\t\t\t}\r\n\r\n\t\t\t// Get the current time in milliseconds\r\n\t\t\tself._tickStart = timeStamp;\r\n\r\n\t\t\t// Adjust the tickStart value by the difference between\r\n\t\t\t// the server and the client clocks (this is only applied\r\n\t\t\t// when running as the client - the server always has a\r\n\t\t\t// clientNetDiff of zero)\r\n\t\t\tself._tickStart -= self._clientNetDiff;\r\n\r\n\t\t\tif (!self.lastTick) {\r\n\t\t\t\t// This is the first time we've run so set some\r\n\t\t\t\t// default values and set the delta to zero\r\n\t\t\t\tself.lastTick = 0;\r\n\t\t\t\tself._tickDelta = 0;\r\n\t\t\t} else {\r\n\t\t\t\t// Calculate the frame delta\r\n\t\t\t\tself._tickDelta = self._tickStart - self.lastTick;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t// Check for unborn entities that should be born now\r\n\t\t\tunbornQueue = ige._spawnQueue;\r\n\t\t\tunbornCount = unbornQueue.length;\r\n\t\t\tfor (unbornIndex = unbornCount - 1; unbornIndex >= 0; unbornIndex--) {\r\n\t\t\t\tunbornEntity = unbornQueue[unbornIndex];\r\n\t\t\t\t\r\n\t\t\t\tif (ige._currentTime >= unbornEntity._bornTime) {\r\n\t\t\t\t\t// Now birth this entity\r\n\t\t\t\t\tunbornEntity.mount(ige.$(unbornEntity._birthMount));\r\n\t\t\t\t\tunbornQueue.splice(unbornIndex, 1);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Update the scenegraph\r\n\t\t\tif (self._enableUpdates) {\r\n\t\t\t\tif (igeConfig.debug._timing) {\r\n\t\t\t\t\tupdateStart = new Date().getTime();\r\n\t\t\t\t\tself.updateSceneGraph(ctx);\r\n\t\t\t\t\tige._updateTime = new Date().getTime() - updateStart;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tself.updateSceneGraph(ctx);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t// Render the scenegraph\r\n\t\t\tif (self._enableRenders) {\r\n\t\t\t\tif (!self._useManualRender) {\r\n\t\t\t\t\tif (igeConfig.debug._timing) {\r\n\t\t\t\t\t\trenderStart = new Date().getTime();\r\n\t\t\t\t\t\tself.renderSceneGraph(ctx);\r\n\t\t\t\t\t\tige._renderTime = new Date().getTime() - renderStart;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tself.renderSceneGraph(ctx);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (self._manualRender) {\r\n\t\t\t\t\t\tif (igeConfig.debug._timing) {\r\n\t\t\t\t\t\t\trenderStart = new Date().getTime();\r\n\t\t\t\t\t\t\tself.renderSceneGraph(ctx);\r\n\t\t\t\t\t\t\tige._renderTime = new Date().getTime() - renderStart;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tself.renderSceneGraph(ctx);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tself._manualRender = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Call post-tick methods\r\n\t\t\tfor (ptIndex = 0; ptIndex < ptCount; ptIndex++) {\r\n\t\t\t\tptArr[ptIndex]();\r\n\t\t\t}\r\n\r\n\t\t\t// Record the lastTick value so we can\r\n\t\t\t// calculate delta on the next tick\r\n\t\t\tself.lastTick = self._tickStart;\r\n\t\t\tself._frames++;\r\n\t\t\tself._dpf = self._drawCount;\r\n\t\t\tself._drawCount = 0;\r\n\r\n\t\t\t// Call the input system tick to reset any flags etc\r\n\t\t\tself.input.tick();\r\n\t\t}\r\n\r\n\t\tself._resized = false;\r\n\r\n\t\tif (igeConfig.debug._timing) {\r\n\t\t\tet = new Date().getTime();\r\n\t\t\tige._tickTime = et - st;\r\n\t\t}\r\n\t},\r\n\t\r\n\tupdateSceneGraph: function (ctx) {\r\n\t\tvar arr = this._children,\r\n\t\t\tarrCount, us, ud,\r\n\t\t\ttickDelta = ige._tickDelta;\r\n\r\n\t\t// Process any behaviours assigned to the engine\r\n\t\tthis._processUpdateBehaviours(ctx, tickDelta);\r\n\r\n\t\tif (arr) {\r\n\t\t\tarrCount = arr.length;\r\n\r\n\t\t\t// Loop our viewports and call their update methods\r\n\t\t\tif (igeConfig.debug._timing) {\r\n\t\t\t\twhile (arrCount--) {\r\n\t\t\t\t\tus = new Date().getTime();\r\n\t\t\t\t\tarr[arrCount].update(ctx, tickDelta);\r\n\t\t\t\t\tud = new Date().getTime() - us;\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (arr[arrCount]) {\r\n\t\t\t\t\t\tif (!ige._timeSpentInUpdate[arr[arrCount].id()]) {\r\n\t\t\t\t\t\t\tige._timeSpentInUpdate[arr[arrCount].id()] = 0;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (!ige._timeSpentLastUpdate[arr[arrCount].id()]) {\r\n\t\t\t\t\t\t\tige._timeSpentLastUpdate[arr[arrCount].id()] = {};\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tige._timeSpentInUpdate[arr[arrCount].id()] += ud;\r\n\t\t\t\t\t\tige._timeSpentLastUpdate[arr[arrCount].id()].ms = ud;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\twhile (arrCount--) {\r\n\t\t\t\t\tarr[arrCount].update(ctx, tickDelta);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\trenderSceneGraph: function (ctx) {\r\n\t\tvar ts, td;\r\n\r\n\t\t// Process any behaviours assigned to the engine\r\n\t\tthis._processTickBehaviours(ctx);\r\n\r\n\t\t// Depth-sort the viewports\r\n\t\tif (this._viewportDepth) {\r\n\t\t\tif (igeConfig.debug._timing) {\r\n\t\t\t\tts = new Date().getTime();\r\n\t\t\t\tthis.depthSortChildren();\r\n\t\t\t\ttd = new Date().getTime() - ts;\r\n\r\n\t\t\t\tif (!ige._timeSpentLastTick[this.id()]) {\r\n\t\t\t\t\tige._timeSpentLastTick[this.id()] = {};\r\n\t\t\t\t}\r\n\r\n\t\t\t\tige._timeSpentLastTick[this.id()].depthSortChildren = td;\r\n\t\t\t} else {\r\n\t\t\t\tthis.depthSortChildren();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tctx.save();\r\n\t\tctx.translate(this._bounds2d.x2, this._bounds2d.y2);\r\n\t\t//ctx.scale(this._globalScale.x, this._globalScale.y);\r\n\r\n\t\t// Process the current engine tick for all child objects\r\n\t\tvar arr = this._children,\r\n\t\t\tarrCount;\r\n\r\n\t\tif (arr) {\r\n\t\t\tarrCount = arr.length;\r\n\r\n\t\t\t// Loop our viewports and call their tick methods\r\n\t\t\tif (igeConfig.debug._timing) {\r\n\t\t\t\twhile (arrCount--) {\r\n\t\t\t\t\tctx.save();\r\n\t\t\t\t\tts = new Date().getTime();\r\n\t\t\t\t\tarr[arrCount].tick(ctx);\r\n\t\t\t\t\ttd = new Date().getTime() - ts;\r\n\t\t\t\t\tif (arr[arrCount]) {\r\n\t\t\t\t\t\tif (!ige._timeSpentInTick[arr[arrCount].id()]) {\r\n\t\t\t\t\t\t\tige._timeSpentInTick[arr[arrCount].id()] = 0;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (!ige._timeSpentLastTick[arr[arrCount].id()]) {\r\n\t\t\t\t\t\t\tige._timeSpentLastTick[arr[arrCount].id()] = {};\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tige._timeSpentInTick[arr[arrCount].id()] += td;\r\n\t\t\t\t\t\tige._timeSpentLastTick[arr[arrCount].id()].ms = td;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tctx.restore();\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\twhile (arrCount--) {\r\n\t\t\t\t\tctx.save();\r\n\t\t\t\t\tarr[arrCount].tick(ctx);\r\n\t\t\t\t\tctx.restore();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tctx.restore();\r\n\t},\r\n\r\n\tfps: function () {\r\n\t\treturn this._fps;\r\n\t},\r\n\r\n\tdpf: function () {\r\n\t\treturn this._dpf;\r\n\t},\r\n\r\n\tdps: function () {\r\n\t\treturn this._dps;\r\n\t},\r\n\r\n\tanalyseTiming: function () {\r\n\t\tif (igeConfig.debug._timing) {\r\n\r\n\t\t} else {\r\n\t\t\tthis.log('Cannot analyse timing because the igeConfig.debug._timing flag is not enabled so no timing data has been recorded!', 'warning');\r\n\t\t}\r\n\t},\r\n\r\n\tsaveSceneGraph: function (item) {\r\n\t\tvar arr, arrCount, i;\r\n\r\n\t\tif (!item) {\r\n\t\t\titem = this.getSceneGraphData();\r\n\t\t}\r\n\r\n\t\tif (item.obj.stringify) {\r\n\t\t\titem.str = item.obj.stringify();\r\n\t\t} else {\r\n\t\t\tconsole.log('Class ' + item.classId + ' has no stringify() method! For object: ' + item.id, item.obj);\r\n\t\t}\r\n\t\tarr = item.items;\r\n\r\n\t\tif (arr) {\r\n\t\t\tarrCount = arr.length;\r\n\r\n\t\t\tfor (i = 0; i < arrCount; i++) {\r\n\t\t\t\tthis.saveSceneGraph(arr[i]);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn item;\r\n\t},\r\n\r\n\t/**\r\n\t * Walks the scene graph and outputs a console map of the graph.\r\n\t */\r\n\tsceneGraph: function (obj, currentDepth, lastDepth) {\r\n\t\tvar depthSpace = '',\r\n\t\t\tdi,\r\n\t\t\ttimingString,\r\n\t\t\tarr,\r\n\t\t\tarrCount;\r\n\r\n\t\tif (currentDepth === undefined) { currentDepth = 0; }\r\n\r\n\t\tif (!obj) {\r\n\t\t\t// Set the obj to the main ige instance\r\n\t\t\tobj = ige;\r\n\t\t}\r\n\r\n\t\tfor (di = 0; di < currentDepth; di++) {\r\n\t\t\tdepthSpace += '----';\r\n\t\t}\r\n\r\n\t\tif (igeConfig.debug._timing) {\r\n\t\t\ttimingString = '';\r\n\r\n\t\t\ttimingString += 'T: ' + ige._timeSpentInTick[obj.id()];\r\n\t\t\tif (ige._timeSpentLastTick[obj.id()]) {\r\n\t\t\t\tif (typeof(ige._timeSpentLastTick[obj.id()].ms) === 'number') {\r\n\t\t\t\t\ttimingString += ' | LastTick: ' + ige._timeSpentLastTick[obj.id()].ms;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (typeof(ige._timeSpentLastTick[obj.id()].depthSortChildren) === 'number') {\r\n\t\t\t\t\ttimingString += ' | ChildDepthSort: ' + ige._timeSpentLastTick[obj.id()].depthSortChildren;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tconsole.log(depthSpace + obj.id() + ' (' + obj._classId + ') : ' + obj._inView + ' Timing(' + timingString + ')');\r\n\t\t} else {\r\n\t\t\tconsole.log(depthSpace + obj.id() + ' (' + obj._classId + ') : ' + obj._inView);\r\n\t\t}\r\n\r\n\t\tcurrentDepth++;\r\n\r\n\t\tif (obj === ige) {\r\n\t\t\t// Loop the viewports\r\n\t\t\tarr = obj._children;\r\n\r\n\t\t\tif (arr) {\r\n\t\t\t\tarrCount = arr.length;\r\n\r\n\t\t\t\t// Loop our children\r\n\t\t\t\twhile (arrCount--) {\r\n\t\t\t\t\tif (arr[arrCount]._scene) {\r\n\t\t\t\t\t\tif (arr[arrCount]._scene._shouldRender) {\r\n\t\t\t\t\t\t\tif (igeConfig.debug._timing) {\r\n\t\t\t\t\t\t\t\ttimingString = '';\r\n\t\r\n\t\t\t\t\t\t\t\ttimingString += 'T: ' + ige._timeSpentInTick[arr[arrCount].id()];\r\n\t\t\t\t\t\t\t\tif (ige._timeSpentLastTick[arr[arrCount].id()]) {\r\n\t\t\t\t\t\t\t\t\tif (typeof(ige._timeSpentLastTick[arr[arrCount].id()].ms) === 'number') {\r\n\t\t\t\t\t\t\t\t\t\ttimingString += ' | LastTick: ' + ige._timeSpentLastTick[arr[arrCount].id()].ms;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\t\t\tif (typeof(ige._timeSpentLastTick[arr[arrCount].id()].depthSortChildren) === 'number') {\r\n\t\t\t\t\t\t\t\t\t\ttimingString += ' | ChildDepthSort: ' + ige._timeSpentLastTick[arr[arrCount].id()].depthSortChildren;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\t\tconsole.log(depthSpace + '----' + arr[arrCount].id() + ' (' + arr[arrCount]._classId + ') : ' + arr[arrCount]._inView + ' Timing(' + timingString + ')');\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tconsole.log(depthSpace + '----' + arr[arrCount].id() + ' (' + arr[arrCount]._classId + ') : ' + arr[arrCount]._inView);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tthis.sceneGraph(arr[arrCount]._scene, currentDepth + 1);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tarr = obj._children;\r\n\r\n\t\t\tif (arr) {\r\n\t\t\t\tarrCount = arr.length;\r\n\r\n\t\t\t\t// Loop our children\r\n\t\t\t\twhile (arrCount--) {\r\n\t\t\t\t\tthis.sceneGraph(arr[arrCount], currentDepth);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Walks the scenegraph and returns a data object of the graph.\r\n\t */\r\n\tgetSceneGraphData: function (obj, noRef) {\r\n\t\tvar item, items = [], tempItem, tempItem2, tempCam,\r\n\t\t\tarr, arrCount;\r\n\r\n\t\tif (!obj) {\r\n\t\t\t// Set the obj to the main ige instance\r\n\t\t\tobj = ige;\r\n\t\t}\r\n\r\n\t\titem = {\r\n\t\t\ttext: '[' + obj._classId + '] ' + obj.id(),\r\n\t\t\tid: obj.id(),\r\n\t\t\tclassId: obj.classId()\r\n\t\t};\r\n\r\n\t\tif (!noRef) {\r\n\t\t\titem.parent = obj._parent;\r\n\t\t\titem.obj = obj;\r\n\t\t} else {\r\n\t\t\tif (obj._parent) {\r\n\t\t\t\titem.parentId = obj._parent.id();\r\n\t\t\t} else {\r\n\t\t\t\titem.parentId = 'sceneGraph';\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (obj === ige) {\r\n\t\t\t// Loop the viewports\r\n\t\t\tarr = obj._children;\r\n\r\n\t\t\tif (arr) {\r\n\t\t\t\tarrCount = arr.length;\r\n\r\n\t\t\t\t// Loop our children\r\n\t\t\t\twhile (arrCount--) {\r\n\t\t\t\t\ttempItem = {\r\n\t\t\t\t\t\ttext: '[' + arr[arrCount]._classId + '] ' + arr[arrCount].id(),\r\n\t\t\t\t\t\tid: arr[arrCount].id(),\r\n\t\t\t\t\t\tclassId: arr[arrCount].classId()\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\tif (!noRef) {\r\n\t\t\t\t\t\ttempItem.parent = arr[arrCount]._parent;\r\n\t\t\t\t\t\ttempItem.obj = arr[arrCount];\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tif (arr[arrCount]._parent) {\r\n\t\t\t\t\t\t\ttempItem.parentId = arr[arrCount]._parent.id();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (arr[arrCount].camera) {\r\n\t\t\t\t\t\t// Add the viewport camera as an object on the scenegraph\r\n\t\t\t\t\t\ttempCam = {\r\n\t\t\t\t\t\t\ttext: '[IgeCamera] ' + arr[arrCount].id(),\r\n\t\t\t\t\t\t\tid: arr[arrCount].camera.id(),\r\n\t\t\t\t\t\t\tclassId: arr[arrCount].camera.classId()\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif (!noRef) {\r\n\t\t\t\t\t\t\ttempCam.parent = arr[arrCount];\r\n\t\t\t\t\t\t\ttempCam.obj = arr[arrCount].camera;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\ttempCam.parentId = arr[arrCount].id();\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tif (arr[arrCount]._scene) {\r\n\t\t\t\t\t\t\ttempItem2 = this.getSceneGraphData(arr[arrCount]._scene, noRef);\r\n\t\t\t\t\t\t\ttempItem.items = [tempCam, tempItem2];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tif (arr[arrCount]._scene) {\r\n\t\t\t\t\t\t\ttempItem2 = this.getSceneGraphData(arr[arrCount]._scene, noRef);\r\n\t\t\t\t\t\t\ttempItem.items = [tempItem2];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\titems.push(tempItem);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tarr = obj._children;\r\n\r\n\t\t\tif (arr) {\r\n\t\t\t\tarrCount = arr.length;\r\n\r\n\t\t\t\t// Loop our children\r\n\t\t\t\twhile (arrCount--) {\r\n\t\t\t\t\ttempItem = this.getSceneGraphData(arr[arrCount], noRef);\r\n\t\t\t\t\titems.push(tempItem);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (items.length > 0) {\r\n\t\t\titem.items = items;\r\n\t\t}\r\n\r\n\t\treturn item;\r\n\t},\r\n\t\r\n\t_childMounted: function (child) {\r\n\t\tif (child.IgeViewport) {\r\n\t\t\t// The first mounted viewport gets set as the current\r\n\t\t\t// one before any rendering is done\r\n\t\t\tif (!ige._currentViewport) {\r\n\t\t\t\tige._currentViewport = child;\r\n\t\t\t\tige._currentCamera = child.camera;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tIgeEntity.prototype._childMounted.call(this, child);\r\n\t},\r\n\r\n\tdestroy: function () {\r\n\t\t// Stop the engine and kill any timers\r\n\t\tthis.stop();\r\n\r\n\t\t// Remove the front buffer (canvas) if we created it\r\n\t\tif (this.isClient) {\r\n\t\t\tthis.removeCanvas();\r\n\t\t}\r\n\r\n\t\t// Call class destroy() super method\r\n\t\tIgeEntity.prototype.destroy.call(this);\r\n\r\n\t\tthis.log('Engine destroy complete.');\r\n\t}\r\n});\r\nwindow.IgeEngine = IgeEngine;\r\nif (typeof(module) !== 'undefined' && typeof(module.exports) !== 'undefined') { module.exports = IgeEngine; }\r\n"]}